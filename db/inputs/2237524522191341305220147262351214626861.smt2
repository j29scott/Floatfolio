(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE x3 x1) (fp.div RNE x4 x5)) (fp.mul RNE (fp.add RNE x3 x2) (fp.neg x0))) (fp.sub RNE (fp.neg (fp.mul RNE x5 x4)) (fp.mul RNE (fp.add RNE x3 x0) (fp.neg x1)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.div RNE x3 x2) (fp.sub RNE x2 x0)) (fp.add RNE (fp.sub RNE x0 x3) (fp.add RNE x1 x5))) (fp.div RNE (fp.add RNE (fp.sub RNE x1 x3) (fp.mul RNE x0 x3)) (fp.div RNE (fp.sub RNE x1 x1) (fp.div RNE x0 x3)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x1 x0) (fp.neg x5)) (fp.sub RNE (fp.add RNE x3 x4) (fp.neg x2))) (fp.neg (fp.neg (fp.add RNE x0 x1)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x5 x3) (fp.add RNE x3 x5)) (fp.neg (fp.div RNE x3 x2))) (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x2) (fp.add RNE x5 x4)) (fp.div RNE (fp.sub RNE x1 x5) (fp.mul RNE x5 x0)))))
(check-sat)
