(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x19 x19) (fp.add RNE x13 x8)) (fp.sub RNE (fp.neg x18) (fp.add RNE x12 x13))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x16) (fp.div RNE x18 x12)) (fp.div RNE (fp.add RNE x16 x12) (fp.neg x0)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.neg x8)) (fp.neg (fp.sub RNE x14 x12))) (fp.sub RNE (fp.neg (fp.div RNE x14 x19)) (fp.sub RNE (fp.sub RNE x4 x13) (fp.div RNE x18 x10)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE x17 x5) (fp.sub RNE x6 x0)) (fp.mul RNE (fp.neg x11) (fp.add RNE x8 x14))) (fp.div RNE (fp.neg (fp.neg x0)) (fp.add RNE (fp.add RNE x16 x3) (fp.neg x7)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE x19 x14) (fp.neg x16)) (fp.mul RNE (fp.sub RNE x10 x1) (fp.sub RNE x8 x19))) (fp.div RNE (fp.sub RNE (fp.mul RNE x5 x7) (fp.add RNE x7 x11)) (fp.neg (fp.add RNE x17 x11)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.div RNE x0 x14)) (fp.div RNE (fp.mul RNE x10 x16) (fp.add RNE x0 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x5 x8) (fp.mul RNE x17 x12)) (fp.sub RNE (fp.add RNE x11 x15) (fp.div RNE x6 x17)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.div RNE x12 x7)) (fp.mul RNE (fp.sub RNE x6 x15) (fp.neg x14))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x11) (fp.sub RNE x14 x16)) (fp.neg (fp.sub RNE x5 x7)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x12 x8)) (fp.neg (fp.sub RNE x5 x4))) (fp.neg (fp.mul RNE (fp.add RNE x15 x3) (fp.mul RNE x5 x12)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.add RNE x9 x15)) (fp.mul RNE (fp.mul RNE x15 x13) (fp.add RNE x7 x10))) (fp.neg (fp.neg (fp.add RNE x14 x18)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x6 x16) (fp.mul RNE x6 x2)) (fp.neg (fp.div RNE x15 x19))) (fp.div RNE (fp.mul RNE (fp.add RNE x1 x14) (fp.add RNE x8 x10)) (fp.mul RNE (fp.div RNE x2 x9) (fp.div RNE x1 x16)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.mul RNE x5 x1) (fp.mul RNE x1 x16)) (fp.add RNE (fp.add RNE x15 x9) (fp.sub RNE x1 x0))) (fp.neg (fp.mul RNE (fp.add RNE x12 x5) (fp.neg x15)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x14 x10) (fp.sub RNE x10 x8)) (fp.mul RNE (fp.neg x18) (fp.neg x14))) (fp.mul RNE (fp.neg (fp.neg x3)) (fp.mul RNE (fp.add RNE x7 x2) (fp.add RNE x1 x7)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x1))) (fp.div RNE (fp.div RNE (fp.mul RNE x6 x11) (fp.mul RNE x13 x10)) (fp.sub RNE (fp.div RNE x7 x12) (fp.mul RNE x18 x8)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.sub RNE x11 x5)) (fp.div RNE (fp.sub RNE x19 x17) (fp.sub RNE x14 x3))) (fp.neg (fp.neg (fp.add RNE x14 x11)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x13))) (fp.sub RNE (fp.sub RNE (fp.add RNE x18 x16) (fp.add RNE x6 x0)) (fp.sub RNE (fp.mul RNE x5 x3) (fp.add RNE x4 x2)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.add RNE x5 x18) (fp.mul RNE x19 x11)) (fp.sub RNE (fp.mul RNE x19 x1) (fp.div RNE x4 x12))) (fp.sub RNE (fp.neg (fp.div RNE x17 x5)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x16 x4)))))
(check-sat)
