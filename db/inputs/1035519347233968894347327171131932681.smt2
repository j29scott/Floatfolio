(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x3) (fp.div RNE x0 x8)) (fp.sub RNE (fp.neg x8) (fp.mul RNE x2 x4))))
(assert (fp.eq (fp.neg (fp.div RNE x3 x4)) (fp.sub RNE (fp.add RNE x8 x9) (fp.add RNE x4 x5))))
(assert (fp.gt (fp.neg (fp.add RNE x6 x9)) (fp.div RNE (fp.sub RNE x0 x5) (fp.sub RNE x6 x8))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x5 x3) (fp.div RNE x8 x4)) (fp.mul RNE (fp.sub RNE x8 x8) (fp.add RNE x9 x3))))
(assert (fp.lt (fp.neg (fp.neg x5)) (fp.neg (fp.mul RNE x11 x11))))
(assert (fp.geq (fp.div RNE (fp.neg x8) (fp.div RNE x1 x11)) (fp.div RNE (fp.mul RNE x3 x8) (fp.mul RNE x0 x11))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x3 x1) (fp.neg x10)) (fp.sub RNE (fp.add RNE x10 x4) (fp.neg x7))))
(assert (fp.eq (fp.neg (fp.sub RNE x7 x8)) (fp.sub RNE (fp.neg x4) (fp.add RNE x1 x1))))
(check-sat)
