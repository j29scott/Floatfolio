(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x6 x0) (fp.neg x8)))
(assert (fp.geq (fp.neg x3) (fp.div RNE x7 x6)))
(assert (fp.gt (fp.add RNE x3 x3) (fp.div RNE x7 x7)))
(assert (fp.geq (fp.mul RNE x4 x7) (fp.div RNE x1 x2)))
(assert (fp.geq (fp.sub RNE x2 x1) (fp.neg x8)))
(assert (fp.geq (fp.mul RNE x7 x4) (fp.mul RNE x6 x2)))
(assert (fp.lt (fp.sub RNE x4 x5) (fp.div RNE x0 x1)))
(assert (fp.gt (fp.div RNE x9 x2) (fp.div RNE x3 x9)))
(assert (fp.gt (fp.neg x5) (fp.sub RNE x3 x9)))
(assert (fp.gt (fp.add RNE x0 x6) (fp.div RNE x2 x5)))
(assert (fp.leq (fp.mul RNE x0 x5) (fp.mul RNE x7 x3)))
(assert (fp.geq (fp.div RNE x7 x9) (fp.neg x0)))
(assert (fp.lt (fp.mul RNE x6 x0) (fp.neg x8)))
(assert (fp.gt (fp.sub RNE x1 x9) (fp.sub RNE x3 x9)))
(assert (fp.lt (fp.mul RNE x1 x5) (fp.neg x8)))
(check-sat)
