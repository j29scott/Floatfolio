(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x14 x10) (fp.div RNE x3 x5)) (fp.div RNE (fp.div RNE x15 x9) (fp.sub RNE x9 x4))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x9 x13) (fp.sub RNE x12 x14)) (fp.div RNE (fp.add RNE x6 x14) (fp.neg x7))))
(assert (fp.gt (fp.neg (fp.neg x16)) (fp.add RNE (fp.neg x8) (fp.add RNE x9 x5))))
(assert (fp.leq (fp.div RNE (fp.neg x15) (fp.add RNE x11 x6)) (fp.div RNE (fp.sub RNE x7 x7) (fp.mul RNE x14 x0))))
(assert (fp.geq (fp.add RNE (fp.add RNE x8 x9) (fp.add RNE x13 x6)) (fp.mul RNE (fp.mul RNE x17 x17) (fp.neg x2))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x7 x13) (fp.mul RNE x14 x1)) (fp.neg (fp.add RNE x0 x15))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x7 x9) (fp.mul RNE x9 x6)) (fp.neg (fp.div RNE x7 x11))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x8 x16) (fp.mul RNE x9 x14)) (fp.mul RNE (fp.sub RNE x10 x14) (fp.sub RNE x6 x11))))
(assert (fp.eq (fp.add RNE (fp.add RNE x8 x13) (fp.add RNE x2 x0)) (fp.add RNE (fp.sub RNE x12 x16) (fp.sub RNE x7 x0))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x4 x6) (fp.mul RNE x9 x4)) (fp.sub RNE (fp.div RNE x17 x4) (fp.mul RNE x17 x11))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x5 x7) (fp.neg x6)) (fp.neg (fp.div RNE x10 x7))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x10 x4) (fp.neg x9)) (fp.neg (fp.add RNE x6 x10))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x5 x4) (fp.add RNE x6 x3)) (fp.div RNE (fp.div RNE x4 x4) (fp.add RNE x8 x17))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x10 x14) (fp.neg x2)) (fp.div RNE (fp.div RNE x1 x8) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x14 x15) (fp.mul RNE x14 x9)) (fp.div RNE (fp.neg x9) (fp.add RNE x13 x5))))
(assert (fp.gt (fp.add RNE (fp.neg x14) (fp.mul RNE x16 x2)) (fp.sub RNE (fp.div RNE x2 x0) (fp.div RNE x11 x7))))
(assert (fp.gt (fp.div RNE (fp.add RNE x8 x7) (fp.div RNE x7 x2)) (fp.div RNE (fp.div RNE x14 x12) (fp.add RNE x15 x9))))
(check-sat)
