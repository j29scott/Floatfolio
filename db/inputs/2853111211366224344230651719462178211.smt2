(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x10 x13) (fp.sub RNE x1 x3)) (fp.div RNE (fp.sub RNE x13 x7) (fp.mul RNE x2 x9))) (fp.sub RNE (fp.div RNE (fp.mul RNE x1 x4) (fp.add RNE x12 x4)) (fp.div RNE (fp.neg x1) (fp.sub RNE x5 x13)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE x15 x11) (fp.neg x10)) (fp.add RNE (fp.add RNE x12 x16) (fp.add RNE x17 x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x4 x2) (fp.neg x3)) (fp.mul RNE (fp.mul RNE x17 x17) (fp.div RNE x15 x16)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x1))) (fp.div RNE (fp.neg (fp.mul RNE x8 x4)) (fp.mul RNE (fp.mul RNE x0 x16) (fp.mul RNE x3 x4)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE x1 x16) (fp.add RNE x6 x12)) (fp.div RNE (fp.neg x4) (fp.add RNE x0 x6))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x3 x10) (fp.neg x17)) (fp.add RNE (fp.mul RNE x14 x11) (fp.add RNE x9 x8)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.div RNE x7 x15) (fp.div RNE x16 x17))) (fp.neg (fp.div RNE (fp.neg x6) (fp.neg x1)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x2 x12)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x14 x11))) (fp.neg (fp.sub RNE (fp.mul RNE x1 x7) (fp.add RNE x14 x5)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE x6 x2) (fp.add RNE x14 x5)) (fp.sub RNE (fp.div RNE x11 x6) (fp.mul RNE x16 x15))) (fp.neg (fp.add RNE (fp.mul RNE x15 x11) (fp.add RNE x11 x2)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg x16) (fp.mul RNE x3 x11)) (fp.sub RNE (fp.add RNE x13 x11) (fp.neg x2))) (fp.neg (fp.div RNE (fp.mul RNE x8 x5) (fp.mul RNE x12 x16)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.neg x17) (fp.add RNE x4 x1))) (fp.sub RNE (fp.div RNE (fp.add RNE x4 x16) (fp.neg x0)) (fp.sub RNE (fp.mul RNE x14 x12) (fp.mul RNE x12 x17)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE x12 x17) (fp.add RNE x3 x0)) (fp.sub RNE (fp.div RNE x0 x2) (fp.sub RNE x9 x5))) (fp.mul RNE (fp.div RNE (fp.neg x13) (fp.sub RNE x3 x11)) (fp.neg (fp.add RNE x2 x15)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x10) (fp.neg x16)) (fp.mul RNE (fp.add RNE x7 x16) (fp.div RNE x5 x10))) (fp.mul RNE (fp.neg (fp.div RNE x5 x3)) (fp.sub RNE (fp.div RNE x3 x10) (fp.mul RNE x5 x3)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg x7) (fp.add RNE x13 x5))) (fp.neg (fp.mul RNE (fp.div RNE x10 x6) (fp.neg x17)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x12 x17)) (fp.mul RNE (fp.neg x4) (fp.neg x4))) (fp.add RNE (fp.mul RNE (fp.div RNE x12 x4) (fp.mul RNE x8 x9)) (fp.sub RNE (fp.neg x14) (fp.sub RNE x9 x4)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x10 x0)) (fp.neg (fp.add RNE x6 x9))) (fp.neg (fp.neg (fp.neg x16)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.add RNE x10 x1)) (fp.div RNE (fp.add RNE x14 x12) (fp.div RNE x1 x8))) (fp.sub RNE (fp.add RNE (fp.neg x5) (fp.add RNE x17 x17)) (fp.sub RNE (fp.mul RNE x9 x15) (fp.add RNE x16 x9)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 x13) (fp.add RNE x13 x4)) (fp.sub RNE (fp.neg x12) (fp.add RNE x13 x12))) (fp.sub RNE (fp.neg (fp.mul RNE x8 x8)) (fp.div RNE (fp.mul RNE x3 x7) (fp.mul RNE x11 x13)))))
(check-sat)
