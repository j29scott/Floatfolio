(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.mul RNE x11 x1) (fp.neg x7)) (fp.div RNE (fp.neg x1) (fp.sub RNE x6 x6))))
(assert (fp.geq (fp.neg (fp.div RNE x6 x11)) (fp.div RNE (fp.div RNE x7 x5) (fp.mul RNE x7 x12))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x4 x9) (fp.add RNE x3 x11)) (fp.add RNE (fp.add RNE x2 x6) (fp.neg x7))))
(assert (fp.leq (fp.neg (fp.div RNE x8 x12)) (fp.sub RNE (fp.mul RNE x9 x1) (fp.mul RNE x2 x4))))
(assert (fp.gt (fp.neg (fp.mul RNE x3 x4)) (fp.mul RNE (fp.add RNE x0 x11) (fp.neg x6))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x6 x5) (fp.sub RNE x7 x4)) (fp.sub RNE (fp.mul RNE x8 x12) (fp.add RNE x0 x7))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x0 x11) (fp.add RNE x11 x3)) (fp.div RNE (fp.neg x9) (fp.div RNE x12 x4))))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x8)) (fp.div RNE (fp.div RNE x9 x11) (fp.add RNE x11 x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x2 x8) (fp.add RNE x4 x4)) (fp.add RNE (fp.div RNE x9 x10) (fp.neg x1))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x4 x1) (fp.add RNE x11 x6)) (fp.add RNE (fp.div RNE x11 x12) (fp.div RNE x10 x8))))
(assert (fp.geq (fp.add RNE (fp.neg x7) (fp.sub RNE x11 x7)) (fp.add RNE (fp.neg x8) (fp.sub RNE x3 x5))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x7 x6) (fp.sub RNE x1 x1)) (fp.add RNE (fp.sub RNE x7 x3) (fp.mul RNE x9 x0))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x8) (fp.sub RNE x7 x7)) (fp.neg (fp.sub RNE x3 x11))))
(assert (fp.geq (fp.neg (fp.add RNE x10 x12)) (fp.neg (fp.add RNE x3 x2))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x2 x9) (fp.neg x8)) (fp.sub RNE (fp.neg x7) (fp.sub RNE x8 x0))))
(assert (fp.eq (fp.neg (fp.add RNE x3 x9)) (fp.div RNE (fp.sub RNE x11 x12) (fp.neg x6))))
(assert (fp.gt (fp.neg (fp.add RNE x10 x3)) (fp.div RNE (fp.div RNE x5 x4) (fp.sub RNE x6 x6))))
(assert (fp.eq (fp.neg (fp.mul RNE x8 x4)) (fp.neg (fp.sub RNE x11 x8))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x4 x11) (fp.sub RNE x0 x11)) (fp.neg (fp.mul RNE x8 x2))))
(check-sat)
