(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE x3 x1) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x13 x6) (fp.add RNE x9 x15))) (fp.add RNE (fp.neg (fp.sub RNE x2 x14)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x9 x14)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE x11 x1) (fp.div RNE x17 x8)) (fp.add RNE (fp.sub RNE x7 x0) (fp.div RNE x5 x1))) (fp.add RNE (fp.sub RNE (fp.neg x8) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x10 x6) (fp.sub RNE x15 x14)))))
(check-sat)
