(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE x7 x7) (fp.mul RNE x4 x7)))
(assert (fp.lt (fp.add RNE x7 x7) (fp.sub RNE x6 x9)))
(assert (fp.gt (fp.div RNE x4 x3) (fp.sub RNE x2 x3)))
(assert (fp.lt (fp.sub RNE x0 x1) (fp.div RNE x3 x8)))
(assert (fp.geq (fp.div RNE x2 x4) (fp.mul RNE x1 x6)))
(assert (fp.leq (fp.sub RNE x7 x3) (fp.add RNE x6 x6)))
(assert (fp.geq (fp.add RNE x0 x6) (fp.sub RNE x0 x5)))
(assert (fp.lt (fp.neg x0) (fp.sub RNE x4 x9)))
(assert (fp.eq (fp.neg x8) (fp.mul RNE x8 x1)))
(assert (fp.leq (fp.sub RNE x9 x3) (fp.add RNE x5 x0)))
(assert (fp.gt (fp.sub RNE x5 x5) (fp.div RNE x6 x0)))
(assert (fp.eq (fp.add RNE x2 x4) (fp.mul RNE x5 x7)))
(assert (fp.geq (fp.neg x9) (fp.neg x4)))
(assert (fp.gt (fp.div RNE x0 x1) (fp.div RNE x4 x1)))
(assert (fp.leq (fp.mul RNE x3 x4) (fp.neg x2)))
(check-sat)
