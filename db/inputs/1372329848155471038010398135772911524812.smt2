(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE x5 x5) (fp.mul RNE x3 x4)))
(assert (fp.eq (fp.sub RNE x7 x6) (fp.mul RNE x9 x0)))
(assert (fp.geq (fp.mul RNE x9 x2) (fp.div RNE x0 x10)))
(assert (fp.leq (fp.div RNE x10 x1) (fp.mul RNE x1 x8)))
(assert (fp.leq (fp.mul RNE x7 x10) (fp.mul RNE x0 x1)))
(assert (fp.gt (fp.sub RNE x6 x4) (fp.div RNE x1 x6)))
(assert (fp.leq (fp.sub RNE x7 x7) (fp.neg x0)))
(assert (fp.lt (fp.add RNE x3 x1) (fp.neg x10)))
(assert (fp.geq (fp.div RNE x0 x4) (fp.neg x3)))
(assert (fp.lt (fp.mul RNE x2 x2) (fp.neg x8)))
(assert (fp.geq (fp.div RNE x6 x10) (fp.add RNE x2 x2)))
(assert (fp.lt (fp.sub RNE x5 x0) (fp.neg x2)))
(assert (fp.gt (fp.sub RNE x5 x5) (fp.div RNE x10 x7)))
(assert (fp.eq (fp.sub RNE x0 x8) (fp.neg x2)))
(assert (fp.eq (fp.mul RNE x1 x10) (fp.neg x7)))
(assert (fp.eq (fp.mul RNE x3 x2) (fp.div RNE x10 x2)))
(check-sat)
