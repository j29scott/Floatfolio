(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE x20 x4) (fp.neg x19)) (fp.sub RNE (fp.add RNE x7 x17) (fp.div RNE x9 x16))) (fp.neg (fp.add RNE (fp.neg x5) (fp.add RNE x3 x11)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.div RNE x12 x18) (fp.add RNE x4 x6)) (fp.add RNE (fp.neg x5) (fp.div RNE x15 x4))) (fp.add RNE (fp.neg (fp.mul RNE x12 x23)) (fp.add RNE (fp.div RNE x15 x12) (fp.mul RNE x19 x2)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.neg x8) (fp.sub RNE x14 x16)) (fp.add RNE (fp.add RNE x18 x25) (fp.neg x12))) (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x17) (fp.add RNE x20 x25)) (fp.div RNE (fp.sub RNE x8 x4) (fp.sub RNE x23 x8)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x24 x17) (fp.div RNE x15 x11))) (fp.mul RNE (fp.mul RNE (fp.add RNE x14 x20) (fp.div RNE x24 x14)) (fp.div RNE (fp.mul RNE x7 x0) (fp.add RNE x18 x1)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x9) (fp.mul RNE x0 x17)) (fp.add RNE (fp.neg x10) (fp.mul RNE x15 x20))) (fp.add RNE (fp.mul RNE (fp.add RNE x8 x25) (fp.div RNE x7 x17)) (fp.mul RNE (fp.sub RNE x19 x25) (fp.neg x17)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x2 x6) (fp.neg x14))) (fp.mul RNE (fp.div RNE (fp.add RNE x14 x11) (fp.mul RNE x22 x15)) (fp.neg (fp.neg x1)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x18 x0) (fp.div RNE x16 x17)) (fp.div RNE (fp.neg x3) (fp.neg x13))) (fp.neg (fp.neg (fp.sub RNE x16 x23)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg x20) (fp.mul RNE x14 x23))) (fp.add RNE (fp.add RNE (fp.neg x11) (fp.sub RNE x2 x19)) (fp.div RNE (fp.neg x18) (fp.div RNE x5 x24)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x15 x5) (fp.mul RNE x2 x20)) (fp.add RNE (fp.sub RNE x9 x21) (fp.add RNE x7 x19))) (fp.add RNE (fp.mul RNE (fp.div RNE x2 x3) (fp.div RNE x3 x1)) (fp.sub RNE (fp.add RNE x23 x3) (fp.neg x19)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.div RNE x14 x3) (fp.mul RNE x21 x6))) (fp.mul RNE (fp.neg (fp.mul RNE x12 x1)) (fp.neg (fp.div RNE x4 x2)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x2 x10) (fp.mul RNE x3 x10))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x2) (fp.neg x25)) (fp.sub RNE (fp.add RNE x3 x0) (fp.neg x3)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.div RNE x21 x21)) (fp.mul RNE (fp.add RNE x6 x14) (fp.mul RNE x7 x21))) (fp.neg (fp.add RNE (fp.add RNE x10 x1) (fp.sub RNE x16 x15)))))
(check-sat)
