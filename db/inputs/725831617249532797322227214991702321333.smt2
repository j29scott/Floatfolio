(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg x0)) (fp.neg (fp.add RNE x6 x10))))
(assert (fp.geq (fp.div RNE (fp.add RNE x3 x7) (fp.neg x3)) (fp.mul RNE (fp.add RNE x2 x6) (fp.add RNE x7 x8))))
(assert (fp.geq (fp.mul RNE (fp.neg x1) (fp.neg x4)) (fp.add RNE (fp.div RNE x1 x5) (fp.mul RNE x7 x0))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x0 x8) (fp.mul RNE x7 x3)) (fp.sub RNE (fp.sub RNE x2 x0) (fp.neg x2))))
(assert (fp.lt (fp.neg (fp.add RNE x5 x1)) (fp.mul RNE (fp.div RNE x1 x7) (fp.add RNE x1 x10))))
(assert (fp.lt (fp.add RNE (fp.neg x4) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x6 x11) (fp.div RNE x9 x0))))
(check-sat)
