(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.add RNE x8 x3)) (fp.div RNE (fp.div RNE x10 x10) (fp.sub RNE x8 x4))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x0 x4) (fp.neg x7)) (fp.mul RNE (fp.div RNE x4 x10) (fp.mul RNE x2 x7))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x9 x8) (fp.add RNE x1 x0)) (fp.sub RNE (fp.sub RNE x5 x3) (fp.mul RNE x1 x9))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x10 x8) (fp.add RNE x8 x6)) (fp.neg (fp.mul RNE x1 x1))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x5 x6) (fp.neg x1)) (fp.neg (fp.add RNE x7 x4))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x10 x7) (fp.div RNE x2 x7)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x8 x4))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x0 x3) (fp.add RNE x7 x6)) (fp.sub RNE (fp.sub RNE x6 x1) (fp.div RNE x4 x10))))
(assert (fp.eq (fp.mul RNE (fp.neg x5) (fp.mul RNE x5 x8)) (fp.neg (fp.mul RNE x3 x10))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x1 x5) (fp.neg x2)) (fp.add RNE (fp.div RNE x8 x1) (fp.add RNE x7 x4))))
(assert (fp.lt (fp.neg (fp.neg x5)) (fp.add RNE (fp.sub RNE x5 x8) (fp.div RNE x10 x9))))
(assert (fp.eq (fp.neg (fp.neg x0)) (fp.add RNE (fp.add RNE x9 x2) (fp.sub RNE x0 x10))))
(assert (fp.lt (fp.div RNE (fp.add RNE x1 x6) (fp.div RNE x1 x3)) (fp.div RNE (fp.add RNE x6 x7) (fp.mul RNE x5 x4))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x10 x4) (fp.div RNE x0 x1)) (fp.sub RNE (fp.div RNE x8 x3) (fp.sub RNE x4 x4))))
(assert (fp.eq (fp.mul RNE (fp.neg x7) (fp.mul RNE x9 x1)) (fp.sub RNE (fp.add RNE x8 x5) (fp.add RNE x4 x9))))
(assert (fp.geq (fp.sub RNE (fp.neg x7) (fp.add RNE x7 x4)) (fp.div RNE (fp.neg x6) (fp.neg x9))))
(assert (fp.leq (fp.add RNE (fp.neg x8) (fp.neg x10)) (fp.div RNE (fp.add RNE x5 x7) (fp.neg x4))))
(assert (fp.lt (fp.add RNE (fp.add RNE x0 x5) (fp.neg x8)) (fp.sub RNE (fp.sub RNE x8 x8) (fp.neg x4))))
(assert (fp.leq (fp.div RNE (fp.neg x6) (fp.neg x1)) (fp.div RNE (fp.sub RNE x9 x4) (fp.sub RNE x0 x3))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x3 x2) (fp.div RNE x1 x0)) (fp.mul RNE (fp.add RNE x3 x1) (fp.add RNE x10 x3))))
(check-sat)
