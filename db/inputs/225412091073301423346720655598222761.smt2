(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x7 x12) (fp.add RNE x6 x11)))
(assert (fp.geq (fp.sub RNE x15 x13) (fp.mul RNE x1 x8)))
(assert (fp.leq (fp.add RNE x16 x2) (fp.mul RNE x5 x0)))
(assert (fp.gt (fp.div RNE x4 x5) (fp.sub RNE x13 x5)))
(assert (fp.eq (fp.div RNE x11 x1) (fp.add RNE x3 x8)))
(assert (fp.leq (fp.mul RNE x17 x4) (fp.sub RNE x11 x1)))
(assert (fp.geq (fp.neg x16) (fp.div RNE x10 x11)))
(assert (fp.leq (fp.sub RNE x16 x9) (fp.add RNE x12 x15)))
(assert (fp.leq (fp.div RNE x3 x16) (fp.mul RNE x16 x2)))
(check-sat)
