(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x8 x7) (fp.add RNE x8 x12)))
(assert (fp.eq (fp.mul RNE x6 x10) (fp.mul RNE x1 x11)))
(assert (fp.lt (fp.div RNE x5 x2) (fp.sub RNE x9 x12)))
(assert (fp.gt (fp.neg x9) (fp.neg x0)))
(assert (fp.leq (fp.neg x5) (fp.sub RNE x2 x2)))
(assert (fp.lt (fp.sub RNE x10 x9) (fp.div RNE x8 x8)))
(assert (fp.eq (fp.mul RNE x2 x9) (fp.div RNE x9 x10)))
(assert (fp.geq (fp.add RNE x2 x1) (fp.div RNE x5 x10)))
(assert (fp.gt (fp.sub RNE x10 x9) (fp.mul RNE x8 x4)))
(assert (fp.leq (fp.mul RNE x9 x8) (fp.sub RNE x0 x7)))
(check-sat)
