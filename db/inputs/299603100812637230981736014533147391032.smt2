(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.neg x6)) (fp.div RNE (fp.neg x6) (fp.mul RNE x7 x5))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x1)) (fp.mul RNE (fp.div RNE x5 x6) (fp.add RNE x3 x7))))
(assert (fp.eq (fp.add RNE (fp.neg x6) (fp.div RNE x3 x3)) (fp.div RNE (fp.div RNE x2 x6) (fp.add RNE x2 x6))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x4 x3) (fp.sub RNE x6 x3)) (fp.div RNE (fp.div RNE x7 x3) (fp.mul RNE x4 x6))))
(assert (fp.gt (fp.neg (fp.neg x1)) (fp.sub RNE (fp.mul RNE x0 x5) (fp.div RNE x7 x0))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x1 x7) (fp.neg x0)) (fp.add RNE (fp.add RNE x2 x5) (fp.div RNE x0 x6))))
(assert (fp.eq (fp.neg (fp.neg x6)) (fp.div RNE (fp.div RNE x6 x6) (fp.div RNE x1 x2))))
(assert (fp.eq (fp.neg (fp.mul RNE x2 x5)) (fp.mul RNE (fp.sub RNE x2 x0) (fp.mul RNE x3 x2))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x5 x7) (fp.neg x5)) (fp.add RNE (fp.mul RNE x7 x2) (fp.neg x5))))
(check-sat)
