(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE x8 x3) (fp.div RNE x12 x12)) (fp.div RNE (fp.add RNE x10 x7) (fp.mul RNE x9 x16))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x12 x4) (fp.add RNE x9 x14)) (fp.sub RNE (fp.neg x17) (fp.neg x7))))
(assert (fp.gt (fp.neg (fp.mul RNE x11 x3)) (fp.sub RNE (fp.sub RNE x8 x1) (fp.neg x5))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x4 x3) (fp.div RNE x0 x3)) (fp.mul RNE (fp.sub RNE x7 x12) (fp.neg x0))))
(assert (fp.gt (fp.neg (fp.add RNE x10 x3)) (fp.add RNE (fp.mul RNE x5 x17) (fp.div RNE x9 x7))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x10 x9) (fp.sub RNE x1 x9)) (fp.mul RNE (fp.add RNE x1 x0) (fp.sub RNE x17 x12))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x3 x9) (fp.sub RNE x15 x4)) (fp.sub RNE (fp.neg x15) (fp.mul RNE x14 x3))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x10 x12) (fp.add RNE x6 x17)) (fp.neg (fp.add RNE x1 x8))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x3 x12) (fp.neg x7)) (fp.sub RNE (fp.add RNE x14 x8) (fp.add RNE x17 x5))))
(check-sat)
