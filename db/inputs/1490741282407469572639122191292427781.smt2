(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x9) (fp.add RNE x6 x1)))
(assert (fp.leq (fp.div RNE x3 x2) (fp.neg x4)))
(assert (fp.geq (fp.mul RNE x5 x5) (fp.sub RNE x1 x1)))
(assert (fp.lt (fp.div RNE x6 x9) (fp.sub RNE x6 x2)))
(assert (fp.eq (fp.add RNE x4 x3) (fp.neg x7)))
(assert (fp.leq (fp.div RNE x4 x0) (fp.div RNE x7 x5)))
(assert (fp.geq (fp.add RNE x6 x0) (fp.mul RNE x2 x7)))
(assert (fp.gt (fp.div RNE x0 x8) (fp.add RNE x4 x5)))
(assert (fp.leq (fp.add RNE x9 x7) (fp.div RNE x2 x4)))
(assert (fp.gt (fp.neg x4) (fp.sub RNE x7 x3)))
(assert (fp.lt (fp.sub RNE x8 x8) (fp.div RNE x2 x8)))
(assert (fp.lt (fp.sub RNE x1 x3) (fp.sub RNE x8 x1)))
(assert (fp.leq (fp.add RNE x0 x5) (fp.sub RNE x4 x6)))
(assert (fp.geq (fp.neg x1) (fp.add RNE x9 x1)))
(assert (fp.geq (fp.add RNE x8 x7) (fp.div RNE x2 x7)))
(assert (fp.lt (fp.mul RNE x6 x2) (fp.add RNE x1 x4)))
(assert (fp.eq (fp.neg x6) (fp.sub RNE x3 x5)))
(check-sat)
