(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg x7) (fp.mul RNE x5 x6))) (fp.sub RNE (fp.add RNE (fp.mul RNE x2 x8) (fp.add RNE x3 x8)) (fp.mul RNE (fp.sub RNE x0 x5) (fp.sub RNE x4 x4)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE x4 x7) (fp.div RNE x8 x6)) (fp.add RNE (fp.sub RNE x4 x0) (fp.sub RNE x3 x6))) (fp.div RNE (fp.add RNE (fp.div RNE x2 x6) (fp.neg x0)) (fp.mul RNE (fp.add RNE x5 x0) (fp.neg x7)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE x6 x6) (fp.mul RNE x8 x4)) (fp.neg (fp.add RNE x4 x3))) (fp.sub RNE (fp.add RNE (fp.div RNE x7 x3) (fp.mul RNE x4 x2)) (fp.sub RNE (fp.mul RNE x2 x5) (fp.add RNE x4 x4)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.div RNE x5 x7)) (fp.neg (fp.div RNE x4 x6))) (fp.neg (fp.mul RNE (fp.sub RNE x2 x8) (fp.sub RNE x2 x7)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.add RNE x0 x4)) (fp.div RNE (fp.div RNE x1 x1) (fp.sub RNE x7 x2))) (fp.sub RNE (fp.mul RNE (fp.add RNE x7 x3) (fp.mul RNE x2 x5)) (fp.sub RNE (fp.div RNE x8 x8) (fp.add RNE x5 x0)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x7) (fp.div RNE x5 x0)) (fp.neg (fp.neg x8))) (fp.mul RNE (fp.div RNE (fp.mul RNE x2 x4) (fp.neg x2)) (fp.neg (fp.div RNE x4 x7)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE x7 x3) (fp.add RNE x0 x1)) (fp.add RNE (fp.add RNE x1 x6) (fp.add RNE x1 x2))) (fp.neg (fp.add RNE (fp.neg x1) (fp.sub RNE x0 x7)))))
(check-sat)
