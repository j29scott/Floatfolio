(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.mul RNE x19 x18) (fp.div RNE x2 x0)) (fp.mul RNE (fp.add RNE x19 x19) (fp.div RNE x18 x5))) (fp.add RNE (fp.div RNE (fp.add RNE x22 x3) (fp.sub RNE x9 x14)) (fp.add RNE (fp.neg x15) (fp.mul RNE x4 x17)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.sub RNE x6 x3) (fp.sub RNE x22 x18)) (fp.div RNE (fp.div RNE x11 x16) (fp.sub RNE x11 x3))) (fp.div RNE (fp.add RNE (fp.add RNE x9 x11) (fp.sub RNE x13 x23)) (fp.neg (fp.add RNE x1 x6)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE x17 x5) (fp.sub RNE x11 x14)) (fp.add RNE (fp.neg x8) (fp.sub RNE x18 x5))) (fp.sub RNE (fp.add RNE (fp.mul RNE x22 x11) (fp.sub RNE x6 x8)) (fp.div RNE (fp.add RNE x0 x11) (fp.sub RNE x6 x1)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x7 x20) (fp.div RNE x4 x6))) (fp.div RNE (fp.div RNE (fp.add RNE x5 x22) (fp.div RNE x6 x6)) (fp.div RNE (fp.mul RNE x0 x8) (fp.sub RNE x18 x6)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x9 x22) (fp.neg x18)) (fp.mul RNE (fp.sub RNE x23 x5) (fp.add RNE x4 x20))) (fp.neg (fp.add RNE (fp.add RNE x23 x22) (fp.neg x0)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE x22 x14) (fp.neg x2)) (fp.add RNE (fp.add RNE x18 x23) (fp.sub RNE x11 x1))) (fp.sub RNE (fp.sub RNE (fp.div RNE x3 x3) (fp.add RNE x13 x17)) (fp.neg (fp.sub RNE x16 x5)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x16 x1) (fp.sub RNE x13 x21)) (fp.add RNE (fp.add RNE x3 x15) (fp.mul RNE x19 x9))) (fp.div RNE (fp.sub RNE (fp.sub RNE x21 x4) (fp.mul RNE x0 x13)) (fp.add RNE (fp.sub RNE x15 x9) (fp.mul RNE x6 x8)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.sub RNE x12 x19)) (fp.div RNE (fp.div RNE x20 x23) (fp.sub RNE x5 x1))) (fp.neg (fp.sub RNE (fp.add RNE x18 x13) (fp.sub RNE x5 x0)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x15 x22)) (fp.neg (fp.add RNE x13 x15))) (fp.sub RNE (fp.add RNE (fp.add RNE x4 x1) (fp.div RNE x22 x7)) (fp.add RNE (fp.add RNE x7 x11) (fp.neg x7)))))
(check-sat)
