(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.sub RNE x1 x4)) (fp.div RNE (fp.mul RNE x13 x17) (fp.div RNE x16 x16))) (fp.add RNE (fp.div RNE (fp.neg x10) (fp.neg x2)) (fp.neg (fp.mul RNE x12 x13)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.add RNE x1 x7) (fp.div RNE x16 x12)) (fp.neg (fp.add RNE x7 x14))) (fp.div RNE (fp.div RNE (fp.neg x9) (fp.neg x2)) (fp.mul RNE (fp.mul RNE x8 x11) (fp.mul RNE x6 x17)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x7 x16) (fp.neg x15)) (fp.add RNE (fp.div RNE x5 x0) (fp.add RNE x9 x15))) (fp.mul RNE (fp.mul RNE (fp.add RNE x15 x6) (fp.sub RNE x0 x14)) (fp.mul RNE (fp.add RNE x4 x12) (fp.div RNE x13 x3)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE x2 x8)) (fp.div RNE (fp.sub RNE x3 x8) (fp.div RNE x15 x5))) (fp.mul RNE (fp.neg (fp.mul RNE x13 x2)) (fp.div RNE (fp.add RNE x9 x9) (fp.div RNE x17 x15)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE x8 x16) (fp.mul RNE x4 x8)) (fp.add RNE (fp.sub RNE x3 x6) (fp.neg x17))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 x13) (fp.add RNE x6 x16)) (fp.mul RNE (fp.neg x14) (fp.neg x12)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x0 x7) (fp.mul RNE x2 x8))) (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x5) (fp.add RNE x13 x13)) (fp.mul RNE (fp.mul RNE x5 x9) (fp.div RNE x0 x0)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x1) (fp.mul RNE x4 x17)) (fp.mul RNE (fp.add RNE x11 x17) (fp.div RNE x0 x12))) (fp.add RNE (fp.add RNE (fp.neg x8) (fp.add RNE x10 x3)) (fp.div RNE (fp.neg x5) (fp.mul RNE x15 x4)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.mul RNE x15 x14) (fp.neg x14)) (fp.sub RNE (fp.div RNE x3 x6) (fp.div RNE x6 x13))) (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x14) (fp.neg x14)) (fp.add RNE (fp.mul RNE x4 x13) (fp.div RNE x8 x6)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE x6 x12) (fp.neg x3)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x10 x12))) (fp.neg (fp.mul RNE (fp.div RNE x16 x7) (fp.mul RNE x17 x11)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x16 x9) (fp.div RNE x14 x7))) (fp.mul RNE (fp.add RNE (fp.neg x12) (fp.sub RNE x6 x16)) (fp.div RNE (fp.neg x14) (fp.add RNE x11 x12)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x1 x0)) (fp.div RNE (fp.add RNE x6 x12) (fp.add RNE x14 x7))) (fp.add RNE (fp.sub RNE (fp.sub RNE x14 x6) (fp.add RNE x15 x13)) (fp.div RNE (fp.mul RNE x9 x7) (fp.sub RNE x6 x7)))))
(check-sat)
