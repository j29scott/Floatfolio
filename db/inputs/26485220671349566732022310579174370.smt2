(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x18 x10) (fp.mul RNE x4 x19)) (fp.div RNE (fp.neg x18) (fp.div RNE x7 x9))) (fp.sub RNE (fp.div RNE (fp.sub RNE x13 x9) (fp.div RNE x7 x9)) (fp.mul RNE (fp.mul RNE x15 x2) (fp.add RNE x8 x13)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.div RNE x14 x11) (fp.sub RNE x4 x6)) (fp.add RNE (fp.neg x11) (fp.mul RNE x20 x3))) (fp.div RNE (fp.div RNE (fp.sub RNE x11 x18) (fp.add RNE x4 x17)) (fp.add RNE (fp.add RNE x3 x13) (fp.div RNE x14 x17))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.div RNE x13 x4)) (fp.sub RNE (fp.mul RNE x10 x0) (fp.sub RNE x0 x17))) (fp.neg (fp.neg (fp.sub RNE x7 x15)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.add RNE x4 x19) (fp.neg x20)) (fp.neg (fp.div RNE x18 x10))) (fp.add RNE (fp.add RNE (fp.div RNE x2 x9) (fp.sub RNE x6 x5)) (fp.sub RNE (fp.add RNE x17 x16) (fp.add RNE x8 x12))))))
(check-sat)
