(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x11 x2) (fp.mul RNE x19 x4)) (fp.neg (fp.div RNE x1 x15))) (fp.div RNE (fp.div RNE (fp.add RNE x7 x15) (fp.sub RNE x6 x12)) (fp.neg (fp.add RNE x5 x7)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.div RNE x6 x2)) (fp.neg (fp.add RNE x16 x19))) (fp.neg (fp.mul RNE (fp.mul RNE x5 x1) (fp.mul RNE x5 x10)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x16 x10) (fp.mul RNE x16 x2)) (fp.div RNE (fp.add RNE x0 x2) (fp.add RNE x3 x20))) (fp.sub RNE (fp.mul RNE (fp.div RNE x2 x1) (fp.mul RNE x20 x17)) (fp.mul RNE (fp.div RNE x13 x11) (fp.sub RNE x20 x1)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.add RNE x20 x20)) (fp.div RNE (fp.neg x6) (fp.div RNE x18 x6))) (fp.div RNE (fp.add RNE (fp.mul RNE x9 x8) (fp.sub RNE x12 x18)) (fp.add RNE (fp.add RNE x13 x14) (fp.sub RNE x1 x13)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE x13 x2) (fp.neg x12)) (fp.add RNE (fp.div RNE x15 x8) (fp.mul RNE x7 x0))) (fp.add RNE (fp.div RNE (fp.sub RNE x11 x3) (fp.div RNE x8 x4)) (fp.add RNE (fp.mul RNE x17 x20) (fp.neg x0)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x11 x8) (fp.neg x11)) (fp.mul RNE (fp.mul RNE x20 x10) (fp.mul RNE x16 x14))) (fp.add RNE (fp.neg (fp.add RNE x10 x0)) (fp.sub RNE (fp.neg x17) (fp.add RNE x8 x9)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x9 x0) (fp.neg x20))) (fp.neg (fp.add RNE (fp.mul RNE x1 x9) (fp.mul RNE x3 x6)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x3 x13) (fp.div RNE x12 x10)) (fp.div RNE (fp.div RNE x4 x8) (fp.div RNE x0 x5))) (fp.add RNE (fp.div RNE (fp.add RNE x10 x16) (fp.sub RNE x2 x1)) (fp.div RNE (fp.mul RNE x13 x0) (fp.mul RNE x2 x13)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE x17 x5) (fp.add RNE x14 x12))) (fp.neg (fp.div RNE (fp.add RNE x11 x10) (fp.sub RNE x16 x12)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x12 x4)) (fp.sub RNE (fp.neg x16) (fp.div RNE x10 x10))) (fp.mul RNE (fp.sub RNE (fp.add RNE x18 x4) (fp.sub RNE x11 x11)) (fp.add RNE (fp.add RNE x1 x13) (fp.mul RNE x3 x11)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x3 x3) (fp.mul RNE x6 x13))) (fp.add RNE (fp.mul RNE (fp.neg x10) (fp.add RNE x8 x5)) (fp.mul RNE (fp.div RNE x6 x8) (fp.mul RNE x11 x14)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x12 x0) (fp.neg x4))) (fp.div RNE (fp.neg (fp.add RNE x3 x14)) (fp.add RNE (fp.neg x17) (fp.add RNE x0 x19)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg x18) (fp.sub RNE x14 x3))) (fp.div RNE (fp.div RNE (fp.neg x19) (fp.sub RNE x6 x20)) (fp.div RNE (fp.sub RNE x2 x8) (fp.add RNE x13 x12)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x11 x15) (fp.sub RNE x7 x0)) (fp.mul RNE (fp.mul RNE x12 x5) (fp.mul RNE x6 x4))) (fp.sub RNE (fp.neg (fp.neg x7)) (fp.mul RNE (fp.sub RNE x5 x3) (fp.neg x14)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE x3 x16) (fp.mul RNE x13 x9)) (fp.div RNE (fp.neg x13) (fp.neg x10))) (fp.sub RNE (fp.mul RNE (fp.div RNE x6 x18) (fp.add RNE x8 x20)) (fp.mul RNE (fp.neg x12) (fp.neg x1)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.mul RNE x16 x2) (fp.mul RNE x11 x1)) (fp.add RNE (fp.sub RNE x6 x17) (fp.neg x20))) (fp.mul RNE (fp.add RNE (fp.div RNE x16 x6) (fp.mul RNE x11 x20)) (fp.sub RNE (fp.add RNE x17 x20) (fp.sub RNE x19 x4)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.sub RNE x7 x9) (fp.mul RNE x20 x6))) (fp.neg (fp.mul RNE (fp.add RNE x18 x9) (fp.mul RNE x9 x6)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.mul RNE x17 x3) (fp.sub RNE x6 x7)) (fp.div RNE (fp.mul RNE x1 x6) (fp.mul RNE x3 x15))) (fp.sub RNE (fp.add RNE (fp.sub RNE x16 x2) (fp.sub RNE x3 x12)) (fp.neg (fp.div RNE x17 x9)))))
(check-sat)
