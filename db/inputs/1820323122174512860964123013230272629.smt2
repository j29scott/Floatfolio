(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.div RNE x8 x4) (fp.sub RNE x7 x4)) (fp.mul RNE (fp.sub RNE x4 x0) (fp.sub RNE x1 x10))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x6)) (fp.neg (fp.neg x14))))
(assert (fp.lt (fp.neg (fp.mul RNE x12 x1)) (fp.neg (fp.neg x6))))
(assert (fp.leq (fp.neg (fp.sub RNE x2 x12)) (fp.mul RNE (fp.sub RNE x11 x0) (fp.sub RNE x7 x10))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x10 x15) (fp.sub RNE x0 x9)) (fp.sub RNE (fp.neg x5) (fp.add RNE x11 x2))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x9 x2) (fp.div RNE x16 x1)) (fp.sub RNE (fp.mul RNE x12 x12) (fp.add RNE x10 x0))))
(assert (fp.geq (fp.neg (fp.mul RNE x5 x4)) (fp.neg (fp.sub RNE x7 x9))))
(assert (fp.eq (fp.add RNE (fp.add RNE x0 x16) (fp.add RNE x5 x0)) (fp.neg (fp.mul RNE x8 x8))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x3 x16) (fp.add RNE x12 x4)) (fp.mul RNE (fp.sub RNE x14 x12) (fp.add RNE x9 x2))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x6)) (fp.mul RNE (fp.neg x15) (fp.mul RNE x3 x13))))
(assert (fp.eq (fp.div RNE (fp.div RNE x9 x2) (fp.neg x9)) (fp.div RNE (fp.div RNE x3 x7) (fp.sub RNE x7 x6))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x10 x16) (fp.div RNE x3 x10)) (fp.add RNE (fp.sub RNE x5 x10) (fp.add RNE x14 x10))))
(assert (fp.leq (fp.div RNE (fp.neg x0) (fp.div RNE x1 x13)) (fp.sub RNE (fp.sub RNE x12 x7) (fp.sub RNE x9 x10))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x3 x8) (fp.mul RNE x4 x12)) (fp.add RNE (fp.div RNE x5 x1) (fp.neg x14))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x9 x4) (fp.mul RNE x8 x3)) (fp.mul RNE (fp.mul RNE x5 x3) (fp.mul RNE x9 x12))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x13 x0) (fp.mul RNE x11 x11)) (fp.neg (fp.neg x15))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x3 x10) (fp.sub RNE x4 x4)) (fp.neg (fp.sub RNE x16 x13))))
(assert (fp.geq (fp.neg (fp.neg x1)) (fp.div RNE (fp.add RNE x6 x8) (fp.sub RNE x10 x11))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x12 x0) (fp.div RNE x10 x2)) (fp.sub RNE (fp.mul RNE x4 x12) (fp.neg x7))))
(assert (fp.eq (fp.add RNE (fp.add RNE x13 x10) (fp.add RNE x14 x5)) (fp.mul RNE (fp.neg x15) (fp.add RNE x8 x1))))
(check-sat)
