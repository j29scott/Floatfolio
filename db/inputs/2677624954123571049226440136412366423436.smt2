(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.sub RNE x9 x0)) (fp.add RNE (fp.mul RNE x6 x2) (fp.neg x4))))
(assert (fp.leq (fp.div RNE (fp.div RNE x13 x1) (fp.neg x4)) (fp.div RNE (fp.add RNE x0 x13) (fp.add RNE x13 x7))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x13 x2) (fp.mul RNE x9 x6)) (fp.div RNE (fp.div RNE x10 x11) (fp.add RNE x12 x9))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x9 x10) (fp.div RNE x9 x3)) (fp.add RNE (fp.mul RNE x5 x1) (fp.add RNE x4 x7))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x3 x1) (fp.div RNE x12 x9)) (fp.div RNE (fp.sub RNE x12 x12) (fp.add RNE x10 x11))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x3 x4) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x2 x1) (fp.mul RNE x11 x13))))
(assert (fp.geq (fp.div RNE (fp.div RNE x9 x13) (fp.div RNE x0 x9)) (fp.sub RNE (fp.div RNE x4 x1) (fp.neg x1))))
(assert (fp.leq (fp.neg (fp.add RNE x3 x12)) (fp.div RNE (fp.sub RNE x1 x8) (fp.add RNE x11 x12))))
(assert (fp.leq (fp.sub RNE (fp.neg x13) (fp.mul RNE x4 x7)) (fp.add RNE (fp.mul RNE x1 x8) (fp.div RNE x8 x5))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x9 x2) (fp.neg x6)) (fp.div RNE (fp.neg x5) (fp.add RNE x7 x9))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x1 x9) (fp.add RNE x6 x1)) (fp.add RNE (fp.neg x6) (fp.div RNE x10 x7))))
(check-sat)
