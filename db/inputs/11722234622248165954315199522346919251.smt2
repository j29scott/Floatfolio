(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x13 x15) (fp.sub RNE x7 x5)))
(assert (fp.eq (fp.mul RNE x1 x5) (fp.sub RNE x14 x2)))
(assert (fp.lt (fp.mul RNE x0 x9) (fp.div RNE x12 x0)))
(assert (fp.gt (fp.mul RNE x3 x7) (fp.div RNE x0 x1)))
(assert (fp.leq (fp.add RNE x9 x1) (fp.neg x10)))
(assert (fp.geq (fp.mul RNE x3 x11) (fp.sub RNE x15 x12)))
(assert (fp.lt (fp.add RNE x14 x13) (fp.neg x3)))
(assert (fp.eq (fp.div RNE x11 x15) (fp.div RNE x0 x2)))
(assert (fp.gt (fp.sub RNE x1 x3) (fp.add RNE x7 x14)))
(assert (fp.lt (fp.mul RNE x1 x0) (fp.div RNE x16 x6)))
(assert (fp.gt (fp.neg x1) (fp.neg x17)))
(check-sat)
