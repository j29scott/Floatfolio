(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.neg x0) (fp.div RNE x2 x5)) (fp.div RNE (fp.add RNE x4 x5) (fp.mul RNE x12 x10))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x12 x15) (fp.sub RNE x1 x1)) (fp.mul RNE (fp.add RNE x9 x10) (fp.add RNE x13 x1))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x3 x11) (fp.neg x8)) (fp.div RNE (fp.sub RNE x1 x10) (fp.neg x2))))
(assert (fp.leq (fp.add RNE (fp.neg x15) (fp.sub RNE x3 x13)) (fp.neg (fp.add RNE x3 x6))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x6 x15) (fp.mul RNE x16 x4)) (fp.sub RNE (fp.mul RNE x10 x2) (fp.add RNE x6 x1))))
(assert (fp.lt (fp.div RNE (fp.div RNE x9 x6) (fp.mul RNE x11 x10)) (fp.neg (fp.sub RNE x10 x15))))
(assert (fp.leq (fp.sub RNE (fp.neg x9) (fp.sub RNE x16 x7)) (fp.neg (fp.neg x11))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x9 x11) (fp.neg x10)) (fp.sub RNE (fp.neg x10) (fp.add RNE x4 x4))))
(assert (fp.leq (fp.add RNE (fp.div RNE x1 x10) (fp.sub RNE x7 x16)) (fp.div RNE (fp.add RNE x5 x8) (fp.add RNE x13 x0))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x5 x1) (fp.mul RNE x7 x5)) (fp.neg (fp.div RNE x6 x11))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x15 x11) (fp.add RNE x1 x4)) (fp.mul RNE (fp.sub RNE x1 x4) (fp.sub RNE x0 x4))))
(check-sat)
