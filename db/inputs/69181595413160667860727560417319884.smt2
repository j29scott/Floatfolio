(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x17) (fp.mul RNE x14 x19)) (fp.neg (fp.add RNE x2 x11))) (fp.mul RNE (fp.add RNE (fp.add RNE x14 x15) (fp.div RNE x16 x7)) (fp.mul RNE (fp.sub RNE x13 x6) (fp.add RNE x10 x6)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.sub RNE x26 x0)) (fp.add RNE (fp.mul RNE x23 x17) (fp.div RNE x25 x10))) (fp.neg (fp.div RNE (fp.neg x22) (fp.sub RNE x24 x3))))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.sub RNE (fp.mul RNE x22 x10) (fp.add RNE x23 x23)) (fp.div RNE (fp.neg x11) (fp.mul RNE x1 x21)))) (fp.neg (fp.neg (fp.div RNE (fp.add RNE x4 x12) (fp.mul RNE x0 x9))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.div RNE x4 x18) (fp.add RNE x21 x20)) (fp.mul RNE (fp.div RNE x8 x17) (fp.add RNE x8 x7))) (fp.neg (fp.mul RNE (fp.div RNE x21 x4) (fp.neg x1)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x26 x5) (fp.add RNE x14 x16)) (fp.sub RNE (fp.neg x14) (fp.add RNE x5 x4))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x9) (fp.div RNE x0 x5)) (fp.add RNE (fp.mul RNE x0 x19) (fp.neg x4))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE (fp.div RNE x13 x19) (fp.sub RNE x26 x10)) (fp.mul RNE (fp.add RNE x12 x17) (fp.sub RNE x26 x7))) (fp.neg (fp.mul RNE (fp.div RNE x2 x1) (fp.neg x5)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.neg x16) (fp.neg x24)) (fp.neg (fp.sub RNE x4 x12))) (fp.mul RNE (fp.sub RNE (fp.div RNE x5 x4) (fp.add RNE x11 x18)) (fp.neg (fp.neg x13))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x12 x21) (fp.neg x14)) (fp.sub RNE (fp.add RNE x18 x10) (fp.div RNE x3 x19))) (fp.sub RNE (fp.add RNE (fp.mul RNE x7 x25) (fp.sub RNE x15 x22)) (fp.neg (fp.sub RNE x5 x18)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x10 x4) (fp.neg x11)) (fp.div RNE (fp.mul RNE x9 x17) (fp.mul RNE x16 x18))) (fp.neg (fp.sub RNE (fp.mul RNE x13 x7) (fp.add RNE x1 x7))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.div RNE x16 x15) (fp.add RNE x12 x21)) (fp.div RNE (fp.div RNE x13 x10) (fp.sub RNE x19 x26))) (fp.neg (fp.sub RNE (fp.sub RNE x14 x9) (fp.neg x16)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE x17 x22) (fp.mul RNE x3 x15)) (fp.mul RNE (fp.add RNE x26 x4) (fp.neg x16))) (fp.neg (fp.mul RNE (fp.div RNE x13 x7) (fp.add RNE x12 x1))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE (fp.div RNE x6 x26) (fp.neg x5))) (fp.add RNE (fp.mul RNE (fp.mul RNE x17 x6) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x23 x14) (fp.neg x2)))) (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x25 x17) (fp.add RNE x7 x18))) (fp.neg (fp.add RNE (fp.div RNE x18 x26) (fp.mul RNE x7 x20))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.add RNE (fp.sub RNE x20 x22) (fp.neg x13)) (fp.mul RNE (fp.neg x15) (fp.div RNE x5 x22))) (fp.add RNE (fp.neg (fp.add RNE x6 x20)) (fp.div RNE (fp.neg x11) (fp.div RNE x15 x17)))) (fp.neg (fp.neg (fp.add RNE (fp.add RNE x10 x24) (fp.sub RNE x23 x16))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x18 x8) (fp.add RNE x20 x24)) (fp.mul RNE (fp.add RNE x6 x4) (fp.add RNE x22 x18))) (fp.neg (fp.mul RNE (fp.neg x21) (fp.neg x5)))) (fp.neg (fp.neg (fp.add RNE (fp.neg x13) (fp.add RNE x24 x24))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x21 x26) (fp.add RNE x17 x7)) (fp.sub RNE (fp.div RNE x1 x19) (fp.add RNE x6 x9))) (fp.mul RNE (fp.mul RNE (fp.div RNE x0 x1) (fp.div RNE x23 x23)) (fp.neg (fp.neg x6)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.neg x5) (fp.neg x22))) (fp.neg (fp.neg (fp.neg x10))))))
(check-sat)
