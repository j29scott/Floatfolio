(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.add RNE x0 x10) (fp.mul RNE x3 x9)) (fp.add RNE (fp.add RNE x4 x8) (fp.div RNE x0 x2))) (fp.sub RNE (fp.mul RNE (fp.add RNE x2 x10) (fp.add RNE x1 x7)) (fp.div RNE (fp.div RNE x8 x5) (fp.add RNE x7 x10)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.div RNE x10 x5) (fp.add RNE x8 x6)) (fp.sub RNE (fp.mul RNE x3 x1) (fp.div RNE x6 x1))) (fp.div RNE (fp.div RNE (fp.div RNE x4 x5) (fp.add RNE x0 x9)) (fp.mul RNE (fp.div RNE x8 x2) (fp.mul RNE x1 x3))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.div RNE x6 x1)) (fp.div RNE (fp.sub RNE x9 x9) (fp.sub RNE x9 x7))) (fp.mul RNE (fp.neg (fp.add RNE x2 x2)) (fp.div RNE (fp.mul RNE x3 x6) (fp.neg x9)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.div RNE x7 x10) (fp.neg x1)) (fp.div RNE (fp.neg x4) (fp.neg x7))))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE (fp.sub RNE x10 x3) (fp.sub RNE x6 x2)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x1 x3) (fp.neg x6)) (fp.div RNE (fp.mul RNE x1 x0) (fp.neg x10))) (fp.mul RNE (fp.div RNE (fp.sub RNE x7 x8) (fp.neg x1)) (fp.neg (fp.add RNE x4 x10))))))
(check-sat)
