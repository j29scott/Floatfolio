(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.add RNE x10 x3) (fp.mul RNE x5 x2)) (fp.neg (fp.sub RNE x9 x4))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x9 x5) (fp.add RNE x1 x2)) (fp.sub RNE (fp.div RNE x2 x8) (fp.mul RNE x2 x7))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x1 x3) (fp.mul RNE x12 x12)) (fp.mul RNE (fp.add RNE x0 x0) (fp.neg x6))))
(assert (fp.lt (fp.add RNE (fp.neg x2) (fp.mul RNE x0 x12)) (fp.neg (fp.sub RNE x7 x1))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x1 x4) (fp.div RNE x5 x9)) (fp.neg (fp.mul RNE x0 x8))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x7 x10) (fp.neg x12)) (fp.add RNE (fp.div RNE x1 x11) (fp.neg x11))))
(assert (fp.lt (fp.neg (fp.neg x9)) (fp.neg (fp.div RNE x4 x8))))
(check-sat)
