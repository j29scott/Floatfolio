(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x11 x3) (fp.add RNE x8 x1)) (fp.neg (fp.add RNE x4 x2))) (fp.add RNE (fp.mul RNE (fp.neg x8) (fp.neg x3)) (fp.neg (fp.div RNE x9 x1)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x10 x2) (fp.neg x13)) (fp.neg (fp.mul RNE x7 x6))) (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x13) (fp.neg x2)) (fp.mul RNE (fp.mul RNE x4 x2) (fp.mul RNE x11 x2)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x4 x4) (fp.add RNE x13 x5))) (fp.add RNE (fp.div RNE (fp.sub RNE x5 x5) (fp.neg x9)) (fp.add RNE (fp.neg x4) (fp.div RNE x6 x5)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE x9 x2) (fp.sub RNE x10 x5)) (fp.div RNE (fp.neg x13) (fp.sub RNE x0 x11))) (fp.add RNE (fp.add RNE (fp.mul RNE x9 x3) (fp.mul RNE x6 x5)) (fp.sub RNE (fp.neg x13) (fp.mul RNE x13 x7)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x8) (fp.add RNE x3 x13)) (fp.neg (fp.add RNE x6 x11))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x13) (fp.add RNE x0 x6)) (fp.div RNE (fp.neg x12) (fp.mul RNE x13 x11)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.neg x3) (fp.add RNE x4 x11))) (fp.neg (fp.mul RNE (fp.sub RNE x5 x6) (fp.add RNE x12 x0)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x1) (fp.neg x4)) (fp.neg (fp.add RNE x4 x11))) (fp.mul RNE (fp.neg (fp.sub RNE x12 x6)) (fp.div RNE (fp.add RNE x9 x5) (fp.sub RNE x4 x8)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x4) (fp.div RNE x11 x1)) (fp.neg (fp.add RNE x7 x6))) (fp.mul RNE (fp.add RNE (fp.div RNE x10 x2) (fp.neg x2)) (fp.div RNE (fp.sub RNE x6 x4) (fp.add RNE x13 x2)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x7 x13) (fp.neg x10)) (fp.div RNE (fp.neg x0) (fp.add RNE x9 x1))) (fp.neg (fp.mul RNE (fp.div RNE x5 x7) (fp.add RNE x10 x0)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x1 x12) (fp.neg x12))) (fp.add RNE (fp.sub RNE (fp.div RNE x13 x1) (fp.add RNE x10 x10)) (fp.div RNE (fp.add RNE x6 x8) (fp.mul RNE x8 x7)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x4 x3) (fp.add RNE x1 x1))) (fp.div RNE (fp.neg (fp.mul RNE x4 x3)) (fp.neg (fp.neg x8)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.neg x5) (fp.div RNE x2 x6)) (fp.add RNE (fp.div RNE x13 x3) (fp.neg x5))) (fp.sub RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.add RNE x13 x10) (fp.sub RNE x2 x13)))))
(check-sat)
