(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg x7) (fp.mul RNE x5 x8)) (fp.mul RNE (fp.div RNE x4 x2) (fp.add RNE x2 x9))) (fp.sub RNE (fp.add RNE (fp.add RNE x0 x7) (fp.mul RNE x8 x5)) (fp.div RNE (fp.add RNE x4 x1) (fp.add RNE x2 x1)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.div RNE x0 x8) (fp.neg x12))) (fp.sub RNE (fp.add RNE (fp.neg x9) (fp.div RNE x0 x11)) (fp.neg (fp.neg x11)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.mul RNE x3 x1) (fp.mul RNE x6 x6)) (fp.mul RNE (fp.add RNE x8 x9) (fp.add RNE x1 x10))) (fp.div RNE (fp.sub RNE (fp.sub RNE x6 x0) (fp.mul RNE x11 x12)) (fp.add RNE (fp.mul RNE x7 x9) (fp.div RNE x12 x4)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg x7) (fp.neg x1)) (fp.div RNE (fp.mul RNE x6 x2) (fp.mul RNE x12 x0))) (fp.div RNE (fp.add RNE (fp.sub RNE x10 x4) (fp.mul RNE x6 x7)) (fp.sub RNE (fp.mul RNE x5 x11) (fp.sub RNE x7 x8)))))
(check-sat)
