(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x10 x7) (fp.sub RNE x10 x8)) (fp.sub RNE (fp.div RNE x1 x10) (fp.sub RNE x2 x7))) (fp.sub RNE (fp.neg (fp.neg x8)) (fp.sub RNE (fp.add RNE x9 x2) (fp.sub RNE x1 x1)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x0) (fp.add RNE x2 x4)) (fp.neg (fp.mul RNE x7 x8))) (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x7 x9)) (fp.sub RNE (fp.add RNE x10 x8) (fp.mul RNE x0 x2))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg (fp.sub RNE x0 x3)) (fp.add RNE (fp.sub RNE x0 x5) (fp.sub RNE x8 x9))) (fp.mul RNE (fp.mul RNE (fp.div RNE x6 x2) (fp.sub RNE x6 x0)) (fp.sub RNE (fp.sub RNE x2 x10) (fp.sub RNE x6 x5)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.neg x3) (fp.neg x4))) (fp.add RNE (fp.add RNE (fp.sub RNE x5 x8) (fp.mul RNE x9 x4)) (fp.neg (fp.sub RNE x2 x1))))))
(check-sat)
