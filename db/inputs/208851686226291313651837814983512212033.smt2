(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.sub RNE x7 x4) (fp.mul RNE x7 x3)) (fp.mul RNE (fp.sub RNE x13 x13) (fp.sub RNE x2 x1))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x5 x7) (fp.add RNE x11 x7)) (fp.neg (fp.sub RNE x0 x2)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.div RNE x15 x1) (fp.add RNE x17 x4)) (fp.neg (fp.neg x4))) (fp.sub RNE (fp.add RNE (fp.mul RNE x13 x3) (fp.neg x1)) (fp.mul RNE (fp.add RNE x6 x17) (fp.add RNE x3 x9)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.add RNE x0 x12)) (fp.mul RNE (fp.neg x6) (fp.sub RNE x0 x0))) (fp.add RNE (fp.add RNE (fp.div RNE x7 x4) (fp.add RNE x5 x16)) (fp.add RNE (fp.add RNE x7 x12) (fp.add RNE x17 x5)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.mul RNE x2 x5)) (fp.div RNE (fp.neg x0) (fp.neg x12))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x14 x4) (fp.div RNE x12 x13)) (fp.mul RNE (fp.mul RNE x13 x3) (fp.mul RNE x10 x1)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.sub RNE x2 x9) (fp.neg x8)) (fp.mul RNE (fp.add RNE x4 x7) (fp.mul RNE x3 x10))) (fp.sub RNE (fp.add RNE (fp.mul RNE x15 x11) (fp.add RNE x10 x3)) (fp.neg (fp.div RNE x2 x8)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.neg x16)) (fp.add RNE (fp.neg x1) (fp.neg x3))) (fp.neg (fp.mul RNE (fp.neg x11) (fp.mul RNE x2 x6)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE x11 x11) (fp.neg x1)) (fp.add RNE (fp.mul RNE x12 x13) (fp.add RNE x7 x13))) (fp.neg (fp.mul RNE (fp.add RNE x13 x16) (fp.sub RNE x10 x5)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x15 x4) (fp.mul RNE x9 x7)) (fp.mul RNE (fp.mul RNE x8 x3) (fp.sub RNE x13 x11))) (fp.div RNE (fp.mul RNE (fp.div RNE x14 x16) (fp.div RNE x2 x14)) (fp.neg (fp.add RNE x8 x11)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x6 x2) (fp.neg x9)) (fp.div RNE (fp.add RNE x11 x8) (fp.div RNE x0 x4))) (fp.add RNE (fp.add RNE (fp.div RNE x16 x0) (fp.mul RNE x4 x10)) (fp.div RNE (fp.sub RNE x2 x6) (fp.sub RNE x11 x9)))))
(check-sat)
