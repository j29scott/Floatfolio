(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE x7 x4) (fp.add RNE x8 x5)))
(assert (fp.gt (fp.div RNE x4 x0) (fp.sub RNE x8 x1)))
(assert (fp.geq (fp.add RNE x3 x2) (fp.mul RNE x0 x7)))
(assert (fp.lt (fp.neg x6) (fp.mul RNE x6 x9)))
(assert (fp.geq (fp.mul RNE x6 x7) (fp.mul RNE x6 x1)))
(assert (fp.eq (fp.sub RNE x9 x0) (fp.div RNE x4 x3)))
(assert (fp.gt (fp.add RNE x1 x3) (fp.mul RNE x3 x7)))
(assert (fp.eq (fp.sub RNE x1 x5) (fp.sub RNE x8 x7)))
(assert (fp.lt (fp.div RNE x0 x9) (fp.div RNE x6 x4)))
(assert (fp.geq (fp.mul RNE x5 x6) (fp.neg x0)))
(assert (fp.leq (fp.neg x8) (fp.neg x5)))
(assert (fp.geq (fp.neg x8) (fp.sub RNE x2 x9)))
(check-sat)
