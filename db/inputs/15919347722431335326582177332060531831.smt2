(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.div RNE x4 x2) (fp.neg x7)) (fp.sub RNE (fp.add RNE x9 x0) (fp.div RNE x6 x13))))
(assert (fp.lt (fp.add RNE (fp.div RNE x6 x12) (fp.sub RNE x2 x0)) (fp.neg (fp.div RNE x14 x2))))
(assert (fp.leq (fp.add RNE (fp.add RNE x5 x14) (fp.neg x10)) (fp.add RNE (fp.sub RNE x7 x2) (fp.add RNE x14 x14))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x0 x0) (fp.sub RNE x4 x11)) (fp.add RNE (fp.add RNE x5 x1) (fp.sub RNE x13 x9))))
(check-sat)
