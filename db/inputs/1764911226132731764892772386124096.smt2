(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg x11) (fp.sub RNE x7 x10)) (fp.mul RNE (fp.mul RNE x8 x3) (fp.neg x10))))
(assert (fp.leq (fp.add RNE (fp.div RNE x2 x6) (fp.div RNE x12 x7)) (fp.add RNE (fp.neg x3) (fp.div RNE x7 x8))))
(assert (fp.leq (fp.neg (fp.sub RNE x13 x1)) (fp.add RNE (fp.div RNE x13 x1) (fp.div RNE x4 x6))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x6 x3) (fp.add RNE x14 x7)) (fp.neg (fp.neg x7))))
(assert (fp.geq (fp.add RNE (fp.add RNE x11 x8) (fp.mul RNE x13 x2)) (fp.mul RNE (fp.mul RNE x5 x1) (fp.add RNE x2 x9))))
(assert (fp.leq (fp.mul RNE (fp.neg x13) (fp.neg x10)) (fp.div RNE (fp.div RNE x12 x9) (fp.neg x13))))
(assert (fp.gt (fp.div RNE (fp.neg x14) (fp.add RNE x0 x1)) (fp.neg (fp.sub RNE x2 x12))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x13 x5) (fp.neg x12)) (fp.mul RNE (fp.neg x9) (fp.sub RNE x7 x8))))
(assert (fp.eq (fp.div RNE (fp.div RNE x5 x3) (fp.mul RNE x11 x13)) (fp.add RNE (fp.neg x7) (fp.neg x2))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x12 x0) (fp.sub RNE x1 x7)) (fp.mul RNE (fp.div RNE x0 x1) (fp.div RNE x5 x11))))
(assert (fp.leq (fp.neg (fp.add RNE x8 x11)) (fp.mul RNE (fp.neg x8) (fp.mul RNE x10 x4))))
(assert (fp.gt (fp.div RNE (fp.div RNE x10 x9) (fp.mul RNE x14 x7)) (fp.div RNE (fp.div RNE x2 x7) (fp.mul RNE x0 x8))))
(assert (fp.eq (fp.add RNE (fp.neg x3) (fp.add RNE x14 x3)) (fp.sub RNE (fp.add RNE x0 x2) (fp.neg x2))))
(assert (fp.lt (fp.neg (fp.neg x3)) (fp.sub RNE (fp.div RNE x2 x12) (fp.div RNE x10 x5))))
(assert (fp.eq (fp.div RNE (fp.div RNE x5 x12) (fp.mul RNE x14 x14)) (fp.sub RNE (fp.neg x5) (fp.neg x8))))
(assert (fp.lt (fp.neg (fp.mul RNE x5 x10)) (fp.sub RNE (fp.neg x10) (fp.add RNE x13 x7))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x9 x2) (fp.mul RNE x3 x9)) (fp.neg (fp.sub RNE x9 x11))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x10 x1) (fp.add RNE x6 x5)) (fp.div RNE (fp.add RNE x8 x2) (fp.neg x9))))
(check-sat)
