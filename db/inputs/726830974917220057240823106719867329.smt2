(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x12 x8) (fp.mul RNE x8 x15)))
(assert (fp.lt (fp.mul RNE x7 x10) (fp.add RNE x13 x9)))
(assert (fp.leq (fp.div RNE x1 x0) (fp.neg x2)))
(assert (fp.leq (fp.div RNE x11 x4) (fp.mul RNE x2 x1)))
(assert (fp.eq (fp.div RNE x7 x10) (fp.add RNE x7 x11)))
(assert (fp.lt (fp.sub RNE x14 x8) (fp.mul RNE x13 x5)))
(assert (fp.lt (fp.neg x1) (fp.add RNE x11 x15)))
(assert (fp.lt (fp.div RNE x1 x5) (fp.add RNE x13 x6)))
(assert (fp.lt (fp.div RNE x10 x8) (fp.mul RNE x2 x11)))
(assert (fp.geq (fp.mul RNE x0 x4) (fp.mul RNE x10 x4)))
(check-sat)
