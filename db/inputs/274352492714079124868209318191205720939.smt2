(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg x12)) (fp.neg (fp.mul RNE x1 x4))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x0) (fp.add RNE x5 x4)) (fp.mul RNE (fp.mul RNE x6 x15) (fp.neg x14)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x11 x11) (fp.div RNE x16 x11)) (fp.add RNE (fp.div RNE x4 x2) (fp.add RNE x9 x13))) (fp.add RNE (fp.neg (fp.mul RNE x9 x10)) (fp.neg (fp.neg x14)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE x6 x12) (fp.div RNE x13 x4)) (fp.mul RNE (fp.add RNE x10 x6) (fp.sub RNE x14 x11))) (fp.mul RNE (fp.sub RNE (fp.add RNE x8 x0) (fp.neg x16)) (fp.div RNE (fp.neg x15) (fp.div RNE x3 x10)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x15 x11) (fp.mul RNE x8 x3))) (fp.neg (fp.add RNE (fp.neg x7) (fp.div RNE x3 x2)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x11) (fp.add RNE x11 x7))) (fp.neg (fp.neg (fp.div RNE x12 x7)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.div RNE x5 x4) (fp.div RNE x1 x17)) (fp.mul RNE (fp.sub RNE x13 x9) (fp.neg x3))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x10 x7) (fp.add RNE x9 x13)) (fp.neg (fp.add RNE x7 x7)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x10 x2) (fp.neg x14)) (fp.sub RNE (fp.add RNE x7 x5) (fp.neg x10))) (fp.div RNE (fp.sub RNE (fp.div RNE x11 x16) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x0 x13) (fp.sub RNE x8 x15)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.neg x11)) (fp.div RNE (fp.mul RNE x5 x9) (fp.mul RNE x5 x9))) (fp.div RNE (fp.mul RNE (fp.sub RNE x10 x3) (fp.div RNE x16 x12)) (fp.div RNE (fp.neg x12) (fp.div RNE x9 x12)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x5) (fp.neg x5)) (fp.add RNE (fp.sub RNE x12 x0) (fp.div RNE x11 x3))) (fp.div RNE (fp.div RNE (fp.neg x13) (fp.neg x7)) (fp.mul RNE (fp.mul RNE x10 x7) (fp.div RNE x2 x3)))))
(check-sat)
