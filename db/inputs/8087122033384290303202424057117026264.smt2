(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x0 x6) (fp.div RNE x0 x3)))
(assert (fp.lt (fp.div RNE x6 x0) (fp.neg x0)))
(assert (fp.geq (fp.div RNE x6 x10) (fp.add RNE x2 x10)))
(assert (fp.geq (fp.mul RNE x5 x4) (fp.div RNE x8 x0)))
(assert (fp.eq (fp.neg x7) (fp.add RNE x1 x9)))
(assert (fp.geq (fp.neg x6) (fp.mul RNE x1 x8)))
(assert (fp.gt (fp.div RNE x0 x2) (fp.add RNE x0 x10)))
(assert (fp.gt (fp.div RNE x2 x6) (fp.neg x4)))
(assert (fp.gt (fp.sub RNE x3 x8) (fp.add RNE x7 x3)))
(assert (fp.lt (fp.mul RNE x3 x5) (fp.div RNE x0 x5)))
(assert (fp.lt (fp.neg x1) (fp.sub RNE x4 x8)))
(assert (fp.leq (fp.div RNE x0 x4) (fp.div RNE x0 x8)))
(assert (fp.leq (fp.sub RNE x0 x9) (fp.div RNE x6 x1)))
(assert (fp.leq (fp.sub RNE x1 x0) (fp.neg x0)))
(assert (fp.gt (fp.div RNE x10 x4) (fp.add RNE x4 x9)))
(assert (fp.gt (fp.sub RNE x4 x4) (fp.sub RNE x10 x9)))
(assert (fp.eq (fp.add RNE x2 x6) (fp.mul RNE x10 x2)))
(assert (fp.lt (fp.sub RNE x5 x2) (fp.mul RNE x2 x0)))
(assert (fp.eq (fp.mul RNE x8 x7) (fp.div RNE x9 x6)))
(assert (fp.gt (fp.sub RNE x1 x1) (fp.div RNE x7 x3)))
(check-sat)
