(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE x7 x6) (fp.sub RNE x1 x8)))
(assert (fp.lt (fp.mul RNE x7 x5) (fp.sub RNE x0 x7)))
(assert (fp.gt (fp.add RNE x4 x3) (fp.mul RNE x4 x6)))
(assert (fp.eq (fp.mul RNE x4 x7) (fp.div RNE x6 x1)))
(assert (fp.leq (fp.add RNE x7 x6) (fp.div RNE x5 x3)))
(assert (fp.gt (fp.neg x0) (fp.div RNE x6 x8)))
(assert (fp.lt (fp.neg x3) (fp.sub RNE x8 x0)))
(assert (fp.eq (fp.div RNE x8 x1) (fp.div RNE x3 x4)))
(assert (fp.gt (fp.add RNE x0 x1) (fp.div RNE x7 x4)))
(assert (fp.gt (fp.mul RNE x6 x8) (fp.add RNE x8 x6)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.add RNE x7 x6)))
(assert (fp.eq (fp.sub RNE x0 x2) (fp.mul RNE x4 x2)))
(assert (fp.eq (fp.neg x1) (fp.sub RNE x1 x7)))
(assert (fp.lt (fp.neg x7) (fp.mul RNE x5 x6)))
(check-sat)
