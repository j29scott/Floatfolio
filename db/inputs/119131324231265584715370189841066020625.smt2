(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.add RNE x27 x9) (fp.mul RNE x22 x11)) (fp.mul RNE (fp.mul RNE x9 x19) (fp.add RNE x6 x11))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x14 x21) (fp.neg x10)) (fp.add RNE (fp.add RNE x6 x12) (fp.sub RNE x12 x4))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x16 x6) (fp.div RNE x12 x1)) (fp.neg (fp.add RNE x20 x10))))
(assert (fp.eq (fp.neg (fp.mul RNE x8 x11)) (fp.mul RNE (fp.add RNE x20 x25) (fp.neg x9))))
(assert (fp.geq (fp.add RNE (fp.neg x5) (fp.sub RNE x1 x12)) (fp.mul RNE (fp.mul RNE x12 x20) (fp.neg x10))))
(assert (fp.gt (fp.neg (fp.div RNE x20 x3)) (fp.mul RNE (fp.add RNE x2 x19) (fp.mul RNE x17 x3))))
(assert (fp.geq (fp.neg (fp.sub RNE x24 x23)) (fp.neg (fp.mul RNE x8 x0))))
(assert (fp.geq (fp.add RNE (fp.neg x16) (fp.mul RNE x23 x6)) (fp.neg (fp.add RNE x9 x21))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x20 x14) (fp.neg x27)) (fp.neg (fp.div RNE x13 x16))))
(assert (fp.lt (fp.neg (fp.add RNE x10 x28)) (fp.mul RNE (fp.sub RNE x14 x17) (fp.add RNE x23 x18))))
(assert (fp.gt (fp.add RNE (fp.neg x16) (fp.mul RNE x22 x5)) (fp.mul RNE (fp.add RNE x4 x12) (fp.neg x28))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x3 x17) (fp.sub RNE x18 x7)) (fp.add RNE (fp.add RNE x21 x20) (fp.div RNE x26 x19))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x2) (fp.neg x3)) (fp.mul RNE (fp.mul RNE x18 x8) (fp.neg x20))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x20 x9) (fp.div RNE x2 x21)) (fp.neg (fp.div RNE x17 x20))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x17 x24) (fp.mul RNE x20 x14)) (fp.sub RNE (fp.div RNE x0 x11) (fp.sub RNE x14 x24))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x12 x27) (fp.sub RNE x28 x26)) (fp.sub RNE (fp.div RNE x12 x10) (fp.sub RNE x10 x11))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x20) (fp.add RNE x14 x22)) (fp.div RNE (fp.add RNE x3 x10) (fp.neg x25))))
(check-sat)
