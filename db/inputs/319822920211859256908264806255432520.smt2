(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.sub RNE x10 x10) (fp.neg x0)) (fp.add RNE (fp.neg x8) (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x9 x10) (fp.sub RNE x6 x16)) (fp.neg (fp.neg x6))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x5 x4) (fp.div RNE x4 x11)) (fp.mul RNE (fp.add RNE x7 x14) (fp.sub RNE x9 x15))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x15 x1) (fp.sub RNE x6 x10)) (fp.add RNE (fp.neg x10) (fp.sub RNE x13 x13))))
(assert (fp.leq (fp.add RNE (fp.div RNE x6 x1) (fp.div RNE x4 x3)) (fp.add RNE (fp.mul RNE x15 x5) (fp.neg x13))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x15 x7) (fp.div RNE x13 x3)) (fp.div RNE (fp.neg x10) (fp.add RNE x12 x2))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x11 x8) (fp.mul RNE x15 x12)) (fp.div RNE (fp.mul RNE x16 x11) (fp.sub RNE x16 x10))))
(assert (fp.geq (fp.div RNE (fp.div RNE x17 x0) (fp.sub RNE x1 x8)) (fp.add RNE (fp.add RNE x12 x7) (fp.mul RNE x0 x2))))
(assert (fp.eq (fp.neg (fp.mul RNE x6 x10)) (fp.sub RNE (fp.mul RNE x16 x3) (fp.div RNE x11 x4))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x10 x7) (fp.sub RNE x17 x6)) (fp.div RNE (fp.neg x15) (fp.neg x9))))
(assert (fp.leq (fp.mul RNE (fp.neg x13) (fp.div RNE x0 x17)) (fp.sub RNE (fp.neg x4) (fp.add RNE x6 x9))))
(check-sat)
