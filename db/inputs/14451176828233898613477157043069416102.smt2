(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x10) (fp.add RNE x12 x13)))
(assert (fp.lt (fp.sub RNE x10 x12) (fp.sub RNE x10 x13)))
(assert (fp.leq (fp.div RNE x2 x12) (fp.mul RNE x11 x9)))
(assert (fp.geq (fp.sub RNE x6 x3) (fp.mul RNE x3 x5)))
(assert (fp.lt (fp.div RNE x14 x3) (fp.mul RNE x14 x10)))
(assert (fp.leq (fp.mul RNE x8 x4) (fp.add RNE x6 x2)))
(assert (fp.gt (fp.div RNE x14 x3) (fp.mul RNE x3 x5)))
(assert (fp.eq (fp.sub RNE x0 x1) (fp.neg x2)))
(assert (fp.lt (fp.div RNE x7 x11) (fp.add RNE x1 x6)))
(assert (fp.geq (fp.mul RNE x10 x4) (fp.mul RNE x0 x11)))
(assert (fp.eq (fp.neg x12) (fp.sub RNE x7 x11)))
(check-sat)
