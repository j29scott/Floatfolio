(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x16 x13) (fp.div RNE x3 x5)) (fp.div RNE (fp.mul RNE x7 x7) (fp.sub RNE x4 x6))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x18 x10) (fp.mul RNE x17 x12)) (fp.div RNE (fp.add RNE x16 x16) (fp.div RNE x14 x8)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.add RNE x7 x7) (fp.neg x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x17 x2) (fp.sub RNE x3 x15)) (fp.div RNE (fp.add RNE x7 x2) (fp.div RNE x18 x5)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.div RNE x10 x3)) (fp.mul RNE (fp.add RNE x16 x9) (fp.neg x0))) (fp.div RNE (fp.div RNE (fp.mul RNE x18 x13) (fp.add RNE x9 x12)) (fp.mul RNE (fp.div RNE x5 x6) (fp.mul RNE x16 x11)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x7 x15) (fp.div RNE x13 x18))) (fp.div RNE (fp.div RNE (fp.div RNE x1 x4) (fp.add RNE x17 x3)) (fp.add RNE (fp.div RNE x7 x5) (fp.neg x6)))))
(check-sat)
