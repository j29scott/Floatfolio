(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.mul RNE x24 x16)) (fp.mul RNE (fp.div RNE x8 x7) (fp.add RNE x20 x0))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x20 x16) (fp.add RNE x25 x10)) (fp.div RNE (fp.div RNE x12 x20) (fp.div RNE x13 x11))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x14 x23) (fp.sub RNE x21 x5)) (fp.mul RNE (fp.div RNE x10 x8) (fp.div RNE x18 x22))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x16 x10) (fp.neg x5)) (fp.div RNE (fp.mul RNE x2 x26) (fp.add RNE x14 x16))))
(assert (fp.lt (fp.add RNE (fp.div RNE x21 x8) (fp.add RNE x24 x17)) (fp.sub RNE (fp.mul RNE x15 x5) (fp.sub RNE x6 x18))))
(assert (fp.leq (fp.add RNE (fp.neg x7) (fp.sub RNE x1 x13)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x0 x14))))
(assert (fp.leq (fp.div RNE (fp.div RNE x20 x3) (fp.add RNE x11 x21)) (fp.div RNE (fp.div RNE x23 x7) (fp.add RNE x19 x20))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x5 x12) (fp.sub RNE x13 x26)) (fp.mul RNE (fp.sub RNE x25 x19) (fp.sub RNE x25 x14))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x24 x26) (fp.mul RNE x5 x20)) (fp.add RNE (fp.add RNE x25 x20) (fp.neg x10))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x8 x23) (fp.neg x12)) (fp.neg (fp.sub RNE x11 x19))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x6 x20) (fp.add RNE x20 x23)) (fp.mul RNE (fp.sub RNE x22 x2) (fp.mul RNE x8 x22))))
(assert (fp.eq (fp.neg (fp.add RNE x12 x8)) (fp.div RNE (fp.div RNE x0 x1) (fp.add RNE x14 x8))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x10 x18) (fp.neg x5)) (fp.sub RNE (fp.neg x20) (fp.mul RNE x4 x18))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x17 x9) (fp.sub RNE x25 x20)) (fp.neg (fp.div RNE x20 x19))))
(check-sat)
