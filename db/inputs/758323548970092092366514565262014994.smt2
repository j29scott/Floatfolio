(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x5 x4) (fp.sub RNE x0 x2)))
(assert (fp.lt (fp.mul RNE x5 x5) (fp.sub RNE x4 x3)))
(assert (fp.lt (fp.sub RNE x4 x3) (fp.neg x1)))
(assert (fp.leq (fp.add RNE x3 x1) (fp.mul RNE x3 x5)))
(assert (fp.gt (fp.sub RNE x0 x5) (fp.mul RNE x6 x1)))
(assert (fp.gt (fp.add RNE x5 x0) (fp.neg x0)))
(assert (fp.gt (fp.div RNE x3 x3) (fp.add RNE x0 x3)))
(assert (fp.gt (fp.add RNE x3 x3) (fp.mul RNE x1 x6)))
(assert (fp.leq (fp.neg x6) (fp.add RNE x5 x5)))
(assert (fp.gt (fp.add RNE x4 x0) (fp.mul RNE x3 x5)))
(assert (fp.lt (fp.sub RNE x3 x1) (fp.mul RNE x3 x4)))
(assert (fp.geq (fp.neg x4) (fp.div RNE x0 x0)))
(assert (fp.lt (fp.sub RNE x1 x6) (fp.mul RNE x5 x2)))
(assert (fp.gt (fp.add RNE x5 x4) (fp.div RNE x1 x6)))
(assert (fp.leq (fp.div RNE x3 x3) (fp.add RNE x6 x0)))
(assert (fp.geq (fp.sub RNE x1 x0) (fp.sub RNE x5 x6)))
(check-sat)
