(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x4 x14) (fp.div RNE x20 x10)))
(assert (fp.leq (fp.neg x4) (fp.add RNE x15 x17)))
(assert (fp.eq (fp.mul RNE x0 x15) (fp.div RNE x2 x6)))
(assert (fp.geq (fp.sub RNE x15 x9) (fp.div RNE x12 x6)))
(assert (fp.leq (fp.neg x14) (fp.add RNE x4 x18)))
(assert (fp.eq (fp.add RNE x20 x9) (fp.mul RNE x10 x19)))
(assert (fp.eq (fp.neg x12) (fp.div RNE x13 x14)))
(check-sat)
