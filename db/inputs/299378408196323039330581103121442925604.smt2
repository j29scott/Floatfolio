(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.add RNE x9 x6)) (fp.add RNE (fp.add RNE x11 x4) (fp.neg x11))))
(assert (fp.lt (fp.add RNE (fp.add RNE x7 x0) (fp.add RNE x4 x2)) (fp.mul RNE (fp.div RNE x6 x4) (fp.neg x10))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x0 x7) (fp.sub RNE x6 x11)) (fp.sub RNE (fp.neg x8) (fp.div RNE x0 x4))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x2 x13) (fp.mul RNE x2 x13)) (fp.sub RNE (fp.mul RNE x10 x2) (fp.neg x5))))
(assert (fp.eq (fp.neg (fp.add RNE x10 x1)) (fp.mul RNE (fp.add RNE x6 x6) (fp.sub RNE x2 x2))))
(check-sat)
