(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg (fp.add RNE x2 x3)) (fp.add RNE (fp.neg x4) (fp.div RNE x3 x3))) (fp.div RNE (fp.mul RNE (fp.mul RNE x9 x9) (fp.sub RNE x3 x8)) (fp.add RNE (fp.neg x0) (fp.add RNE x7 x5)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x0) (fp.div RNE x0 x8)) (fp.neg (fp.div RNE x9 x2))) (fp.neg (fp.div RNE (fp.div RNE x5 x0) (fp.add RNE x8 x4)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x2 x5) (fp.add RNE x7 x5))) (fp.add RNE (fp.mul RNE (fp.add RNE x8 x9) (fp.div RNE x3 x7)) (fp.div RNE (fp.div RNE x0 x0) (fp.div RNE x2 x6)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x8 x8) (fp.div RNE x3 x2)) (fp.sub RNE (fp.mul RNE x5 x2) (fp.neg x4))) (fp.div RNE (fp.add RNE (fp.neg x3) (fp.div RNE x6 x8)) (fp.add RNE (fp.sub RNE x6 x2) (fp.sub RNE x0 x6)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x3 x6) (fp.div RNE x9 x7)) (fp.mul RNE (fp.div RNE x0 x8) (fp.neg x5))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x0) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x0 x1) (fp.div RNE x1 x8)))))
(check-sat)
