(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x2) (fp.add RNE x15 x12)) (fp.div RNE (fp.div RNE x19 x21) (fp.sub RNE x14 x8))) (fp.mul RNE (fp.neg (fp.mul RNE x17 x22)) (fp.sub RNE (fp.add RNE x14 x17) (fp.div RNE x21 x13)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x15 x19) (fp.sub RNE x12 x18)) (fp.add RNE (fp.sub RNE x11 x9) (fp.div RNE x14 x20))) (fp.div RNE (fp.div RNE (fp.div RNE x8 x13) (fp.sub RNE x2 x3)) (fp.add RNE (fp.add RNE x10 x0) (fp.neg x18)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x11 x3) (fp.add RNE x21 x0)) (fp.sub RNE (fp.sub RNE x8 x22) (fp.mul RNE x4 x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x9 x4) (fp.sub RNE x10 x9)) (fp.sub RNE (fp.sub RNE x14 x21) (fp.div RNE x16 x22)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE x19 x14) (fp.div RNE x12 x3))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x8 x10) (fp.add RNE x5 x8)) (fp.sub RNE (fp.neg x18) (fp.div RNE x18 x8)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.sub RNE x21 x21) (fp.neg x21))) (fp.div RNE (fp.mul RNE (fp.sub RNE x18 x1) (fp.neg x16)) (fp.sub RNE (fp.neg x11) (fp.add RNE x5 x16)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x17 x22) (fp.add RNE x8 x14)) (fp.neg (fp.div RNE x15 x17))) (fp.neg (fp.div RNE (fp.sub RNE x15 x14) (fp.mul RNE x14 x0)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.div RNE x3 x9) (fp.neg x20)) (fp.neg (fp.sub RNE x20 x16))) (fp.neg (fp.div RNE (fp.add RNE x16 x8) (fp.add RNE x7 x7)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.neg x19) (fp.neg x9))) (fp.sub RNE (fp.div RNE (fp.neg x20) (fp.neg x11)) (fp.add RNE (fp.mul RNE x21 x3) (fp.neg x21)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE x3 x18) (fp.mul RNE x13 x5)) (fp.sub RNE (fp.sub RNE x1 x19) (fp.add RNE x14 x1))) (fp.mul RNE (fp.div RNE (fp.sub RNE x14 x0) (fp.add RNE x0 x18)) (fp.sub RNE (fp.div RNE x14 x7) (fp.div RNE x9 x11)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg x10) (fp.div RNE x15 x18)) (fp.neg (fp.neg x1))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x6) (fp.div RNE x5 x0)) (fp.mul RNE (fp.sub RNE x16 x11) (fp.neg x21)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x16 x4)) (fp.div RNE (fp.neg x10) (fp.sub RNE x2 x7))) (fp.div RNE (fp.div RNE (fp.sub RNE x19 x10) (fp.sub RNE x7 x7)) (fp.sub RNE (fp.mul RNE x19 x3) (fp.mul RNE x6 x9)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x22 x0) (fp.div RNE x15 x19)) (fp.mul RNE (fp.add RNE x20 x13) (fp.mul RNE x15 x8))) (fp.div RNE (fp.add RNE (fp.add RNE x10 x10) (fp.div RNE x10 x7)) (fp.add RNE (fp.div RNE x11 x7) (fp.mul RNE x13 x9)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE x21 x3) (fp.neg x15)) (fp.sub RNE (fp.neg x12) (fp.neg x15))) (fp.div RNE (fp.add RNE (fp.add RNE x8 x10) (fp.mul RNE x7 x10)) (fp.neg (fp.sub RNE x12 x9)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg x7) (fp.add RNE x6 x0)) (fp.mul RNE (fp.add RNE x4 x2) (fp.div RNE x13 x2))) (fp.add RNE (fp.mul RNE (fp.add RNE x12 x17) (fp.div RNE x12 x14)) (fp.neg (fp.add RNE x10 x9)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x13 x11) (fp.add RNE x1 x15)) (fp.neg (fp.neg x6))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x13) (fp.sub RNE x12 x22)) (fp.sub RNE (fp.div RNE x11 x14) (fp.div RNE x20 x13)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x13 x8) (fp.sub RNE x17 x21)) (fp.mul RNE (fp.div RNE x2 x22) (fp.mul RNE x12 x19))) (fp.neg (fp.mul RNE (fp.mul RNE x16 x17) (fp.neg x19)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x3 x11)) (fp.div RNE (fp.div RNE x15 x5) (fp.add RNE x0 x6))) (fp.add RNE (fp.neg (fp.mul RNE x15 x18)) (fp.mul RNE (fp.div RNE x5 x2) (fp.div RNE x7 x7)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.neg x10)) (fp.add RNE (fp.div RNE x3 x19) (fp.add RNE x4 x16))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x18 x19) (fp.mul RNE x21 x18)) (fp.sub RNE (fp.div RNE x8 x4) (fp.neg x14)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.add RNE x11 x2)) (fp.mul RNE (fp.sub RNE x12 x3) (fp.sub RNE x2 x20))) (fp.div RNE (fp.neg (fp.sub RNE x5 x11)) (fp.div RNE (fp.sub RNE x16 x14) (fp.neg x3)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.div RNE x7 x2) (fp.add RNE x3 x2)) (fp.div RNE (fp.mul RNE x13 x10) (fp.sub RNE x7 x13))) (fp.add RNE (fp.neg (fp.neg x9)) (fp.div RNE (fp.neg x6) (fp.neg x20)))))
(check-sat)
