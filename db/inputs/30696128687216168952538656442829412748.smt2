(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.div RNE x1 x5)) (fp.div RNE (fp.neg x8) (fp.div RNE x2 x7))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x4 x8) (fp.div RNE x0 x8)) (fp.sub RNE (fp.add RNE x6 x5) (fp.div RNE x1 x6))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x7 x6) (fp.sub RNE x0 x7)) (fp.mul RNE (fp.add RNE x2 x7) (fp.mul RNE x6 x3))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x5 x2) (fp.add RNE x7 x0)) (fp.neg (fp.neg x7))))
(assert (fp.lt (fp.mul RNE (fp.neg x8) (fp.div RNE x1 x4)) (fp.div RNE (fp.add RNE x0 x9) (fp.add RNE x7 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x4 x4) (fp.add RNE x8 x6)) (fp.add RNE (fp.add RNE x0 x0) (fp.div RNE x3 x0))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x7 x1) (fp.sub RNE x6 x7)) (fp.div RNE (fp.sub RNE x7 x7) (fp.mul RNE x2 x9))))
(check-sat)
