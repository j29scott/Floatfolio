(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x10 x3) (fp.div RNE x3 x6)))
(assert (fp.leq (fp.div RNE x2 x5) (fp.sub RNE x9 x8)))
(assert (fp.geq (fp.mul RNE x9 x7) (fp.mul RNE x3 x14)))
(assert (fp.geq (fp.sub RNE x3 x10) (fp.sub RNE x15 x2)))
(assert (fp.lt (fp.mul RNE x9 x6) (fp.mul RNE x11 x13)))
(assert (fp.eq (fp.div RNE x2 x3) (fp.sub RNE x3 x15)))
(assert (fp.gt (fp.div RNE x7 x8) (fp.div RNE x13 x1)))
(assert (fp.geq (fp.add RNE x9 x14) (fp.neg x5)))
(check-sat)
