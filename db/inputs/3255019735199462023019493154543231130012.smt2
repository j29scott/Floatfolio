(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.div RNE x1 x8) (fp.div RNE x6 x6)) (fp.sub RNE (fp.div RNE x8 x3) (fp.sub RNE x17 x2))))
(assert (fp.geq (fp.neg (fp.neg x3)) (fp.sub RNE (fp.add RNE x0 x17) (fp.add RNE x5 x6))))
(assert (fp.geq (fp.div RNE (fp.div RNE x3 x19) (fp.neg x11)) (fp.sub RNE (fp.neg x17) (fp.add RNE x11 x0))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x6 x1) (fp.mul RNE x14 x4)) (fp.div RNE (fp.sub RNE x19 x3) (fp.neg x15))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x10 x2) (fp.div RNE x0 x7)) (fp.add RNE (fp.sub RNE x20 x12) (fp.mul RNE x2 x3))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x15 x0) (fp.add RNE x13 x7)) (fp.add RNE (fp.mul RNE x3 x1) (fp.mul RNE x12 x10))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x16 x6) (fp.add RNE x20 x20)) (fp.neg (fp.mul RNE x10 x12))))
(assert (fp.leq (fp.div RNE (fp.add RNE x12 x3) (fp.mul RNE x8 x4)) (fp.mul RNE (fp.neg x12) (fp.add RNE x10 x15))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x6 x19) (fp.sub RNE x17 x17)) (fp.div RNE (fp.div RNE x4 x4) (fp.sub RNE x12 x1))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x13 x11) (fp.neg x14)) (fp.add RNE (fp.sub RNE x16 x8) (fp.add RNE x18 x10))))
(assert (fp.gt (fp.mul RNE (fp.neg x11) (fp.sub RNE x1 x13)) (fp.neg (fp.sub RNE x9 x3))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x10 x14) (fp.add RNE x14 x2)) (fp.neg (fp.add RNE x14 x12))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x7 x17) (fp.add RNE x16 x1)) (fp.div RNE (fp.neg x13) (fp.add RNE x18 x18))))
(assert (fp.leq (fp.neg (fp.sub RNE x18 x13)) (fp.sub RNE (fp.div RNE x8 x11) (fp.div RNE x0 x3))))
(check-sat)
