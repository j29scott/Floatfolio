(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x5 x13) (fp.mul RNE x0 x10)) (fp.sub RNE (fp.div RNE x8 x1) (fp.add RNE x8 x2))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x6 x4) (fp.neg x7)) (fp.add RNE (fp.sub RNE x7 x9) (fp.div RNE x10 x7))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x4 x3) (fp.add RNE x8 x13)) (fp.add RNE (fp.sub RNE x9 x9) (fp.neg x10))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x1 x1) (fp.add RNE x7 x10)) (fp.add RNE (fp.sub RNE x6 x5) (fp.mul RNE x0 x11))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x2 x12) (fp.add RNE x5 x1)) (fp.add RNE (fp.div RNE x0 x7) (fp.mul RNE x4 x1))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x4 x5) (fp.sub RNE x3 x9)) (fp.mul RNE (fp.neg x2) (fp.add RNE x3 x6))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x2 x1) (fp.mul RNE x2 x12)) (fp.div RNE (fp.mul RNE x2 x2) (fp.sub RNE x8 x3))))
(check-sat)
