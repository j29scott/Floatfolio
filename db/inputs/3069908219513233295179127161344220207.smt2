(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x1) (fp.neg x2)))
(assert (fp.geq (fp.neg x3) (fp.mul RNE x1 x2)))
(assert (fp.geq (fp.add RNE x1 x4) (fp.mul RNE x11 x6)))
(assert (fp.geq (fp.neg x1) (fp.neg x3)))
(assert (fp.geq (fp.div RNE x0 x3) (fp.mul RNE x6 x2)))
(assert (fp.eq (fp.sub RNE x5 x5) (fp.neg x9)))
(assert (fp.eq (fp.neg x11) (fp.mul RNE x2 x11)))
(assert (fp.geq (fp.add RNE x8 x2) (fp.neg x5)))
(assert (fp.eq (fp.neg x7) (fp.add RNE x2 x10)))
(assert (fp.leq (fp.sub RNE x9 x11) (fp.div RNE x4 x4)))
(assert (fp.geq (fp.div RNE x1 x3) (fp.neg x4)))
(assert (fp.eq (fp.neg x2) (fp.sub RNE x2 x1)))
(assert (fp.geq (fp.add RNE x10 x0) (fp.neg x0)))
(assert (fp.leq (fp.mul RNE x12 x5) (fp.add RNE x2 x4)))
(assert (fp.gt (fp.mul RNE x5 x10) (fp.div RNE x3 x0)))
(check-sat)
