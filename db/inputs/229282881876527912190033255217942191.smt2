(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x20 x18) (fp.sub RNE x6 x17))) (fp.div RNE (fp.sub RNE (fp.add RNE x14 x9) (fp.div RNE x20 x8)) (fp.div RNE (fp.add RNE x9 x21) (fp.sub RNE x16 x2)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg x0)) (fp.neg (fp.mul RNE x5 x8))) (fp.div RNE (fp.neg (fp.add RNE x21 x19)) (fp.mul RNE (fp.div RNE x19 x17) (fp.div RNE x7 x18)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.mul RNE x16 x6) (fp.mul RNE x20 x5))) (fp.neg (fp.add RNE (fp.div RNE x8 x8) (fp.neg x19)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE x14 x12) (fp.div RNE x15 x18)) (fp.sub RNE (fp.sub RNE x4 x21) (fp.mul RNE x15 x5))) (fp.add RNE (fp.neg (fp.mul RNE x2 x16)) (fp.add RNE (fp.sub RNE x1 x16) (fp.mul RNE x19 x4)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.sub RNE x3 x14) (fp.div RNE x8 x21)) (fp.sub RNE (fp.div RNE x21 x16) (fp.add RNE x5 x8))) (fp.sub RNE (fp.neg (fp.sub RNE x4 x16)) (fp.neg (fp.mul RNE x14 x8)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x12 x16) (fp.sub RNE x21 x17)) (fp.add RNE (fp.mul RNE x13 x19) (fp.sub RNE x13 x3))) (fp.add RNE (fp.mul RNE (fp.add RNE x13 x12) (fp.sub RNE x10 x19)) (fp.sub RNE (fp.add RNE x17 x15) (fp.mul RNE x17 x6)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x12 x17) (fp.sub RNE x19 x19))) (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x19) (fp.mul RNE x10 x12)) (fp.div RNE (fp.add RNE x9 x17) (fp.sub RNE x16 x3)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x20) (fp.div RNE x14 x18)) (fp.sub RNE (fp.div RNE x7 x10) (fp.mul RNE x16 x14))) (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x3) (fp.neg x12)) (fp.mul RNE (fp.add RNE x5 x20) (fp.mul RNE x7 x0)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg x7) (fp.add RNE x21 x8)) (fp.add RNE (fp.add RNE x0 x16) (fp.div RNE x5 x6))) (fp.mul RNE (fp.neg (fp.div RNE x13 x16)) (fp.mul RNE (fp.mul RNE x19 x10) (fp.mul RNE x10 x14)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg x7) (fp.div RNE x8 x4)) (fp.neg (fp.neg x19))) (fp.neg (fp.div RNE (fp.sub RNE x18 x8) (fp.add RNE x11 x7)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.add RNE x7 x12) (fp.sub RNE x12 x15))) (fp.sub RNE (fp.sub RNE (fp.neg x8) (fp.neg x18)) (fp.div RNE (fp.sub RNE x21 x5) (fp.add RNE x14 x8)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x0 x5) (fp.mul RNE x13 x21)) (fp.div RNE (fp.add RNE x14 x0) (fp.sub RNE x9 x13))) (fp.div RNE (fp.add RNE (fp.add RNE x6 x3) (fp.add RNE x17 x19)) (fp.mul RNE (fp.mul RNE x14 x17) (fp.sub RNE x7 x14)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x20) (fp.neg x20))) (fp.add RNE (fp.sub RNE (fp.div RNE x16 x9) (fp.mul RNE x2 x10)) (fp.mul RNE (fp.add RNE x19 x6) (fp.mul RNE x15 x13)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.sub RNE x13 x21)) (fp.div RNE (fp.sub RNE x9 x2) (fp.div RNE x0 x9))) (fp.div RNE (fp.div RNE (fp.mul RNE x21 x0) (fp.mul RNE x11 x20)) (fp.mul RNE (fp.sub RNE x2 x20) (fp.div RNE x7 x6)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg x11) (fp.mul RNE x21 x15)) (fp.neg (fp.sub RNE x21 x1))) (fp.sub RNE (fp.sub RNE (fp.neg x0) (fp.sub RNE x14 x6)) (fp.sub RNE (fp.div RNE x6 x2) (fp.add RNE x15 x13)))))
(check-sat)
