(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE x4 x5) (fp.neg x6)) (fp.add RNE (fp.sub RNE x4 x8) (fp.sub RNE x6 x0))))
(assert (fp.leq (fp.div RNE (fp.div RNE x6 x3) (fp.div RNE x6 x6)) (fp.add RNE (fp.sub RNE x2 x4) (fp.add RNE x4 x0))))
(assert (fp.leq (fp.div RNE (fp.add RNE x8 x1) (fp.sub RNE x0 x0)) (fp.div RNE (fp.mul RNE x8 x5) (fp.div RNE x3 x2))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x2) (fp.neg x4)) (fp.mul RNE (fp.div RNE x5 x3) (fp.div RNE x5 x6))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x7 x1) (fp.sub RNE x8 x2)) (fp.div RNE (fp.div RNE x5 x7) (fp.sub RNE x5 x6))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x1)) (fp.neg (fp.neg x2))))
(check-sat)
