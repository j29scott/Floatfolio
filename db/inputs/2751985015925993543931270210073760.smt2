(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.div RNE x7 x11) (fp.div RNE x16 x10)) (fp.add RNE (fp.mul RNE x16 x3) (fp.sub RNE x9 x7))))
(assert (fp.eq (fp.neg (fp.sub RNE x10 x4)) (fp.neg (fp.add RNE x7 x13))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x7 x7) (fp.sub RNE x4 x2)) (fp.sub RNE (fp.neg x0) (fp.add RNE x1 x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x12) (fp.sub RNE x5 x8)) (fp.add RNE (fp.sub RNE x4 x2) (fp.add RNE x13 x1))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x13 x3) (fp.sub RNE x16 x12)) (fp.sub RNE (fp.mul RNE x4 x14) (fp.div RNE x4 x16))))
(assert (fp.leq (fp.add RNE (fp.div RNE x0 x13) (fp.sub RNE x16 x9)) (fp.div RNE (fp.mul RNE x2 x7) (fp.neg x9))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x16 x6) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x6 x8) (fp.mul RNE x2 x13))))
(assert (fp.gt (fp.add RNE (fp.div RNE x10 x12) (fp.neg x13)) (fp.div RNE (fp.div RNE x16 x8) (fp.neg x11))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x8 x10) (fp.neg x15)) (fp.div RNE (fp.div RNE x0 x13) (fp.div RNE x8 x11))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x3 x3) (fp.sub RNE x2 x4)) (fp.div RNE (fp.neg x0) (fp.neg x4))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x8 x11) (fp.neg x5)) (fp.mul RNE (fp.add RNE x11 x7) (fp.mul RNE x7 x13))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x4 x9) (fp.div RNE x0 x12)) (fp.add RNE (fp.add RNE x16 x3) (fp.mul RNE x0 x7))))
(assert (fp.lt (fp.neg (fp.sub RNE x7 x2)) (fp.sub RNE (fp.sub RNE x4 x9) (fp.div RNE x1 x13))))
(assert (fp.leq (fp.div RNE (fp.neg x9) (fp.div RNE x12 x13)) (fp.add RNE (fp.mul RNE x8 x1) (fp.add RNE x8 x11))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x15 x9) (fp.sub RNE x7 x16)) (fp.sub RNE (fp.add RNE x12 x12) (fp.mul RNE x14 x15))))
(check-sat)
