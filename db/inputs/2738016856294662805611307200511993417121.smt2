(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE x7 x10)) (fp.mul RNE (fp.div RNE x18 x12) (fp.mul RNE x9 x24))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x24 x13) (fp.sub RNE x6 x26)) (fp.neg (fp.sub RNE x22 x22))))
(assert (fp.eq (fp.div RNE (fp.add RNE x15 x10) (fp.mul RNE x12 x22)) (fp.sub RNE (fp.sub RNE x23 x20) (fp.sub RNE x20 x8))))
(assert (fp.leq (fp.add RNE (fp.add RNE x0 x3) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x23 x26) (fp.div RNE x12 x17))))
(assert (fp.eq (fp.sub RNE (fp.neg x17) (fp.sub RNE x6 x6)) (fp.mul RNE (fp.sub RNE x7 x22) (fp.mul RNE x21 x8))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x18 x27) (fp.div RNE x12 x7)) (fp.mul RNE (fp.add RNE x8 x3) (fp.add RNE x3 x8))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x21 x14) (fp.sub RNE x19 x21)) (fp.mul RNE (fp.sub RNE x27 x15) (fp.add RNE x19 x2))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x16 x26) (fp.mul RNE x19 x9)) (fp.add RNE (fp.add RNE x12 x3) (fp.add RNE x20 x25))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x14 x26) (fp.add RNE x7 x14)) (fp.mul RNE (fp.neg x1) (fp.sub RNE x8 x16))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x9 x11) (fp.mul RNE x10 x4)) (fp.sub RNE (fp.div RNE x14 x15) (fp.add RNE x11 x10))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x19 x9) (fp.div RNE x13 x25)) (fp.div RNE (fp.div RNE x5 x23) (fp.neg x13))))
(check-sat)
