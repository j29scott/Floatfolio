(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE x14 x13) (fp.add RNE x16 x6)) (fp.sub RNE (fp.mul RNE x7 x14) (fp.div RNE x2 x3))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x6 x14) (fp.add RNE x5 x5)) (fp.add RNE (fp.neg x10) (fp.div RNE x16 x5))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x4 x13) (fp.div RNE x14 x16)) (fp.mul RNE (fp.div RNE x5 x6) (fp.div RNE x5 x0))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x2 x10) (fp.mul RNE x1 x2)) (fp.neg (fp.add RNE x19 x13))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x18 x10) (fp.sub RNE x1 x15)) (fp.mul RNE (fp.div RNE x10 x0) (fp.neg x13))))
(check-sat)
