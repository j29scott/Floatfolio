(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE x3 x7))) (fp.mul RNE (fp.add RNE (fp.mul RNE x11 x0) (fp.sub RNE x13 x19)) (fp.sub RNE (fp.sub RNE x7 x18) (fp.mul RNE x4 x15)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.div RNE x5 x9) (fp.add RNE x2 x5))) (fp.sub RNE (fp.add RNE (fp.div RNE x11 x16) (fp.neg x17)) (fp.div RNE (fp.div RNE x14 x16) (fp.mul RNE x7 x11)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x9 x5) (fp.mul RNE x7 x9))) (fp.add RNE (fp.sub RNE (fp.neg x18) (fp.mul RNE x20 x8)) (fp.mul RNE (fp.add RNE x6 x1) (fp.div RNE x8 x8)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE x15 x18)) (fp.mul RNE (fp.div RNE x5 x18) (fp.neg x20))) (fp.mul RNE (fp.div RNE (fp.neg x15) (fp.mul RNE x18 x5)) (fp.add RNE (fp.add RNE x18 x4) (fp.mul RNE x13 x0)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE x10 x0)) (fp.sub RNE (fp.mul RNE x16 x11) (fp.mul RNE x4 x17))) (fp.neg (fp.neg (fp.div RNE x14 x4)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x20 x10) (fp.div RNE x17 x12)) (fp.add RNE (fp.neg x20) (fp.mul RNE x2 x20))) (fp.sub RNE (fp.mul RNE (fp.div RNE x9 x13) (fp.neg x13)) (fp.mul RNE (fp.div RNE x7 x18) (fp.mul RNE x3 x14)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x14 x20) (fp.add RNE x20 x13))) (fp.add RNE (fp.mul RNE (fp.mul RNE x2 x20) (fp.div RNE x15 x10)) (fp.div RNE (fp.sub RNE x11 x5) (fp.mul RNE x4 x12)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x0 x15) (fp.sub RNE x11 x14)) (fp.div RNE (fp.mul RNE x12 x9) (fp.neg x16))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.sub RNE x1 x12)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg x13)) (fp.div RNE (fp.add RNE x11 x15) (fp.div RNE x15 x8))) (fp.add RNE (fp.mul RNE (fp.div RNE x0 x14) (fp.mul RNE x17 x12)) (fp.sub RNE (fp.mul RNE x11 x17) (fp.neg x11)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x5) (fp.sub RNE x5 x15)) (fp.div RNE (fp.sub RNE x15 x4) (fp.div RNE x3 x7))) (fp.add RNE (fp.add RNE (fp.div RNE x11 x9) (fp.neg x18)) (fp.div RNE (fp.mul RNE x1 x18) (fp.mul RNE x8 x1)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x15 x15) (fp.mul RNE x2 x4)) (fp.div RNE (fp.neg x11) (fp.add RNE x17 x0))) (fp.div RNE (fp.mul RNE (fp.add RNE x3 x19) (fp.add RNE x20 x20)) (fp.mul RNE (fp.div RNE x4 x3) (fp.add RNE x6 x0)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.neg x14) (fp.add RNE x13 x4)) (fp.div RNE (fp.neg x4) (fp.add RNE x9 x18))) (fp.neg (fp.div RNE (fp.sub RNE x18 x5) (fp.neg x10)))))
(check-sat)
