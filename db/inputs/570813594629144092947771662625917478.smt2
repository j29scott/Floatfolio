(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x0 x1) (fp.mul RNE x6 x0)) (fp.sub RNE (fp.add RNE x9 x10) (fp.mul RNE x3 x2))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x0 x1) (fp.div RNE x1 x9)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x0 x5))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x3 x0) (fp.sub RNE x9 x4)) (fp.add RNE (fp.neg x0) (fp.sub RNE x10 x9))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x5 x7) (fp.div RNE x9 x8)) (fp.sub RNE (fp.div RNE x0 x6) (fp.mul RNE x3 x0))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x10 x0) (fp.div RNE x5 x3)) (fp.div RNE (fp.div RNE x7 x8) (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x3 x5) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x0 x5) (fp.add RNE x7 x4))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x4 x10) (fp.div RNE x1 x7)) (fp.sub RNE (fp.mul RNE x0 x0) (fp.mul RNE x8 x3))))
(assert (fp.leq (fp.add RNE (fp.neg x7) (fp.div RNE x1 x2)) (fp.sub RNE (fp.div RNE x8 x5) (fp.add RNE x1 x2))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x7 x10) (fp.sub RNE x8 x5)) (fp.neg (fp.neg x8))))
(assert (fp.gt (fp.sub RNE (fp.neg x2) (fp.div RNE x9 x7)) (fp.neg (fp.div RNE x10 x2))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x6 x2) (fp.sub RNE x7 x10)) (fp.mul RNE (fp.sub RNE x7 x10) (fp.div RNE x1 x4))))
(check-sat)
