(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE x5 x14)) (fp.neg (fp.neg x19))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x10) (fp.mul RNE x21 x0)) (fp.add RNE (fp.add RNE x19 x8) (fp.mul RNE x19 x15))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x5 x0) (fp.add RNE x1 x17)) (fp.mul RNE (fp.neg x18) (fp.neg x7))))
(assert (fp.gt (fp.mul RNE (fp.neg x17) (fp.add RNE x11 x14)) (fp.neg (fp.mul RNE x3 x0))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x3 x13) (fp.div RNE x7 x17)) (fp.neg (fp.add RNE x16 x16))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x20 x10) (fp.div RNE x9 x17)) (fp.div RNE (fp.neg x1) (fp.sub RNE x13 x16))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x4 x13) (fp.neg x17)) (fp.neg (fp.mul RNE x14 x14))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x5 x14) (fp.mul RNE x4 x11)) (fp.add RNE (fp.neg x4) (fp.div RNE x15 x21))))
(assert (fp.lt (fp.div RNE (fp.add RNE x9 x9) (fp.add RNE x5 x10)) (fp.div RNE (fp.add RNE x8 x8) (fp.sub RNE x22 x12))))
(assert (fp.gt (fp.neg (fp.mul RNE x19 x2)) (fp.sub RNE (fp.neg x21) (fp.neg x12))))
(assert (fp.gt (fp.mul RNE (fp.neg x10) (fp.div RNE x8 x20)) (fp.neg (fp.neg x14))))
(assert (fp.gt (fp.add RNE (fp.neg x1) (fp.sub RNE x22 x11)) (fp.neg (fp.sub RNE x5 x8))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x6 x0) (fp.sub RNE x8 x17)) (fp.mul RNE (fp.mul RNE x10 x7) (fp.neg x13))))
(assert (fp.eq (fp.neg (fp.add RNE x14 x5)) (fp.add RNE (fp.neg x7) (fp.sub RNE x19 x22))))
(assert (fp.geq (fp.sub RNE (fp.neg x20) (fp.add RNE x16 x22)) (fp.div RNE (fp.sub RNE x4 x7) (fp.neg x13))))
(check-sat)
