(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE x3 x10) (fp.add RNE x3 x9)))
(assert (fp.lt (fp.div RNE x3 x4) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x0 x10) (fp.add RNE x11 x2)))
(assert (fp.lt (fp.sub RNE x2 x6) (fp.div RNE x11 x9)))
(assert (fp.geq (fp.add RNE x8 x3) (fp.div RNE x8 x7)))
(assert (fp.geq (fp.mul RNE x3 x4) (fp.add RNE x3 x9)))
(assert (fp.geq (fp.sub RNE x9 x8) (fp.div RNE x3 x8)))
(assert (fp.lt (fp.mul RNE x6 x1) (fp.neg x6)))
(assert (fp.gt (fp.neg x9) (fp.neg x2)))
(assert (fp.geq (fp.neg x1) (fp.div RNE x1 x3)))
(assert (fp.leq (fp.add RNE x8 x0) (fp.mul RNE x11 x5)))
(assert (fp.gt (fp.div RNE x5 x4) (fp.div RNE x3 x4)))
(assert (fp.geq (fp.sub RNE x1 x4) (fp.div RNE x3 x6)))
(assert (fp.eq (fp.mul RNE x10 x11) (fp.mul RNE x8 x4)))
(check-sat)
