(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.div RNE (fp.neg x2) (fp.sub RNE x2 x13))) (fp.sub RNE (fp.neg (fp.div RNE x21 x23)) (fp.add RNE (fp.add RNE x5 x19) (fp.sub RNE x19 x17)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x22) (fp.sub RNE x13 x18)) (fp.mul RNE (fp.div RNE x6 x19) (fp.mul RNE x12 x24))) (fp.div RNE (fp.mul RNE (fp.add RNE x20 x4) (fp.neg x7)) (fp.div RNE (fp.sub RNE x3 x11) (fp.add RNE x4 x19)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x5 x9) (fp.div RNE x11 x8)) (fp.neg (fp.neg x25))) (fp.div RNE (fp.div RNE (fp.mul RNE x17 x5) (fp.mul RNE x18 x13)) (fp.sub RNE (fp.sub RNE x19 x1) (fp.add RNE x7 x0)))))
(assert (fp.gt (fp.neg (fp.neg (fp.mul RNE x25 x8))) (fp.add RNE (fp.sub RNE (fp.div RNE x9 x7) (fp.neg x26)) (fp.sub RNE (fp.mul RNE x2 x26) (fp.neg x23)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x9) (fp.neg x19))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x0) (fp.add RNE x21 x13)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x24 x0)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x15)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.mul RNE x14 x21))) (fp.sub RNE (fp.sub RNE (fp.neg x7) (fp.div RNE x14 x3)) (fp.sub RNE (fp.neg x4) (fp.neg x2)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x20) (fp.add RNE x10 x2)) (fp.div RNE (fp.add RNE x21 x23) (fp.neg x22))) (fp.div RNE (fp.mul RNE (fp.add RNE x9 x12) (fp.neg x0)) (fp.add RNE (fp.neg x7) (fp.sub RNE x5 x11)))))
(check-sat)
