(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.sub RNE x9 x11) (fp.add RNE x18 x24)) (fp.mul RNE (fp.add RNE x5 x8) (fp.mul RNE x21 x9))))
(assert (fp.gt (fp.sub RNE (fp.neg x10) (fp.div RNE x27 x9)) (fp.mul RNE (fp.neg x23) (fp.div RNE x9 x25))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x3 x23) (fp.add RNE x9 x5)) (fp.add RNE (fp.mul RNE x20 x24) (fp.mul RNE x0 x8))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x12 x21) (fp.sub RNE x16 x24)) (fp.mul RNE (fp.add RNE x10 x25) (fp.div RNE x8 x11))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x9 x8) (fp.sub RNE x13 x23)) (fp.neg (fp.div RNE x8 x6))))
(assert (fp.leq (fp.add RNE (fp.div RNE x7 x11) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x0 x8) (fp.neg x22))))
(assert (fp.gt (fp.mul RNE (fp.neg x8) (fp.sub RNE x0 x6)) (fp.sub RNE (fp.div RNE x2 x14) (fp.div RNE x25 x11))))
(assert (fp.geq (fp.neg (fp.mul RNE x11 x26)) (fp.mul RNE (fp.mul RNE x1 x0) (fp.add RNE x11 x11))))
(assert (fp.gt (fp.add RNE (fp.neg x17) (fp.add RNE x6 x0)) (fp.sub RNE (fp.div RNE x5 x20) (fp.mul RNE x5 x15))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x3 x26) (fp.mul RNE x2 x16)) (fp.sub RNE (fp.add RNE x25 x15) (fp.mul RNE x20 x27))))
(assert (fp.lt (fp.neg (fp.div RNE x12 x23)) (fp.div RNE (fp.sub RNE x10 x10) (fp.mul RNE x0 x24))))
(assert (fp.eq (fp.sub RNE (fp.neg x4) (fp.mul RNE x27 x4)) (fp.div RNE (fp.add RNE x23 x13) (fp.mul RNE x8 x15))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x10 x3) (fp.div RNE x9 x8)) (fp.neg (fp.add RNE x0 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x25 x13) (fp.neg x0)) (fp.sub RNE (fp.div RNE x5 x5) (fp.div RNE x12 x11))))
(check-sat)
