(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x21) (fp.sub RNE x15 x6)) (fp.sub RNE (fp.sub RNE x9 x9) (fp.add RNE x4 x22))) (fp.div RNE (fp.add RNE (fp.sub RNE x15 x23) (fp.mul RNE x27 x18)) (fp.div RNE (fp.div RNE x4 x16) (fp.add RNE x18 x0)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.mul RNE x14 x1) (fp.sub RNE x17 x28)) (fp.mul RNE (fp.sub RNE x14 x25) (fp.mul RNE x6 x10))) (fp.div RNE (fp.neg (fp.neg x9)) (fp.neg (fp.neg x22)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x3 x14) (fp.neg x24)) (fp.add RNE (fp.mul RNE x16 x5) (fp.div RNE x1 x24))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x25 x24) (fp.mul RNE x16 x0)) (fp.sub RNE (fp.add RNE x13 x13) (fp.add RNE x10 x18)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.add RNE x7 x1) (fp.sub RNE x8 x19))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x9)) (fp.div RNE (fp.add RNE x9 x20) (fp.sub RNE x28 x12)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x25 x12) (fp.sub RNE x0 x18)) (fp.mul RNE (fp.mul RNE x18 x11) (fp.sub RNE x19 x1))) (fp.neg (fp.neg (fp.add RNE x9 x21)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x23 x11) (fp.div RNE x3 x22)) (fp.mul RNE (fp.sub RNE x0 x4) (fp.div RNE x16 x17))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x15) (fp.mul RNE x14 x11)) (fp.sub RNE (fp.sub RNE x8 x8) (fp.sub RNE x26 x18)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x12) (fp.div RNE x10 x13)) (fp.mul RNE (fp.div RNE x21 x7) (fp.sub RNE x19 x18))) (fp.add RNE (fp.neg (fp.sub RNE x20 x17)) (fp.div RNE (fp.neg x16) (fp.add RNE x5 x11)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x14 x20) (fp.neg x16))) (fp.neg (fp.add RNE (fp.neg x5) (fp.mul RNE x18 x18)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x12) (fp.sub RNE x7 x8)) (fp.neg (fp.add RNE x20 x11))) (fp.div RNE (fp.mul RNE (fp.mul RNE x25 x1) (fp.mul RNE x21 x11)) (fp.add RNE (fp.sub RNE x8 x5) (fp.neg x17)))))
(check-sat)
