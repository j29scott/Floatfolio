(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.neg x11) (fp.div RNE x5 x18)) (fp.sub RNE (fp.div RNE x7 x13) (fp.div RNE x14 x7))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x9) (fp.sub RNE x11 x20)) (fp.sub RNE (fp.sub RNE x17 x10) (fp.div RNE x15 x8)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.div RNE x18 x9) (fp.add RNE x20 x2)) (fp.neg (fp.neg x7))))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x8 x6) (fp.sub RNE x6 x9)))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.sub RNE x22 x0)) (fp.div RNE (fp.add RNE x14 x2) (fp.sub RNE x19 x17))) (fp.div RNE (fp.add RNE (fp.add RNE x16 x14) (fp.add RNE x19 x20)) (fp.div RNE (fp.mul RNE x11 x8) (fp.mul RNE x19 x13))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x8 x2) (fp.sub RNE x5 x7)) (fp.add RNE (fp.sub RNE x10 x15) (fp.add RNE x11 x6))) (fp.mul RNE (fp.add RNE (fp.neg x18) (fp.add RNE x11 x11)) (fp.mul RNE (fp.neg x17) (fp.sub RNE x4 x15)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.div RNE x9 x3)) (fp.add RNE (fp.div RNE x1 x1) (fp.neg x1))) (fp.div RNE (fp.neg (fp.div RNE x7 x14)) (fp.mul RNE (fp.neg x3) (fp.mul RNE x22 x8))))))
(check-sat)
