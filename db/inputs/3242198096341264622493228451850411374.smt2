(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE x5 x2) (fp.add RNE x5 x3)))
(assert (fp.lt (fp.mul RNE x10 x8) (fp.div RNE x3 x7)))
(assert (fp.eq (fp.sub RNE x9 x17) (fp.mul RNE x3 x6)))
(assert (fp.gt (fp.neg x4) (fp.sub RNE x18 x19)))
(assert (fp.eq (fp.sub RNE x13 x17) (fp.neg x19)))
(assert (fp.eq (fp.add RNE x13 x3) (fp.div RNE x14 x13)))
(assert (fp.leq (fp.neg x20) (fp.mul RNE x11 x6)))
(assert (fp.gt (fp.add RNE x0 x12) (fp.div RNE x16 x4)))
(assert (fp.geq (fp.div RNE x6 x6) (fp.div RNE x16 x4)))
(check-sat)
