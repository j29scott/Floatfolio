(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.div RNE x5 x9) (fp.add RNE x9 x3)) (fp.div RNE (fp.sub RNE x7 x4) (fp.add RNE x12 x11))))
(assert (fp.eq (fp.neg (fp.sub RNE x2 x16)) (fp.add RNE (fp.add RNE x0 x13) (fp.sub RNE x7 x13))))
(assert (fp.gt (fp.neg (fp.mul RNE x9 x0)) (fp.add RNE (fp.add RNE x6 x1) (fp.div RNE x8 x10))))
(assert (fp.lt (fp.neg (fp.sub RNE x15 x1)) (fp.sub RNE (fp.sub RNE x7 x2) (fp.div RNE x13 x9))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x8 x13) (fp.mul RNE x10 x9)) (fp.sub RNE (fp.add RNE x3 x7) (fp.sub RNE x12 x6))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x14 x6) (fp.sub RNE x0 x3)) (fp.mul RNE (fp.div RNE x14 x16) (fp.neg x3))))
(assert (fp.geq (fp.add RNE (fp.neg x3) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x16 x9) (fp.neg x16))))
(assert (fp.leq (fp.sub RNE (fp.neg x6) (fp.mul RNE x5 x7)) (fp.mul RNE (fp.add RNE x7 x16) (fp.div RNE x9 x7))))
(assert (fp.geq (fp.add RNE (fp.neg x3) (fp.div RNE x7 x16)) (fp.add RNE (fp.neg x0) (fp.mul RNE x13 x13))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x1 x13) (fp.neg x0)) (fp.add RNE (fp.neg x4) (fp.add RNE x14 x13))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x1 x11) (fp.neg x4)) (fp.add RNE (fp.add RNE x3 x9) (fp.mul RNE x8 x2))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x13 x6) (fp.div RNE x4 x13)) (fp.add RNE (fp.sub RNE x6 x10) (fp.add RNE x11 x2))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x6 x0) (fp.sub RNE x13 x2)) (fp.add RNE (fp.add RNE x9 x16) (fp.div RNE x7 x0))))
(assert (fp.gt (fp.div RNE (fp.neg x3) (fp.div RNE x0 x3)) (fp.add RNE (fp.sub RNE x1 x7) (fp.div RNE x15 x0))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x9 x10) (fp.mul RNE x13 x2)) (fp.add RNE (fp.sub RNE x15 x14) (fp.mul RNE x1 x0))))
(check-sat)
