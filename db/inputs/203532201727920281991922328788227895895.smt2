(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg (fp.add RNE x4 x3)) (fp.neg (fp.sub RNE x4 x5))) (fp.sub RNE (fp.neg (fp.add RNE x1 x6)) (fp.div RNE (fp.sub RNE x2 x8) (fp.div RNE x3 x5)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x5 x0) (fp.mul RNE x2 x8)) (fp.add RNE (fp.add RNE x3 x4) (fp.add RNE x8 x7))) (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x3) (fp.mul RNE x6 x0)) (fp.neg (fp.div RNE x4 x2))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.div RNE x0 x6) (fp.neg x6)) (fp.add RNE (fp.add RNE x4 x3) (fp.mul RNE x6 x5))) (fp.mul RNE (fp.neg (fp.mul RNE x8 x3)) (fp.div RNE (fp.sub RNE x7 x3) (fp.add RNE x1 x5)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.add RNE x1 x6) (fp.add RNE x5 x5)) (fp.add RNE (fp.div RNE x3 x0) (fp.mul RNE x8 x1))) (fp.sub RNE (fp.neg (fp.add RNE x2 x4)) (fp.add RNE (fp.mul RNE x3 x7) (fp.sub RNE x6 x1))))))
(check-sat)
