(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x14) (fp.neg x22)) (fp.neg (fp.sub RNE x13 x2))) (fp.div RNE (fp.sub RNE (fp.div RNE x17 x22) (fp.mul RNE x21 x23)) (fp.mul RNE (fp.div RNE x1 x20) (fp.neg x6)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.add RNE x6 x4)) (fp.neg (fp.sub RNE x24 x17))) (fp.add RNE (fp.mul RNE (fp.div RNE x13 x12) (fp.neg x3)) (fp.mul RNE (fp.div RNE x15 x13) (fp.mul RNE x17 x17)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.sub RNE x22 x21) (fp.mul RNE x20 x2)) (fp.neg (fp.add RNE x6 x9))) (fp.add RNE (fp.div RNE (fp.neg x14) (fp.mul RNE x8 x9)) (fp.mul RNE (fp.div RNE x21 x9) (fp.neg x14)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.add RNE x17 x8) (fp.sub RNE x16 x15)) (fp.div RNE (fp.add RNE x18 x18) (fp.neg x3))) (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.add RNE x6 x16)) (fp.div RNE (fp.mul RNE x2 x20) (fp.div RNE x13 x10)))))
(check-sat)
