(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x4 x6) (fp.mul RNE x14 x2)) (fp.add RNE (fp.div RNE x12 x8) (fp.div RNE x13 x1))) (fp.mul RNE (fp.add RNE (fp.add RNE x7 x17) (fp.mul RNE x16 x19)) (fp.mul RNE (fp.div RNE x0 x0) (fp.add RNE x6 x19)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE x9 x19) (fp.div RNE x14 x20)) (fp.neg (fp.neg x14))) (fp.div RNE (fp.sub RNE (fp.div RNE x8 x15) (fp.div RNE x7 x3)) (fp.sub RNE (fp.sub RNE x13 x0) (fp.neg x17)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.add RNE x4 x2) (fp.sub RNE x21 x19))) (fp.neg (fp.add RNE (fp.neg x18) (fp.add RNE x4 x6)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x12) (fp.div RNE x3 x14)) (fp.sub RNE (fp.add RNE x17 x9) (fp.mul RNE x6 x6))) (fp.neg (fp.sub RNE (fp.sub RNE x0 x5) (fp.sub RNE x8 x3)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x12 x15) (fp.sub RNE x12 x7))) (fp.neg (fp.mul RNE (fp.sub RNE x12 x13) (fp.add RNE x5 x17)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x18) (fp.div RNE x18 x10)) (fp.neg (fp.sub RNE x7 x1))) (fp.div RNE (fp.sub RNE (fp.mul RNE x18 x6) (fp.add RNE x15 x3)) (fp.mul RNE (fp.mul RNE x12 x6) (fp.add RNE x1 x7)))))
(check-sat)
