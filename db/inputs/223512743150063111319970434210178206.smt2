(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x9 x4) (fp.add RNE x9 x10))) (fp.mul RNE (fp.add RNE (fp.sub RNE x7 x12) (fp.div RNE x7 x7)) (fp.sub RNE (fp.mul RNE x8 x2) (fp.sub RNE x6 x13)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x4 x12) (fp.neg x3)) (fp.div RNE (fp.neg x13) (fp.mul RNE x12 x1))) (fp.add RNE (fp.sub RNE (fp.sub RNE x6 x0) (fp.mul RNE x12 x12)) (fp.div RNE (fp.neg x1) (fp.add RNE x9 x13)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.div RNE x8 x0) (fp.sub RNE x6 x12)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.mul RNE (fp.add RNE x3 x13) (fp.mul RNE x3 x12)) (fp.neg (fp.add RNE x11 x4)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.neg x5) (fp.sub RNE x3 x13))) (fp.div RNE (fp.sub RNE (fp.mul RNE x6 x7) (fp.sub RNE x12 x8)) (fp.div RNE (fp.sub RNE x5 x5) (fp.neg x9)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.add RNE x0 x11)) (fp.neg (fp.sub RNE x2 x6))) (fp.div RNE (fp.neg (fp.div RNE x5 x7)) (fp.neg (fp.mul RNE x4 x10)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x7 x2) (fp.neg x3)) (fp.neg (fp.sub RNE x6 x3))) (fp.sub RNE (fp.div RNE (fp.mul RNE x12 x5) (fp.mul RNE x5 x8)) (fp.neg (fp.mul RNE x2 x5)))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE x12 x13))) (fp.sub RNE (fp.add RNE (fp.neg x12) (fp.mul RNE x12 x2)) (fp.div RNE (fp.sub RNE x12 x11) (fp.neg x7)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x2 x1))) (fp.neg (fp.add RNE (fp.div RNE x7 x0) (fp.add RNE x5 x7)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.neg x8) (fp.neg x0))) (fp.mul RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x10 x12)) (fp.div RNE (fp.neg x5) (fp.add RNE x2 x8)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE x1 x4) (fp.mul RNE x2 x2))) (fp.div RNE (fp.neg (fp.neg x3)) (fp.add RNE (fp.div RNE x12 x7) (fp.sub RNE x11 x1)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x11 x0) (fp.neg x8))) (fp.div RNE (fp.mul RNE (fp.mul RNE x10 x6) (fp.sub RNE x6 x7)) (fp.mul RNE (fp.div RNE x8 x0) (fp.neg x6)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x13 x7) (fp.sub RNE x12 x9)) (fp.sub RNE (fp.add RNE x1 x5) (fp.neg x11))) (fp.neg (fp.sub RNE (fp.div RNE x13 x8) (fp.div RNE x8 x3)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.sub RNE x13 x11)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x8 x11))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x12 x4) (fp.sub RNE x11 x4)) (fp.div RNE (fp.neg x3) (fp.sub RNE x9 x11)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE x11 x12) (fp.div RNE x10 x3)) (fp.sub RNE (fp.add RNE x12 x7) (fp.div RNE x11 x12))) (fp.neg (fp.mul RNE (fp.neg x10) (fp.add RNE x11 x4)))))
(check-sat)
