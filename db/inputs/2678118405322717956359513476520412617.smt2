(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x15 x16) (fp.neg x16)) (fp.add RNE (fp.add RNE x6 x13) (fp.div RNE x5 x4)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.sub RNE x5 x18) (fp.add RNE x11 x10))) (fp.add RNE (fp.add RNE (fp.mul RNE x4 x6) (fp.sub RNE x14 x7)) (fp.mul RNE (fp.sub RNE x5 x15) (fp.div RNE x19 x1))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.add RNE (fp.add RNE x15 x14) (fp.neg x0)) (fp.neg (fp.sub RNE x7 x2))) (fp.neg (fp.add RNE (fp.sub RNE x11 x11) (fp.sub RNE x10 x8)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x5 x18)) (fp.div RNE (fp.mul RNE x12 x17) (fp.sub RNE x8 x19))) (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x20) (fp.sub RNE x5 x17)) (fp.mul RNE (fp.div RNE x17 x18) (fp.neg x12))))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.mul RNE (fp.add RNE x19 x7) (fp.add RNE x3 x4)) (fp.mul RNE (fp.div RNE x3 x13) (fp.mul RNE x11 x16))) (fp.sub RNE (fp.add RNE (fp.add RNE x9 x18) (fp.sub RNE x6 x10)) (fp.div RNE (fp.add RNE x18 x18) (fp.div RNE x5 x5)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x9 x3) (fp.neg x20)) (fp.sub RNE (fp.sub RNE x16 x19) (fp.add RNE x8 x0))) (fp.neg (fp.mul RNE (fp.div RNE x15 x20) (fp.mul RNE x17 x15))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE (fp.add RNE x4 x6) (fp.sub RNE x13 x12)) (fp.add RNE (fp.mul RNE x5 x1) (fp.add RNE x14 x9))) (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.neg x15)) (fp.mul RNE (fp.sub RNE x2 x19) (fp.div RNE x17 x2)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x17 x3) (fp.div RNE x20 x12)) (fp.div RNE (fp.neg x3) (fp.add RNE x2 x2))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg (fp.add RNE x12 x0)) (fp.mul RNE (fp.div RNE x0 x16) (fp.sub RNE x7 x2))) (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x12) (fp.mul RNE x1 x2)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x13 x7)))) (fp.neg (fp.div RNE (fp.div RNE (fp.add RNE x3 x8) (fp.add RNE x2 x15)) (fp.mul RNE (fp.div RNE x15 x1) (fp.mul RNE x12 x14))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x18 x16) (fp.mul RNE x13 x1)) (fp.neg (fp.sub RNE x14 x7))) (fp.add RNE (fp.add RNE (fp.sub RNE x0 x7) (fp.sub RNE x14 x12)) (fp.sub RNE (fp.sub RNE x12 x18) (fp.neg x10)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.mul RNE x11 x20) (fp.add RNE x17 x18)) (fp.neg (fp.mul RNE x2 x11))) (fp.neg (fp.div RNE (fp.sub RNE x17 x1) (fp.div RNE x12 x18))))))
(check-sat)
