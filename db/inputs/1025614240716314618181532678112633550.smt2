(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x15 x21) (fp.div RNE x12 x20)) (fp.sub RNE (fp.add RNE x0 x7) (fp.div RNE x5 x24))) (fp.div RNE (fp.sub RNE (fp.mul RNE x20 x1) (fp.mul RNE x6 x6)) (fp.mul RNE (fp.sub RNE x24 x11) (fp.div RNE x16 x9)))) (fp.add RNE (fp.neg (fp.neg (fp.neg x5))) (fp.add RNE (fp.add RNE (fp.mul RNE x8 x14) (fp.mul RNE x9 x17)) (fp.mul RNE (fp.sub RNE x9 x17) (fp.sub RNE x13 x1))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.add RNE (fp.neg x19) (fp.div RNE x6 x22)) (fp.neg (fp.mul RNE x22 x17))) (fp.div RNE (fp.neg (fp.neg x24)) (fp.neg (fp.mul RNE x14 x5)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x11 x22) (fp.add RNE x4 x17))) (fp.mul RNE (fp.add RNE (fp.add RNE x13 x11) (fp.mul RNE x21 x13)) (fp.div RNE (fp.mul RNE x15 x4) (fp.div RNE x9 x17))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE (fp.add RNE x20 x19) (fp.neg x11))) (fp.neg (fp.add RNE (fp.sub RNE x6 x20) (fp.neg x18)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.sub RNE x4 x17) (fp.neg x10))) (fp.add RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x9 x17)) (fp.sub RNE (fp.mul RNE x11 x20) (fp.neg x6))))))
(assert (fp.leq (fp.neg (fp.neg (fp.div RNE (fp.sub RNE x18 x15) (fp.sub RNE x6 x11)))) (fp.neg (fp.neg (fp.add RNE (fp.sub RNE x9 x24) (fp.add RNE x7 x24))))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x20 x10) (fp.mul RNE x15 x18)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.neg x1) (fp.div RNE x5 x4))) (fp.mul RNE (fp.neg (fp.neg x24)) (fp.add RNE (fp.neg x12) (fp.mul RNE x22 x24))))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x0 x10) (fp.div RNE x7 x10)) (fp.neg (fp.neg x11))) (fp.div RNE (fp.div RNE (fp.div RNE x1 x19) (fp.sub RNE x16 x1)) (fp.sub RNE (fp.sub RNE x10 x20) (fp.neg x21)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.div RNE x14 x3) (fp.mul RNE x3 x22)) (fp.neg (fp.div RNE x7 x23))) (fp.add RNE (fp.sub RNE (fp.add RNE x18 x9) (fp.sub RNE x2 x22)) (fp.add RNE (fp.sub RNE x9 x19) (fp.neg x1))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.div RNE (fp.div RNE x14 x6) (fp.sub RNE x3 x14)) (fp.mul RNE (fp.add RNE x19 x22) (fp.div RNE x7 x11))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x19) (fp.mul RNE x4 x15)) (fp.sub RNE (fp.sub RNE x12 x8) (fp.div RNE x9 x9)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.sub RNE x13 x14) (fp.mul RNE x18 x6)) (fp.sub RNE (fp.div RNE x12 x22) (fp.div RNE x8 x20))) (fp.mul RNE (fp.neg (fp.mul RNE x19 x16)) (fp.sub RNE (fp.div RNE x9 x16) (fp.sub RNE x15 x6))))))
(check-sat)
