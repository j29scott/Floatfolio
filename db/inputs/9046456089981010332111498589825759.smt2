(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x6 x5) (fp.mul RNE x4 x8)))
(assert (fp.geq (fp.neg x1) (fp.mul RNE x5 x8)))
(assert (fp.geq (fp.mul RNE x3 x3) (fp.mul RNE x9 x11)))
(assert (fp.gt (fp.add RNE x6 x7) (fp.sub RNE x10 x4)))
(assert (fp.eq (fp.neg x11) (fp.sub RNE x5 x7)))
(assert (fp.geq (fp.div RNE x1 x6) (fp.mul RNE x1 x4)))
(assert (fp.gt (fp.neg x8) (fp.neg x0)))
(assert (fp.gt (fp.add RNE x10 x11) (fp.sub RNE x2 x7)))
(assert (fp.leq (fp.add RNE x2 x8) (fp.add RNE x4 x7)))
(assert (fp.geq (fp.sub RNE x8 x0) (fp.mul RNE x1 x4)))
(assert (fp.gt (fp.add RNE x10 x2) (fp.add RNE x6 x3)))
(assert (fp.geq (fp.div RNE x8 x5) (fp.add RNE x10 x11)))
(assert (fp.eq (fp.add RNE x3 x6) (fp.sub RNE x4 x6)))
(assert (fp.geq (fp.add RNE x5 x6) (fp.div RNE x11 x8)))
(assert (fp.eq (fp.sub RNE x6 x0) (fp.add RNE x2 x3)))
(check-sat)
