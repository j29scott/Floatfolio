(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE x4 x2) (fp.neg x5)))
(assert (fp.lt (fp.neg x7) (fp.div RNE x3 x7)))
(assert (fp.lt (fp.add RNE x4 x2) (fp.sub RNE x0 x0)))
(assert (fp.lt (fp.sub RNE x7 x4) (fp.add RNE x4 x1)))
(assert (fp.gt (fp.add RNE x5 x4) (fp.mul RNE x5 x3)))
(assert (fp.leq (fp.mul RNE x6 x0) (fp.add RNE x0 x0)))
(assert (fp.gt (fp.neg x4) (fp.div RNE x6 x8)))
(assert (fp.geq (fp.add RNE x7 x1) (fp.mul RNE x0 x2)))
(assert (fp.geq (fp.mul RNE x3 x0) (fp.div RNE x4 x0)))
(assert (fp.gt (fp.neg x3) (fp.add RNE x1 x8)))
(assert (fp.gt (fp.div RNE x7 x0) (fp.add RNE x2 x2)))
(assert (fp.leq (fp.neg x4) (fp.add RNE x2 x8)))
(assert (fp.geq (fp.div RNE x8 x4) (fp.div RNE x5 x6)))
(assert (fp.gt (fp.neg x8) (fp.div RNE x6 x6)))
(assert (fp.gt (fp.mul RNE x5 x0) (fp.mul RNE x2 x3)))
(assert (fp.gt (fp.div RNE x2 x8) (fp.mul RNE x6 x3)))
(assert (fp.lt (fp.div RNE x0 x2) (fp.neg x2)))
(assert (fp.lt (fp.sub RNE x0 x1) (fp.sub RNE x7 x0)))
(check-sat)
