(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE x11 x6) (fp.mul RNE x5 x2)))
(assert (fp.gt (fp.add RNE x8 x4) (fp.sub RNE x8 x1)))
(assert (fp.gt (fp.sub RNE x9 x10) (fp.div RNE x10 x4)))
(assert (fp.gt (fp.div RNE x6 x5) (fp.neg x6)))
(assert (fp.gt (fp.sub RNE x8 x10) (fp.neg x8)))
(assert (fp.eq (fp.neg x5) (fp.div RNE x10 x11)))
(assert (fp.eq (fp.neg x0) (fp.div RNE x7 x9)))
(assert (fp.eq (fp.sub RNE x9 x4) (fp.neg x10)))
(assert (fp.geq (fp.sub RNE x1 x6) (fp.neg x7)))
(assert (fp.lt (fp.div RNE x1 x0) (fp.sub RNE x7 x6)))
(assert (fp.leq (fp.neg x9) (fp.sub RNE x10 x9)))
(assert (fp.eq (fp.mul RNE x9 x11) (fp.add RNE x11 x4)))
(assert (fp.leq (fp.div RNE x4 x1) (fp.add RNE x6 x9)))
(assert (fp.leq (fp.div RNE x0 x3) (fp.mul RNE x10 x6)))
(assert (fp.geq (fp.add RNE x5 x4) (fp.div RNE x8 x11)))
(assert (fp.eq (fp.add RNE x0 x11) (fp.div RNE x5 x7)))
(check-sat)
