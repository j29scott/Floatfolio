(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x16 x9) (fp.mul RNE x2 x6)))
(assert (fp.gt (fp.add RNE x14 x11) (fp.div RNE x4 x7)))
(assert (fp.lt (fp.mul RNE x12 x10) (fp.add RNE x0 x6)))
(assert (fp.eq (fp.div RNE x5 x3) (fp.mul RNE x16 x14)))
(assert (fp.gt (fp.sub RNE x16 x5) (fp.mul RNE x6 x12)))
(assert (fp.lt (fp.add RNE x13 x0) (fp.sub RNE x12 x10)))
(assert (fp.leq (fp.div RNE x7 x2) (fp.mul RNE x11 x10)))
(assert (fp.eq (fp.neg x12) (fp.neg x9)))
(assert (fp.geq (fp.neg x2) (fp.div RNE x5 x0)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x13 x12)))
(assert (fp.geq (fp.mul RNE x4 x2) (fp.mul RNE x10 x7)))
(check-sat)
