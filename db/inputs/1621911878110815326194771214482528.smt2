(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg (fp.sub RNE x9 x5))) (fp.sub RNE (fp.add RNE (fp.mul RNE x8 x0) (fp.div RNE x4 x0)) (fp.neg (fp.neg x8)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x0 x7) (fp.add RNE x1 x1)) (fp.neg (fp.add RNE x8 x7))) (fp.neg (fp.add RNE (fp.sub RNE x5 x8) (fp.neg x9)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.div RNE x10 x7) (fp.add RNE x7 x1)) (fp.mul RNE (fp.mul RNE x10 x10) (fp.mul RNE x9 x5))) (fp.sub RNE (fp.mul RNE (fp.div RNE x8 x3) (fp.mul RNE x1 x3)) (fp.neg (fp.mul RNE x6 x3)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg x7) (fp.neg x10)) (fp.neg (fp.mul RNE x1 x6))) (fp.mul RNE (fp.add RNE (fp.neg x2) (fp.mul RNE x10 x4)) (fp.div RNE (fp.neg x7) (fp.neg x2)))))
(check-sat)
