(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.mul RNE x11 x1)) (fp.sub RNE (fp.add RNE x6 x11) (fp.div RNE x15 x6))))
(assert (fp.eq (fp.neg (fp.sub RNE x3 x10)) (fp.mul RNE (fp.sub RNE x5 x7) (fp.add RNE x10 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x7 x12) (fp.sub RNE x11 x9)) (fp.div RNE (fp.mul RNE x2 x12) (fp.sub RNE x14 x13))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x3 x1) (fp.div RNE x4 x13)) (fp.mul RNE (fp.add RNE x14 x14) (fp.mul RNE x8 x1))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x8 x9) (fp.sub RNE x7 x7)) (fp.add RNE (fp.mul RNE x13 x3) (fp.div RNE x15 x12))))
(check-sat)
