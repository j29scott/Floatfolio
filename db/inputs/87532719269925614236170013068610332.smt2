(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg x3) (fp.neg x6)))
(assert (fp.geq (fp.div RNE x0 x7) (fp.add RNE x7 x9)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.add RNE x0 x4)))
(assert (fp.lt (fp.mul RNE x8 x10) (fp.div RNE x5 x0)))
(assert (fp.leq (fp.sub RNE x6 x7) (fp.neg x2)))
(assert (fp.eq (fp.neg x5) (fp.add RNE x10 x3)))
(assert (fp.geq (fp.mul RNE x6 x2) (fp.add RNE x5 x4)))
(assert (fp.geq (fp.div RNE x5 x3) (fp.add RNE x0 x6)))
(assert (fp.eq (fp.sub RNE x3 x2) (fp.div RNE x2 x0)))
(assert (fp.eq (fp.sub RNE x4 x6) (fp.sub RNE x7 x1)))
(assert (fp.leq (fp.div RNE x10 x3) (fp.div RNE x2 x7)))
(assert (fp.gt (fp.sub RNE x5 x2) (fp.div RNE x1 x3)))
(assert (fp.leq (fp.div RNE x5 x2) (fp.div RNE x7 x0)))
(assert (fp.leq (fp.div RNE x6 x2) (fp.add RNE x9 x3)))
(assert (fp.leq (fp.sub RNE x5 x0) (fp.add RNE x1 x10)))
(assert (fp.leq (fp.mul RNE x7 x5) (fp.div RNE x7 x7)))
(check-sat)
