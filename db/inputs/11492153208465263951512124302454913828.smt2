(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE (fp.add RNE x3 x28) (fp.mul RNE x10 x25)) (fp.div RNE (fp.div RNE x3 x14) (fp.add RNE x21 x25))) (fp.div RNE (fp.add RNE (fp.add RNE x28 x12) (fp.mul RNE x0 x15)) (fp.sub RNE (fp.div RNE x18 x5) (fp.div RNE x15 x6)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.sub RNE x12 x25) (fp.add RNE x4 x0)) (fp.div RNE (fp.sub RNE x5 x20) (fp.div RNE x8 x13))) (fp.neg (fp.div RNE (fp.sub RNE x6 x17) (fp.add RNE x26 x21))))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE (fp.neg x11) (fp.div RNE x2 x15)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.mul RNE x15 x20) (fp.add RNE x5 x0)) (fp.neg (fp.mul RNE x24 x10))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg (fp.div RNE x12 x17)) (fp.div RNE (fp.sub RNE x25 x17) (fp.neg x24)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.mul RNE x6 x20) (fp.add RNE x8 x17))) (fp.add RNE (fp.neg (fp.mul RNE x13 x27)) (fp.sub RNE (fp.sub RNE x3 x7) (fp.mul RNE x2 x22))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg (fp.div RNE x17 x14)) (fp.sub RNE (fp.neg x15) (fp.div RNE x21 x27))) (fp.div RNE (fp.neg (fp.div RNE x3 x11)) (fp.sub RNE (fp.mul RNE x19 x8) (fp.neg x13)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.add RNE x14 x0) (fp.mul RNE x21 x18)) (fp.sub RNE (fp.neg x18) (fp.neg x13))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x5) (fp.mul RNE x15 x27)) (fp.sub RNE (fp.add RNE x5 x19) (fp.div RNE x19 x16))) (fp.neg (fp.sub RNE (fp.mul RNE x20 x8) (fp.add RNE x4 x3)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.neg x26) (fp.add RNE x16 x14)) (fp.div RNE (fp.add RNE x26 x25) (fp.add RNE x7 x10))) (fp.mul RNE (fp.add RNE (fp.mul RNE x17 x3) (fp.mul RNE x17 x22)) (fp.add RNE (fp.sub RNE x8 x9) (fp.sub RNE x5 x4))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg (fp.div RNE x11 x27)) (fp.add RNE (fp.neg x5) (fp.sub RNE x17 x22))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x2) (fp.add RNE x21 x20)) (fp.div RNE (fp.sub RNE x20 x17) (fp.sub RNE x5 x9)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x27 x17) (fp.add RNE x11 x2)) (fp.add RNE (fp.div RNE x20 x10) (fp.sub RNE x27 x6))) (fp.sub RNE (fp.neg (fp.add RNE x9 x8)) (fp.div RNE (fp.neg x27) (fp.add RNE x0 x25))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x21 x13) (fp.div RNE x13 x10)) (fp.div RNE (fp.mul RNE x14 x4) (fp.add RNE x11 x25))) (fp.sub RNE (fp.neg (fp.add RNE x3 x19)) (fp.neg (fp.mul RNE x13 x21)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x8) (fp.neg x20)) (fp.neg (fp.sub RNE x5 x25))) (fp.add RNE (fp.neg (fp.add RNE x4 x23)) (fp.mul RNE (fp.sub RNE x17 x24) (fp.mul RNE x7 x3))))))
(check-sat)
