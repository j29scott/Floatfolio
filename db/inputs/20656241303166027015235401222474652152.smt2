(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE x10 x11) (fp.add RNE x7 x0)) (fp.neg (fp.neg x5))) (fp.add RNE (fp.add RNE (fp.sub RNE x10 x2) (fp.mul RNE x9 x10)) (fp.add RNE (fp.mul RNE x7 x7) (fp.neg x11)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE x8 x5) (fp.sub RNE x11 x1)) (fp.div RNE (fp.mul RNE x2 x1) (fp.add RNE x10 x11))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x3 x9) (fp.div RNE x5 x9)) (fp.neg (fp.sub RNE x11 x1)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x11 x3) (fp.neg x13)) (fp.sub RNE (fp.mul RNE x5 x9) (fp.neg x5))) (fp.mul RNE (fp.neg (fp.mul RNE x9 x2)) (fp.sub RNE (fp.add RNE x6 x6) (fp.div RNE x4 x14)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x4) (fp.sub RNE x16 x9)) (fp.mul RNE (fp.div RNE x6 x6) (fp.neg x11))) (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x5) (fp.div RNE x9 x14)) (fp.mul RNE (fp.div RNE x9 x4) (fp.sub RNE x11 x6)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.add RNE x2 x15) (fp.neg x1)) (fp.sub RNE (fp.neg x14) (fp.sub RNE x0 x8))) (fp.div RNE (fp.mul RNE (fp.add RNE x13 x6) (fp.add RNE x16 x15)) (fp.mul RNE (fp.mul RNE x13 x1) (fp.neg x6)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x12) (fp.div RNE x1 x15)) (fp.add RNE (fp.neg x6) (fp.mul RNE x3 x10))) (fp.div RNE (fp.div RNE (fp.neg x11) (fp.mul RNE x8 x8)) (fp.mul RNE (fp.mul RNE x9 x4) (fp.sub RNE x16 x13)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x12 x10) (fp.add RNE x6 x16)) (fp.div RNE (fp.sub RNE x0 x3) (fp.add RNE x16 x11))) (fp.div RNE (fp.neg (fp.div RNE x4 x2)) (fp.div RNE (fp.mul RNE x15 x11) (fp.mul RNE x1 x15)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x4) (fp.div RNE x12 x7)) (fp.div RNE (fp.add RNE x8 x11) (fp.neg x11))) (fp.add RNE (fp.sub RNE (fp.add RNE x1 x16) (fp.mul RNE x9 x13)) (fp.div RNE (fp.sub RNE x5 x8) (fp.mul RNE x13 x6)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE x12 x16)) (fp.sub RNE (fp.add RNE x13 x7) (fp.div RNE x9 x15))) (fp.sub RNE (fp.neg (fp.add RNE x16 x11)) (fp.div RNE (fp.sub RNE x0 x12) (fp.neg x15)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x14) (fp.sub RNE x16 x10)) (fp.div RNE (fp.div RNE x11 x8) (fp.div RNE x16 x14))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x15) (fp.mul RNE x8 x10)) (fp.add RNE (fp.neg x10) (fp.add RNE x2 x13)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.sub RNE x16 x12)) (fp.mul RNE (fp.div RNE x6 x5) (fp.sub RNE x9 x14))) (fp.sub RNE (fp.neg (fp.neg x15)) (fp.mul RNE (fp.mul RNE x3 x14) (fp.add RNE x9 x4)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x8 x16) (fp.add RNE x16 x10)) (fp.mul RNE (fp.neg x11) (fp.neg x3))) (fp.add RNE (fp.neg (fp.add RNE x7 x4)) (fp.neg (fp.add RNE x10 x8)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.mul RNE x12 x16) (fp.sub RNE x12 x12)) (fp.mul RNE (fp.neg x10) (fp.neg x1))) (fp.mul RNE (fp.div RNE (fp.div RNE x7 x8) (fp.div RNE x5 x8)) (fp.div RNE (fp.sub RNE x5 x3) (fp.sub RNE x8 x14)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x2 x1) (fp.div RNE x5 x4)) (fp.neg (fp.neg x6))) (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x9) (fp.sub RNE x12 x3)) (fp.sub RNE (fp.neg x10) (fp.div RNE x13 x11)))))
(check-sat)
