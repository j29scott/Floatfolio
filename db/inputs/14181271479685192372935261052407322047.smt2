(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x2 x17) (fp.neg x19)) (fp.mul RNE (fp.neg x11) (fp.add RNE x10 x1))) (fp.div RNE (fp.mul RNE (fp.div RNE x6 x11) (fp.add RNE x10 x4)) (fp.add RNE (fp.add RNE x6 x17) (fp.sub RNE x13 x23)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x13 x0) (fp.sub RNE x17 x10)) (fp.mul RNE (fp.neg x21) (fp.mul RNE x9 x18))) (fp.sub RNE (fp.sub RNE (fp.div RNE x0 x17) (fp.add RNE x22 x21)) (fp.mul RNE (fp.mul RNE x19 x0) (fp.mul RNE x7 x7))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.neg (fp.add RNE x12 x9)) (fp.div RNE (fp.sub RNE x16 x9) (fp.sub RNE x13 x6))) (fp.mul RNE (fp.sub RNE (fp.neg x20) (fp.add RNE x12 x11)) (fp.sub RNE (fp.mul RNE x21 x13) (fp.sub RNE x21 x14)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x2 x9) (fp.div RNE x20 x7)) (fp.div RNE (fp.add RNE x2 x21) (fp.mul RNE x19 x23))) (fp.neg (fp.div RNE (fp.sub RNE x12 x2) (fp.mul RNE x19 x16))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x17 x15) (fp.mul RNE x7 x22)) (fp.mul RNE (fp.neg x9) (fp.neg x11))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x13 x20) (fp.add RNE x10 x11)) (fp.add RNE (fp.neg x16) (fp.mul RNE x0 x10)))) (fp.neg (fp.neg (fp.neg (fp.div RNE x1 x15))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x14 x7) (fp.neg x18)) (fp.neg (fp.mul RNE x2 x0))) (fp.add RNE (fp.add RNE (fp.sub RNE x20 x10) (fp.mul RNE x13 x13)) (fp.div RNE (fp.neg x17) (fp.sub RNE x17 x18)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.add RNE x9 x20) (fp.div RNE x15 x8)) (fp.add RNE (fp.sub RNE x14 x8) (fp.neg x18))) (fp.sub RNE (fp.sub RNE (fp.div RNE x20 x13) (fp.neg x18)) (fp.neg (fp.neg x5))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.div RNE x14 x0) (fp.add RNE x3 x7)) (fp.mul RNE (fp.mul RNE x2 x21) (fp.add RNE x3 x5))) (fp.div RNE (fp.sub RNE (fp.mul RNE x1 x16) (fp.neg x17)) (fp.sub RNE (fp.neg x23) (fp.add RNE x13 x7)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x1 x5) (fp.add RNE x5 x23)) (fp.neg (fp.neg x9))) (fp.add RNE (fp.add RNE (fp.div RNE x23 x7) (fp.neg x9)) (fp.neg (fp.neg x13))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x0) (fp.mul RNE x21 x4)) (fp.sub RNE (fp.div RNE x9 x7) (fp.div RNE x4 x11))) (fp.mul RNE (fp.neg (fp.add RNE x13 x20)) (fp.add RNE (fp.div RNE x7 x3) (fp.add RNE x17 x8)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x15)) (fp.sub RNE (fp.neg x3) (fp.neg x8))) (fp.neg (fp.sub RNE (fp.div RNE x3 x2) (fp.mul RNE x4 x7))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE (fp.neg x9) (fp.sub RNE x2 x5)) (fp.neg (fp.neg x6))) (fp.mul RNE (fp.sub RNE (fp.neg x7) (fp.add RNE x1 x21)) (fp.div RNE (fp.mul RNE x10 x11) (fp.neg x20)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.neg x16) (fp.mul RNE x8 x10)) (fp.sub RNE (fp.add RNE x21 x19) (fp.mul RNE x4 x10))) (fp.mul RNE (fp.add RNE (fp.div RNE x10 x4) (fp.add RNE x6 x16)) (fp.div RNE (fp.mul RNE x5 x13) (fp.add RNE x7 x1))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x15 x14)) (fp.add RNE (fp.mul RNE x10 x5) (fp.mul RNE x13 x11)))) (fp.neg (fp.sub RNE (fp.neg (fp.sub RNE x3 x15)) (fp.neg (fp.mul RNE x6 x19))))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x9 x11) (fp.div RNE x20 x2)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.neg x1) (fp.sub RNE x17 x18)) (fp.sub RNE (fp.neg x16) (fp.div RNE x12 x23))) (fp.neg (fp.neg (fp.sub RNE x18 x15))))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x11 x0) (fp.div RNE x10 x17)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.neg x15)) (fp.add RNE (fp.add RNE x19 x8) (fp.mul RNE x10 x22))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x3) (fp.sub RNE x6 x10)) (fp.sub RNE (fp.sub RNE x10 x6) (fp.add RNE x9 x16))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE (fp.add RNE x4 x17) (fp.mul RNE x4 x8)) (fp.add RNE (fp.add RNE x7 x7) (fp.mul RNE x6 x23))) (fp.neg (fp.neg (fp.add RNE x21 x17)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.neg x14) (fp.neg x11))) (fp.sub RNE (fp.neg (fp.sub RNE x9 x9)) (fp.neg (fp.neg x22))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x0) (fp.sub RNE x9 x20)) (fp.neg (fp.neg x13)))) (fp.add RNE (fp.div RNE (fp.neg (fp.neg x18)) (fp.add RNE (fp.div RNE x2 x3) (fp.div RNE x23 x1))) (fp.sub RNE (fp.neg (fp.neg x19)) (fp.div RNE (fp.neg x21) (fp.add RNE x21 x10))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x1 x14)) (fp.mul RNE (fp.sub RNE x0 x8) (fp.add RNE x12 x7))) (fp.sub RNE (fp.div RNE (fp.add RNE x4 x17) (fp.neg x19)) (fp.mul RNE (fp.div RNE x15 x2) (fp.div RNE x23 x3)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.neg x7) (fp.neg x21)) (fp.mul RNE (fp.sub RNE x1 x16) (fp.div RNE x20 x18))) (fp.neg (fp.sub RNE (fp.neg x3) (fp.add RNE x17 x5))))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x4 x4) (fp.sub RNE x14 x8)) (fp.div RNE (fp.add RNE x14 x19) (fp.sub RNE x15 x23))) (fp.mul RNE (fp.add RNE (fp.add RNE x4 x9) (fp.neg x21)) (fp.mul RNE (fp.sub RNE x0 x3) (fp.div RNE x13 x4)))) (fp.div RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x19) (fp.mul RNE x2 x11)) (fp.add RNE (fp.add RNE x10 x17) (fp.sub RNE x11 x20))) (fp.add RNE (fp.mul RNE (fp.sub RNE x13 x9) (fp.sub RNE x20 x21)) (fp.sub RNE (fp.mul RNE x1 x9) (fp.neg x14))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x9) (fp.sub RNE x16 x12)) (fp.sub RNE (fp.sub RNE x13 x22) (fp.add RNE x20 x17)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x14 x1) (fp.sub RNE x7 x11)) (fp.add RNE (fp.mul RNE x22 x13) (fp.neg x9))) (fp.sub RNE (fp.div RNE (fp.neg x15) (fp.mul RNE x3 x13)) (fp.sub RNE (fp.add RNE x19 x4) (fp.neg x3))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x21 x7) (fp.neg x1)) (fp.add RNE (fp.neg x4) (fp.div RNE x18 x2))) (fp.add RNE (fp.sub RNE (fp.add RNE x12 x18) (fp.mul RNE x16 x12)) (fp.neg (fp.mul RNE x18 x16)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x12 x10) (fp.mul RNE x23 x7)) (fp.sub RNE (fp.div RNE x21 x7) (fp.add RNE x7 x20))) (fp.add RNE (fp.sub RNE (fp.neg x17) (fp.add RNE x14 x18)) (fp.mul RNE (fp.div RNE x12 x5) (fp.div RNE x14 x21))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x1 x2)) (fp.div RNE (fp.div RNE x3 x8) (fp.div RNE x8 x3))) (fp.mul RNE (fp.div RNE (fp.div RNE x14 x15) (fp.add RNE x5 x5)) (fp.sub RNE (fp.div RNE x11 x11) (fp.sub RNE x20 x5)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x17) (fp.sub RNE x4 x18)) (fp.div RNE (fp.neg x10) (fp.mul RNE x11 x12))) (fp.div RNE (fp.add RNE (fp.add RNE x20 x12) (fp.neg x5)) (fp.mul RNE (fp.neg x21) (fp.neg x20))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x22 x23) (fp.neg x3)) (fp.add RNE (fp.mul RNE x0 x20) (fp.mul RNE x18 x16)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x14 x15) (fp.mul RNE x12 x12)) (fp.mul RNE (fp.neg x16) (fp.div RNE x2 x22))) (fp.neg (fp.div RNE (fp.add RNE x10 x14) (fp.add RNE x14 x6))))))
(check-sat)
