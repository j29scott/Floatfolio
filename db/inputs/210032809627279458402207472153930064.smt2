(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.add RNE x1 x13)) (fp.neg (fp.sub RNE x3 x6))))
(assert (fp.eq (fp.neg (fp.add RNE x14 x16)) (fp.mul RNE (fp.mul RNE x1 x19) (fp.div RNE x17 x17))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x4 x6) (fp.mul RNE x4 x15)) (fp.sub RNE (fp.mul RNE x2 x10) (fp.sub RNE x14 x13))))
(assert (fp.eq (fp.add RNE (fp.neg x14) (fp.add RNE x3 x10)) (fp.add RNE (fp.sub RNE x16 x8) (fp.add RNE x12 x10))))
(check-sat)
