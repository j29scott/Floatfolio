(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x14 x9) (fp.sub RNE x2 x9)) (fp.neg (fp.div RNE x10 x13))))
(assert (fp.eq (fp.add RNE (fp.div RNE x11 x13) (fp.neg x7)) (fp.add RNE (fp.sub RNE x6 x14) (fp.add RNE x2 x11))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x8 x0) (fp.div RNE x6 x0)) (fp.add RNE (fp.add RNE x6 x9) (fp.neg x9))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x13 x0) (fp.mul RNE x10 x4)) (fp.add RNE (fp.sub RNE x5 x8) (fp.mul RNE x8 x0))))
(assert (fp.gt (fp.add RNE (fp.div RNE x4 x10) (fp.add RNE x10 x4)) (fp.div RNE (fp.sub RNE x14 x5) (fp.sub RNE x11 x0))))
(assert (fp.gt (fp.neg (fp.div RNE x13 x11)) (fp.mul RNE (fp.neg x1) (fp.add RNE x7 x3))))
(assert (fp.leq (fp.neg (fp.sub RNE x4 x7)) (fp.sub RNE (fp.sub RNE x7 x9) (fp.neg x13))))
(assert (fp.leq (fp.neg (fp.neg x10)) (fp.div RNE (fp.sub RNE x6 x1) (fp.sub RNE x13 x0))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x6) (fp.sub RNE x10 x4)) (fp.mul RNE (fp.mul RNE x3 x7) (fp.neg x12))))
(assert (fp.lt (fp.div RNE (fp.div RNE x2 x12) (fp.sub RNE x1 x11)) (fp.neg (fp.sub RNE x12 x8))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x14 x3) (fp.add RNE x4 x2)) (fp.neg (fp.div RNE x1 x13))))
(assert (fp.geq (fp.add RNE (fp.add RNE x14 x9) (fp.mul RNE x13 x0)) (fp.mul RNE (fp.mul RNE x11 x11) (fp.sub RNE x0 x13))))
(check-sat)
