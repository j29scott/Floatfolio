(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x14 x15) (fp.sub RNE x4 x10)))
(assert (fp.leq (fp.add RNE x1 x5) (fp.sub RNE x0 x4)))
(assert (fp.geq (fp.sub RNE x15 x9) (fp.neg x4)))
(assert (fp.gt (fp.mul RNE x5 x0) (fp.sub RNE x15 x2)))
(assert (fp.geq (fp.div RNE x11 x13) (fp.mul RNE x4 x4)))
(assert (fp.lt (fp.neg x5) (fp.sub RNE x3 x8)))
(assert (fp.gt (fp.neg x0) (fp.mul RNE x4 x9)))
(assert (fp.lt (fp.add RNE x6 x0) (fp.sub RNE x15 x11)))
(assert (fp.leq (fp.neg x8) (fp.sub RNE x1 x0)))
(check-sat)
