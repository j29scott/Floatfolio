(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x11 x4)) (fp.sub RNE (fp.mul RNE x1 x4) (fp.neg x15))) (fp.div RNE (fp.neg (fp.div RNE x12 x3)) (fp.div RNE (fp.mul RNE x4 x4) (fp.sub RNE x9 x18)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.neg x20) (fp.sub RNE x19 x23)) (fp.add RNE (fp.div RNE x16 x11) (fp.neg x18))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x7) (fp.mul RNE x17 x18)) (fp.sub RNE (fp.add RNE x23 x17) (fp.div RNE x11 x22)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x8) (fp.div RNE x10 x11)) (fp.div RNE (fp.add RNE x19 x8) (fp.neg x20))) (fp.add RNE (fp.sub RNE (fp.add RNE x16 x15) (fp.mul RNE x1 x21)) (fp.div RNE (fp.mul RNE x10 x5) (fp.neg x21)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.div RNE x21 x10) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x23 x0) (fp.neg x0))) (fp.neg (fp.sub RNE (fp.mul RNE x12 x22) (fp.div RNE x17 x2)))))
(assert (fp.lt (fp.neg (fp.neg (fp.sub RNE x22 x3))) (fp.add RNE (fp.div RNE (fp.div RNE x10 x7) (fp.div RNE x16 x13)) (fp.neg (fp.mul RNE x21 x0)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x6 x0) (fp.div RNE x16 x19)) (fp.div RNE (fp.div RNE x17 x20) (fp.div RNE x16 x21))) (fp.sub RNE (fp.add RNE (fp.sub RNE x5 x9) (fp.mul RNE x4 x22)) (fp.mul RNE (fp.div RNE x3 x4) (fp.neg x1)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE x18 x9) (fp.sub RNE x7 x5)) (fp.neg (fp.sub RNE x9 x23))) (fp.neg (fp.sub RNE (fp.mul RNE x0 x14) (fp.sub RNE x7 x4)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x3 x14)) (fp.div RNE (fp.add RNE x2 x7) (fp.sub RNE x10 x6))) (fp.div RNE (fp.mul RNE (fp.add RNE x13 x16) (fp.neg x4)) (fp.div RNE (fp.mul RNE x23 x6) (fp.add RNE x5 x12)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x23 x1) (fp.sub RNE x9 x8)) (fp.div RNE (fp.mul RNE x16 x16) (fp.sub RNE x16 x22))) (fp.div RNE (fp.add RNE (fp.mul RNE x19 x12) (fp.sub RNE x23 x17)) (fp.div RNE (fp.add RNE x0 x19) (fp.sub RNE x18 x16)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.div RNE x15 x4) (fp.div RNE x8 x9)) (fp.add RNE (fp.div RNE x14 x22) (fp.add RNE x13 x15))) (fp.mul RNE (fp.add RNE (fp.div RNE x10 x6) (fp.add RNE x15 x11)) (fp.div RNE (fp.neg x18) (fp.sub RNE x17 x6)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x21 x2) (fp.sub RNE x21 x6)) (fp.div RNE (fp.sub RNE x9 x10) (fp.sub RNE x13 x4))) (fp.mul RNE (fp.neg (fp.mul RNE x23 x8)) (fp.sub RNE (fp.mul RNE x15 x18) (fp.sub RNE x10 x21)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE x1 x18) (fp.mul RNE x16 x9))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x23) (fp.sub RNE x3 x19)) (fp.neg (fp.neg x10)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x21) (fp.neg x15)) (fp.add RNE (fp.mul RNE x12 x20) (fp.div RNE x22 x1))) (fp.sub RNE (fp.add RNE (fp.div RNE x20 x11) (fp.neg x19)) (fp.div RNE (fp.neg x15) (fp.div RNE x19 x9)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE x1 x21) (fp.div RNE x13 x8))) (fp.add RNE (fp.div RNE (fp.div RNE x1 x9) (fp.add RNE x8 x22)) (fp.sub RNE (fp.mul RNE x12 x17) (fp.div RNE x8 x11)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x14 x19) (fp.neg x9)) (fp.neg (fp.sub RNE x14 x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x12 x5) (fp.div RNE x2 x7)) (fp.sub RNE (fp.sub RNE x19 x17) (fp.div RNE x6 x6)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.div RNE x16 x22) (fp.sub RNE x6 x17)) (fp.sub RNE (fp.neg x4) (fp.div RNE x2 x23))) (fp.div RNE (fp.neg (fp.mul RNE x21 x12)) (fp.neg (fp.neg x3)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x20 x0)) (fp.add RNE (fp.add RNE x8 x5) (fp.mul RNE x5 x7))) (fp.neg (fp.mul RNE (fp.mul RNE x10 x14) (fp.neg x4)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE x23 x6) (fp.sub RNE x23 x23)) (fp.div RNE (fp.sub RNE x14 x23) (fp.add RNE x2 x15))) (fp.div RNE (fp.neg (fp.div RNE x2 x0)) (fp.neg (fp.add RNE x6 x16)))))
(check-sat)
