(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.sub RNE x2 x2)) (fp.sub RNE (fp.add RNE x14 x12) (fp.div RNE x4 x2))) (fp.neg (fp.add RNE (fp.sub RNE x14 x16) (fp.neg x12)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x15 x15) (fp.add RNE x15 x15)) (fp.add RNE (fp.mul RNE x2 x17) (fp.div RNE x17 x12))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x9) (fp.add RNE x7 x11)) (fp.add RNE (fp.mul RNE x0 x17) (fp.mul RNE x4 x7)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x8) (fp.sub RNE x9 x15)) (fp.div RNE (fp.neg x3) (fp.neg x3))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x14 x2) (fp.div RNE x15 x5)) (fp.sub RNE (fp.neg x4) (fp.neg x10)))))
(check-sat)
