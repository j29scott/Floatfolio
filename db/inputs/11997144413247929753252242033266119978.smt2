(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x6 x16) (fp.neg x8))) (fp.div RNE (fp.add RNE (fp.neg x13) (fp.add RNE x1 x8)) (fp.add RNE (fp.mul RNE x2 x4) (fp.mul RNE x15 x13)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x17 x2) (fp.sub RNE x8 x13)) (fp.add RNE (fp.mul RNE x0 x0) (fp.add RNE x0 x16))) (fp.sub RNE (fp.mul RNE (fp.neg x5) (fp.sub RNE x11 x2)) (fp.mul RNE (fp.sub RNE x2 x4) (fp.add RNE x11 x18)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x7 x6) (fp.add RNE x7 x11)) (fp.div RNE (fp.div RNE x4 x1) (fp.div RNE x17 x2))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x6) (fp.mul RNE x13 x3)) (fp.add RNE (fp.neg x9) (fp.neg x4)))))
(check-sat)
