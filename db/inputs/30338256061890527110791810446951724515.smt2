(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.add RNE x9 x4) (fp.neg x2)) (fp.neg (fp.sub RNE x7 x8))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x11 x14) (fp.sub RNE x5 x7)) (fp.mul RNE (fp.add RNE x5 x3) (fp.add RNE x12 x9))))
(assert (fp.eq (fp.mul RNE (fp.neg x12) (fp.mul RNE x3 x11)) (fp.div RNE (fp.add RNE x16 x6) (fp.neg x10))))
(assert (fp.eq (fp.div RNE (fp.neg x11) (fp.sub RNE x2 x4)) (fp.mul RNE (fp.add RNE x10 x4) (fp.div RNE x2 x13))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x2 x9) (fp.add RNE x12 x12)) (fp.div RNE (fp.neg x14) (fp.neg x1))))
(assert (fp.geq (fp.div RNE (fp.add RNE x11 x9) (fp.mul RNE x14 x4)) (fp.add RNE (fp.div RNE x0 x15) (fp.neg x5))))
(assert (fp.lt (fp.neg (fp.add RNE x8 x11)) (fp.mul RNE (fp.sub RNE x16 x14) (fp.mul RNE x14 x0))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x5 x0) (fp.div RNE x15 x6)) (fp.sub RNE (fp.sub RNE x16 x13) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x4 x16) (fp.div RNE x9 x5)) (fp.sub RNE (fp.add RNE x15 x12) (fp.div RNE x11 x13))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x7 x5) (fp.mul RNE x1 x10)) (fp.mul RNE (fp.sub RNE x13 x11) (fp.add RNE x5 x3))))
(assert (fp.lt (fp.add RNE (fp.div RNE x6 x0) (fp.add RNE x9 x3)) (fp.mul RNE (fp.div RNE x0 x4) (fp.neg x5))))
(check-sat)
