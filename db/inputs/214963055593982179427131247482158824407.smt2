(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x3 x5) (fp.mul RNE x4 x3)))
(assert (fp.eq (fp.neg x3) (fp.neg x1)))
(assert (fp.gt (fp.sub RNE x2 x3) (fp.div RNE x1 x4)))
(assert (fp.eq (fp.sub RNE x0 x5) (fp.div RNE x5 x5)))
(assert (fp.lt (fp.mul RNE x4 x5) (fp.neg x3)))
(assert (fp.geq (fp.neg x0) (fp.add RNE x1 x5)))
(assert (fp.lt (fp.add RNE x4 x2) (fp.add RNE x3 x3)))
(assert (fp.gt (fp.mul RNE x4 x2) (fp.mul RNE x0 x5)))
(assert (fp.lt (fp.mul RNE x5 x2) (fp.mul RNE x4 x2)))
(assert (fp.gt (fp.neg x0) (fp.mul RNE x1 x4)))
(assert (fp.eq (fp.sub RNE x1 x4) (fp.mul RNE x3 x4)))
(assert (fp.leq (fp.div RNE x5 x0) (fp.mul RNE x5 x2)))
(assert (fp.lt (fp.mul RNE x0 x4) (fp.div RNE x5 x2)))
(assert (fp.eq (fp.mul RNE x3 x4) (fp.sub RNE x1 x5)))
(assert (fp.leq (fp.neg x5) (fp.add RNE x5 x0)))
(assert (fp.eq (fp.mul RNE x0 x1) (fp.sub RNE x4 x5)))
(assert (fp.lt (fp.add RNE x5 x4) (fp.neg x2)))
(assert (fp.geq (fp.neg x0) (fp.mul RNE x5 x5)))
(check-sat)
