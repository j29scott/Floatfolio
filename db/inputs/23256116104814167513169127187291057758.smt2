(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x9) (fp.mul RNE x10 x14)) (fp.neg (fp.neg x25))) (fp.add RNE (fp.div RNE (fp.neg x17) (fp.div RNE x16 x10)) (fp.mul RNE (fp.add RNE x4 x0) (fp.div RNE x1 x8)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE x14 x0) (fp.add RNE x2 x26)) (fp.neg (fp.mul RNE x17 x4))) (fp.add RNE (fp.mul RNE (fp.add RNE x16 x0) (fp.add RNE x6 x23)) (fp.neg (fp.div RNE x15 x24)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x27 x15) (fp.neg x24)) (fp.neg (fp.add RNE x24 x3))) (fp.sub RNE (fp.neg (fp.add RNE x3 x19)) (fp.div RNE (fp.add RNE x22 x3) (fp.div RNE x21 x25)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x15))) (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x7) (fp.div RNE x12 x19)) (fp.neg (fp.sub RNE x2 x10)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.neg x7) (fp.div RNE x9 x7))) (fp.add RNE (fp.add RNE (fp.div RNE x11 x17) (fp.sub RNE x12 x7)) (fp.neg (fp.div RNE x20 x2)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x12) (fp.add RNE x24 x18)) (fp.mul RNE (fp.neg x0) (fp.div RNE x16 x2))) (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x25) (fp.sub RNE x8 x2)) (fp.mul RNE (fp.sub RNE x6 x5) (fp.div RNE x22 x21)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE x23 x14) (fp.div RNE x15 x20)) (fp.div RNE (fp.mul RNE x21 x10) (fp.add RNE x21 x5))) (fp.sub RNE (fp.mul RNE (fp.add RNE x10 x18) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x13 x1) (fp.add RNE x0 x23)))))
(check-sat)
