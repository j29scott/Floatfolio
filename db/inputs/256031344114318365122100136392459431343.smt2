(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg (fp.neg x14)) (fp.add RNE (fp.div RNE x16 x12) (fp.neg x12))) (fp.neg (fp.add RNE (fp.mul RNE x22 x20) (fp.add RNE x18 x14)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x4 x5) (fp.neg x3)) (fp.div RNE (fp.add RNE x14 x4) (fp.neg x4))) (fp.div RNE (fp.mul RNE (fp.sub RNE x22 x20) (fp.div RNE x21 x18)) (fp.neg (fp.mul RNE x11 x15))))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x2 x13)) (fp.div RNE (fp.sub RNE x3 x1) (fp.neg x14))) (fp.sub RNE (fp.div RNE (fp.sub RNE x12 x11) (fp.mul RNE x5 x11)) (fp.div RNE (fp.div RNE x19 x17) (fp.div RNE x10 x18)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x8 x7) (fp.mul RNE x18 x3)) (fp.div RNE (fp.div RNE x15 x22) (fp.sub RNE x9 x7))) (fp.mul RNE (fp.sub RNE (fp.neg x17) (fp.sub RNE x12 x1)) (fp.add RNE (fp.sub RNE x10 x11) (fp.add RNE x22 x15))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x15 x17) (fp.sub RNE x8 x15)) (fp.sub RNE (fp.neg x3) (fp.mul RNE x4 x14))) (fp.sub RNE (fp.div RNE (fp.neg x2) (fp.add RNE x9 x10)) (fp.mul RNE (fp.add RNE x8 x12) (fp.mul RNE x19 x18)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x12) (fp.sub RNE x19 x13)) (fp.sub RNE (fp.neg x3) (fp.add RNE x6 x22))) (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x5) (fp.sub RNE x18 x3)) (fp.sub RNE (fp.neg x22) (fp.div RNE x10 x18))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.div RNE x16 x4) (fp.mul RNE x8 x9)) (fp.add RNE (fp.sub RNE x14 x22) (fp.mul RNE x15 x12))) (fp.mul RNE (fp.sub RNE (fp.div RNE x14 x8) (fp.neg x20)) (fp.mul RNE (fp.neg x9) (fp.sub RNE x14 x12)))) (fp.add RNE (fp.neg (fp.neg (fp.mul RNE x13 x8))) (fp.mul RNE (fp.add RNE (fp.mul RNE x18 x22) (fp.add RNE x11 x20)) (fp.add RNE (fp.neg x13) (fp.add RNE x14 x22))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE (fp.sub RNE x5 x14) (fp.neg x20))) (fp.add RNE (fp.add RNE (fp.sub RNE x7 x0) (fp.add RNE x3 x16)) (fp.mul RNE (fp.div RNE x12 x6) (fp.neg x7)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.neg x0)) (fp.sub RNE (fp.neg x11) (fp.neg x13))) (fp.sub RNE (fp.mul RNE (fp.add RNE x8 x0) (fp.mul RNE x17 x7)) (fp.add RNE (fp.mul RNE x5 x15) (fp.div RNE x6 x4))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg (fp.add RNE x16 x14)) (fp.sub RNE (fp.neg x12) (fp.div RNE x16 x6))) (fp.div RNE (fp.neg (fp.sub RNE x3 x2)) (fp.div RNE (fp.neg x9) (fp.sub RNE x2 x18)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.div RNE x16 x16) (fp.div RNE x10 x4)) (fp.sub RNE (fp.add RNE x17 x2) (fp.neg x1))) (fp.sub RNE (fp.sub RNE (fp.div RNE x3 x7) (fp.neg x12)) (fp.sub RNE (fp.neg x21) (fp.neg x5))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE (fp.neg x1) (fp.neg x17))) (fp.neg (fp.mul RNE (fp.div RNE x22 x1) (fp.add RNE x0 x4)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.div RNE x2 x16) (fp.add RNE x19 x4)) (fp.add RNE (fp.sub RNE x3 x17) (fp.add RNE x3 x20))) (fp.sub RNE (fp.add RNE (fp.add RNE x0 x10) (fp.mul RNE x18 x5)) (fp.div RNE (fp.div RNE x10 x19) (fp.add RNE x11 x2))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.neg (fp.sub RNE x20 x3)) (fp.sub RNE (fp.mul RNE x14 x9) (fp.add RNE x20 x1))) (fp.add RNE (fp.mul RNE (fp.mul RNE x20 x12) (fp.sub RNE x20 x16)) (fp.neg (fp.div RNE x22 x2)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.div RNE x0 x6) (fp.neg x22)) (fp.neg (fp.sub RNE x19 x11))) (fp.add RNE (fp.neg (fp.sub RNE x11 x3)) (fp.div RNE (fp.div RNE x15 x18) (fp.neg x21))))))
(check-sat)
