(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.div RNE x13 x9) (fp.sub RNE x10 x6)) (fp.sub RNE (fp.div RNE x3 x13) (fp.add RNE x5 x0))))
(assert (fp.geq (fp.add RNE (fp.div RNE x0 x14) (fp.div RNE x0 x12)) (fp.sub RNE (fp.div RNE x13 x3) (fp.neg x10))))
(assert (fp.gt (fp.add RNE (fp.div RNE x0 x10) (fp.add RNE x2 x3)) (fp.sub RNE (fp.mul RNE x1 x1) (fp.neg x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x9) (fp.mul RNE x1 x4)) (fp.mul RNE (fp.neg x2) (fp.neg x12))))
(assert (fp.gt (fp.add RNE (fp.neg x2) (fp.neg x4)) (fp.div RNE (fp.mul RNE x0 x4) (fp.add RNE x12 x6))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x7 x0) (fp.div RNE x10 x2)) (fp.add RNE (fp.sub RNE x11 x10) (fp.neg x14))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x4 x5) (fp.mul RNE x6 x6)) (fp.add RNE (fp.div RNE x12 x0) (fp.add RNE x13 x12))))
(assert (fp.leq (fp.neg (fp.add RNE x3 x2)) (fp.sub RNE (fp.div RNE x1 x11) (fp.mul RNE x11 x1))))
(assert (fp.leq (fp.neg (fp.div RNE x13 x1)) (fp.mul RNE (fp.sub RNE x13 x14) (fp.sub RNE x6 x13))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x8 x12) (fp.add RNE x0 x0)) (fp.sub RNE (fp.div RNE x7 x1) (fp.add RNE x4 x7))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x9 x6) (fp.sub RNE x13 x4)) (fp.sub RNE (fp.add RNE x13 x8) (fp.neg x14))))
(assert (fp.leq (fp.neg (fp.div RNE x9 x1)) (fp.div RNE (fp.div RNE x11 x3) (fp.mul RNE x11 x7))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x1 x0) (fp.sub RNE x0 x2)) (fp.neg (fp.sub RNE x3 x12))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x14 x12) (fp.div RNE x6 x2)) (fp.neg (fp.mul RNE x1 x6))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x0 x12) (fp.add RNE x8 x7)) (fp.neg (fp.mul RNE x8 x1))))
(assert (fp.eq (fp.neg (fp.sub RNE x2 x13)) (fp.sub RNE (fp.div RNE x13 x10) (fp.div RNE x14 x11))))
(assert (fp.gt (fp.add RNE (fp.neg x14) (fp.sub RNE x3 x3)) (fp.neg (fp.mul RNE x4 x0))))
(assert (fp.geq (fp.div RNE (fp.add RNE x10 x0) (fp.sub RNE x2 x9)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x2 x14))))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x9)) (fp.div RNE (fp.div RNE x0 x5) (fp.sub RNE x11 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x2)) (fp.sub RNE (fp.neg x2) (fp.div RNE x0 x10))))
(check-sat)
