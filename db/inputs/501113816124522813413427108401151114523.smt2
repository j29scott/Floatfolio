(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.neg x3) (fp.neg x4)) (fp.add RNE (fp.mul RNE x1 x4) (fp.div RNE x19 x15))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x1 x2) (fp.neg x10)) (fp.sub RNE (fp.div RNE x0 x14) (fp.add RNE x19 x0))))
(assert (fp.lt (fp.neg (fp.neg x4)) (fp.div RNE (fp.div RNE x12 x18) (fp.neg x16))))
(assert (fp.eq (fp.div RNE (fp.div RNE x6 x21) (fp.sub RNE x9 x18)) (fp.sub RNE (fp.add RNE x6 x1) (fp.mul RNE x12 x16))))
(assert (fp.leq (fp.neg (fp.sub RNE x18 x9)) (fp.div RNE (fp.mul RNE x17 x11) (fp.add RNE x5 x2))))
(assert (fp.geq (fp.div RNE (fp.div RNE x4 x9) (fp.mul RNE x4 x17)) (fp.sub RNE (fp.div RNE x11 x10) (fp.neg x19))))
(assert (fp.lt (fp.add RNE (fp.add RNE x9 x1) (fp.sub RNE x16 x12)) (fp.sub RNE (fp.div RNE x20 x7) (fp.add RNE x14 x14))))
(assert (fp.geq (fp.neg (fp.neg x5)) (fp.sub RNE (fp.div RNE x5 x5) (fp.sub RNE x22 x8))))
(assert (fp.gt (fp.add RNE (fp.div RNE x22 x11) (fp.mul RNE x22 x1)) (fp.div RNE (fp.mul RNE x16 x6) (fp.add RNE x12 x12))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x13 x18) (fp.add RNE x19 x15)) (fp.add RNE (fp.sub RNE x13 x3) (fp.add RNE x21 x3))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x21 x22) (fp.sub RNE x18 x6)) (fp.mul RNE (fp.add RNE x20 x11) (fp.neg x20))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x11 x20) (fp.neg x8)) (fp.div RNE (fp.mul RNE x14 x20) (fp.neg x18))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x11 x21) (fp.neg x17)) (fp.div RNE (fp.sub RNE x8 x17) (fp.mul RNE x8 x5))))
(assert (fp.leq (fp.sub RNE (fp.neg x17) (fp.neg x16)) (fp.add RNE (fp.sub RNE x19 x17) (fp.neg x22))))
(assert (fp.eq (fp.add RNE (fp.div RNE x20 x2) (fp.sub RNE x4 x12)) (fp.mul RNE (fp.mul RNE x0 x19) (fp.neg x5))))
(assert (fp.eq (fp.div RNE (fp.div RNE x5 x2) (fp.div RNE x20 x9)) (fp.mul RNE (fp.neg x11) (fp.neg x13))))
(assert (fp.lt (fp.neg (fp.sub RNE x7 x14)) (fp.neg (fp.mul RNE x1 x11))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x16 x1) (fp.sub RNE x5 x18)) (fp.sub RNE (fp.add RNE x21 x6) (fp.sub RNE x20 x16))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x10 x8) (fp.mul RNE x15 x5)) (fp.mul RNE (fp.mul RNE x22 x12) (fp.div RNE x15 x17))))
(check-sat)
