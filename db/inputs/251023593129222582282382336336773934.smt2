(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x16 x1)) (fp.div RNE (fp.sub RNE x19 x12) (fp.mul RNE x12 x20))) (fp.add RNE (fp.sub RNE (fp.neg x21) (fp.div RNE x17 x17)) (fp.sub RNE (fp.mul RNE x2 x3) (fp.sub RNE x4 x15)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.add RNE x4 x6) (fp.sub RNE x6 x19)) (fp.sub RNE (fp.mul RNE x8 x4) (fp.mul RNE x7 x3))) (fp.add RNE (fp.mul RNE (fp.div RNE x1 x8) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x12 x9) (fp.div RNE x3 x17))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x13 x22) (fp.mul RNE x1 x9)) (fp.neg (fp.mul RNE x13 x5))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x4) (fp.neg x11)) (fp.add RNE (fp.mul RNE x9 x15) (fp.add RNE x15 x19)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.mul RNE x17 x20) (fp.div RNE x8 x11)) (fp.neg (fp.sub RNE x22 x19))) (fp.sub RNE (fp.div RNE (fp.add RNE x14 x1) (fp.neg x10)) (fp.sub RNE (fp.neg x2) (fp.sub RNE x4 x22))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x17) (fp.add RNE x18 x23)) (fp.mul RNE (fp.sub RNE x15 x11) (fp.sub RNE x8 x9))) (fp.neg (fp.div RNE (fp.neg x15) (fp.sub RNE x16 x15)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x20 x10) (fp.mul RNE x6 x17)) (fp.add RNE (fp.sub RNE x0 x0) (fp.add RNE x20 x16))) (fp.add RNE (fp.sub RNE (fp.mul RNE x18 x16) (fp.add RNE x3 x15)) (fp.sub RNE (fp.sub RNE x3 x16) (fp.div RNE x17 x9))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x20 x23) (fp.neg x16)) (fp.neg (fp.sub RNE x11 x4))) (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.neg x18)) (fp.neg (fp.div RNE x10 x23)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.add RNE x17 x19) (fp.mul RNE x19 x4)) (fp.neg (fp.sub RNE x13 x20))) (fp.sub RNE (fp.add RNE (fp.neg x20) (fp.neg x12)) (fp.sub RNE (fp.div RNE x3 x6) (fp.sub RNE x20 x12))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x9) (fp.div RNE x18 x18)) (fp.neg (fp.sub RNE x24 x2))) (fp.div RNE (fp.sub RNE (fp.neg x9) (fp.div RNE x21 x10)) (fp.mul RNE (fp.mul RNE x7 x9) (fp.neg x16)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x24 x19) (fp.neg x17)) (fp.sub RNE (fp.neg x4) (fp.add RNE x2 x6))) (fp.sub RNE (fp.sub RNE (fp.div RNE x21 x20) (fp.div RNE x7 x0)) (fp.neg (fp.add RNE x19 x1))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE (fp.add RNE x1 x2) (fp.sub RNE x16 x11))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x18 x20) (fp.neg x16)) (fp.sub RNE (fp.neg x16) (fp.sub RNE x3 x10)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.div RNE x9 x10) (fp.add RNE x22 x6)) (fp.mul RNE (fp.add RNE x10 x23) (fp.sub RNE x23 x24))) (fp.neg (fp.add RNE (fp.sub RNE x15 x1) (fp.add RNE x10 x14))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE (fp.div RNE x6 x5) (fp.div RNE x19 x10))) (fp.neg (fp.neg (fp.neg x1)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.add RNE x12 x21) (fp.div RNE x22 x9)) (fp.neg (fp.neg x21))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE (fp.mul RNE x2 x10) (fp.sub RNE x16 x19))) (fp.mul RNE (fp.add RNE (fp.neg x10) (fp.neg x7)) (fp.mul RNE (fp.add RNE x10 x4) (fp.mul RNE x14 x16)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.neg x11) (fp.mul RNE x0 x16))) (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x1) (fp.add RNE x3 x23)) (fp.mul RNE (fp.div RNE x5 x22) (fp.neg x14))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x8 x6) (fp.div RNE x24 x13)) (fp.neg (fp.div RNE x1 x23))) (fp.sub RNE (fp.add RNE (fp.sub RNE x6 x13) (fp.div RNE x15 x21)) (fp.add RNE (fp.div RNE x20 x8) (fp.neg x8)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.add RNE x1 x11)) (fp.div RNE (fp.div RNE x2 x6) (fp.neg x22))) (fp.div RNE (fp.sub RNE (fp.add RNE x4 x18) (fp.mul RNE x9 x15)) (fp.div RNE (fp.div RNE x24 x4) (fp.add RNE x16 x19))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE (fp.div RNE x24 x10) (fp.div RNE x1 x23)) (fp.add RNE (fp.mul RNE x21 x24) (fp.neg x14)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x12) (fp.div RNE x9 x3)) (fp.add RNE (fp.div RNE x8 x2) (fp.div RNE x13 x6))) (fp.add RNE (fp.neg (fp.mul RNE x23 x13)) (fp.sub RNE (fp.sub RNE x13 x21) (fp.sub RNE x4 x19))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE (fp.mul RNE x7 x7) (fp.mul RNE x23 x13)) (fp.neg (fp.div RNE x16 x12))) (fp.add RNE (fp.mul RNE (fp.mul RNE x17 x6) (fp.mul RNE x8 x20)) (fp.sub RNE (fp.sub RNE x1 x23) (fp.mul RNE x12 x10)))) (fp.neg (fp.neg (fp.add RNE (fp.neg x8) (fp.neg x20))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x20)) (fp.sub RNE (fp.sub RNE x15 x13) (fp.neg x22))) (fp.neg (fp.add RNE (fp.neg x19) (fp.add RNE x7 x2)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.neg x2)) (fp.div RNE (fp.mul RNE x13 x6) (fp.div RNE x22 x16))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x0) (fp.mul RNE x10 x5)) (fp.add RNE (fp.sub RNE x3 x15) (fp.sub RNE x15 x2))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x15 x24) (fp.div RNE x16 x12)) (fp.sub RNE (fp.div RNE x10 x14) (fp.neg x18)))) (fp.add RNE (fp.div RNE (fp.neg (fp.mul RNE x18 x22)) (fp.sub RNE (fp.sub RNE x9 x1) (fp.div RNE x1 x15))) (fp.add RNE (fp.add RNE (fp.sub RNE x11 x19) (fp.sub RNE x12 x22)) (fp.add RNE (fp.sub RNE x22 x5) (fp.add RNE x17 x15))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.neg (fp.sub RNE x11 x20)) (fp.mul RNE (fp.add RNE x13 x19) (fp.mul RNE x10 x0))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x10) (fp.sub RNE x10 x21)) (fp.neg (fp.div RNE x10 x21)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x5)) (fp.mul RNE (fp.sub RNE x0 x1) (fp.div RNE x12 x13))) (fp.neg (fp.sub RNE (fp.div RNE x13 x7) (fp.neg x4))))))
(check-sat)
