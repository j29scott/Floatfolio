(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x13 x5) (fp.add RNE x6 x1)))
(assert (fp.leq (fp.sub RNE x13 x11) (fp.mul RNE x8 x0)))
(assert (fp.eq (fp.div RNE x8 x6) (fp.sub RNE x3 x3)))
(assert (fp.gt (fp.add RNE x12 x13) (fp.mul RNE x2 x4)))
(assert (fp.leq (fp.add RNE x3 x12) (fp.sub RNE x11 x1)))
(assert (fp.geq (fp.sub RNE x8 x4) (fp.sub RNE x2 x7)))
(assert (fp.lt (fp.add RNE x9 x1) (fp.mul RNE x10 x11)))
(assert (fp.lt (fp.add RNE x0 x8) (fp.add RNE x10 x1)))
(assert (fp.eq (fp.sub RNE x13 x11) (fp.sub RNE x11 x7)))
(assert (fp.geq (fp.div RNE x4 x3) (fp.add RNE x2 x1)))
(assert (fp.gt (fp.mul RNE x0 x9) (fp.div RNE x10 x5)))
(assert (fp.geq (fp.div RNE x4 x7) (fp.add RNE x4 x6)))
(assert (fp.leq (fp.sub RNE x3 x5) (fp.sub RNE x8 x10)))
(check-sat)
