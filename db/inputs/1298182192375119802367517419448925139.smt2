(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.neg (fp.neg x1)) (fp.mul RNE (fp.add RNE x0 x3) (fp.sub RNE x7 x9))) (fp.neg (fp.mul RNE (fp.neg x15) (fp.mul RNE x4 x9)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.neg x1) (fp.mul RNE x2 x7))) (fp.mul RNE (fp.mul RNE (fp.add RNE x16 x9) (fp.add RNE x5 x10)) (fp.mul RNE (fp.div RNE x8 x4) (fp.add RNE x4 x15)))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x13 x2))) (fp.div RNE (fp.mul RNE (fp.div RNE x3 x0) (fp.add RNE x0 x0)) (fp.neg (fp.add RNE x9 x16)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x4 x18)) (fp.div RNE (fp.neg x4) (fp.neg x0))) (fp.add RNE (fp.neg (fp.sub RNE x4 x5)) (fp.add RNE (fp.neg x14) (fp.add RNE x5 x16)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x17 x1)) (fp.div RNE (fp.sub RNE x8 x18) (fp.div RNE x4 x10))) (fp.neg (fp.neg (fp.neg x9)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.div RNE x1 x10) (fp.neg x1)) (fp.add RNE (fp.neg x14) (fp.add RNE x8 x17))) (fp.add RNE (fp.add RNE (fp.neg x4) (fp.add RNE x7 x14)) (fp.neg (fp.add RNE x15 x6)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x17 x15) (fp.div RNE x3 x9)) (fp.neg (fp.sub RNE x17 x16))) (fp.neg (fp.div RNE (fp.div RNE x18 x16) (fp.sub RNE x17 x9)))))
(check-sat)
