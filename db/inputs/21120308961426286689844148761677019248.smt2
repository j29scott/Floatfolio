(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE x8 x0) (fp.sub RNE x0 x2)))
(assert (fp.leq (fp.neg x2) (fp.add RNE x1 x11)))
(assert (fp.eq (fp.add RNE x5 x9) (fp.div RNE x4 x10)))
(assert (fp.eq (fp.neg x4) (fp.sub RNE x7 x2)))
(assert (fp.geq (fp.neg x1) (fp.div RNE x11 x0)))
(assert (fp.lt (fp.add RNE x4 x9) (fp.div RNE x0 x4)))
(assert (fp.leq (fp.neg x2) (fp.div RNE x7 x1)))
(assert (fp.lt (fp.add RNE x1 x8) (fp.add RNE x7 x4)))
(assert (fp.eq (fp.neg x8) (fp.mul RNE x0 x10)))
(assert (fp.eq (fp.add RNE x0 x10) (fp.neg x2)))
(assert (fp.geq (fp.neg x8) (fp.mul RNE x2 x2)))
(assert (fp.geq (fp.div RNE x2 x4) (fp.neg x10)))
(check-sat)
