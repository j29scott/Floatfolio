(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x8 x19) (fp.sub RNE x15 x11)) (fp.div RNE (fp.sub RNE x4 x19) (fp.neg x1))) (fp.div RNE (fp.neg (fp.add RNE x16 x10)) (fp.neg (fp.sub RNE x15 x15)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x4) (fp.div RNE x19 x16)) (fp.mul RNE (fp.neg x13) (fp.div RNE x12 x13))) (fp.add RNE (fp.div RNE (fp.neg x17) (fp.add RNE x14 x6)) (fp.mul RNE (fp.add RNE x8 x15) (fp.add RNE x15 x2)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE x17 x1) (fp.sub RNE x5 x14)) (fp.sub RNE (fp.neg x18) (fp.neg x6))) (fp.sub RNE (fp.sub RNE (fp.div RNE x12 x3) (fp.mul RNE x10 x2)) (fp.mul RNE (fp.neg x2) (fp.add RNE x15 x2)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE x1 x7) (fp.add RNE x2 x9)) (fp.neg (fp.neg x6))) (fp.div RNE (fp.mul RNE (fp.div RNE x12 x12) (fp.add RNE x10 x8)) (fp.add RNE (fp.sub RNE x6 x1) (fp.mul RNE x16 x13)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.add RNE x1 x3) (fp.sub RNE x15 x12)) (fp.mul RNE (fp.neg x14) (fp.sub RNE x3 x8))) (fp.neg (fp.sub RNE (fp.div RNE x5 x13) (fp.mul RNE x3 x4)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.add RNE x18 x9)) (fp.mul RNE (fp.neg x6) (fp.neg x0))) (fp.add RNE (fp.neg (fp.add RNE x12 x10)) (fp.add RNE (fp.div RNE x12 x0) (fp.div RNE x16 x4)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE x2 x0) (fp.sub RNE x7 x12)) (fp.div RNE (fp.neg x0) (fp.neg x4))) (fp.add RNE (fp.sub RNE (fp.div RNE x8 x10) (fp.mul RNE x18 x17)) (fp.add RNE (fp.sub RNE x9 x13) (fp.mul RNE x8 x16)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x5) (fp.neg x10)) (fp.sub RNE (fp.sub RNE x19 x4) (fp.add RNE x12 x9))) (fp.mul RNE (fp.neg (fp.neg x1)) (fp.add RNE (fp.neg x18) (fp.sub RNE x4 x10)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE x16 x4) (fp.div RNE x2 x1)) (fp.add RNE (fp.sub RNE x7 x8) (fp.add RNE x5 x1))) (fp.neg (fp.add RNE (fp.sub RNE x8 x12) (fp.mul RNE x17 x6)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x2 x14) (fp.add RNE x14 x18))) (fp.add RNE (fp.mul RNE (fp.sub RNE x19 x10) (fp.div RNE x5 x14)) (fp.mul RNE (fp.sub RNE x6 x19) (fp.neg x8)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x4 x16) (fp.sub RNE x13 x9)) (fp.neg (fp.mul RNE x12 x10))) (fp.add RNE (fp.div RNE (fp.neg x15) (fp.sub RNE x16 x5)) (fp.neg (fp.add RNE x7 x9)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x8 x13) (fp.mul RNE x8 x0)) (fp.mul RNE (fp.neg x8) (fp.div RNE x7 x13))) (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.div RNE x18 x7)) (fp.mul RNE (fp.add RNE x11 x19) (fp.sub RNE x10 x6)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.add RNE x13 x18)) (fp.neg (fp.div RNE x11 x17))) (fp.neg (fp.neg (fp.mul RNE x6 x16)))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE x0 x17))) (fp.mul RNE (fp.neg (fp.add RNE x3 x13)) (fp.mul RNE (fp.mul RNE x3 x4) (fp.sub RNE x7 x15)))))
(check-sat)
