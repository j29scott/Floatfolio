(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x6 x1) (fp.neg x8)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x4 x11))) (fp.add RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x7 x8)) (fp.div RNE (fp.mul RNE x7 x3) (fp.add RNE x8 x8)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.add RNE x0 x6) (fp.sub RNE x11 x8)) (fp.sub RNE (fp.neg x8) (fp.sub RNE x1 x6))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x6 x8) (fp.neg x4)) (fp.neg (fp.div RNE x1 x5))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE x3 x12)) (fp.div RNE (fp.neg x9) (fp.neg x12))) (fp.add RNE (fp.add RNE (fp.add RNE x1 x10) (fp.add RNE x2 x1)) (fp.sub RNE (fp.div RNE x8 x11) (fp.sub RNE x11 x9)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x0) (fp.mul RNE x9 x8)) (fp.neg (fp.div RNE x10 x3))) (fp.add RNE (fp.add RNE (fp.sub RNE x9 x3) (fp.mul RNE x2 x1)) (fp.div RNE (fp.neg x4) (fp.add RNE x8 x9))))))
(check-sat)
