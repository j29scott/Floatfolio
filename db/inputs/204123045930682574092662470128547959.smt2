(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x7 x3) (fp.div RNE x9 x0)) (fp.div RNE (fp.div RNE x7 x6) (fp.add RNE x4 x3))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x9 x3) (fp.div RNE x0 x0)) (fp.add RNE (fp.neg x0) (fp.div RNE x7 x4))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x4) (fp.mul RNE x3 x8)) (fp.add RNE (fp.sub RNE x8 x8) (fp.div RNE x1 x7))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x3 x0) (fp.add RNE x4 x0)) (fp.div RNE (fp.neg x8) (fp.mul RNE x3 x6))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x3 x6) (fp.div RNE x6 x2)) (fp.mul RNE (fp.sub RNE x9 x3) (fp.neg x5))))
(assert (fp.leq (fp.neg (fp.div RNE x5 x6)) (fp.neg (fp.sub RNE x2 x4))))
(assert (fp.gt (fp.sub RNE (fp.neg x8) (fp.neg x4)) (fp.div RNE (fp.sub RNE x3 x6) (fp.div RNE x9 x2))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x6 x5) (fp.mul RNE x2 x1)) (fp.sub RNE (fp.mul RNE x7 x8) (fp.sub RNE x4 x4))))
(check-sat)
