(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x8 x17)) (fp.neg (fp.mul RNE x0 x1))) (fp.neg (fp.add RNE (fp.mul RNE x9 x7) (fp.div RNE x0 x18)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x12 x10) (fp.neg x12))) (fp.sub RNE (fp.sub RNE (fp.neg x13) (fp.div RNE x14 x5)) (fp.sub RNE (fp.neg x9) (fp.div RNE x17 x3)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.div RNE x13 x11) (fp.mul RNE x2 x12)) (fp.mul RNE (fp.mul RNE x7 x13) (fp.sub RNE x14 x18))) (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.neg x15)) (fp.add RNE (fp.neg x13) (fp.mul RNE x16 x14)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x11) (fp.neg x5)) (fp.neg (fp.mul RNE x11 x5))) (fp.neg (fp.add RNE (fp.add RNE x6 x4) (fp.sub RNE x18 x14)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x7 x16)) (fp.mul RNE (fp.sub RNE x5 x9) (fp.div RNE x12 x17))) (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x8) (fp.mul RNE x0 x16)) (fp.mul RNE (fp.sub RNE x1 x1) (fp.neg x1)))))
(check-sat)
