(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE x4 x11) (fp.mul RNE x10 x0)))
(assert (fp.eq (fp.add RNE x4 x3) (fp.div RNE x11 x9)))
(assert (fp.lt (fp.mul RNE x1 x11) (fp.neg x1)))
(assert (fp.leq (fp.sub RNE x3 x5) (fp.div RNE x1 x11)))
(assert (fp.geq (fp.add RNE x1 x9) (fp.div RNE x1 x7)))
(assert (fp.eq (fp.div RNE x1 x0) (fp.mul RNE x6 x3)))
(assert (fp.gt (fp.div RNE x9 x3) (fp.mul RNE x1 x10)))
(assert (fp.geq (fp.mul RNE x11 x8) (fp.div RNE x2 x1)))
(assert (fp.eq (fp.sub RNE x9 x3) (fp.div RNE x8 x1)))
(assert (fp.gt (fp.add RNE x10 x3) (fp.neg x11)))
(assert (fp.leq (fp.add RNE x2 x0) (fp.add RNE x9 x7)))
(assert (fp.geq (fp.sub RNE x11 x5) (fp.neg x10)))
(assert (fp.lt (fp.div RNE x2 x6) (fp.sub RNE x10 x8)))
(assert (fp.leq (fp.mul RNE x0 x0) (fp.add RNE x10 x5)))
(assert (fp.lt (fp.neg x3) (fp.mul RNE x10 x2)))
(assert (fp.gt (fp.neg x11) (fp.neg x1)))
(check-sat)
