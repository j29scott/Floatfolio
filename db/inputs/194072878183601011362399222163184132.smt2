(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE x0 x11) (fp.div RNE x9 x14)) (fp.sub RNE (fp.add RNE x4 x14) (fp.div RNE x3 x2))) (fp.add RNE (fp.neg (fp.sub RNE x4 x8)) (fp.mul RNE (fp.div RNE x12 x13) (fp.sub RNE x15 x17)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x2 x11) (fp.add RNE x0 x4)) (fp.add RNE (fp.neg x2) (fp.div RNE x11 x10))) (fp.div RNE (fp.sub RNE (fp.div RNE x9 x11) (fp.div RNE x13 x0)) (fp.sub RNE (fp.mul RNE x16 x3) (fp.sub RNE x16 x4)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x1) (fp.neg x7)) (fp.neg (fp.div RNE x7 x10))) (fp.div RNE (fp.mul RNE (fp.neg x7) (fp.neg x11)) (fp.div RNE (fp.div RNE x9 x11) (fp.mul RNE x10 x17)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg x2) (fp.div RNE x13 x13))) (fp.neg (fp.neg (fp.add RNE x15 x4)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x2) (fp.add RNE x8 x16)) (fp.sub RNE (fp.sub RNE x0 x9) (fp.sub RNE x10 x16))) (fp.div RNE (fp.mul RNE (fp.div RNE x5 x16) (fp.mul RNE x3 x17)) (fp.sub RNE (fp.mul RNE x17 x12) (fp.sub RNE x4 x10)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE x16 x10) (fp.neg x2))) (fp.neg (fp.mul RNE (fp.mul RNE x13 x12) (fp.neg x13)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x14))) (fp.mul RNE (fp.add RNE (fp.neg x11) (fp.add RNE x13 x14)) (fp.sub RNE (fp.sub RNE x15 x10) (fp.add RNE x10 x9)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.add RNE x1 x6)) (fp.neg (fp.div RNE x14 x17))) (fp.sub RNE (fp.div RNE (fp.add RNE x16 x8) (fp.neg x16)) (fp.sub RNE (fp.neg x16) (fp.div RNE x13 x4)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.sub RNE x15 x3)) (fp.add RNE (fp.sub RNE x15 x4) (fp.mul RNE x6 x6))) (fp.add RNE (fp.div RNE (fp.div RNE x0 x9) (fp.div RNE x10 x3)) (fp.mul RNE (fp.div RNE x10 x4) (fp.neg x13)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x3)) (fp.neg (fp.add RNE x14 x17))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x9) (fp.sub RNE x15 x17)) (fp.mul RNE (fp.neg x5) (fp.add RNE x8 x16)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE x8 x1)) (fp.add RNE (fp.neg x13) (fp.sub RNE x15 x13))) (fp.mul RNE (fp.sub RNE (fp.div RNE x5 x5) (fp.mul RNE x16 x10)) (fp.neg (fp.add RNE x5 x14)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg x2)) (fp.add RNE (fp.add RNE x0 x0) (fp.neg x6))) (fp.neg (fp.sub RNE (fp.sub RNE x11 x0) (fp.neg x2)))))
(check-sat)
