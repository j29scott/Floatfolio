(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.div RNE x4 x7) (fp.div RNE x5 x1)) (fp.add RNE (fp.add RNE x8 x10) (fp.neg x10))) (fp.neg (fp.sub RNE (fp.mul RNE x17 x7) (fp.add RNE x8 x13)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.sub RNE x4 x6) (fp.mul RNE x3 x4)) (fp.div RNE (fp.div RNE x13 x13) (fp.div RNE x12 x17))) (fp.neg (fp.add RNE (fp.div RNE x19 x9) (fp.mul RNE x0 x7))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.sub RNE x18 x9)) (fp.mul RNE (fp.sub RNE x3 x2) (fp.div RNE x8 x10))) (fp.add RNE (fp.div RNE (fp.mul RNE x0 x9) (fp.neg x16)) (fp.add RNE (fp.neg x9) (fp.div RNE x15 x17)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.neg x4) (fp.div RNE x19 x11)) (fp.div RNE (fp.neg x13) (fp.add RNE x2 x10))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.div RNE (fp.sub RNE x5 x13) (fp.neg x12))) (fp.neg (fp.neg (fp.add RNE x3 x2)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x8 x15)) (fp.sub RNE (fp.sub RNE x6 x11) (fp.neg x19))) (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x14) (fp.sub RNE x18 x17)) (fp.sub RNE (fp.mul RNE x8 x17) (fp.mul RNE x9 x11))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.neg x4) (fp.add RNE x4 x0)) (fp.sub RNE (fp.sub RNE x18 x8) (fp.div RNE x6 x10))) (fp.div RNE (fp.sub RNE (fp.sub RNE x5 x2) (fp.sub RNE x8 x3)) (fp.div RNE (fp.add RNE x0 x8) (fp.mul RNE x9 x12)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.neg x12)) (fp.div RNE (fp.div RNE x16 x17) (fp.sub RNE x2 x3))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x5) (fp.neg x19)) (fp.add RNE (fp.neg x15) (fp.sub RNE x19 x10))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE (fp.sub RNE x13 x11) (fp.div RNE x16 x6)) (fp.mul RNE (fp.sub RNE x2 x9) (fp.neg x1))) (fp.div RNE (fp.neg (fp.sub RNE x16 x10)) (fp.div RNE (fp.mul RNE x1 x6) (fp.div RNE x10 x11)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.div RNE x19 x8) (fp.neg x10))) (fp.sub RNE (fp.div RNE (fp.neg x19) (fp.div RNE x4 x3)) (fp.sub RNE (fp.add RNE x14 x19) (fp.sub RNE x9 x8))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE (fp.div RNE x10 x2) (fp.sub RNE x12 x2))) (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x7) (fp.mul RNE x12 x7)) (fp.div RNE (fp.neg x7) (fp.mul RNE x15 x6)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x11 x18)) (fp.div RNE (fp.div RNE x16 x5) (fp.sub RNE x0 x6))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.neg x15) (fp.sub RNE x18 x2)) (fp.mul RNE (fp.sub RNE x11 x16) (fp.neg x9))) (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x8) (fp.neg x4)) (fp.sub RNE (fp.sub RNE x17 x15) (fp.mul RNE x4 x14)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x7 x4) (fp.div RNE x3 x18)) (fp.mul RNE (fp.div RNE x14 x11) (fp.add RNE x15 x12))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x17 x7) (fp.add RNE x11 x18)) (fp.mul RNE (fp.add RNE x10 x4) (fp.neg x11))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.neg (fp.neg x19)) (fp.mul RNE (fp.div RNE x13 x0) (fp.mul RNE x14 x19))) (fp.div RNE (fp.add RNE (fp.div RNE x18 x12) (fp.neg x18)) (fp.div RNE (fp.sub RNE x15 x8) (fp.div RNE x1 x6)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x16 x5) (fp.sub RNE x13 x12)) (fp.div RNE (fp.neg x16) (fp.sub RNE x15 x14))) (fp.div RNE (fp.sub RNE (fp.neg x19) (fp.add RNE x10 x4)) (fp.add RNE (fp.div RNE x1 x5) (fp.sub RNE x15 x14))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x13 x19) (fp.neg x1)) (fp.div RNE (fp.neg x3) (fp.div RNE x3 x2))) (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x7) (fp.sub RNE x14 x5)) (fp.sub RNE (fp.sub RNE x0 x5) (fp.mul RNE x1 x0)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.sub RNE x0 x7) (fp.div RNE x2 x3)) (fp.sub RNE (fp.sub RNE x17 x14) (fp.sub RNE x14 x2))) (fp.add RNE (fp.add RNE (fp.div RNE x13 x13) (fp.sub RNE x10 x0)) (fp.sub RNE (fp.mul RNE x13 x13) (fp.mul RNE x17 x8))))))
(check-sat)
