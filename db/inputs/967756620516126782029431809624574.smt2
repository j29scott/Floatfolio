(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.neg x24) (fp.neg x1)) (fp.div RNE (fp.add RNE x14 x6) (fp.add RNE x12 x0))) (fp.sub RNE (fp.div RNE (fp.neg x10) (fp.neg x2)) (fp.sub RNE (fp.neg x19) (fp.div RNE x10 x8)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE x1 x7) (fp.mul RNE x13 x5)) (fp.div RNE (fp.mul RNE x18 x24) (fp.neg x20))) (fp.add RNE (fp.neg (fp.mul RNE x18 x18)) (fp.add RNE (fp.add RNE x6 x4) (fp.mul RNE x24 x16)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg x9)) (fp.neg (fp.sub RNE x24 x7))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x23 x3) (fp.div RNE x14 x2)) (fp.neg (fp.add RNE x3 x9)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x7 x23)) (fp.div RNE (fp.sub RNE x1 x20) (fp.mul RNE x18 x7))) (fp.sub RNE (fp.neg (fp.sub RNE x10 x4)) (fp.sub RNE (fp.neg x21) (fp.sub RNE x18 x5)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.mul RNE x0 x11) (fp.neg x6)) (fp.neg (fp.div RNE x22 x3))) (fp.add RNE (fp.mul RNE (fp.div RNE x22 x17) (fp.sub RNE x6 x11)) (fp.div RNE (fp.sub RNE x11 x24) (fp.mul RNE x14 x23)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE x24 x21) (fp.mul RNE x7 x15)) (fp.add RNE (fp.sub RNE x23 x3) (fp.add RNE x6 x14))) (fp.neg (fp.mul RNE (fp.neg x20) (fp.div RNE x8 x18)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.div RNE x16 x12) (fp.div RNE x9 x15)) (fp.add RNE (fp.neg x20) (fp.div RNE x10 x7))) (fp.div RNE (fp.div RNE (fp.mul RNE x12 x11) (fp.div RNE x5 x19)) (fp.add RNE (fp.sub RNE x5 x19) (fp.div RNE x8 x23)))))
(check-sat)
