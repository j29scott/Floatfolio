(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.add RNE x2 x2) (fp.neg x8)) (fp.neg (fp.mul RNE x11 x4))) (fp.neg (fp.add RNE (fp.sub RNE x3 x18) (fp.neg x12)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x3) (fp.mul RNE x5 x9)) (fp.sub RNE (fp.add RNE x14 x9) (fp.add RNE x3 x13))) (fp.mul RNE (fp.neg (fp.sub RNE x21 x7)) (fp.mul RNE (fp.neg x22) (fp.add RNE x19 x18))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.neg (fp.div RNE x17 x22)) (fp.add RNE (fp.mul RNE x13 x17) (fp.div RNE x0 x19))) (fp.neg (fp.add RNE (fp.neg x5) (fp.sub RNE x6 x18)))) (fp.div RNE (fp.neg (fp.div RNE (fp.mul RNE x1 x17) (fp.sub RNE x1 x19))) (fp.neg (fp.add RNE (fp.neg x5) (fp.div RNE x3 x17))))))
(check-sat)
