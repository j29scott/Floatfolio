(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x1 x10) (fp.neg x16)) (fp.mul RNE (fp.add RNE x14 x13) (fp.div RNE x8 x12))))
(assert (fp.gt (fp.div RNE (fp.add RNE x1 x1) (fp.neg x20)) (fp.neg (fp.mul RNE x7 x11))))
(assert (fp.leq (fp.sub RNE (fp.neg x12) (fp.div RNE x8 x8)) (fp.neg (fp.div RNE x12 x9))))
(assert (fp.leq (fp.neg (fp.mul RNE x2 x4)) (fp.div RNE (fp.neg x16) (fp.neg x10))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x15) (fp.sub RNE x7 x6)) (fp.sub RNE (fp.add RNE x5 x8) (fp.add RNE x15 x9))))
(assert (fp.eq (fp.add RNE (fp.div RNE x17 x18) (fp.sub RNE x11 x0)) (fp.div RNE (fp.div RNE x2 x19) (fp.add RNE x7 x17))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x0 x20) (fp.neg x16)) (fp.add RNE (fp.mul RNE x11 x4) (fp.add RNE x7 x15))))
(assert (fp.lt (fp.neg (fp.neg x4)) (fp.sub RNE (fp.add RNE x0 x4) (fp.neg x13))))
(assert (fp.geq (fp.div RNE (fp.div RNE x5 x2) (fp.sub RNE x10 x20)) (fp.sub RNE (fp.sub RNE x12 x7) (fp.mul RNE x15 x5))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x17 x12) (fp.mul RNE x5 x15)) (fp.sub RNE (fp.sub RNE x1 x20) (fp.neg x2))))
(assert (fp.lt (fp.mul RNE (fp.neg x0) (fp.sub RNE x16 x12)) (fp.mul RNE (fp.div RNE x9 x1) (fp.sub RNE x16 x9))))
(check-sat)
