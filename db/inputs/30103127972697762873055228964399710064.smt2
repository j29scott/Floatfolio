(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x8) (fp.add RNE x4 x1)))
(assert (fp.geq (fp.add RNE x1 x15) (fp.neg x11)))
(assert (fp.lt (fp.add RNE x10 x8) (fp.mul RNE x15 x11)))
(assert (fp.geq (fp.sub RNE x6 x13) (fp.div RNE x14 x11)))
(assert (fp.lt (fp.add RNE x1 x3) (fp.div RNE x12 x9)))
(assert (fp.leq (fp.add RNE x5 x12) (fp.sub RNE x4 x8)))
(assert (fp.geq (fp.mul RNE x11 x0) (fp.sub RNE x3 x4)))
(assert (fp.geq (fp.mul RNE x5 x14) (fp.neg x8)))
(assert (fp.leq (fp.add RNE x4 x10) (fp.neg x7)))
(check-sat)
