(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.neg x11)) (fp.sub RNE (fp.neg x4) (fp.add RNE x6 x1))) (fp.div RNE (fp.mul RNE (fp.add RNE x10 x9) (fp.mul RNE x8 x7)) (fp.sub RNE (fp.mul RNE x5 x10) (fp.neg x0)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.add RNE x1 x11) (fp.add RNE x0 x3)) (fp.sub RNE (fp.add RNE x3 x3) (fp.div RNE x7 x9))) (fp.div RNE (fp.sub RNE (fp.sub RNE x10 x0) (fp.mul RNE x6 x3)) (fp.sub RNE (fp.div RNE x11 x8) (fp.div RNE x10 x9))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.neg (fp.div RNE x7 x10)) (fp.div RNE (fp.div RNE x9 x8) (fp.sub RNE x11 x11))) (fp.sub RNE (fp.neg (fp.neg x11)) (fp.mul RNE (fp.mul RNE x6 x7) (fp.neg x10)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x8) (fp.sub RNE x6 x7)) (fp.add RNE (fp.div RNE x7 x3) (fp.mul RNE x0 x5))) (fp.mul RNE (fp.div RNE (fp.neg x10) (fp.neg x2)) (fp.sub RNE (fp.sub RNE x9 x10) (fp.mul RNE x2 x0))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x10 x11) (fp.neg x8)) (fp.neg (fp.neg x11))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x3) (fp.neg x11)) (fp.div RNE (fp.sub RNE x3 x3) (fp.add RNE x8 x11)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.sub RNE x3 x0)) (fp.sub RNE (fp.div RNE x7 x6) (fp.add RNE x3 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x6 x6) (fp.mul RNE x3 x7)) (fp.div RNE (fp.neg x3) (fp.div RNE x1 x7))))))
(check-sat)
