(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.div RNE x3 x2)) (fp.mul RNE (fp.div RNE x11 x4) (fp.neg x1))))
(assert (fp.geq (fp.neg (fp.mul RNE x4 x9)) (fp.mul RNE (fp.sub RNE x1 x1) (fp.neg x4))))
(assert (fp.geq (fp.neg (fp.add RNE x8 x9)) (fp.add RNE (fp.add RNE x1 x6) (fp.div RNE x0 x1))))
(assert (fp.geq (fp.neg (fp.div RNE x6 x8)) (fp.neg (fp.neg x5))))
(assert (fp.leq (fp.add RNE (fp.neg x2) (fp.div RNE x3 x8)) (fp.mul RNE (fp.mul RNE x3 x0) (fp.add RNE x1 x7))))
(assert (fp.lt (fp.neg (fp.mul RNE x5 x3)) (fp.div RNE (fp.add RNE x3 x7) (fp.add RNE x4 x9))))
(check-sat)
