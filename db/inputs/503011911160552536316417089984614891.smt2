(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.mul RNE x6 x5)) (fp.mul RNE (fp.sub RNE x13 x10) (fp.div RNE x5 x7))) (fp.neg (fp.div RNE (fp.div RNE x15 x23) (fp.neg x19)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE x4 x19) (fp.add RNE x0 x16)) (fp.sub RNE (fp.sub RNE x3 x9) (fp.mul RNE x0 x7))) (fp.add RNE (fp.add RNE (fp.div RNE x4 x13) (fp.mul RNE x5 x0)) (fp.add RNE (fp.mul RNE x0 x0) (fp.sub RNE x7 x15)))))
(check-sat)
