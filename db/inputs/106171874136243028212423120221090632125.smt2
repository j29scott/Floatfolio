(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x8) (fp.neg x7)))
(assert (fp.lt (fp.mul RNE x0 x8) (fp.neg x6)))
(assert (fp.geq (fp.mul RNE x7 x1) (fp.sub RNE x8 x3)))
(assert (fp.lt (fp.neg x12) (fp.div RNE x11 x12)))
(assert (fp.leq (fp.mul RNE x3 x12) (fp.div RNE x1 x7)))
(assert (fp.lt (fp.div RNE x3 x10) (fp.div RNE x9 x10)))
(assert (fp.leq (fp.div RNE x11 x2) (fp.div RNE x11 x3)))
(assert (fp.leq (fp.div RNE x10 x9) (fp.neg x10)))
(assert (fp.leq (fp.neg x7) (fp.sub RNE x3 x6)))
(assert (fp.leq (fp.mul RNE x5 x3) (fp.add RNE x7 x7)))
(assert (fp.eq (fp.add RNE x5 x12) (fp.neg x0)))
(assert (fp.eq (fp.sub RNE x3 x9) (fp.add RNE x6 x2)))
(assert (fp.lt (fp.mul RNE x3 x12) (fp.mul RNE x3 x9)))
(check-sat)
