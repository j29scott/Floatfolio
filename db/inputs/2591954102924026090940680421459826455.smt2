(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE (fp.div RNE x20 x21) (fp.neg x20)) (fp.sub RNE (fp.mul RNE x12 x1) (fp.neg x22))) (fp.sub RNE (fp.neg (fp.mul RNE x11 x3)) (fp.neg (fp.add RNE x7 x21)))) (fp.neg (fp.neg (fp.sub RNE (fp.sub RNE x18 x12) (fp.sub RNE x12 x11))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg (fp.neg x24))) (fp.neg (fp.add RNE (fp.add RNE x6 x17) (fp.div RNE x18 x3)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x17 x4) (fp.sub RNE x0 x16)) (fp.neg (fp.mul RNE x6 x18))) (fp.mul RNE (fp.div RNE (fp.mul RNE x16 x3) (fp.div RNE x5 x2)) (fp.mul RNE (fp.mul RNE x23 x6) (fp.neg x10))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg (fp.div RNE x9 x2)) (fp.div RNE (fp.mul RNE x9 x14) (fp.add RNE x12 x4))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x15) (fp.add RNE x16 x3)) (fp.neg (fp.add RNE x17 x22)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.add RNE x22 x23)) (fp.sub RNE (fp.neg x2) (fp.neg x12))) (fp.neg (fp.div RNE (fp.sub RNE x14 x6) (fp.add RNE x6 x21))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE (fp.add RNE x16 x3) (fp.neg x12)) (fp.neg (fp.div RNE x21 x2)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.add RNE x22 x6) (fp.add RNE x21 x1)) (fp.div RNE (fp.add RNE x13 x12) (fp.add RNE x8 x6))) (fp.mul RNE (fp.add RNE (fp.mul RNE x14 x21) (fp.mul RNE x16 x8)) (fp.sub RNE (fp.add RNE x14 x23) (fp.add RNE x14 x14))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.div RNE (fp.neg x22) (fp.add RNE x0 x23)) (fp.div RNE (fp.mul RNE x12 x13) (fp.div RNE x6 x13))) (fp.add RNE (fp.add RNE (fp.mul RNE x16 x1) (fp.sub RNE x4 x0)) (fp.neg (fp.sub RNE x13 x18)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x19) (fp.div RNE x15 x11)) (fp.add RNE (fp.add RNE x6 x13) (fp.div RNE x10 x12))) (fp.div RNE (fp.sub RNE (fp.sub RNE x11 x19) (fp.div RNE x20 x1)) (fp.sub RNE (fp.add RNE x4 x6) (fp.sub RNE x8 x10))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x22) (fp.mul RNE x5 x8)) (fp.sub RNE (fp.mul RNE x20 x22) (fp.sub RNE x9 x10))) (fp.neg (fp.sub RNE (fp.sub RNE x22 x17) (fp.add RNE x16 x3)))) (fp.div RNE (fp.neg (fp.add RNE (fp.div RNE x13 x24) (fp.sub RNE x3 x5))) (fp.add RNE (fp.neg (fp.neg x17)) (fp.neg (fp.add RNE x22 x11))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE (fp.mul RNE x3 x8) (fp.add RNE x18 x12)) (fp.add RNE (fp.div RNE x7 x7) (fp.mul RNE x21 x23)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.neg x5) (fp.add RNE x1 x10)) (fp.sub RNE (fp.mul RNE x24 x22) (fp.add RNE x9 x12))) (fp.neg (fp.mul RNE (fp.mul RNE x1 x16) (fp.sub RNE x6 x20))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x21) (fp.neg x4)) (fp.neg (fp.neg x3))) (fp.mul RNE (fp.neg (fp.neg x9)) (fp.mul RNE (fp.neg x2) (fp.neg x5)))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x18 x7) (fp.add RNE x18 x16)) (fp.neg (fp.neg x7))) (fp.neg (fp.add RNE (fp.div RNE x19 x7) (fp.mul RNE x22 x10))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x14 x1) (fp.sub RNE x9 x21)) (fp.add RNE (fp.div RNE x0 x21) (fp.sub RNE x12 x0))) (fp.add RNE (fp.div RNE (fp.mul RNE x6 x12) (fp.neg x3)) (fp.sub RNE (fp.add RNE x2 x0) (fp.add RNE x12 x9)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x21 x0) (fp.mul RNE x0 x10)) (fp.sub RNE (fp.neg x17) (fp.mul RNE x0 x6))) (fp.sub RNE (fp.sub RNE (fp.neg x11) (fp.div RNE x10 x9)) (fp.neg (fp.mul RNE x14 x9))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.neg (fp.sub RNE x12 x23)) (fp.sub RNE (fp.mul RNE x22 x1) (fp.neg x15))) (fp.div RNE (fp.add RNE (fp.neg x11) (fp.add RNE x8 x1)) (fp.div RNE (fp.div RNE x5 x24) (fp.neg x2)))) (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x18 x1) (fp.add RNE x17 x0))) (fp.neg (fp.div RNE (fp.sub RNE x7 x23) (fp.sub RNE x19 x17))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE (fp.div RNE x10 x19) (fp.sub RNE x4 x0)) (fp.mul RNE (fp.div RNE x10 x0) (fp.mul RNE x22 x1))) (fp.mul RNE (fp.neg (fp.div RNE x21 x5)) (fp.sub RNE (fp.div RNE x0 x10) (fp.add RNE x5 x12)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.div RNE x6 x10)) (fp.mul RNE (fp.div RNE x8 x2) (fp.div RNE x9 x3))) (fp.neg (fp.add RNE (fp.div RNE x9 x20) (fp.div RNE x4 x11))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg (fp.neg x20)) (fp.add RNE (fp.add RNE x22 x7) (fp.mul RNE x23 x21))) (fp.add RNE (fp.div RNE (fp.sub RNE x0 x23) (fp.add RNE x0 x3)) (fp.div RNE (fp.sub RNE x8 x7) (fp.sub RNE x10 x12)))) (fp.div RNE (fp.neg (fp.add RNE (fp.div RNE x12 x11) (fp.mul RNE x21 x10))) (fp.div RNE (fp.div RNE (fp.div RNE x16 x21) (fp.sub RNE x20 x13)) (fp.neg (fp.neg x16))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE (fp.sub RNE x0 x2) (fp.add RNE x3 x1)) (fp.mul RNE (fp.sub RNE x0 x15) (fp.add RNE x22 x10)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x23 x13) (fp.add RNE x13 x16)) (fp.div RNE (fp.sub RNE x0 x20) (fp.add RNE x3 x5))) (fp.sub RNE (fp.neg (fp.sub RNE x24 x20)) (fp.sub RNE (fp.add RNE x10 x14) (fp.div RNE x12 x23))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x19 x14) (fp.div RNE x22 x17)) (fp.sub RNE (fp.add RNE x8 x1) (fp.sub RNE x4 x3)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.div RNE x16 x23) (fp.sub RNE x7 x13)) (fp.div RNE (fp.neg x6) (fp.neg x19))) (fp.sub RNE (fp.sub RNE (fp.add RNE x2 x21) (fp.mul RNE x19 x1)) (fp.sub RNE (fp.add RNE x2 x24) (fp.div RNE x14 x20))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x16 x15) (fp.neg x14)) (fp.mul RNE (fp.neg x16) (fp.sub RNE x7 x5))) (fp.div RNE (fp.mul RNE (fp.sub RNE x1 x20) (fp.neg x5)) (fp.add RNE (fp.neg x23) (fp.sub RNE x14 x13)))) (fp.add RNE (fp.neg (fp.neg (fp.mul RNE x1 x3))) (fp.add RNE (fp.sub RNE (fp.add RNE x12 x2) (fp.mul RNE x17 x9)) (fp.sub RNE (fp.sub RNE x15 x14) (fp.add RNE x9 x3))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 x15) (fp.neg x0)) (fp.mul RNE (fp.neg x22) (fp.div RNE x1 x7)))) (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x23 x18) (fp.add RNE x10 x22))) (fp.neg (fp.sub RNE (fp.mul RNE x20 x17) (fp.sub RNE x11 x10))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE (fp.sub RNE x10 x23) (fp.add RNE x13 x17)) (fp.mul RNE (fp.add RNE x7 x5) (fp.div RNE x9 x20))) (fp.div RNE (fp.neg (fp.add RNE x14 x0)) (fp.sub RNE (fp.div RNE x13 x15) (fp.div RNE x6 x10)))) (fp.neg (fp.add RNE (fp.neg (fp.mul RNE x14 x1)) (fp.neg (fp.sub RNE x1 x8))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x13 x6)) (fp.div RNE (fp.sub RNE x24 x15) (fp.add RNE x21 x15))) (fp.div RNE (fp.mul RNE (fp.div RNE x10 x24) (fp.neg x4)) (fp.sub RNE (fp.sub RNE x21 x10) (fp.neg x16)))) (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x15 x20)) (fp.mul RNE (fp.add RNE x23 x12) (fp.add RNE x24 x17))) (fp.neg (fp.mul RNE (fp.neg x23) (fp.neg x20))))))
(check-sat)
