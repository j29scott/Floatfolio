(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x11) (fp.div RNE x2 x6)))
(assert (fp.lt (fp.sub RNE x4 x8) (fp.add RNE x6 x0)))
(assert (fp.leq (fp.add RNE x8 x2) (fp.div RNE x12 x2)))
(assert (fp.gt (fp.div RNE x8 x12) (fp.mul RNE x12 x0)))
(assert (fp.leq (fp.div RNE x5 x3) (fp.sub RNE x9 x10)))
(assert (fp.lt (fp.sub RNE x12 x2) (fp.div RNE x10 x11)))
(assert (fp.eq (fp.mul RNE x10 x5) (fp.neg x8)))
(assert (fp.leq (fp.div RNE x5 x8) (fp.div RNE x2 x10)))
(assert (fp.geq (fp.neg x0) (fp.add RNE x7 x12)))
(assert (fp.gt (fp.neg x4) (fp.mul RNE x9 x8)))
(assert (fp.eq (fp.div RNE x4 x8) (fp.add RNE x8 x0)))
(assert (fp.gt (fp.sub RNE x2 x12) (fp.neg x10)))
(assert (fp.eq (fp.sub RNE x7 x0) (fp.neg x5)))
(assert (fp.leq (fp.sub RNE x0 x5) (fp.sub RNE x4 x5)))
(assert (fp.leq (fp.sub RNE x10 x7) (fp.div RNE x1 x12)))
(assert (fp.leq (fp.mul RNE x0 x11) (fp.neg x11)))
(assert (fp.geq (fp.sub RNE x3 x11) (fp.div RNE x10 x8)))
(check-sat)
