(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE x10 x6) (fp.sub RNE x0 x6)))
(assert (fp.gt (fp.sub RNE x8 x12) (fp.mul RNE x4 x4)))
(assert (fp.eq (fp.div RNE x4 x9) (fp.neg x1)))
(assert (fp.leq (fp.div RNE x7 x11) (fp.neg x1)))
(assert (fp.gt (fp.div RNE x0 x4) (fp.div RNE x7 x5)))
(assert (fp.eq (fp.add RNE x3 x2) (fp.mul RNE x2 x0)))
(assert (fp.eq (fp.sub RNE x4 x7) (fp.sub RNE x6 x1)))
(assert (fp.eq (fp.neg x2) (fp.sub RNE x9 x11)))
(assert (fp.gt (fp.mul RNE x9 x8) (fp.div RNE x4 x9)))
(assert (fp.lt (fp.mul RNE x10 x9) (fp.sub RNE x9 x11)))
(assert (fp.eq (fp.add RNE x9 x9) (fp.sub RNE x9 x1)))
(assert (fp.lt (fp.div RNE x6 x9) (fp.mul RNE x4 x2)))
(assert (fp.gt (fp.div RNE x4 x0) (fp.mul RNE x0 x2)))
(assert (fp.eq (fp.neg x6) (fp.div RNE x11 x6)))
(check-sat)
