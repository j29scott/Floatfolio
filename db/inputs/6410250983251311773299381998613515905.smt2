(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.div RNE x14 x13) (fp.sub RNE x12 x8)) (fp.add RNE (fp.neg x9) (fp.neg x9))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x0 x14) (fp.sub RNE x2 x3)) (fp.div RNE (fp.sub RNE x5 x8) (fp.add RNE x0 x10))))
(assert (fp.geq (fp.div RNE (fp.add RNE x1 x13) (fp.sub RNE x14 x1)) (fp.sub RNE (fp.sub RNE x8 x7) (fp.div RNE x1 x0))))
(assert (fp.lt (fp.add RNE (fp.add RNE x6 x1) (fp.sub RNE x5 x0)) (fp.mul RNE (fp.div RNE x11 x3) (fp.sub RNE x4 x10))))
(assert (fp.leq (fp.neg (fp.add RNE x7 x9)) (fp.mul RNE (fp.sub RNE x3 x5) (fp.add RNE x1 x13))))
(assert (fp.lt (fp.div RNE (fp.add RNE x13 x3) (fp.add RNE x14 x1)) (fp.div RNE (fp.add RNE x0 x8) (fp.add RNE x4 x6))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x14 x9) (fp.neg x8)) (fp.add RNE (fp.div RNE x12 x6) (fp.sub RNE x0 x10))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x3 x12) (fp.neg x14)) (fp.neg (fp.neg x12))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x11 x13) (fp.add RNE x4 x10)) (fp.mul RNE (fp.add RNE x0 x2) (fp.sub RNE x14 x12))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x0 x7) (fp.div RNE x10 x7)) (fp.add RNE (fp.div RNE x4 x14) (fp.div RNE x3 x12))))
(check-sat)
