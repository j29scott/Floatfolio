(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg x3) (fp.add RNE x2 x3)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.sub RNE x9 x9))) (fp.div RNE (fp.div RNE (fp.sub RNE x8 x5) (fp.div RNE x8 x2)) (fp.div RNE (fp.neg x5) (fp.neg x5)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x4) (fp.add RNE x1 x8))) (fp.neg (fp.sub RNE (fp.sub RNE x3 x4) (fp.div RNE x3 x12)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.add RNE x4 x14) (fp.div RNE x5 x5)) (fp.sub RNE (fp.add RNE x3 x8) (fp.neg x7))) (fp.neg (fp.div RNE (fp.add RNE x9 x14) (fp.sub RNE x1 x0)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x15 x7) (fp.mul RNE x6 x7))) (fp.add RNE (fp.div RNE (fp.sub RNE x13 x3) (fp.add RNE x0 x13)) (fp.neg (fp.mul RNE x5 x15)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x7) (fp.neg x10)) (fp.div RNE (fp.div RNE x11 x0) (fp.sub RNE x7 x1))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x1 x8) (fp.add RNE x8 x11)) (fp.mul RNE (fp.add RNE x15 x15) (fp.add RNE x3 x5)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x12) (fp.sub RNE x9 x12)) (fp.sub RNE (fp.div RNE x9 x4) (fp.add RNE x10 x13))) (fp.add RNE (fp.neg (fp.sub RNE x5 x15)) (fp.mul RNE (fp.neg x15) (fp.mul RNE x5 x7)))))
(check-sat)
