(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE x0 x1)) (fp.mul RNE (fp.sub RNE x6 x2) (fp.mul RNE x5 x3))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x2 x4) (fp.neg x0)) (fp.sub RNE (fp.sub RNE x3 x5) (fp.neg x1))))
(assert (fp.eq (fp.neg (fp.add RNE x2 x3)) (fp.neg (fp.add RNE x5 x6))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x3 x1) (fp.sub RNE x3 x5)) (fp.mul RNE (fp.sub RNE x3 x1) (fp.add RNE x1 x2))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x4 x3) (fp.mul RNE x0 x1)) (fp.neg (fp.neg x6))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x6 x3) (fp.mul RNE x1 x3)) (fp.sub RNE (fp.div RNE x2 x6) (fp.add RNE x7 x6))))
(assert (fp.eq (fp.neg (fp.mul RNE x5 x4)) (fp.div RNE (fp.div RNE x0 x6) (fp.sub RNE x3 x6))))
(check-sat)
