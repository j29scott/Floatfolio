(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE x10 x8) (fp.add RNE x8 x11))) (fp.div RNE (fp.neg (fp.neg x7)) (fp.add RNE (fp.neg x12) (fp.add RNE x7 x2)))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE x5 x3))) (fp.add RNE (fp.add RNE (fp.add RNE x2 x1) (fp.add RNE x0 x0)) (fp.mul RNE (fp.neg x12) (fp.neg x8)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x11 x0) (fp.mul RNE x8 x8)) (fp.add RNE (fp.neg x6) (fp.sub RNE x10 x10))) (fp.div RNE (fp.neg (fp.add RNE x9 x3)) (fp.neg (fp.neg x13)))))
(check-sat)
