(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x7) (fp.neg x16)) (fp.mul RNE (fp.add RNE x10 x4) (fp.add RNE x6 x1))))
(assert (fp.eq (fp.add RNE (fp.div RNE x17 x5) (fp.add RNE x5 x5)) (fp.div RNE (fp.add RNE x7 x6) (fp.sub RNE x4 x3))))
(assert (fp.leq (fp.add RNE (fp.add RNE x1 x17) (fp.add RNE x10 x2)) (fp.sub RNE (fp.neg x14) (fp.neg x4))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x3 x1) (fp.add RNE x4 x5)) (fp.sub RNE (fp.div RNE x4 x13) (fp.neg x12))))
(assert (fp.eq (fp.add RNE (fp.neg x17) (fp.add RNE x13 x13)) (fp.add RNE (fp.div RNE x8 x5) (fp.add RNE x15 x11))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x13 x6) (fp.add RNE x0 x14)) (fp.add RNE (fp.div RNE x8 x1) (fp.add RNE x4 x8))))
(assert (fp.geq (fp.sub RNE (fp.neg x8) (fp.neg x2)) (fp.neg (fp.neg x12))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x13 x3) (fp.sub RNE x11 x6)) (fp.div RNE (fp.neg x2) (fp.mul RNE x16 x17))))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x9) (fp.div RNE x15 x17)) (fp.add RNE (fp.add RNE x0 x10) (fp.add RNE x15 x15))))
(assert (fp.leq (fp.neg (fp.mul RNE x10 x4)) (fp.div RNE (fp.mul RNE x17 x9) (fp.sub RNE x7 x16))))
(assert (fp.leq (fp.mul RNE (fp.neg x9) (fp.div RNE x13 x1)) (fp.mul RNE (fp.sub RNE x6 x15) (fp.sub RNE x14 x11))))
(check-sat)
