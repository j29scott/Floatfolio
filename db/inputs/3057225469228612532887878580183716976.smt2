(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.mul RNE x10 x2) (fp.sub RNE x5 x2)) (fp.div RNE (fp.sub RNE x1 x2) (fp.sub RNE x5 x0))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x5 x8) (fp.sub RNE x11 x4)) (fp.add RNE (fp.div RNE x4 x6) (fp.sub RNE x7 x11))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x7 x6) (fp.neg x12)) (fp.neg (fp.add RNE x1 x9))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x7 x11) (fp.neg x1)) (fp.neg (fp.mul RNE x8 x5))))
(assert (fp.eq (fp.sub RNE (fp.neg x10) (fp.neg x12)) (fp.sub RNE (fp.sub RNE x6 x8) (fp.neg x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x9 x3) (fp.add RNE x0 x8)) (fp.add RNE (fp.mul RNE x6 x12) (fp.div RNE x7 x7))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x5 x8) (fp.add RNE x5 x7)) (fp.mul RNE (fp.mul RNE x7 x2) (fp.add RNE x0 x0))))
(check-sat)
