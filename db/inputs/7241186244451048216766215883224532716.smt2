(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x0 x6) (fp.add RNE x7 x3)))
(assert (fp.lt (fp.div RNE x2 x2) (fp.add RNE x0 x1)))
(assert (fp.leq (fp.mul RNE x4 x8) (fp.mul RNE x9 x3)))
(assert (fp.gt (fp.mul RNE x2 x2) (fp.add RNE x8 x0)))
(assert (fp.leq (fp.neg x5) (fp.sub RNE x0 x8)))
(assert (fp.leq (fp.mul RNE x8 x9) (fp.mul RNE x1 x1)))
(assert (fp.geq (fp.sub RNE x2 x9) (fp.mul RNE x3 x4)))
(assert (fp.leq (fp.neg x8) (fp.add RNE x3 x7)))
(assert (fp.eq (fp.add RNE x3 x4) (fp.mul RNE x0 x2)))
(assert (fp.lt (fp.add RNE x2 x2) (fp.mul RNE x9 x0)))
(assert (fp.eq (fp.neg x3) (fp.neg x6)))
(assert (fp.geq (fp.div RNE x5 x3) (fp.div RNE x7 x8)))
(assert (fp.eq (fp.add RNE x4 x1) (fp.mul RNE x2 x3)))
(assert (fp.lt (fp.neg x4) (fp.add RNE x5 x0)))
(check-sat)
