(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x9) (fp.add RNE x9 x2)) (fp.neg (fp.mul RNE x0 x2))) (fp.neg (fp.neg (fp.neg x9)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x0 x5)) (fp.neg (fp.add RNE x3 x5))) (fp.div RNE (fp.neg (fp.div RNE x8 x3)) (fp.add RNE (fp.add RNE x1 x2) (fp.mul RNE x3 x2)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.sub RNE x0 x2) (fp.sub RNE x8 x7)) (fp.neg (fp.neg x9))) (fp.div RNE (fp.sub RNE (fp.sub RNE x2 x4) (fp.sub RNE x6 x2)) (fp.add RNE (fp.neg x9) (fp.mul RNE x4 x2)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x9 x7) (fp.mul RNE x0 x8)) (fp.div RNE (fp.mul RNE x1 x4) (fp.div RNE x2 x7))) (fp.neg (fp.add RNE (fp.div RNE x8 x9) (fp.neg x1)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE x6 x0) (fp.sub RNE x9 x8)) (fp.mul RNE (fp.div RNE x6 x7) (fp.mul RNE x3 x5))) (fp.sub RNE (fp.div RNE (fp.neg x2) (fp.neg x9)) (fp.div RNE (fp.add RNE x6 x9) (fp.sub RNE x4 x4)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x6 x0) (fp.neg x9))) (fp.neg (fp.div RNE (fp.add RNE x3 x5) (fp.neg x4)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x0 x8) (fp.add RNE x2 x1))) (fp.add RNE (fp.neg (fp.neg x8)) (fp.div RNE (fp.sub RNE x5 x7) (fp.div RNE x2 x5)))))
(check-sat)
