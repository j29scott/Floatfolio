(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.mul RNE x17 x16)) (fp.sub RNE (fp.mul RNE x16 x3) (fp.div RNE x8 x0))))
(assert (fp.leq (fp.add RNE (fp.neg x0) (fp.mul RNE x9 x21)) (fp.neg (fp.sub RNE x4 x8))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x17 x18) (fp.add RNE x20 x14)) (fp.sub RNE (fp.div RNE x4 x19) (fp.sub RNE x3 x19))))
(assert (fp.leq (fp.mul RNE (fp.neg x17) (fp.sub RNE x8 x17)) (fp.sub RNE (fp.sub RNE x0 x21) (fp.div RNE x9 x8))))
(assert (fp.leq (fp.add RNE (fp.neg x18) (fp.add RNE x13 x21)) (fp.div RNE (fp.div RNE x9 x14) (fp.neg x13))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x13 x17) (fp.add RNE x11 x5)) (fp.div RNE (fp.neg x18) (fp.div RNE x0 x15))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x19 x14) (fp.neg x5)) (fp.neg (fp.add RNE x13 x13))))
(assert (fp.geq (fp.div RNE (fp.div RNE x10 x9) (fp.mul RNE x8 x12)) (fp.div RNE (fp.sub RNE x16 x16) (fp.sub RNE x21 x4))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x10 x9) (fp.add RNE x18 x6)) (fp.sub RNE (fp.sub RNE x10 x18) (fp.mul RNE x9 x8))))
(assert (fp.geq (fp.div RNE (fp.add RNE x5 x13) (fp.sub RNE x19 x1)) (fp.mul RNE (fp.sub RNE x16 x9) (fp.mul RNE x9 x3))))
(assert (fp.geq (fp.neg (fp.neg x11)) (fp.add RNE (fp.mul RNE x6 x20) (fp.mul RNE x17 x7))))
(assert (fp.leq (fp.div RNE (fp.neg x1) (fp.mul RNE x20 x18)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x3 x5) (fp.neg x20)) (fp.sub RNE (fp.div RNE x16 x1) (fp.neg x6))))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x17) (fp.add RNE x21 x9)) (fp.sub RNE (fp.mul RNE x12 x19) (fp.add RNE x5 x2))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x18 x19) (fp.neg x8)) (fp.add RNE (fp.neg x6) (fp.sub RNE x1 x10))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x12 x6) (fp.add RNE x14 x7)) (fp.div RNE (fp.neg x6) (fp.add RNE x1 x16))))
(check-sat)
