(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.neg (fp.div RNE x5 x6)) (fp.neg (fp.div RNE x14 x7))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x19 x2) (fp.add RNE x8 x11)) (fp.mul RNE (fp.sub RNE x1 x12) (fp.add RNE x7 x3)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.add RNE x19 x5)) (fp.neg (fp.neg x11))) (fp.neg (fp.mul RNE (fp.add RNE x16 x14) (fp.div RNE x14 x16))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x20 x8) (fp.add RNE x14 x6)) (fp.div RNE (fp.add RNE x20 x10) (fp.mul RNE x24 x12))) (fp.mul RNE (fp.mul RNE (fp.add RNE x13 x2) (fp.sub RNE x15 x25)) (fp.add RNE (fp.div RNE x9 x26) (fp.sub RNE x5 x15)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.sub RNE x17 x22)) (fp.mul RNE (fp.sub RNE x7 x22) (fp.div RNE x25 x3))) (fp.div RNE (fp.mul RNE (fp.div RNE x17 x4) (fp.mul RNE x10 x19)) (fp.div RNE (fp.mul RNE x0 x25) (fp.div RNE x20 x1))))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x13 x6) (fp.add RNE x10 x3)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.div RNE x22 x11) (fp.neg x16)) (fp.neg (fp.mul RNE x26 x6))) (fp.neg (fp.sub RNE (fp.add RNE x21 x5) (fp.neg x9))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.add RNE x0 x24)) (fp.neg (fp.mul RNE x6 x18))) (fp.neg (fp.mul RNE (fp.neg x26) (fp.add RNE x26 x1)))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x21 x14) (fp.div RNE x1 x5)) (fp.div RNE (fp.neg x16) (fp.add RNE x20 x21))) (fp.add RNE (fp.div RNE (fp.neg x22) (fp.sub RNE x3 x13)) (fp.div RNE (fp.sub RNE x15 x18) (fp.neg x11))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE (fp.mul RNE x12 x4) (fp.mul RNE x9 x16)) (fp.sub RNE (fp.sub RNE x11 x21) (fp.mul RNE x17 x18)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x14 x7) (fp.sub RNE x2 x8)) (fp.mul RNE (fp.div RNE x22 x16) (fp.mul RNE x9 x21))))))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE (fp.mul RNE x24 x1) (fp.mul RNE x24 x12)))) (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x0 x20) (fp.add RNE x4 x20)) (fp.add RNE (fp.sub RNE x11 x5) (fp.sub RNE x12 x4))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg (fp.neg x0)) (fp.mul RNE (fp.div RNE x9 x3) (fp.neg x14))) (fp.neg (fp.neg (fp.mul RNE x23 x20)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.sub RNE x13 x2) (fp.sub RNE x9 x21))) (fp.div RNE (fp.mul RNE (fp.mul RNE x20 x7) (fp.neg x12)) (fp.div RNE (fp.sub RNE x26 x22) (fp.mul RNE x4 x16))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.add RNE x14 x16) (fp.neg x13)) (fp.neg (fp.sub RNE x22 x11))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x0 x3) (fp.mul RNE x16 x20)) (fp.mul RNE (fp.neg x19) (fp.sub RNE x24 x13)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x23 x18) (fp.add RNE x14 x25)) (fp.neg (fp.neg x20))) (fp.add RNE (fp.add RNE (fp.add RNE x26 x13) (fp.sub RNE x14 x12)) (fp.div RNE (fp.neg x15) (fp.neg x4))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE (fp.div RNE x24 x6) (fp.add RNE x6 x0)) (fp.mul RNE (fp.sub RNE x9 x22) (fp.sub RNE x20 x3)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.neg x23) (fp.sub RNE x13 x0)) (fp.add RNE (fp.mul RNE x24 x1) (fp.sub RNE x13 x22))) (fp.div RNE (fp.div RNE (fp.add RNE x15 x18) (fp.sub RNE x14 x19)) (fp.div RNE (fp.neg x14) (fp.sub RNE x10 x11))))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE (fp.sub RNE x26 x1) (fp.neg x26)) (fp.div RNE (fp.add RNE x23 x3) (fp.sub RNE x8 x2)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x2 x5) (fp.mul RNE x21 x6)) (fp.sub RNE (fp.neg x22) (fp.add RNE x7 x1))) (fp.div RNE (fp.sub RNE (fp.div RNE x4 x23) (fp.mul RNE x20 x11)) (fp.add RNE (fp.mul RNE x14 x22) (fp.sub RNE x7 x13))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x20) (fp.mul RNE x18 x19)) (fp.add RNE (fp.mul RNE x3 x6) (fp.neg x21))) (fp.add RNE (fp.div RNE (fp.neg x6) (fp.sub RNE x24 x25)) (fp.mul RNE (fp.sub RNE x10 x19) (fp.neg x11)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x19 x13) (fp.neg x5)) (fp.mul RNE (fp.div RNE x10 x21) (fp.div RNE x8 x0))) (fp.mul RNE (fp.div RNE (fp.mul RNE x18 x3) (fp.mul RNE x0 x23)) (fp.mul RNE (fp.mul RNE x18 x1) (fp.neg x4))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x11 x3) (fp.mul RNE x26 x24)) (fp.neg (fp.sub RNE x10 x18))) (fp.add RNE (fp.add RNE (fp.neg x1) (fp.div RNE x21 x7)) (fp.sub RNE (fp.div RNE x8 x12) (fp.mul RNE x1 x15)))) (fp.div RNE (fp.sub RNE (fp.add RNE (fp.add RNE x2 x5) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x20 x21) (fp.neg x26))) (fp.add RNE (fp.neg (fp.div RNE x22 x17)) (fp.add RNE (fp.mul RNE x11 x6) (fp.add RNE x14 x26))))))
(check-sat)
