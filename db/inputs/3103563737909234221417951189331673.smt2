(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.add RNE x6 x19) (fp.neg x0)) (fp.neg (fp.neg x5))) (fp.add RNE (fp.add RNE (fp.add RNE x12 x3) (fp.mul RNE x9 x13)) (fp.sub RNE (fp.sub RNE x19 x7) (fp.neg x17)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.add RNE x2 x8)) (fp.add RNE (fp.mul RNE x7 x14) (fp.sub RNE x13 x1))) (fp.add RNE (fp.sub RNE (fp.sub RNE x20 x3) (fp.add RNE x8 x4)) (fp.sub RNE (fp.neg x20) (fp.add RNE x19 x20)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x15) (fp.sub RNE x19 x15)) (fp.mul RNE (fp.mul RNE x17 x16) (fp.div RNE x3 x17))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x19 x17) (fp.sub RNE x8 x18)) (fp.div RNE (fp.neg x11) (fp.mul RNE x17 x2)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x8 x10) (fp.mul RNE x18 x15))) (fp.div RNE (fp.neg (fp.mul RNE x14 x5)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x18 x1)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE x14 x15)) (fp.sub RNE (fp.add RNE x1 x20) (fp.add RNE x19 x6))) (fp.neg (fp.neg (fp.div RNE x15 x11)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg x5) (fp.neg x19)) (fp.mul RNE (fp.add RNE x0 x19) (fp.neg x18))) (fp.div RNE (fp.neg (fp.div RNE x5 x12)) (fp.neg (fp.sub RNE x12 x7)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x13 x4)) (fp.add RNE (fp.add RNE x17 x19) (fp.mul RNE x14 x9))) (fp.mul RNE (fp.sub RNE (fp.neg x17) (fp.sub RNE x16 x5)) (fp.mul RNE (fp.sub RNE x18 x15) (fp.mul RNE x13 x5)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x6 x11) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x19 x1) (fp.sub RNE x13 x2))) (fp.div RNE (fp.neg (fp.mul RNE x11 x8)) (fp.neg (fp.neg x12)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE x18 x1) (fp.neg x5)) (fp.add RNE (fp.sub RNE x13 x10) (fp.sub RNE x19 x17))) (fp.div RNE (fp.sub RNE (fp.neg x7) (fp.sub RNE x20 x9)) (fp.add RNE (fp.add RNE x3 x1) (fp.mul RNE x19 x20)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE x8 x8) (fp.neg x8)) (fp.sub RNE (fp.mul RNE x16 x6) (fp.neg x9))) (fp.mul RNE (fp.sub RNE (fp.add RNE x10 x11) (fp.add RNE x12 x3)) (fp.div RNE (fp.mul RNE x7 x3) (fp.neg x3)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg x9) (fp.add RNE x6 x9))) (fp.add RNE (fp.neg (fp.mul RNE x20 x14)) (fp.neg (fp.mul RNE x16 x13)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.add RNE x20 x13) (fp.sub RNE x2 x2)) (fp.neg (fp.mul RNE x12 x12))) (fp.div RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x4 x12)) (fp.mul RNE (fp.sub RNE x10 x18) (fp.add RNE x6 x12)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x9 x0)) (fp.add RNE (fp.mul RNE x18 x12) (fp.neg x8))) (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x7) (fp.div RNE x13 x15)) (fp.neg (fp.mul RNE x9 x5)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x10 x5)) (fp.add RNE (fp.add RNE x3 x18) (fp.div RNE x20 x18))) (fp.neg (fp.sub RNE (fp.div RNE x3 x3) (fp.add RNE x2 x4)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.mul RNE x14 x17) (fp.mul RNE x19 x16)) (fp.sub RNE (fp.add RNE x13 x13) (fp.mul RNE x15 x15))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x12) (fp.mul RNE x10 x12)) (fp.add RNE (fp.mul RNE x18 x12) (fp.neg x9)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.div RNE x19 x17) (fp.add RNE x1 x20)) (fp.add RNE (fp.add RNE x15 x18) (fp.sub RNE x4 x11))) (fp.sub RNE (fp.neg (fp.add RNE x5 x6)) (fp.mul RNE (fp.sub RNE x20 x9) (fp.div RNE x14 x12)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x20 x20) (fp.mul RNE x18 x12)) (fp.mul RNE (fp.sub RNE x8 x3) (fp.mul RNE x8 x1))) (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x13) (fp.sub RNE x10 x15)) (fp.sub RNE (fp.neg x7) (fp.div RNE x17 x10)))))
(check-sat)
