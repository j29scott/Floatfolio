(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE (fp.sub RNE x0 x6) (fp.neg x6)) (fp.sub RNE (fp.add RNE x8 x1) (fp.div RNE x6 x1)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.div RNE x2 x3) (fp.div RNE x3 x7)) (fp.neg (fp.mul RNE x6 x1))) (fp.sub RNE (fp.div RNE (fp.div RNE x4 x8) (fp.add RNE x6 x2)) (fp.neg (fp.sub RNE x3 x5))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.neg x5) (fp.sub RNE x6 x2)) (fp.add RNE (fp.sub RNE x3 x0) (fp.div RNE x0 x1))) (fp.neg (fp.neg (fp.div RNE x1 x1)))) (fp.neg (fp.mul RNE (fp.neg (fp.neg x5)) (fp.add RNE (fp.mul RNE x4 x3) (fp.add RNE x3 x8))))))
(check-sat)
