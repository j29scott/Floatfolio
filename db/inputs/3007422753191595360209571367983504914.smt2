(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x14 x15) (fp.sub RNE x2 x5)) (fp.sub RNE (fp.div RNE x3 x18) (fp.div RNE x7 x7))) (fp.mul RNE (fp.sub RNE (fp.add RNE x10 x5) (fp.sub RNE x8 x0)) (fp.neg (fp.neg x19)))) (fp.div RNE (fp.div RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.div RNE x19 x19) (fp.neg x16))) (fp.add RNE (fp.add RNE (fp.div RNE x18 x18) (fp.div RNE x14 x4)) (fp.neg (fp.sub RNE x18 x8))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE (fp.div RNE x16 x6) (fp.div RNE x12 x16))) (fp.neg (fp.mul RNE (fp.div RNE x2 x3) (fp.sub RNE x14 x9)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x13 x17) (fp.sub RNE x3 x16)) (fp.add RNE (fp.add RNE x16 x15) (fp.mul RNE x18 x3))) (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x4) (fp.neg x17)) (fp.add RNE (fp.sub RNE x19 x12) (fp.mul RNE x16 x14))))))
(check-sat)
