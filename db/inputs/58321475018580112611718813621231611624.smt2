(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.mul RNE x8 x2)) (fp.neg (fp.div RNE x3 x17))))
(assert (fp.leq (fp.neg (fp.mul RNE x6 x13)) (fp.add RNE (fp.add RNE x17 x8) (fp.mul RNE x6 x13))))
(assert (fp.eq (fp.neg (fp.sub RNE x0 x14)) (fp.neg (fp.mul RNE x0 x12))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x5 x14) (fp.neg x16)) (fp.div RNE (fp.mul RNE x3 x1) (fp.div RNE x11 x5))))
(assert (fp.gt (fp.sub RNE (fp.neg x13) (fp.div RNE x16 x6)) (fp.add RNE (fp.sub RNE x5 x15) (fp.sub RNE x1 x1))))
(check-sat)
