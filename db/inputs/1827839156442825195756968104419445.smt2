(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.neg x7)) (fp.div RNE (fp.mul RNE x12 x7) (fp.div RNE x10 x2))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x13 x5) (fp.add RNE x3 x4)) (fp.neg (fp.add RNE x11 x1))))
(assert (fp.geq (fp.neg (fp.sub RNE x0 x3)) (fp.sub RNE (fp.div RNE x6 x6) (fp.sub RNE x2 x1))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x2 x13) (fp.mul RNE x8 x6)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x7 x11))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x5 x3) (fp.mul RNE x3 x8)) (fp.neg (fp.neg x13))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x6)) (fp.neg (fp.mul RNE x4 x11))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x9 x5) (fp.add RNE x13 x5)) (fp.neg (fp.add RNE x9 x7))))
(assert (fp.eq (fp.add RNE (fp.div RNE x12 x9) (fp.div RNE x0 x7)) (fp.sub RNE (fp.div RNE x2 x8) (fp.neg x2))))
(check-sat)
