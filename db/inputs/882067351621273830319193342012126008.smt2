(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE (fp.div RNE x5 x3) (fp.div RNE x5 x10))) (fp.add RNE (fp.add RNE (fp.sub RNE x7 x7) (fp.div RNE x6 x2)) (fp.mul RNE (fp.sub RNE x1 x3) (fp.div RNE x11 x10)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.neg x9) (fp.div RNE x7 x0)) (fp.mul RNE (fp.mul RNE x10 x1) (fp.neg x2))) (fp.div RNE (fp.add RNE (fp.mul RNE x10 x10) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x0 x0) (fp.neg x13))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE (fp.mul RNE x7 x7) (fp.mul RNE x5 x7)) (fp.neg (fp.add RNE x10 x11))) (fp.neg (fp.mul RNE (fp.add RNE x1 x6) (fp.div RNE x11 x13)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.add RNE x11 x1) (fp.mul RNE x7 x7)) (fp.sub RNE (fp.div RNE x2 x2) (fp.sub RNE x12 x13))) (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x3) (fp.neg x4)) (fp.sub RNE (fp.mul RNE x7 x5) (fp.add RNE x11 x4))))))
(check-sat)
