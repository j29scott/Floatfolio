(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE x9 x9) (fp.sub RNE x2 x16)) (fp.div RNE (fp.mul RNE x5 x26) (fp.div RNE x10 x5))) (fp.add RNE (fp.mul RNE (fp.mul RNE x20 x7) (fp.sub RNE x6 x10)) (fp.mul RNE (fp.neg x6) (fp.add RNE x4 x9)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.div RNE x5 x11) (fp.mul RNE x18 x21)) (fp.div RNE (fp.neg x26) (fp.neg x5))) (fp.div RNE (fp.mul RNE (fp.div RNE x3 x11) (fp.div RNE x4 x13)) (fp.sub RNE (fp.add RNE x20 x25) (fp.mul RNE x18 x8)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x12 x23) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x21 x9) (fp.mul RNE x4 x21))) (fp.sub RNE (fp.add RNE (fp.mul RNE x22 x19) (fp.sub RNE x7 x17)) (fp.add RNE (fp.sub RNE x0 x12) (fp.mul RNE x7 x24)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.neg x4)) (fp.div RNE (fp.neg x19) (fp.mul RNE x24 x27))) (fp.neg (fp.add RNE (fp.div RNE x11 x10) (fp.neg x10)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x3 x19) (fp.sub RNE x6 x14)) (fp.sub RNE (fp.neg x15) (fp.mul RNE x3 x13))) (fp.div RNE (fp.div RNE (fp.mul RNE x3 x17) (fp.div RNE x7 x6)) (fp.mul RNE (fp.mul RNE x1 x10) (fp.neg x2)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x26) (fp.div RNE x21 x24)) (fp.sub RNE (fp.sub RNE x21 x1) (fp.div RNE x1 x20))) (fp.sub RNE (fp.sub RNE (fp.add RNE x13 x13) (fp.add RNE x20 x4)) (fp.div RNE (fp.div RNE x23 x19) (fp.sub RNE x9 x18)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.add RNE x3 x4) (fp.div RNE x17 x9)) (fp.neg (fp.add RNE x10 x13))) (fp.div RNE (fp.div RNE (fp.div RNE x21 x10) (fp.sub RNE x26 x18)) (fp.neg (fp.div RNE x14 x15)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x15)) (fp.sub RNE (fp.sub RNE x23 x16) (fp.sub RNE x8 x23))) (fp.sub RNE (fp.neg (fp.div RNE x24 x5)) (fp.add RNE (fp.add RNE x13 x15) (fp.add RNE x15 x15)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x21) (fp.neg x24)) (fp.neg (fp.sub RNE x19 x8))) (fp.div RNE (fp.div RNE (fp.sub RNE x10 x22) (fp.add RNE x2 x14)) (fp.sub RNE (fp.sub RNE x20 x14) (fp.add RNE x9 x0)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x16 x26) (fp.sub RNE x22 x26)) (fp.add RNE (fp.div RNE x21 x18) (fp.sub RNE x26 x7))) (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x8) (fp.add RNE x18 x18)) (fp.sub RNE (fp.sub RNE x7 x22) (fp.sub RNE x6 x23)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.add RNE x8 x24)) (fp.mul RNE (fp.mul RNE x1 x12) (fp.add RNE x5 x12))) (fp.mul RNE (fp.neg (fp.div RNE x18 x18)) (fp.add RNE (fp.sub RNE x2 x26) (fp.sub RNE x1 x10)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x19 x0))) (fp.div RNE (fp.div RNE (fp.sub RNE x13 x17) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x23 x7) (fp.mul RNE x16 x12)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE x3 x27) (fp.neg x11))) (fp.add RNE (fp.neg (fp.add RNE x20 x11)) (fp.add RNE (fp.sub RNE x20 x23) (fp.neg x6)))))
(check-sat)
