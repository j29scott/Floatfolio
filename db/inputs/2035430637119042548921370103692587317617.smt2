(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x3) (fp.mul RNE x2 x3)) (fp.div RNE (fp.add RNE x5 x7) (fp.sub RNE x8 x8))))
(assert (fp.gt (fp.neg (fp.add RNE x7 x5)) (fp.mul RNE (fp.sub RNE x9 x5) (fp.neg x4))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x1 x0) (fp.neg x5)) (fp.add RNE (fp.div RNE x4 x10) (fp.neg x1))))
(assert (fp.gt (fp.neg (fp.neg x2)) (fp.div RNE (fp.sub RNE x3 x7) (fp.add RNE x0 x7))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x1 x10) (fp.add RNE x0 x7)) (fp.add RNE (fp.mul RNE x2 x10) (fp.neg x5))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x10 x10) (fp.neg x0)) (fp.sub RNE (fp.add RNE x10 x8) (fp.sub RNE x5 x0))))
(check-sat)
