(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x13) (fp.sub RNE x0 x14)))
(assert (fp.lt (fp.sub RNE x2 x11) (fp.neg x8)))
(assert (fp.leq (fp.mul RNE x10 x3) (fp.mul RNE x4 x2)))
(assert (fp.eq (fp.neg x10) (fp.sub RNE x14 x10)))
(assert (fp.geq (fp.div RNE x0 x4) (fp.sub RNE x3 x11)))
(assert (fp.lt (fp.neg x14) (fp.div RNE x7 x12)))
(assert (fp.lt (fp.div RNE x5 x11) (fp.add RNE x5 x6)))
(assert (fp.leq (fp.div RNE x4 x14) (fp.add RNE x1 x2)))
(assert (fp.geq (fp.div RNE x2 x11) (fp.add RNE x2 x9)))
(assert (fp.gt (fp.neg x7) (fp.neg x6)))
(assert (fp.leq (fp.sub RNE x13 x13) (fp.mul RNE x1 x14)))
(assert (fp.geq (fp.div RNE x6 x12) (fp.add RNE x4 x13)))
(assert (fp.geq (fp.neg x6) (fp.add RNE x6 x13)))
(check-sat)
