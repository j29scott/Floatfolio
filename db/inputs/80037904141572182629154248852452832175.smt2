(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.sub RNE x0 x0) (fp.neg x1)) (fp.add RNE (fp.mul RNE x9 x7) (fp.mul RNE x9 x7))))
(assert (fp.geq (fp.add RNE (fp.neg x3) (fp.sub RNE x7 x10)) (fp.div RNE (fp.mul RNE x4 x6) (fp.div RNE x5 x5))))
(assert (fp.eq (fp.neg (fp.neg x6)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x7 x0))))
(assert (fp.leq (fp.neg (fp.sub RNE x6 x7)) (fp.mul RNE (fp.neg x7) (fp.add RNE x1 x2))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x0 x9) (fp.add RNE x0 x0)) (fp.mul RNE (fp.sub RNE x4 x1) (fp.sub RNE x2 x9))))
(assert (fp.gt (fp.div RNE (fp.neg x9) (fp.mul RNE x9 x2)) (fp.sub RNE (fp.add RNE x6 x2) (fp.div RNE x9 x1))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x2 x7) (fp.sub RNE x9 x5)) (fp.mul RNE (fp.add RNE x3 x5) (fp.div RNE x10 x1))))
(assert (fp.eq (fp.add RNE (fp.div RNE x3 x4) (fp.neg x4)) (fp.mul RNE (fp.div RNE x9 x6) (fp.add RNE x5 x0))))
(assert (fp.leq (fp.div RNE (fp.neg x2) (fp.div RNE x5 x3)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x0 x10))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x2 x6) (fp.mul RNE x3 x9)) (fp.mul RNE (fp.div RNE x1 x10) (fp.div RNE x9 x2))))
(assert (fp.gt (fp.add RNE (fp.neg x1) (fp.div RNE x4 x5)) (fp.mul RNE (fp.div RNE x10 x2) (fp.div RNE x4 x2))))
(assert (fp.lt (fp.neg (fp.neg x9)) (fp.div RNE (fp.sub RNE x2 x6) (fp.add RNE x6 x10))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x5 x0) (fp.add RNE x8 x5)) (fp.neg (fp.div RNE x4 x8))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x3 x6) (fp.sub RNE x1 x3)) (fp.neg (fp.neg x5))))
(check-sat)
