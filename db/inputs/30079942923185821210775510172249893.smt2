(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg x4) (fp.add RNE x2 x2)) (fp.div RNE (fp.div RNE x2 x10) (fp.sub RNE x6 x0))))
(assert (fp.eq (fp.add RNE (fp.add RNE x3 x8) (fp.sub RNE x8 x2)) (fp.div RNE (fp.mul RNE x4 x3) (fp.mul RNE x0 x6))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x10 x8) (fp.mul RNE x2 x7)) (fp.div RNE (fp.mul RNE x9 x0) (fp.neg x5))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x1 x1) (fp.mul RNE x0 x1)) (fp.add RNE (fp.mul RNE x1 x5) (fp.mul RNE x10 x2))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x10 x7) (fp.div RNE x5 x8)) (fp.add RNE (fp.neg x4) (fp.add RNE x2 x4))))
(assert (fp.leq (fp.neg (fp.add RNE x0 x3)) (fp.sub RNE (fp.div RNE x9 x0) (fp.div RNE x1 x4))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x3 x11) (fp.mul RNE x10 x0)) (fp.div RNE (fp.mul RNE x1 x0) (fp.mul RNE x8 x11))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x2 x6) (fp.div RNE x5 x2)) (fp.sub RNE (fp.div RNE x0 x9) (fp.div RNE x5 x8))))
(assert (fp.leq (fp.add RNE (fp.add RNE x11 x10) (fp.mul RNE x3 x1)) (fp.div RNE (fp.div RNE x6 x3) (fp.add RNE x4 x3))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x8 x4) (fp.div RNE x1 x1)) (fp.sub RNE (fp.neg x10) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x1 x11) (fp.neg x11)) (fp.add RNE (fp.div RNE x10 x7) (fp.sub RNE x7 x4))))
(assert (fp.eq (fp.neg (fp.sub RNE x1 x0)) (fp.div RNE (fp.add RNE x1 x11) (fp.neg x3))))
(assert (fp.leq (fp.mul RNE (fp.neg x9) (fp.mul RNE x11 x5)) (fp.div RNE (fp.add RNE x9 x1) (fp.add RNE x2 x4))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x0 x11) (fp.sub RNE x5 x0)) (fp.mul RNE (fp.mul RNE x11 x2) (fp.neg x9))))
(check-sat)
