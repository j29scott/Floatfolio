(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x10) (fp.neg x3)) (fp.div RNE (fp.sub RNE x12 x0) (fp.add RNE x4 x12))) (fp.div RNE (fp.add RNE (fp.sub RNE x12 x11) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x1 x13) (fp.add RNE x15 x1)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.mul RNE x7 x2) (fp.neg x14)) (fp.div RNE (fp.div RNE x14 x10) (fp.div RNE x10 x11))) (fp.neg (fp.neg (fp.mul RNE x6 x2)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x12) (fp.mul RNE x15 x16)) (fp.add RNE (fp.sub RNE x5 x7) (fp.div RNE x2 x2))) (fp.div RNE (fp.div RNE (fp.neg x3) (fp.neg x0)) (fp.neg (fp.div RNE x2 x5)))))
(check-sat)
