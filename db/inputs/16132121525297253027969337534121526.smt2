(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x10 x5) (fp.div RNE x5 x2)))
(assert (fp.eq (fp.sub RNE x11 x8) (fp.mul RNE x1 x11)))
(assert (fp.leq (fp.sub RNE x11 x5) (fp.neg x12)))
(assert (fp.leq (fp.neg x10) (fp.sub RNE x3 x5)))
(assert (fp.leq (fp.sub RNE x4 x3) (fp.sub RNE x4 x9)))
(assert (fp.leq (fp.mul RNE x7 x12) (fp.div RNE x9 x2)))
(assert (fp.lt (fp.div RNE x5 x3) (fp.mul RNE x2 x10)))
(assert (fp.geq (fp.div RNE x5 x5) (fp.neg x11)))
(assert (fp.lt (fp.div RNE x6 x10) (fp.mul RNE x10 x12)))
(assert (fp.leq (fp.div RNE x8 x7) (fp.neg x6)))
(assert (fp.geq (fp.mul RNE x6 x6) (fp.neg x5)))
(check-sat)
