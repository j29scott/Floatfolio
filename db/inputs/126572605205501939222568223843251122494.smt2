(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x3 x3) (fp.neg x8)))
(assert (fp.eq (fp.add RNE x9 x13) (fp.div RNE x2 x19)))
(assert (fp.leq (fp.add RNE x3 x13) (fp.neg x20)))
(assert (fp.geq (fp.sub RNE x12 x20) (fp.add RNE x4 x11)))
(assert (fp.leq (fp.neg x9) (fp.div RNE x19 x19)))
(assert (fp.geq (fp.mul RNE x15 x17) (fp.neg x21)))
(assert (fp.gt (fp.sub RNE x5 x11) (fp.sub RNE x3 x2)))
(assert (fp.eq (fp.div RNE x5 x14) (fp.div RNE x10 x13)))
(assert (fp.geq (fp.neg x19) (fp.sub RNE x14 x4)))
(assert (fp.geq (fp.div RNE x5 x11) (fp.sub RNE x14 x20)))
(assert (fp.eq (fp.add RNE x9 x5) (fp.add RNE x20 x10)))
(check-sat)
