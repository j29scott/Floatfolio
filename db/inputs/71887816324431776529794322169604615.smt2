(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x9) (fp.neg x4)) (fp.mul RNE (fp.div RNE x1 x3) (fp.mul RNE x5 x6))) (fp.div RNE (fp.add RNE (fp.sub RNE x4 x6) (fp.sub RNE x0 x6)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x8 x8)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x5) (fp.mul RNE x8 x5)) (fp.sub RNE (fp.add RNE x5 x6) (fp.div RNE x9 x5))) (fp.neg (fp.add RNE (fp.add RNE x1 x3) (fp.sub RNE x2 x3)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE x0 x9)) (fp.neg (fp.sub RNE x0 x7))) (fp.add RNE (fp.add RNE (fp.add RNE x8 x9) (fp.div RNE x1 x7)) (fp.neg (fp.neg x4)))))
(check-sat)
