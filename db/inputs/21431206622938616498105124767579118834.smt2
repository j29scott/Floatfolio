(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.neg x8) (fp.mul RNE x9 x9)) (fp.add RNE (fp.div RNE x1 x2) (fp.neg x8))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.neg (fp.neg x9))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x10 x10) (fp.div RNE x10 x3)) (fp.mul RNE (fp.sub RNE x7 x10) (fp.neg x7))))
(assert (fp.geq (fp.div RNE (fp.add RNE x3 x0) (fp.mul RNE x10 x1)) (fp.sub RNE (fp.add RNE x4 x5) (fp.sub RNE x2 x7))))
(assert (fp.eq (fp.div RNE (fp.div RNE x3 x0) (fp.div RNE x11 x4)) (fp.neg (fp.neg x8))))
(assert (fp.gt (fp.add RNE (fp.div RNE x3 x0) (fp.add RNE x1 x6)) (fp.div RNE (fp.sub RNE x11 x5) (fp.add RNE x6 x1))))
(assert (fp.geq (fp.div RNE (fp.add RNE x6 x2) (fp.add RNE x7 x5)) (fp.add RNE (fp.mul RNE x2 x11) (fp.neg x5))))
(assert (fp.eq (fp.sub RNE (fp.neg x11) (fp.sub RNE x6 x3)) (fp.mul RNE (fp.mul RNE x3 x10) (fp.mul RNE x2 x1))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x2 x5) (fp.div RNE x2 x3)) (fp.div RNE (fp.add RNE x4 x8) (fp.sub RNE x6 x9))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x8 x7) (fp.mul RNE x3 x8)) (fp.sub RNE (fp.sub RNE x9 x8) (fp.sub RNE x1 x10))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x4 x9) (fp.neg x9)) (fp.div RNE (fp.sub RNE x1 x6) (fp.mul RNE x6 x2))))
(assert (fp.geq (fp.neg (fp.div RNE x2 x1)) (fp.mul RNE (fp.neg x7) (fp.div RNE x5 x5))))
(check-sat)
