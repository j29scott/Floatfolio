(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x1 x0)) (fp.mul RNE (fp.neg x0) (fp.add RNE x3 x6))) (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x0) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x3 x7) (fp.div RNE x5 x8)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.add RNE x7 x7)) (fp.sub RNE (fp.div RNE x1 x6) (fp.neg x3))) (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x0) (fp.sub RNE x7 x5)) (fp.div RNE (fp.mul RNE x4 x6) (fp.neg x6)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x2) (fp.neg x8)) (fp.div RNE (fp.neg x2) (fp.div RNE x8 x1))) (fp.neg (fp.neg (fp.add RNE x2 x4)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x7 x1) (fp.sub RNE x5 x0)) (fp.sub RNE (fp.div RNE x4 x5) (fp.sub RNE x6 x7))) (fp.div RNE (fp.div RNE (fp.sub RNE x2 x4) (fp.neg x5)) (fp.div RNE (fp.neg x8) (fp.add RNE x2 x3)))))
(check-sat)
