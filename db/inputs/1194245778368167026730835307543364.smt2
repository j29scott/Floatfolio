(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x8 x5) (fp.mul RNE x4 x8)))
(assert (fp.leq (fp.div RNE x1 x0) (fp.div RNE x5 x4)))
(assert (fp.geq (fp.add RNE x9 x0) (fp.mul RNE x0 x8)))
(assert (fp.leq (fp.add RNE x9 x7) (fp.neg x9)))
(assert (fp.leq (fp.neg x6) (fp.add RNE x3 x3)))
(assert (fp.leq (fp.mul RNE x6 x4) (fp.mul RNE x0 x6)))
(assert (fp.geq (fp.div RNE x1 x7) (fp.add RNE x2 x7)))
(assert (fp.lt (fp.div RNE x5 x0) (fp.div RNE x8 x0)))
(assert (fp.leq (fp.neg x5) (fp.neg x1)))
(assert (fp.eq (fp.add RNE x2 x1) (fp.mul RNE x9 x4)))
(assert (fp.lt (fp.sub RNE x0 x5) (fp.mul RNE x6 x4)))
(assert (fp.lt (fp.sub RNE x0 x9) (fp.sub RNE x6 x2)))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x8 x4)))
(assert (fp.leq (fp.add RNE x9 x1) (fp.mul RNE x1 x3)))
(assert (fp.lt (fp.mul RNE x2 x2) (fp.div RNE x6 x7)))
(assert (fp.lt (fp.sub RNE x7 x2) (fp.sub RNE x9 x5)))
(check-sat)
