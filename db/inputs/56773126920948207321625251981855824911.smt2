(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE x4 x7) (fp.div RNE x15 x21)) (fp.add RNE (fp.div RNE x17 x14) (fp.sub RNE x16 x2))))
(assert (fp.eq (fp.neg (fp.sub RNE x15 x15)) (fp.neg (fp.add RNE x10 x3))))
(assert (fp.lt (fp.sub RNE (fp.neg x10) (fp.div RNE x13 x2)) (fp.mul RNE (fp.add RNE x8 x14) (fp.mul RNE x13 x0))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x11 x16) (fp.add RNE x14 x15)) (fp.add RNE (fp.sub RNE x12 x19) (fp.add RNE x10 x21))))
(assert (fp.eq (fp.neg (fp.div RNE x8 x7)) (fp.sub RNE (fp.add RNE x18 x18) (fp.mul RNE x20 x4))))
(check-sat)
