(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.neg (fp.add RNE (fp.sub RNE x3 x11) (fp.neg x5))) (fp.neg (fp.div RNE (fp.neg x13) (fp.mul RNE x14 x6)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.neg x14) (fp.sub RNE x12 x14)) (fp.add RNE (fp.add RNE x18 x2) (fp.neg x1))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x10 x12)) (fp.add RNE (fp.mul RNE x10 x0) (fp.add RNE x7 x8))) (fp.sub RNE (fp.neg (fp.sub RNE x17 x14)) (fp.add RNE (fp.sub RNE x6 x10) (fp.div RNE x7 x0)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x9 x10) (fp.neg x9)) (fp.sub RNE (fp.div RNE x5 x11) (fp.neg x5))) (fp.mul RNE (fp.div RNE (fp.mul RNE x17 x13) (fp.div RNE x10 x17)) (fp.sub RNE (fp.neg x16) (fp.neg x19))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.neg (fp.div RNE x18 x9)) (fp.mul RNE (fp.mul RNE x4 x12) (fp.div RNE x17 x10))) (fp.div RNE (fp.mul RNE (fp.div RNE x4 x18) (fp.mul RNE x3 x12)) (fp.mul RNE (fp.neg x17) (fp.sub RNE x10 x15)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x13 x17) (fp.neg x21)) (fp.neg (fp.add RNE x18 x2))) (fp.mul RNE (fp.mul RNE (fp.div RNE x15 x20) (fp.sub RNE x0 x15)) (fp.add RNE (fp.neg x4) (fp.div RNE x8 x17))))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x18 x18) (fp.neg x20)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x21 x15) (fp.add RNE x8 x14)) (fp.neg (fp.mul RNE x15 x13))) (fp.neg (fp.add RNE (fp.sub RNE x9 x1) (fp.add RNE x16 x12))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE (fp.add RNE x3 x14) (fp.mul RNE x21 x7)) (fp.sub RNE (fp.mul RNE x17 x5) (fp.neg x3)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.neg x11) (fp.add RNE x21 x16)) (fp.sub RNE (fp.sub RNE x20 x21) (fp.mul RNE x12 x6))) (fp.mul RNE (fp.div RNE (fp.add RNE x17 x1) (fp.sub RNE x6 x12)) (fp.add RNE (fp.sub RNE x20 x16) (fp.sub RNE x14 x18))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg (fp.mul RNE x19 x15)) (fp.add RNE (fp.sub RNE x12 x6) (fp.sub RNE x7 x19))) (fp.add RNE (fp.div RNE (fp.add RNE x18 x15) (fp.add RNE x2 x21)) (fp.neg (fp.neg x8)))) (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x9 x4) (fp.sub RNE x19 x15)) (fp.add RNE (fp.add RNE x4 x16) (fp.mul RNE x19 x18))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.neg x19) (fp.mul RNE x18 x13)) (fp.neg (fp.neg x20))) (fp.div RNE (fp.add RNE (fp.div RNE x21 x10) (fp.neg x8)) (fp.neg (fp.sub RNE x7 x1)))) (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x13 x4)) (fp.neg (fp.div RNE x2 x16))) (fp.div RNE (fp.div RNE (fp.div RNE x20 x9) (fp.neg x6)) (fp.div RNE (fp.mul RNE x18 x4) (fp.div RNE x18 x4))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE (fp.add RNE x5 x11) (fp.neg x9))) (fp.add RNE (fp.add RNE (fp.div RNE x17 x9) (fp.sub RNE x4 x7)) (fp.div RNE (fp.neg x14) (fp.add RNE x3 x19)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x17) (fp.neg x16)) (fp.div RNE (fp.neg x15) (fp.div RNE x12 x15))))))
(check-sat)
