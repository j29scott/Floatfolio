(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE x4 x0) (fp.add RNE x5 x3)))
(assert (fp.geq (fp.mul RNE x4 x1) (fp.add RNE x3 x2)))
(assert (fp.gt (fp.div RNE x7 x8) (fp.neg x8)))
(assert (fp.eq (fp.sub RNE x6 x8) (fp.div RNE x1 x4)))
(assert (fp.leq (fp.add RNE x4 x1) (fp.sub RNE x7 x5)))
(assert (fp.gt (fp.neg x1) (fp.div RNE x2 x6)))
(assert (fp.geq (fp.neg x7) (fp.neg x0)))
(assert (fp.lt (fp.add RNE x7 x2) (fp.sub RNE x4 x7)))
(assert (fp.eq (fp.add RNE x3 x1) (fp.add RNE x4 x8)))
(assert (fp.leq (fp.mul RNE x1 x1) (fp.div RNE x3 x5)))
(assert (fp.geq (fp.mul RNE x1 x8) (fp.mul RNE x1 x4)))
(assert (fp.geq (fp.div RNE x5 x6) (fp.neg x2)))
(check-sat)
