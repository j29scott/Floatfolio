(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.div RNE x6 x6) (fp.div RNE x10 x3)) (fp.div RNE (fp.sub RNE x11 x10) (fp.add RNE x7 x2))))
(assert (fp.gt (fp.add RNE (fp.neg x1) (fp.add RNE x8 x9)) (fp.mul RNE (fp.neg x6) (fp.add RNE x9 x2))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x2 x12) (fp.neg x2)) (fp.div RNE (fp.div RNE x8 x6) (fp.neg x11))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x6 x12) (fp.add RNE x1 x2)) (fp.add RNE (fp.add RNE x9 x12) (fp.sub RNE x0 x1))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x11 x8) (fp.neg x8)) (fp.neg (fp.sub RNE x10 x2))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x6 x10) (fp.neg x7)) (fp.div RNE (fp.neg x0) (fp.neg x7))))
(assert (fp.eq (fp.add RNE (fp.neg x8) (fp.add RNE x12 x2)) (fp.sub RNE (fp.sub RNE x11 x3) (fp.mul RNE x7 x13))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x0 x13) (fp.neg x13)) (fp.div RNE (fp.sub RNE x6 x13) (fp.sub RNE x10 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x11 x11) (fp.sub RNE x1 x3)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.div RNE x2 x5))))
(assert (fp.gt (fp.neg (fp.add RNE x3 x2)) (fp.sub RNE (fp.mul RNE x13 x11) (fp.mul RNE x11 x7))))
(assert (fp.eq (fp.mul RNE (fp.neg x9) (fp.add RNE x8 x7)) (fp.sub RNE (fp.add RNE x12 x9) (fp.add RNE x2 x3))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x10 x10) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x13 x13) (fp.sub RNE x11 x3))))
(assert (fp.geq (fp.neg (fp.sub RNE x11 x6)) (fp.div RNE (fp.sub RNE x10 x13) (fp.neg x3))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x10 x12) (fp.sub RNE x7 x11)) (fp.add RNE (fp.add RNE x10 x8) (fp.sub RNE x0 x1))))
(assert (fp.gt (fp.add RNE (fp.add RNE x8 x2) (fp.mul RNE x3 x13)) (fp.add RNE (fp.neg x8) (fp.mul RNE x5 x2))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x7 x0) (fp.sub RNE x0 x1)) (fp.sub RNE (fp.sub RNE x7 x4) (fp.mul RNE x2 x5))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x4 x12) (fp.div RNE x1 x10)) (fp.mul RNE (fp.sub RNE x7 x11) (fp.mul RNE x6 x13))))
(check-sat)
