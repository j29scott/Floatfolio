(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE x10 x4) (fp.add RNE x9 x12)) (fp.mul RNE (fp.sub RNE x12 x10) (fp.mul RNE x9 x10))) (fp.div RNE (fp.div RNE (fp.sub RNE x1 x7) (fp.div RNE x7 x6)) (fp.neg (fp.mul RNE x2 x8)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x1 x4) (fp.mul RNE x5 x3))) (fp.neg (fp.sub RNE (fp.sub RNE x13 x2) (fp.add RNE x6 x12)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.div RNE x12 x7)) (fp.mul RNE (fp.div RNE x10 x9) (fp.sub RNE x6 x10))) (fp.add RNE (fp.add RNE (fp.mul RNE x12 x7) (fp.mul RNE x13 x2)) (fp.neg (fp.mul RNE x10 x5)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.mul RNE x11 x5) (fp.div RNE x6 x9)) (fp.neg (fp.add RNE x4 x1))) (fp.sub RNE (fp.add RNE (fp.mul RNE x13 x6) (fp.add RNE x7 x8)) (fp.sub RNE (fp.div RNE x5 x6) (fp.div RNE x5 x10)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg x2) (fp.div RNE x13 x5)) (fp.div RNE (fp.neg x8) (fp.add RNE x6 x5))) (fp.neg (fp.add RNE (fp.mul RNE x4 x4) (fp.div RNE x10 x1)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.mul RNE x3 x9) (fp.sub RNE x6 x1)) (fp.mul RNE (fp.add RNE x0 x5) (fp.mul RNE x13 x0))) (fp.neg (fp.sub RNE (fp.div RNE x6 x9) (fp.div RNE x10 x12)))))
(check-sat)
