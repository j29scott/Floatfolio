(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x6 x16) (fp.sub RNE x19 x16)) (fp.div RNE (fp.sub RNE x9 x17) (fp.mul RNE x18 x16))))
(assert (fp.geq (fp.mul RNE (fp.neg x3) (fp.neg x7)) (fp.neg (fp.sub RNE x21 x11))))
(assert (fp.gt (fp.add RNE (fp.neg x12) (fp.div RNE x6 x7)) (fp.add RNE (fp.add RNE x23 x9) (fp.mul RNE x7 x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x8) (fp.add RNE x6 x14)) (fp.div RNE (fp.neg x15) (fp.div RNE x21 x4))))
(assert (fp.leq (fp.neg (fp.add RNE x15 x21)) (fp.mul RNE (fp.add RNE x6 x21) (fp.add RNE x1 x23))))
(assert (fp.gt (fp.neg (fp.mul RNE x13 x1)) (fp.sub RNE (fp.sub RNE x13 x21) (fp.neg x11))))
(assert (fp.leq (fp.neg (fp.neg x0)) (fp.neg (fp.sub RNE x15 x0))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x10 x17) (fp.add RNE x14 x17)) (fp.add RNE (fp.sub RNE x4 x3) (fp.add RNE x1 x22))))
(assert (fp.gt (fp.neg (fp.div RNE x19 x22)) (fp.neg (fp.sub RNE x1 x14))))
(check-sat)
