(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x8 x3) (fp.div RNE x7 x10)))
(assert (fp.geq (fp.sub RNE x7 x6) (fp.neg x11)))
(assert (fp.leq (fp.mul RNE x12 x0) (fp.mul RNE x11 x2)))
(assert (fp.eq (fp.div RNE x2 x2) (fp.add RNE x3 x2)))
(assert (fp.lt (fp.add RNE x11 x3) (fp.mul RNE x12 x0)))
(assert (fp.leq (fp.sub RNE x11 x7) (fp.add RNE x4 x7)))
(assert (fp.leq (fp.neg x8) (fp.mul RNE x8 x5)))
(assert (fp.leq (fp.div RNE x1 x5) (fp.add RNE x5 x7)))
(assert (fp.gt (fp.add RNE x4 x11) (fp.neg x9)))
(assert (fp.geq (fp.add RNE x1 x2) (fp.neg x7)))
(assert (fp.lt (fp.div RNE x4 x12) (fp.mul RNE x3 x6)))
(assert (fp.lt (fp.mul RNE x4 x12) (fp.mul RNE x5 x4)))
(assert (fp.gt (fp.sub RNE x11 x11) (fp.add RNE x11 x0)))
(check-sat)
