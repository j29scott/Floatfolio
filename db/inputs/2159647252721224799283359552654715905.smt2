(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x16 x7)) (fp.add RNE (fp.sub RNE x11 x18) (fp.mul RNE x1 x16))) (fp.neg (fp.mul RNE (fp.add RNE x19 x2) (fp.sub RNE x13 x17)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x17 x21) (fp.add RNE x11 x0)) (fp.div RNE (fp.neg x18) (fp.sub RNE x3 x1))) (fp.div RNE (fp.neg (fp.neg x21)) (fp.neg (fp.sub RNE x9 x3)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x18) (fp.sub RNE x21 x22)) (fp.add RNE (fp.mul RNE x16 x10) (fp.div RNE x9 x8))) (fp.div RNE (fp.add RNE (fp.sub RNE x15 x12) (fp.add RNE x18 x16)) (fp.neg (fp.add RNE x22 x1)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x9 x17) (fp.neg x0)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.div RNE (fp.sub RNE x6 x13) (fp.sub RNE x14 x22)) (fp.sub RNE (fp.sub RNE x13 x17) (fp.div RNE x20 x17)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x9 x4) (fp.sub RNE x4 x16)) (fp.sub RNE (fp.add RNE x19 x22) (fp.div RNE x10 x3))) (fp.mul RNE (fp.neg (fp.sub RNE x12 x9)) (fp.div RNE (fp.neg x14) (fp.mul RNE x18 x8)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg x20) (fp.neg x1)) (fp.div RNE (fp.sub RNE x1 x4) (fp.add RNE x1 x4))) (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x22) (fp.add RNE x21 x13)) (fp.neg (fp.add RNE x7 x10)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x18) (fp.sub RNE x15 x14))) (fp.mul RNE (fp.add RNE (fp.neg x2) (fp.neg x12)) (fp.neg (fp.add RNE x22 x6)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x19) (fp.div RNE x16 x20)) (fp.mul RNE (fp.add RNE x19 x8) (fp.add RNE x15 x19))) (fp.add RNE (fp.neg (fp.add RNE x22 x11)) (fp.sub RNE (fp.mul RNE x4 x20) (fp.sub RNE x16 x4)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x0 x22)) (fp.add RNE (fp.add RNE x15 x20) (fp.add RNE x20 x12))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x12 x3) (fp.add RNE x12 x9)) (fp.add RNE (fp.neg x0) (fp.add RNE x18 x15)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.div RNE x18 x5)) (fp.div RNE (fp.mul RNE x7 x17) (fp.add RNE x11 x14))) (fp.neg (fp.sub RNE (fp.sub RNE x20 x20) (fp.div RNE x11 x20)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.sub RNE x21 x13) (fp.mul RNE x22 x11))) (fp.div RNE (fp.mul RNE (fp.sub RNE x18 x21) (fp.mul RNE x8 x6)) (fp.sub RNE (fp.div RNE x20 x2) (fp.div RNE x8 x4)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x15) (fp.neg x22)) (fp.sub RNE (fp.div RNE x15 x12) (fp.neg x21))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x19 x3) (fp.sub RNE x19 x22)) (fp.sub RNE (fp.sub RNE x14 x13) (fp.div RNE x4 x17)))))
(check-sat)
