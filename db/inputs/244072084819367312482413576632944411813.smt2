(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x1) (fp.mul RNE x5 x0)))
(assert (fp.leq (fp.div RNE x0 x2) (fp.mul RNE x3 x5)))
(assert (fp.leq (fp.div RNE x6 x6) (fp.neg x3)))
(assert (fp.eq (fp.mul RNE x2 x7) (fp.div RNE x4 x2)))
(assert (fp.eq (fp.mul RNE x5 x0) (fp.add RNE x2 x2)))
(assert (fp.gt (fp.sub RNE x7 x4) (fp.neg x7)))
(assert (fp.gt (fp.add RNE x5 x0) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x2 x5) (fp.div RNE x6 x2)))
(assert (fp.eq (fp.mul RNE x2 x0) (fp.sub RNE x6 x2)))
(assert (fp.gt (fp.div RNE x6 x7) (fp.sub RNE x0 x2)))
(assert (fp.gt (fp.mul RNE x3 x6) (fp.div RNE x5 x4)))
(assert (fp.leq (fp.sub RNE x3 x7) (fp.div RNE x5 x7)))
(assert (fp.leq (fp.add RNE x5 x2) (fp.div RNE x7 x5)))
(assert (fp.gt (fp.div RNE x4 x6) (fp.sub RNE x7 x3)))
(assert (fp.geq (fp.neg x1) (fp.mul RNE x0 x6)))
(assert (fp.gt (fp.neg x2) (fp.mul RNE x7 x4)))
(check-sat)
