(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE x21 x9) (fp.add RNE x20 x6)) (fp.mul RNE (fp.neg x7) (fp.div RNE x21 x2))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x22 x1) (fp.neg x22)) (fp.div RNE (fp.mul RNE x22 x7) (fp.div RNE x7 x20))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x2 x6) (fp.sub RNE x3 x17)) (fp.add RNE (fp.neg x3) (fp.sub RNE x0 x0))))
(assert (fp.geq (fp.neg (fp.mul RNE x19 x18)) (fp.add RNE (fp.neg x17) (fp.add RNE x8 x1))))
(assert (fp.lt (fp.add RNE (fp.add RNE x14 x5) (fp.mul RNE x24 x19)) (fp.neg (fp.add RNE x22 x21))))
(assert (fp.eq (fp.neg (fp.sub RNE x22 x11)) (fp.neg (fp.sub RNE x6 x16))))
(check-sat)
