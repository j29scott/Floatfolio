(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x10 x1) (fp.mul RNE x17 x2)) (fp.div RNE (fp.sub RNE x1 x24) (fp.add RNE x2 x17))) (fp.neg (fp.mul RNE (fp.add RNE x4 x24) (fp.div RNE x20 x17)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.div RNE x12 x15) (fp.neg x10)) (fp.div RNE (fp.neg x6) (fp.neg x0))) (fp.mul RNE (fp.add RNE (fp.add RNE x5 x17) (fp.add RNE x9 x25)) (fp.add RNE (fp.add RNE x15 x5) (fp.sub RNE x18 x8)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE x2 x6) (fp.div RNE x19 x21)) (fp.add RNE (fp.add RNE x21 x22) (fp.sub RNE x24 x17))) (fp.add RNE (fp.add RNE (fp.sub RNE x20 x21) (fp.mul RNE x14 x14)) (fp.add RNE (fp.div RNE x23 x14) (fp.neg x3)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x24 x22) (fp.add RNE x11 x20))) (fp.mul RNE (fp.mul RNE (fp.neg x9) (fp.mul RNE x19 x14)) (fp.div RNE (fp.mul RNE x23 x3) (fp.neg x15)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.neg x6)) (fp.mul RNE (fp.neg x15) (fp.add RNE x5 x3))) (fp.add RNE (fp.div RNE (fp.mul RNE x5 x24) (fp.div RNE x7 x3)) (fp.div RNE (fp.mul RNE x1 x18) (fp.mul RNE x1 x18)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.add RNE x13 x25) (fp.neg x14)) (fp.add RNE (fp.add RNE x10 x14) (fp.sub RNE x7 x12))) (fp.add RNE (fp.sub RNE (fp.div RNE x23 x8) (fp.div RNE x9 x15)) (fp.sub RNE (fp.add RNE x3 x0) (fp.neg x4)))))
(check-sat)
