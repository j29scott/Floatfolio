(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.add RNE x4 x7) (fp.neg x4)) (fp.neg (fp.div RNE x3 x1))))
(assert (fp.leq (fp.neg (fp.div RNE x3 x9)) (fp.add RNE (fp.add RNE x10 x10) (fp.neg x10))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x10 x0) (fp.add RNE x17 x12)) (fp.add RNE (fp.sub RNE x11 x0) (fp.neg x3))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x12 x6) (fp.add RNE x15 x11)) (fp.sub RNE (fp.div RNE x17 x13) (fp.div RNE x17 x10))))
(assert (fp.eq (fp.neg (fp.sub RNE x14 x17)) (fp.add RNE (fp.div RNE x3 x5) (fp.mul RNE x3 x10))))
(assert (fp.eq (fp.add RNE (fp.div RNE x15 x12) (fp.sub RNE x12 x17)) (fp.neg (fp.sub RNE x10 x0))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x4 x15) (fp.add RNE x15 x15)) (fp.sub RNE (fp.add RNE x8 x17) (fp.sub RNE x9 x11))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x0 x7) (fp.mul RNE x17 x0)) (fp.sub RNE (fp.div RNE x12 x5) (fp.neg x5))))
(assert (fp.lt (fp.div RNE (fp.neg x7) (fp.mul RNE x8 x16)) (fp.add RNE (fp.add RNE x9 x0) (fp.add RNE x16 x5))))
(assert (fp.eq (fp.neg (fp.neg x2)) (fp.add RNE (fp.neg x3) (fp.add RNE x6 x6))))
(assert (fp.eq (fp.div RNE (fp.div RNE x0 x0) (fp.sub RNE x9 x0)) (fp.mul RNE (fp.neg x16) (fp.mul RNE x5 x3))))
(assert (fp.leq (fp.div RNE (fp.neg x5) (fp.sub RNE x1 x9)) (fp.div RNE (fp.add RNE x6 x1) (fp.add RNE x17 x3))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x0 x14) (fp.div RNE x14 x9)) (fp.div RNE (fp.add RNE x8 x14) (fp.div RNE x14 x15))))
(assert (fp.gt (fp.div RNE (fp.div RNE x14 x14) (fp.neg x2)) (fp.sub RNE (fp.sub RNE x3 x13) (fp.add RNE x17 x8))))
(assert (fp.lt (fp.div RNE (fp.add RNE x17 x7) (fp.add RNE x13 x3)) (fp.add RNE (fp.add RNE x5 x6) (fp.add RNE x11 x11))))
(assert (fp.geq (fp.neg (fp.neg x17)) (fp.div RNE (fp.sub RNE x4 x2) (fp.mul RNE x3 x10))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x10 x6) (fp.div RNE x4 x15)) (fp.neg (fp.sub RNE x4 x17))))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x9) (fp.div RNE x6 x6)) (fp.neg (fp.neg x4))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x16 x11) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x11 x13) (fp.sub RNE x1 x6))))
(check-sat)
