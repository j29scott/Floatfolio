(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x4) (fp.div RNE x1 x3)) (fp.div RNE (fp.mul RNE x0 x5) (fp.sub RNE x4 x2))) (fp.div RNE (fp.neg (fp.sub RNE x4 x1)) (fp.sub RNE (fp.mul RNE x2 x7) (fp.add RNE x8 x3)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.mul RNE x0 x2) (fp.add RNE x2 x0)) (fp.sub RNE (fp.mul RNE x2 x0) (fp.neg x0))) (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x1) (fp.div RNE x0 x0)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.div RNE x3 x2)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x8 x2) (fp.mul RNE x7 x1)) (fp.mul RNE (fp.div RNE x0 x1) (fp.neg x0))) (fp.mul RNE (fp.sub RNE (fp.div RNE x3 x5) (fp.mul RNE x2 x5)) (fp.neg (fp.neg x8)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.add RNE x8 x4) (fp.neg x8))) (fp.neg (fp.add RNE (fp.neg x8) (fp.sub RNE x0 x1)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE x6 x2) (fp.neg x4)) (fp.div RNE (fp.neg x0) (fp.div RNE x0 x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x8 x1) (fp.neg x8)) (fp.neg (fp.div RNE x8 x8)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.add RNE x5 x5)) (fp.sub RNE (fp.sub RNE x7 x0) (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.sub RNE x6 x3) (fp.div RNE x5 x3)) (fp.add RNE (fp.div RNE x5 x1) (fp.add RNE x5 x6)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.neg x6)) (fp.div RNE (fp.div RNE x7 x8) (fp.mul RNE x4 x4))) (fp.mul RNE (fp.add RNE (fp.sub RNE x7 x4) (fp.div RNE x7 x2)) (fp.add RNE (fp.neg x0) (fp.div RNE x6 x2)))))
(check-sat)
