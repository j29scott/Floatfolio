(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x4 x4) (fp.add RNE x1 x10)) (fp.sub RNE (fp.add RNE x6 x6) (fp.neg x7))) (fp.sub RNE (fp.add RNE (fp.mul RNE x10 x8) (fp.sub RNE x7 x7)) (fp.neg (fp.neg x3)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x7 x11) (fp.mul RNE x11 x6)) (fp.div RNE (fp.add RNE x5 x3) (fp.add RNE x8 x3))) (fp.mul RNE (fp.neg (fp.add RNE x11 x7)) (fp.div RNE (fp.div RNE x5 x11) (fp.mul RNE x7 x10)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE x9 x8) (fp.div RNE x6 x0)) (fp.add RNE (fp.sub RNE x9 x8) (fp.mul RNE x1 x3))) (fp.neg (fp.add RNE (fp.neg x3) (fp.div RNE x4 x5)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.div RNE x7 x6) (fp.div RNE x10 x5)) (fp.mul RNE (fp.div RNE x6 x8) (fp.mul RNE x7 x7))) (fp.sub RNE (fp.div RNE (fp.mul RNE x5 x6) (fp.add RNE x4 x0)) (fp.mul RNE (fp.neg x5) (fp.neg x10)))))
(check-sat)
