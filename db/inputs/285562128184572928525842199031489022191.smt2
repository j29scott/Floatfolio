(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x11) (fp.mul RNE x3 x7)) (fp.sub RNE (fp.sub RNE x13 x5) (fp.add RNE x11 x4))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x6 x14) (fp.mul RNE x4 x14)) (fp.div RNE (fp.sub RNE x10 x17) (fp.sub RNE x11 x12))))
(assert (fp.eq (fp.div RNE (fp.div RNE x12 x3) (fp.mul RNE x1 x16)) (fp.add RNE (fp.neg x16) (fp.div RNE x17 x5))))
(assert (fp.gt (fp.neg (fp.mul RNE x5 x18)) (fp.div RNE (fp.div RNE x9 x19) (fp.sub RNE x19 x5))))
(assert (fp.lt (fp.div RNE (fp.div RNE x0 x4) (fp.neg x16)) (fp.neg (fp.div RNE x3 x15))))
(check-sat)
