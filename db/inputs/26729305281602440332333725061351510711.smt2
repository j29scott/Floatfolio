(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.add RNE x4 x2) (fp.add RNE x9 x1)) (fp.add RNE (fp.div RNE x11 x5) (fp.sub RNE x12 x11))))
(assert (fp.leq (fp.add RNE (fp.neg x14) (fp.neg x2)) (fp.sub RNE (fp.add RNE x4 x14) (fp.div RNE x1 x10))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x7) (fp.add RNE x1 x8)) (fp.neg (fp.mul RNE x1 x8))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x14 x1) (fp.sub RNE x10 x10)) (fp.add RNE (fp.mul RNE x8 x4) (fp.sub RNE x0 x6))))
(assert (fp.lt (fp.sub RNE (fp.neg x1) (fp.add RNE x2 x6)) (fp.add RNE (fp.mul RNE x1 x5) (fp.mul RNE x11 x13))))
(assert (fp.gt (fp.neg (fp.mul RNE x13 x14)) (fp.neg (fp.add RNE x2 x5))))
(assert (fp.geq (fp.div RNE (fp.div RNE x11 x10) (fp.mul RNE x6 x13)) (fp.div RNE (fp.neg x5) (fp.div RNE x1 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x0 x13) (fp.mul RNE x6 x3)) (fp.add RNE (fp.add RNE x7 x7) (fp.neg x8))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x7 x3) (fp.div RNE x14 x14)) (fp.neg (fp.div RNE x0 x5))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x9 x10) (fp.neg x6)) (fp.neg (fp.mul RNE x6 x7))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x9 x14) (fp.add RNE x4 x13)) (fp.sub RNE (fp.add RNE x3 x5) (fp.div RNE x2 x10))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x14 x6) (fp.sub RNE x10 x0)) (fp.neg (fp.add RNE x13 x14))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x5 x5) (fp.mul RNE x8 x5)) (fp.mul RNE (fp.add RNE x9 x12) (fp.add RNE x12 x7))))
(assert (fp.eq (fp.div RNE (fp.div RNE x8 x12) (fp.add RNE x10 x12)) (fp.mul RNE (fp.mul RNE x13 x3) (fp.sub RNE x7 x6))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x2 x12) (fp.mul RNE x10 x3)) (fp.sub RNE (fp.sub RNE x11 x10) (fp.div RNE x4 x9))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x14 x9) (fp.neg x10)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x5 x4) (fp.neg x2)) (fp.sub RNE (fp.div RNE x12 x0) (fp.neg x11))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x0 x13) (fp.sub RNE x6 x13)) (fp.neg (fp.div RNE x6 x8))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x4 x12) (fp.sub RNE x2 x12)) (fp.add RNE (fp.neg x3) (fp.neg x10))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x3 x8) (fp.div RNE x9 x9)) (fp.mul RNE (fp.div RNE x7 x3) (fp.add RNE x13 x5))))
(check-sat)
