(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE x0 x21) (fp.sub RNE x12 x10)) (fp.sub RNE (fp.neg x0) (fp.div RNE x7 x6))) (fp.div RNE (fp.sub RNE (fp.neg x10) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x5 x11) (fp.sub RNE x0 x7)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x7 x4) (fp.div RNE x5 x17)) (fp.add RNE (fp.add RNE x0 x18) (fp.div RNE x18 x6))) (fp.div RNE (fp.div RNE (fp.neg x9) (fp.sub RNE x18 x16)) (fp.mul RNE (fp.div RNE x23 x1) (fp.sub RNE x19 x0)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x18)) (fp.neg (fp.div RNE x22 x23))) (fp.div RNE (fp.neg (fp.sub RNE x5 x2)) (fp.add RNE (fp.sub RNE x19 x14) (fp.add RNE x11 x8)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg x13)) (fp.neg (fp.div RNE x12 x5))) (fp.div RNE (fp.sub RNE (fp.neg x12) (fp.mul RNE x13 x9)) (fp.div RNE (fp.sub RNE x5 x22) (fp.mul RNE x16 x22)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE x18 x12) (fp.div RNE x16 x10)) (fp.add RNE (fp.sub RNE x8 x22) (fp.mul RNE x10 x12))) (fp.neg (fp.neg (fp.add RNE x14 x23)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x18 x7) (fp.add RNE x4 x16)) (fp.add RNE (fp.neg x1) (fp.mul RNE x15 x19))) (fp.mul RNE (fp.div RNE (fp.sub RNE x10 x10) (fp.div RNE x14 x2)) (fp.mul RNE (fp.sub RNE x12 x0) (fp.add RNE x19 x20)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x20) (fp.mul RNE x7 x21)) (fp.add RNE (fp.neg x21) (fp.add RNE x11 x13))) (fp.neg (fp.div RNE (fp.neg x6) (fp.div RNE x1 x18)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x13 x2) (fp.add RNE x20 x2)) (fp.neg (fp.add RNE x20 x5))) (fp.sub RNE (fp.add RNE (fp.sub RNE x6 x19) (fp.add RNE x17 x14)) (fp.neg (fp.add RNE x11 x2)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.neg x6) (fp.sub RNE x10 x4)) (fp.neg (fp.neg x2))) (fp.mul RNE (fp.sub RNE (fp.div RNE x21 x20) (fp.div RNE x12 x13)) (fp.mul RNE (fp.neg x16) (fp.sub RNE x15 x18)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x0 x4) (fp.sub RNE x13 x0)) (fp.add RNE (fp.div RNE x18 x3) (fp.sub RNE x1 x20))) (fp.neg (fp.add RNE (fp.add RNE x3 x8) (fp.div RNE x21 x13)))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x1 x20))) (fp.div RNE (fp.add RNE (fp.sub RNE x17 x1) (fp.div RNE x1 x5)) (fp.mul RNE (fp.add RNE x12 x5) (fp.div RNE x1 x3)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x3 x7) (fp.sub RNE x5 x0))) (fp.sub RNE (fp.mul RNE (fp.div RNE x16 x13) (fp.neg x13)) (fp.neg (fp.mul RNE x10 x16)))))
(check-sat)
