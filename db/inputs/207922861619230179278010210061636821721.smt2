(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.neg x4) (fp.sub RNE x7 x0)) (fp.div RNE (fp.add RNE x1 x0) (fp.mul RNE x10 x0))))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x12) (fp.neg x13)) (fp.div RNE (fp.div RNE x8 x9) (fp.sub RNE x8 x1))))
(assert (fp.eq (fp.add RNE (fp.neg x2) (fp.add RNE x2 x10)) (fp.sub RNE (fp.mul RNE x13 x3) (fp.div RNE x6 x3))))
(assert (fp.geq (fp.div RNE (fp.div RNE x4 x4) (fp.div RNE x1 x2)) (fp.div RNE (fp.div RNE x8 x13) (fp.add RNE x5 x1))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x9 x9) (fp.neg x6)) (fp.div RNE (fp.div RNE x9 x8) (fp.add RNE x10 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x13 x11)) (fp.neg (fp.mul RNE x3 x12))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x9) (fp.sub RNE x0 x3)) (fp.neg (fp.sub RNE x12 x9))))
(check-sat)
