(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x1 x0)) (fp.add RNE (fp.mul RNE x4 x1) (fp.div RNE x7 x7))) (fp.div RNE (fp.add RNE (fp.mul RNE x0 x6) (fp.add RNE x7 x11)) (fp.sub RNE (fp.div RNE x3 x5) (fp.mul RNE x1 x9)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.neg x0) (fp.mul RNE x3 x5)) (fp.neg (fp.sub RNE x2 x1))) (fp.add RNE (fp.mul RNE (fp.neg x4) (fp.div RNE x4 x3)) (fp.mul RNE (fp.neg x3) (fp.sub RNE x2 x2))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.neg x4)) (fp.neg (fp.add RNE x1 x0))) (fp.div RNE (fp.mul RNE (fp.mul RNE x8 x11) (fp.sub RNE x2 x1)) (fp.div RNE (fp.sub RNE x11 x5) (fp.neg x10)))) (fp.neg (fp.neg (fp.sub RNE (fp.neg x3) (fp.neg x5))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.neg x8) (fp.div RNE x9 x9)) (fp.div RNE (fp.neg x11) (fp.neg x5))) (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x1) (fp.div RNE x0 x5)) (fp.mul RNE (fp.neg x2) (fp.neg x3)))) (fp.div RNE (fp.add RNE (fp.neg (fp.add RNE x3 x1)) (fp.neg (fp.neg x11))) (fp.add RNE (fp.add RNE (fp.neg x1) (fp.div RNE x10 x1)) (fp.add RNE (fp.neg x0) (fp.mul RNE x7 x5))))))
(check-sat)
