(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x6 x7) (fp.sub RNE x1 x5)))
(assert (fp.eq (fp.mul RNE x9 x4) (fp.add RNE x1 x6)))
(assert (fp.geq (fp.mul RNE x4 x3) (fp.sub RNE x7 x8)))
(assert (fp.gt (fp.add RNE x3 x8) (fp.div RNE x5 x1)))
(assert (fp.gt (fp.neg x0) (fp.mul RNE x7 x2)))
(assert (fp.geq (fp.sub RNE x5 x1) (fp.sub RNE x1 x6)))
(assert (fp.geq (fp.neg x10) (fp.add RNE x5 x2)))
(assert (fp.geq (fp.add RNE x6 x5) (fp.mul RNE x4 x2)))
(assert (fp.geq (fp.add RNE x2 x3) (fp.sub RNE x4 x5)))
(assert (fp.lt (fp.sub RNE x4 x6) (fp.div RNE x2 x8)))
(assert (fp.eq (fp.neg x10) (fp.mul RNE x5 x7)))
(assert (fp.eq (fp.div RNE x2 x10) (fp.neg x2)))
(assert (fp.eq (fp.mul RNE x3 x5) (fp.sub RNE x6 x0)))
(assert (fp.lt (fp.mul RNE x6 x7) (fp.sub RNE x0 x3)))
(check-sat)
