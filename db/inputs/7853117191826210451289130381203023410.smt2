(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x1) (fp.div RNE x3 x7)) (fp.div RNE (fp.mul RNE x10 x8) (fp.add RNE x7 x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x9 x0) (fp.sub RNE x0 x0)) (fp.add RNE (fp.mul RNE x4 x5) (fp.div RNE x4 x2)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x3 x6) (fp.sub RNE x9 x6)) (fp.neg (fp.neg x0))) (fp.neg (fp.sub RNE (fp.sub RNE x1 x1) (fp.add RNE x7 x3)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x0 x9)) (fp.neg (fp.mul RNE x0 x9))) (fp.div RNE (fp.neg (fp.sub RNE x5 x5)) (fp.add RNE (fp.mul RNE x10 x7) (fp.div RNE x4 x3)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x3 x0) (fp.neg x7)) (fp.add RNE (fp.sub RNE x3 x3) (fp.neg x10))) (fp.sub RNE (fp.div RNE (fp.add RNE x10 x5) (fp.mul RNE x6 x6)) (fp.sub RNE (fp.neg x7) (fp.neg x0)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x0 x1) (fp.add RNE x7 x1))) (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x7) (fp.neg x10)) (fp.neg (fp.div RNE x10 x2)))))
(check-sat)
