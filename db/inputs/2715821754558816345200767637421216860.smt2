(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.div RNE x3 x0) (fp.div RNE x7 x4)) (fp.sub RNE (fp.sub RNE x3 x3) (fp.div RNE x2 x1))))
(assert (fp.gt (fp.neg (fp.neg x7)) (fp.sub RNE (fp.add RNE x6 x1) (fp.mul RNE x0 x6))))
(assert (fp.gt (fp.neg (fp.div RNE x7 x5)) (fp.mul RNE (fp.mul RNE x1 x6) (fp.div RNE x3 x7))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x5 x1) (fp.add RNE x0 x2)) (fp.div RNE (fp.mul RNE x5 x3) (fp.neg x0))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x1 x1) (fp.mul RNE x5 x2)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x2 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x7 x2) (fp.neg x6)) (fp.add RNE (fp.div RNE x0 x1) (fp.sub RNE x4 x0))))
(check-sat)
