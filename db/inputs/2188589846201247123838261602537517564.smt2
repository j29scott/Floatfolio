(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE x5 x0) (fp.neg x2)) (fp.add RNE (fp.neg x4) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x8 x5) (fp.neg x0)) (fp.div RNE (fp.div RNE x12 x12) (fp.neg x13))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x12 x13) (fp.neg x12)) (fp.sub RNE (fp.mul RNE x6 x5) (fp.add RNE x10 x1))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x3 x12) (fp.mul RNE x3 x3)) (fp.mul RNE (fp.mul RNE x4 x3) (fp.mul RNE x13 x4))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x2 x11) (fp.div RNE x6 x11)) (fp.div RNE (fp.neg x13) (fp.sub RNE x9 x7))))
(assert (fp.gt (fp.add RNE (fp.add RNE x3 x7) (fp.sub RNE x7 x12)) (fp.neg (fp.div RNE x11 x2))))
(assert (fp.lt (fp.add RNE (fp.add RNE x10 x1) (fp.neg x8)) (fp.div RNE (fp.add RNE x0 x11) (fp.div RNE x11 x5))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x3 x11) (fp.sub RNE x9 x9)) (fp.neg (fp.add RNE x2 x6))))
(assert (fp.lt (fp.div RNE (fp.div RNE x13 x10) (fp.div RNE x1 x4)) (fp.div RNE (fp.add RNE x11 x13) (fp.div RNE x0 x8))))
(check-sat)
