(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x16 x21) (fp.neg x11)) (fp.neg (fp.div RNE x20 x3))))
(assert (fp.lt (fp.sub RNE (fp.neg x11) (fp.mul RNE x5 x2)) (fp.div RNE (fp.mul RNE x8 x8) (fp.sub RNE x13 x20))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x12 x7) (fp.neg x18)) (fp.sub RNE (fp.sub RNE x16 x20) (fp.sub RNE x4 x17))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x14 x0) (fp.sub RNE x15 x16)) (fp.div RNE (fp.neg x13) (fp.mul RNE x13 x14))))
(assert (fp.geq (fp.div RNE (fp.add RNE x2 x8) (fp.div RNE x17 x3)) (fp.div RNE (fp.div RNE x20 x11) (fp.mul RNE x19 x9))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x17 x9) (fp.sub RNE x1 x6)) (fp.div RNE (fp.div RNE x16 x18) (fp.div RNE x21 x12))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x13 x19) (fp.sub RNE x16 x7)) (fp.mul RNE (fp.neg x8) (fp.add RNE x1 x4))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x21 x4) (fp.mul RNE x15 x12)) (fp.mul RNE (fp.div RNE x11 x0) (fp.neg x12))))
(assert (fp.gt (fp.neg (fp.div RNE x5 x2)) (fp.sub RNE (fp.neg x14) (fp.add RNE x12 x19))))
(assert (fp.lt (fp.neg (fp.add RNE x11 x8)) (fp.neg (fp.add RNE x20 x8))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x20 x5) (fp.sub RNE x9 x16)) (fp.sub RNE (fp.mul RNE x3 x16) (fp.neg x8))))
(assert (fp.eq (fp.mul RNE (fp.neg x3) (fp.mul RNE x12 x9)) (fp.div RNE (fp.div RNE x8 x7) (fp.add RNE x12 x5))))
(assert (fp.lt (fp.neg (fp.mul RNE x18 x17)) (fp.mul RNE (fp.mul RNE x11 x11) (fp.neg x9))))
(assert (fp.gt (fp.add RNE (fp.div RNE x11 x18) (fp.div RNE x8 x5)) (fp.div RNE (fp.div RNE x9 x19) (fp.neg x19))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x8 x14) (fp.neg x15)) (fp.sub RNE (fp.neg x5) (fp.neg x0))))
(check-sat)
