(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.add RNE x10 x11) (fp.sub RNE x24 x2)) (fp.add RNE (fp.mul RNE x7 x15) (fp.sub RNE x20 x23))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x26 x2) (fp.neg x18)) (fp.mul RNE (fp.sub RNE x19 x4) (fp.mul RNE x7 x9))))
(assert (fp.leq (fp.neg (fp.sub RNE x3 x21)) (fp.sub RNE (fp.neg x26) (fp.sub RNE x22 x15))))
(assert (fp.leq (fp.neg (fp.div RNE x18 x8)) (fp.add RNE (fp.neg x5) (fp.div RNE x27 x1))))
(assert (fp.geq (fp.div RNE (fp.neg x25) (fp.add RNE x27 x18)) (fp.neg (fp.div RNE x14 x11))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x17 x1) (fp.neg x4)) (fp.mul RNE (fp.mul RNE x3 x21) (fp.add RNE x27 x18))))
(assert (fp.gt (fp.neg (fp.neg x18)) (fp.add RNE (fp.add RNE x0 x12) (fp.div RNE x25 x22))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x26 x7) (fp.add RNE x14 x16)) (fp.mul RNE (fp.neg x19) (fp.neg x3))))
(assert (fp.leq (fp.neg (fp.neg x12)) (fp.div RNE (fp.add RNE x5 x11) (fp.div RNE x23 x1))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x12 x24) (fp.neg x22)) (fp.add RNE (fp.div RNE x14 x6) (fp.add RNE x0 x21))))
(assert (fp.gt (fp.div RNE (fp.add RNE x27 x21) (fp.sub RNE x2 x19)) (fp.sub RNE (fp.sub RNE x5 x13) (fp.neg x17))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x13 x1) (fp.sub RNE x18 x4)) (fp.add RNE (fp.div RNE x6 x27) (fp.div RNE x20 x2))))
(check-sat)
