(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x0 x4) (fp.add RNE x1 x2)))
(assert (fp.lt (fp.div RNE x3 x4) (fp.sub RNE x3 x2)))
(assert (fp.gt (fp.add RNE x1 x4) (fp.mul RNE x1 x5)))
(assert (fp.leq (fp.div RNE x4 x2) (fp.neg x0)))
(assert (fp.lt (fp.add RNE x5 x5) (fp.add RNE x0 x2)))
(assert (fp.leq (fp.add RNE x5 x0) (fp.div RNE x2 x0)))
(assert (fp.lt (fp.mul RNE x3 x1) (fp.sub RNE x1 x5)))
(assert (fp.eq (fp.neg x3) (fp.mul RNE x1 x4)))
(assert (fp.geq (fp.add RNE x0 x1) (fp.neg x0)))
(assert (fp.geq (fp.neg x1) (fp.add RNE x2 x5)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x4 x1)))
(assert (fp.geq (fp.div RNE x5 x0) (fp.sub RNE x1 x0)))
(assert (fp.lt (fp.neg x1) (fp.div RNE x5 x1)))
(assert (fp.geq (fp.add RNE x5 x1) (fp.div RNE x5 x3)))
(check-sat)
