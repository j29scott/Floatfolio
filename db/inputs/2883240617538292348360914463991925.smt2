(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg x4) (fp.mul RNE x5 x0)) (fp.mul RNE (fp.mul RNE x3 x6) (fp.neg x5))))
(assert (fp.leq (fp.add RNE (fp.add RNE x7 x7) (fp.add RNE x1 x6)) (fp.neg (fp.add RNE x1 x6))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x5 x7) (fp.div RNE x2 x6)) (fp.sub RNE (fp.mul RNE x3 x0) (fp.sub RNE x5 x5))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x6 x2) (fp.mul RNE x6 x0)) (fp.add RNE (fp.sub RNE x1 x2) (fp.mul RNE x5 x7))))
(assert (fp.geq (fp.neg (fp.sub RNE x7 x2)) (fp.mul RNE (fp.mul RNE x5 x2) (fp.div RNE x3 x1))))
(assert (fp.eq (fp.sub RNE (fp.neg x4) (fp.sub RNE x4 x4)) (fp.add RNE (fp.div RNE x2 x3) (fp.neg x3))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x6) (fp.sub RNE x0 x0)) (fp.div RNE (fp.div RNE x1 x6) (fp.neg x4))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x2) (fp.mul RNE x0 x2)) (fp.neg (fp.neg x7))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x7 x2) (fp.neg x7)) (fp.add RNE (fp.mul RNE x3 x5) (fp.add RNE x3 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x2 x4) (fp.sub RNE x5 x0)) (fp.add RNE (fp.sub RNE x1 x4) (fp.div RNE x2 x5))))
(assert (fp.leq (fp.neg (fp.div RNE x3 x4)) (fp.neg (fp.div RNE x4 x6))))
(assert (fp.gt (fp.add RNE (fp.neg x0) (fp.sub RNE x2 x1)) (fp.neg (fp.neg x0))))
(assert (fp.geq (fp.add RNE (fp.neg x0) (fp.sub RNE x7 x3)) (fp.div RNE (fp.div RNE x0 x7) (fp.div RNE x0 x6))))
(assert (fp.leq (fp.neg (fp.mul RNE x2 x3)) (fp.div RNE (fp.div RNE x5 x3) (fp.mul RNE x5 x0))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x7 x4) (fp.neg x6)) (fp.neg (fp.mul RNE x2 x2))))
(assert (fp.geq (fp.mul RNE (fp.neg x4) (fp.mul RNE x4 x3)) (fp.sub RNE (fp.add RNE x4 x7) (fp.mul RNE x3 x7))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x5 x7) (fp.add RNE x7 x1)) (fp.div RNE (fp.mul RNE x2 x0) (fp.add RNE x5 x0))))
(assert (fp.gt (fp.add RNE (fp.neg x4) (fp.neg x3)) (fp.add RNE (fp.mul RNE x0 x2) (fp.neg x1))))
(assert (fp.geq (fp.neg (fp.neg x2)) (fp.neg (fp.add RNE x2 x3))))
(check-sat)
