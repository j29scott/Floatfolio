(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x10 x10) (fp.mul RNE x9 x1)) (fp.neg (fp.add RNE x6 x7))))
(assert (fp.eq (fp.neg (fp.div RNE x8 x4)) (fp.div RNE (fp.add RNE x9 x9) (fp.add RNE x10 x4))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x5 x8) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x2 x2))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x2 x9) (fp.div RNE x10 x2)) (fp.div RNE (fp.mul RNE x1 x2) (fp.add RNE x6 x10))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x10 x2) (fp.sub RNE x8 x7)) (fp.sub RNE (fp.mul RNE x8 x2) (fp.div RNE x8 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x7 x10) (fp.add RNE x5 x4)) (fp.div RNE (fp.sub RNE x3 x1) (fp.div RNE x8 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x4 x2) (fp.div RNE x9 x8)) (fp.neg (fp.sub RNE x7 x10))))
(assert (fp.leq (fp.neg (fp.neg x0)) (fp.add RNE (fp.add RNE x5 x10) (fp.neg x3))))
(assert (fp.eq (fp.neg (fp.sub RNE x5 x6)) (fp.div RNE (fp.neg x9) (fp.neg x5))))
(assert (fp.eq (fp.add RNE (fp.neg x4) (fp.neg x4)) (fp.div RNE (fp.neg x8) (fp.neg x7))))
(assert (fp.eq (fp.div RNE (fp.add RNE x3 x9) (fp.add RNE x6 x7)) (fp.sub RNE (fp.sub RNE x8 x0) (fp.mul RNE x6 x8))))
(assert (fp.leq (fp.neg (fp.neg x1)) (fp.sub RNE (fp.add RNE x2 x8) (fp.add RNE x10 x3))))
(assert (fp.gt (fp.sub RNE (fp.neg x9) (fp.sub RNE x3 x10)) (fp.neg (fp.div RNE x3 x0))))
(assert (fp.geq (fp.add RNE (fp.div RNE x8 x5) (fp.mul RNE x2 x1)) (fp.neg (fp.mul RNE x9 x9))))
(assert (fp.eq (fp.neg (fp.div RNE x10 x4)) (fp.div RNE (fp.sub RNE x9 x1) (fp.mul RNE x2 x9))))
(check-sat)
