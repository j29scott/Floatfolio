(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE x10 x16)) (fp.mul RNE (fp.div RNE x19 x2) (fp.sub RNE x11 x13))) (fp.neg (fp.add RNE (fp.sub RNE x16 x0) (fp.div RNE x25 x7)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.mul RNE x10 x24) (fp.add RNE x6 x9))) (fp.mul RNE (fp.add RNE (fp.neg x17) (fp.add RNE x19 x17)) (fp.mul RNE (fp.add RNE x16 x13) (fp.mul RNE x17 x4)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE x0 x23) (fp.add RNE x14 x6))) (fp.mul RNE (fp.neg (fp.mul RNE x0 x16)) (fp.add RNE (fp.sub RNE x26 x14) (fp.div RNE x15 x9)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE x26 x14) (fp.mul RNE x20 x9)) (fp.neg (fp.sub RNE x23 x1))) (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.neg x22)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.mul RNE x18 x12)))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE x22 x3))) (fp.add RNE (fp.neg (fp.sub RNE x1 x14)) (fp.add RNE (fp.add RNE x8 x21) (fp.div RNE x9 x13)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x17 x4) (fp.sub RNE x25 x25))) (fp.neg (fp.sub RNE (fp.neg x17) (fp.neg x8)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x19 x12) (fp.neg x20)) (fp.mul RNE (fp.sub RNE x1 x11) (fp.neg x22))) (fp.add RNE (fp.div RNE (fp.neg x8) (fp.mul RNE x23 x23)) (fp.mul RNE (fp.mul RNE x17 x9) (fp.sub RNE x16 x12)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE x24 x15) (fp.div RNE x12 x2)) (fp.neg (fp.add RNE x17 x10))) (fp.mul RNE (fp.neg (fp.mul RNE x12 x4)) (fp.div RNE (fp.mul RNE x7 x25) (fp.mul RNE x15 x0)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.mul RNE x14 x4)) (fp.add RNE (fp.div RNE x15 x27) (fp.add RNE x21 x26))) (fp.neg (fp.sub RNE (fp.neg x11) (fp.neg x8)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x16 x20) (fp.add RNE x17 x3))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x10 x24) (fp.sub RNE x5 x20)) (fp.neg (fp.sub RNE x17 x25)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x10) (fp.mul RNE x24 x26)) (fp.add RNE (fp.sub RNE x26 x21) (fp.neg x8))) (fp.neg (fp.mul RNE (fp.neg x10) (fp.neg x4)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.sub RNE x25 x26) (fp.div RNE x23 x9)) (fp.mul RNE (fp.mul RNE x6 x15) (fp.add RNE x25 x15))) (fp.sub RNE (fp.div RNE (fp.add RNE x2 x8) (fp.neg x8)) (fp.mul RNE (fp.add RNE x19 x25) (fp.add RNE x8 x8)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.mul RNE x16 x0) (fp.sub RNE x8 x5)) (fp.sub RNE (fp.neg x5) (fp.add RNE x13 x2))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x16 x25) (fp.add RNE x5 x18)) (fp.sub RNE (fp.mul RNE x18 x25) (fp.div RNE x26 x16)))))
(check-sat)
