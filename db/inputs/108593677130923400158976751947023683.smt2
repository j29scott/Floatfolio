(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE x6 x1) (fp.mul RNE x5 x9)) (fp.mul RNE (fp.neg x6) (fp.div RNE x16 x11))) (fp.sub RNE (fp.add RNE (fp.mul RNE x11 x12) (fp.div RNE x7 x11)) (fp.mul RNE (fp.add RNE x0 x11) (fp.mul RNE x3 x12)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x7 x6) (fp.mul RNE x5 x7)) (fp.div RNE (fp.div RNE x16 x14) (fp.add RNE x4 x7))) (fp.add RNE (fp.div RNE (fp.neg x15) (fp.div RNE x6 x2)) (fp.add RNE (fp.sub RNE x12 x13) (fp.neg x3)))))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE x3 x5))) (fp.sub RNE (fp.div RNE (fp.add RNE x10 x16) (fp.neg x10)) (fp.sub RNE (fp.div RNE x16 x7) (fp.neg x0)))))
(check-sat)
