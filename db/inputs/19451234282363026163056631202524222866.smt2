(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE x6 x9) (fp.add RNE x5 x1)))
(assert (fp.eq (fp.div RNE x6 x12) (fp.mul RNE x10 x0)))
(assert (fp.geq (fp.mul RNE x0 x3) (fp.add RNE x7 x8)))
(assert (fp.lt (fp.mul RNE x8 x7) (fp.add RNE x7 x7)))
(assert (fp.lt (fp.sub RNE x2 x12) (fp.div RNE x11 x8)))
(assert (fp.geq (fp.mul RNE x6 x11) (fp.neg x11)))
(assert (fp.geq (fp.add RNE x6 x1) (fp.div RNE x5 x11)))
(assert (fp.gt (fp.neg x3) (fp.neg x2)))
(assert (fp.gt (fp.add RNE x1 x12) (fp.neg x10)))
(assert (fp.lt (fp.div RNE x6 x6) (fp.sub RNE x11 x3)))
(assert (fp.leq (fp.sub RNE x2 x5) (fp.add RNE x6 x12)))
(assert (fp.leq (fp.div RNE x0 x2) (fp.sub RNE x7 x12)))
(assert (fp.lt (fp.sub RNE x0 x3) (fp.add RNE x9 x1)))
(assert (fp.eq (fp.add RNE x11 x10) (fp.div RNE x2 x12)))
(check-sat)
