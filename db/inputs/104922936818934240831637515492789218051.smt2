(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x10 x0) (fp.mul RNE x4 x1)))
(assert (fp.eq (fp.mul RNE x4 x3) (fp.neg x11)))
(assert (fp.eq (fp.neg x0) (fp.neg x6)))
(assert (fp.eq (fp.neg x4) (fp.neg x14)))
(assert (fp.geq (fp.neg x0) (fp.neg x1)))
(assert (fp.gt (fp.sub RNE x1 x10) (fp.div RNE x10 x12)))
(assert (fp.eq (fp.sub RNE x7 x1) (fp.mul RNE x2 x10)))
(assert (fp.eq (fp.sub RNE x11 x14) (fp.mul RNE x14 x7)))
(assert (fp.lt (fp.div RNE x10 x14) (fp.div RNE x6 x12)))
(assert (fp.geq (fp.neg x3) (fp.div RNE x3 x4)))
(assert (fp.leq (fp.sub RNE x6 x12) (fp.sub RNE x8 x7)))
(assert (fp.leq (fp.neg x12) (fp.neg x10)))
(assert (fp.leq (fp.add RNE x2 x6) (fp.neg x5)))
(assert (fp.lt (fp.div RNE x8 x15) (fp.sub RNE x12 x4)))
(check-sat)
