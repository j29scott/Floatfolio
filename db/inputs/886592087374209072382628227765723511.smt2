(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.mul RNE x7 x7)) (fp.sub RNE (fp.neg x3) (fp.div RNE x11 x6))))
(assert (fp.lt (fp.div RNE (fp.div RNE x3 x3) (fp.div RNE x5 x2)) (fp.mul RNE (fp.sub RNE x2 x8) (fp.sub RNE x10 x1))))
(assert (fp.leq (fp.neg (fp.mul RNE x0 x1)) (fp.mul RNE (fp.add RNE x2 x3) (fp.add RNE x5 x8))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x11 x8) (fp.add RNE x9 x8)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x9 x9))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x8 x7) (fp.sub RNE x11 x0)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x12 x6))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x8 x3) (fp.neg x10)) (fp.mul RNE (fp.add RNE x2 x6) (fp.neg x2))))
(check-sat)
