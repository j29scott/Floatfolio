(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x4 x14) (fp.div RNE x2 x4)))
(assert (fp.gt (fp.sub RNE x10 x5) (fp.sub RNE x3 x15)))
(assert (fp.leq (fp.mul RNE x8 x15) (fp.mul RNE x15 x8)))
(assert (fp.geq (fp.div RNE x11 x8) (fp.sub RNE x5 x6)))
(assert (fp.gt (fp.sub RNE x0 x1) (fp.mul RNE x0 x12)))
(assert (fp.leq (fp.div RNE x2 x3) (fp.mul RNE x5 x9)))
(assert (fp.geq (fp.sub RNE x10 x6) (fp.add RNE x5 x5)))
(assert (fp.gt (fp.mul RNE x7 x12) (fp.div RNE x6 x10)))
(assert (fp.lt (fp.div RNE x10 x2) (fp.sub RNE x8 x3)))
(assert (fp.eq (fp.sub RNE x13 x4) (fp.neg x13)))
(assert (fp.leq (fp.add RNE x10 x2) (fp.sub RNE x10 x8)))
(assert (fp.lt (fp.neg x0) (fp.add RNE x15 x3)))
(assert (fp.geq (fp.sub RNE x10 x1) (fp.add RNE x2 x10)))
(assert (fp.geq (fp.mul RNE x7 x7) (fp.neg x14)))
(assert (fp.lt (fp.add RNE x14 x1) (fp.sub RNE x14 x12)))
(assert (fp.eq (fp.mul RNE x9 x2) (fp.mul RNE x5 x5)))
(assert (fp.eq (fp.div RNE x2 x5) (fp.sub RNE x8 x7)))
(assert (fp.leq (fp.add RNE x2 x6) (fp.add RNE x15 x15)))
(assert (fp.gt (fp.neg x7) (fp.div RNE x7 x1)))
(check-sat)
