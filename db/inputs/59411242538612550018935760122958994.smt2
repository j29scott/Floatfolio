(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE x4 x9))) (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x3) (fp.sub RNE x4 x11)) (fp.mul RNE (fp.mul RNE x9 x16) (fp.sub RNE x7 x10)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x8) (fp.sub RNE x9 x12)) (fp.add RNE (fp.div RNE x12 x1) (fp.neg x6))) (fp.sub RNE (fp.add RNE (fp.div RNE x15 x0) (fp.add RNE x11 x5)) (fp.add RNE (fp.sub RNE x16 x12) (fp.mul RNE x11 x5)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE x16 x10) (fp.div RNE x0 x5)) (fp.add RNE (fp.add RNE x11 x17) (fp.neg x4))) (fp.add RNE (fp.mul RNE (fp.div RNE x2 x12) (fp.div RNE x14 x4)) (fp.div RNE (fp.mul RNE x8 x2) (fp.div RNE x6 x5)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.mul RNE x7 x15)) (fp.div RNE (fp.mul RNE x14 x11) (fp.sub RNE x3 x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x17 x10) (fp.neg x17)) (fp.add RNE (fp.neg x14) (fp.div RNE x4 x1)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE x10 x12) (fp.div RNE x14 x6))) (fp.div RNE (fp.neg (fp.add RNE x15 x11)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.sub RNE x17 x1)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.mul RNE x13 x15) (fp.sub RNE x15 x14))) (fp.neg (fp.div RNE (fp.sub RNE x13 x0) (fp.sub RNE x15 x11)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.div RNE x6 x3) (fp.mul RNE x0 x13)) (fp.add RNE (fp.mul RNE x5 x11) (fp.neg x17))) (fp.mul RNE (fp.sub RNE (fp.add RNE x15 x0) (fp.sub RNE x16 x9)) (fp.mul RNE (fp.add RNE x15 x17) (fp.add RNE x14 x10)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.add RNE x3 x10) (fp.neg x11))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x7) (fp.sub RNE x16 x8)) (fp.neg (fp.add RNE x0 x13)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x10 x15) (fp.neg x8)) (fp.add RNE (fp.sub RNE x0 x9) (fp.sub RNE x0 x10))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x4) (fp.sub RNE x15 x11)) (fp.add RNE (fp.neg x14) (fp.neg x11)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE x5 x14) (fp.add RNE x16 x0)) (fp.sub RNE (fp.add RNE x15 x9) (fp.div RNE x1 x0))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x8 x8) (fp.sub RNE x6 x11)) (fp.mul RNE (fp.add RNE x10 x2) (fp.div RNE x1 x14)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x13 x10) (fp.add RNE x9 x8))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x10 x12) (fp.div RNE x4 x3)) (fp.sub RNE (fp.add RNE x13 x6) (fp.neg x6)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x10 x14) (fp.div RNE x0 x15))) (fp.neg (fp.mul RNE (fp.sub RNE x3 x13) (fp.add RNE x14 x16)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x7 x10) (fp.div RNE x10 x4))) (fp.div RNE (fp.div RNE (fp.neg x5) (fp.neg x0)) (fp.mul RNE (fp.add RNE x9 x17) (fp.div RNE x14 x17)))))
(check-sat)
