(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE x6 x3)) (fp.sub RNE (fp.mul RNE x15 x20) (fp.sub RNE x16 x13))) (fp.neg (fp.div RNE (fp.sub RNE x10 x11) (fp.mul RNE x20 x4)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x16 x8) (fp.add RNE x8 x16))) (fp.mul RNE (fp.neg (fp.div RNE x10 x1)) (fp.mul RNE (fp.div RNE x11 x0) (fp.mul RNE x11 x0)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.add RNE x15 x15) (fp.mul RNE x7 x10)) (fp.add RNE (fp.neg x9) (fp.neg x2))) (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.div RNE x15 x19)) (fp.mul RNE (fp.sub RNE x2 x7) (fp.neg x2)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.sub RNE x18 x18) (fp.sub RNE x2 x7))) (fp.mul RNE (fp.neg (fp.mul RNE x15 x9)) (fp.sub RNE (fp.neg x10) (fp.neg x1)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x15 x11) (fp.mul RNE x19 x6)) (fp.neg (fp.sub RNE x1 x16))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x19 x7) (fp.neg x15)) (fp.mul RNE (fp.div RNE x18 x8) (fp.mul RNE x9 x9)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE x15 x2) (fp.add RNE x15 x2))) (fp.add RNE (fp.sub RNE (fp.neg x0) (fp.neg x3)) (fp.neg (fp.neg x12)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x12 x0)) (fp.neg (fp.sub RNE x18 x12))) (fp.add RNE (fp.neg (fp.add RNE x4 x2)) (fp.add RNE (fp.mul RNE x12 x10) (fp.add RNE x10 x16)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.sub RNE x3 x9)) (fp.sub RNE (fp.div RNE x21 x8) (fp.add RNE x19 x14))) (fp.neg (fp.add RNE (fp.mul RNE x18 x4) (fp.div RNE x1 x2)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.sub RNE x17 x13)) (fp.div RNE (fp.div RNE x20 x2) (fp.div RNE x6 x21))) (fp.neg (fp.mul RNE (fp.mul RNE x14 x2) (fp.sub RNE x0 x4)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg x18)) (fp.sub RNE (fp.div RNE x2 x15) (fp.neg x11))) (fp.div RNE (fp.mul RNE (fp.mul RNE x17 x3) (fp.sub RNE x21 x1)) (fp.add RNE (fp.add RNE x1 x11) (fp.sub RNE x9 x21)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE x16 x7) (fp.add RNE x4 x7))) (fp.add RNE (fp.neg (fp.div RNE x2 x4)) (fp.neg (fp.neg x10)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x16 x12) (fp.add RNE x0 x2))) (fp.sub RNE (fp.add RNE (fp.div RNE x16 x16) (fp.div RNE x16 x1)) (fp.add RNE (fp.mul RNE x1 x19) (fp.sub RNE x13 x15)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.sub RNE x10 x3) (fp.sub RNE x16 x0)) (fp.div RNE (fp.neg x14) (fp.neg x10))) (fp.add RNE (fp.neg (fp.sub RNE x11 x11)) (fp.sub RNE (fp.div RNE x21 x8) (fp.add RNE x17 x10)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.mul RNE x9 x2)) (fp.neg (fp.div RNE x15 x21))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x14) (fp.div RNE x12 x0)) (fp.div RNE (fp.add RNE x6 x6) (fp.add RNE x20 x15)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.sub RNE x1 x11)) (fp.sub RNE (fp.add RNE x18 x19) (fp.sub RNE x21 x17))) (fp.mul RNE (fp.mul RNE (fp.div RNE x9 x10) (fp.sub RNE x13 x20)) (fp.add RNE (fp.div RNE x10 x12) (fp.neg x18)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg x19) (fp.add RNE x16 x12)) (fp.sub RNE (fp.mul RNE x11 x11) (fp.sub RNE x16 x21))) (fp.neg (fp.neg (fp.div RNE x16 x1)))))
(check-sat)
