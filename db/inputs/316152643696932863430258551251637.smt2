(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.div RNE x2 x5)) (fp.mul RNE (fp.add RNE x10 x4) (fp.mul RNE x5 x1))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x5 x4) (fp.neg x8)) (fp.mul RNE (fp.add RNE x10 x0) (fp.sub RNE x1 x4))))
(assert (fp.leq (fp.add RNE (fp.div RNE x9 x7) (fp.add RNE x7 x9)) (fp.sub RNE (fp.add RNE x7 x0) (fp.mul RNE x7 x2))))
(assert (fp.leq (fp.neg (fp.mul RNE x0 x9)) (fp.add RNE (fp.add RNE x5 x8) (fp.sub RNE x8 x2))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x1 x3) (fp.mul RNE x9 x7)) (fp.div RNE (fp.div RNE x3 x0) (fp.mul RNE x3 x9))))
(check-sat)
