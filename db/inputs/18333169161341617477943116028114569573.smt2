(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE (fp.div RNE x9 x4) (fp.mul RNE x8 x11)) (fp.neg (fp.mul RNE x6 x12))) (fp.add RNE (fp.neg (fp.sub RNE x5 x11)) (fp.add RNE (fp.neg x3) (fp.mul RNE x5 x1)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.div RNE x9 x3) (fp.add RNE x9 x12)) (fp.neg (fp.sub RNE x1 x11))) (fp.sub RNE (fp.add RNE (fp.add RNE x8 x11) (fp.neg x2)) (fp.add RNE (fp.add RNE x1 x3) (fp.add RNE x10 x9))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE (fp.add RNE x0 x1) (fp.mul RNE x8 x9)) (fp.add RNE (fp.sub RNE x8 x8) (fp.sub RNE x0 x1))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x9) (fp.mul RNE x2 x3)) (fp.add RNE (fp.neg x4) (fp.add RNE x10 x10)))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x6 x7) (fp.add RNE x2 x5)) (fp.neg (fp.add RNE x9 x9))) (fp.neg (fp.neg (fp.div RNE x2 x5))))))
(check-sat)
