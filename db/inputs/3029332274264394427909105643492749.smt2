(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.div RNE x14 x21) (fp.add RNE x20 x9)) (fp.sub RNE (fp.mul RNE x14 x19) (fp.neg x13))) (fp.neg (fp.div RNE (fp.mul RNE x15 x21) (fp.add RNE x17 x3)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x7 x14) (fp.div RNE x14 x16)) (fp.sub RNE (fp.add RNE x17 x18) (fp.neg x20))) (fp.div RNE (fp.div RNE (fp.add RNE x11 x10) (fp.mul RNE x3 x8)) (fp.add RNE (fp.add RNE x12 x14) (fp.div RNE x17 x23))))))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE (fp.div RNE x5 x18) (fp.div RNE x7 x19)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x22 x8) (fp.neg x8)) (fp.add RNE (fp.sub RNE x15 x6) (fp.neg x23))) (fp.add RNE (fp.neg (fp.mul RNE x20 x12)) (fp.mul RNE (fp.neg x9) (fp.mul RNE x16 x9))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE (fp.sub RNE x20 x1) (fp.add RNE x11 x17)) (fp.mul RNE (fp.sub RNE x12 x6) (fp.sub RNE x20 x21)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.mul RNE x17 x1) (fp.div RNE x19 x19)) (fp.neg (fp.div RNE x22 x18))) (fp.mul RNE (fp.div RNE (fp.sub RNE x15 x4) (fp.sub RNE x18 x3)) (fp.add RNE (fp.mul RNE x19 x2) (fp.neg x17))))))
(check-sat)
