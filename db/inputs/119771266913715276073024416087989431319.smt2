(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE x12 x15) (fp.div RNE x17 x7)) (fp.neg (fp.neg x14))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x10 x13) (fp.neg x17)) (fp.add RNE (fp.sub RNE x7 x10) (fp.mul RNE x10 x5))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x17 x17) (fp.div RNE x11 x9)) (fp.add RNE (fp.add RNE x13 x12) (fp.mul RNE x14 x7))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x14 x4) (fp.mul RNE x10 x4)) (fp.add RNE (fp.sub RNE x8 x1) (fp.neg x9))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x1 x13) (fp.div RNE x12 x14)) (fp.sub RNE (fp.mul RNE x4 x6) (fp.mul RNE x13 x4))))
(assert (fp.leq (fp.add RNE (fp.add RNE x4 x12) (fp.div RNE x6 x16)) (fp.mul RNE (fp.sub RNE x15 x15) (fp.div RNE x15 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x11 x13) (fp.div RNE x16 x11)) (fp.neg (fp.sub RNE x16 x2))))
(assert (fp.geq (fp.neg (fp.sub RNE x1 x4)) (fp.neg (fp.div RNE x6 x16))))
(check-sat)
