(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.div RNE x23 x19) (fp.mul RNE x15 x2)) (fp.div RNE (fp.sub RNE x1 x19) (fp.neg x18))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x2 x10) (fp.add RNE x15 x27)) (fp.div RNE (fp.sub RNE x27 x0) (fp.mul RNE x26 x9))))
(assert (fp.leq (fp.sub RNE (fp.neg x1) (fp.div RNE x18 x13)) (fp.sub RNE (fp.mul RNE x14 x5) (fp.neg x6))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x3 x20) (fp.div RNE x13 x15)) (fp.mul RNE (fp.div RNE x26 x0) (fp.neg x3))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x23 x3) (fp.div RNE x20 x20)) (fp.div RNE (fp.mul RNE x2 x20) (fp.mul RNE x16 x15))))
(assert (fp.gt (fp.div RNE (fp.add RNE x9 x13) (fp.div RNE x2 x14)) (fp.div RNE (fp.mul RNE x0 x20) (fp.sub RNE x1 x25))))
(check-sat)
