(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE x15 x12) (fp.neg x0)))
(assert (fp.geq (fp.div RNE x10 x13) (fp.add RNE x1 x5)))
(assert (fp.eq (fp.mul RNE x1 x3) (fp.sub RNE x0 x14)))
(assert (fp.geq (fp.div RNE x15 x3) (fp.sub RNE x12 x13)))
(assert (fp.leq (fp.mul RNE x1 x16) (fp.mul RNE x2 x2)))
(assert (fp.lt (fp.add RNE x12 x0) (fp.sub RNE x15 x15)))
(assert (fp.leq (fp.add RNE x3 x1) (fp.div RNE x2 x9)))
(assert (fp.gt (fp.mul RNE x8 x8) (fp.div RNE x7 x5)))
(assert (fp.lt (fp.sub RNE x2 x1) (fp.div RNE x5 x8)))
(check-sat)
