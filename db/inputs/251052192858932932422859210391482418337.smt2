(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.neg (fp.mul RNE x4 x1)) (fp.neg (fp.div RNE x0 x6)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.neg x20) (fp.add RNE x5 x19)) (fp.sub RNE (fp.add RNE x2 x19) (fp.div RNE x9 x3))) (fp.add RNE (fp.sub RNE (fp.mul RNE x8 x20) (fp.add RNE x6 x4)) (fp.div RNE (fp.sub RNE x3 x9) (fp.sub RNE x12 x5))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.neg x14) (fp.mul RNE x17 x8)) (fp.neg (fp.mul RNE x20 x12))) (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x8) (fp.neg x9)) (fp.sub RNE (fp.sub RNE x5 x15) (fp.mul RNE x14 x9)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x1) (fp.mul RNE x7 x0)) (fp.sub RNE (fp.mul RNE x15 x6) (fp.sub RNE x18 x10))) (fp.neg (fp.div RNE (fp.div RNE x0 x10) (fp.div RNE x20 x6))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE (fp.add RNE x8 x15) (fp.div RNE x0 x20)) (fp.div RNE (fp.neg x3) (fp.neg x15))) (fp.mul RNE (fp.neg (fp.add RNE x1 x17)) (fp.add RNE (fp.div RNE x0 x11) (fp.add RNE x10 x17)))) (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x4 x9)) (fp.neg (fp.div RNE x10 x2))))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x14 x7) (fp.div RNE x15 x9)) (fp.neg (fp.div RNE x0 x14)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.add RNE x19 x0) (fp.div RNE x17 x2)) (fp.neg (fp.sub RNE x7 x6))) (fp.div RNE (fp.neg (fp.add RNE x19 x8)) (fp.sub RNE (fp.sub RNE x1 x12) (fp.div RNE x11 x16))))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.add RNE x17 x1) (fp.div RNE x17 x4)) (fp.neg (fp.mul RNE x2 x1))) (fp.add RNE (fp.add RNE (fp.sub RNE x11 x13) (fp.sub RNE x12 x3)) (fp.div RNE (fp.neg x1) (fp.add RNE x19 x7)))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.neg x12) (fp.add RNE x11 x9)) (fp.mul RNE (fp.mul RNE x6 x17) (fp.sub RNE x15 x13))) (fp.neg (fp.add RNE (fp.add RNE x15 x5) (fp.add RNE x11 x1))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.neg (fp.div RNE x6 x19)) (fp.add RNE (fp.neg x2) (fp.add RNE x1 x16))) (fp.mul RNE (fp.add RNE (fp.add RNE x4 x13) (fp.div RNE x1 x6)) (fp.div RNE (fp.neg x11) (fp.neg x6)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x17) (fp.neg x1)) (fp.add RNE (fp.neg x7) (fp.add RNE x2 x0))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x5 x8) (fp.add RNE x17 x7)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x20 x7))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x18 x0) (fp.sub RNE x5 x18)) (fp.div RNE (fp.neg x19) (fp.sub RNE x15 x2)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x13 x0) (fp.div RNE x14 x17)) (fp.neg (fp.neg x9))) (fp.div RNE (fp.add RNE (fp.add RNE x17 x3) (fp.neg x9)) (fp.div RNE (fp.add RNE x6 x17) (fp.neg x11))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE (fp.neg x20) (fp.add RNE x6 x15))) (fp.sub RNE (fp.add RNE (fp.neg x0) (fp.mul RNE x11 x5)) (fp.div RNE (fp.mul RNE x17 x1) (fp.div RNE x11 x6)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.mul RNE x3 x1) (fp.div RNE x4 x12))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x10) (fp.div RNE x13 x17)) (fp.div RNE (fp.add RNE x15 x19) (fp.mul RNE x18 x0))))))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE (fp.neg x9) (fp.div RNE x18 x20)))) (fp.neg (fp.div RNE (fp.neg (fp.neg x5)) (fp.add RNE (fp.div RNE x16 x16) (fp.neg x13))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE (fp.mul RNE x11 x2) (fp.sub RNE x2 x17)) (fp.neg (fp.sub RNE x14 x5)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.mul RNE x12 x11) (fp.add RNE x12 x2)) (fp.mul RNE (fp.div RNE x9 x17) (fp.add RNE x11 x16))) (fp.mul RNE (fp.add RNE (fp.sub RNE x0 x15) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x3 x15) (fp.sub RNE x3 x8))))))
(check-sat)
