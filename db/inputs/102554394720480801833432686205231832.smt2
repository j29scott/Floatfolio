(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE x10 x13) (fp.add RNE x12 x3)) (fp.neg (fp.div RNE x4 x9))) (fp.sub RNE (fp.neg (fp.add RNE x0 x14)) (fp.add RNE (fp.neg x1) (fp.mul RNE x15 x10)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE x14 x14) (fp.sub RNE x8 x0))) (fp.neg (fp.add RNE (fp.div RNE x10 x10) (fp.mul RNE x14 x9)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.mul RNE x1 x12) (fp.div RNE x6 x14)) (fp.mul RNE (fp.mul RNE x10 x12) (fp.mul RNE x2 x7))) (fp.neg (fp.add RNE (fp.mul RNE x5 x4) (fp.sub RNE x1 x5)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x0 x13)) (fp.div RNE (fp.mul RNE x6 x6) (fp.add RNE x14 x2))) (fp.mul RNE (fp.div RNE (fp.add RNE x0 x2) (fp.neg x10)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x2 x15)))))
(check-sat)
