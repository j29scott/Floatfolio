(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x4 x0)))
(assert (fp.lt (fp.neg x0) (fp.add RNE x5 x5)))
(assert (fp.eq (fp.div RNE x8 x0) (fp.div RNE x4 x2)))
(assert (fp.geq (fp.div RNE x5 x0) (fp.add RNE x7 x6)))
(assert (fp.eq (fp.add RNE x2 x0) (fp.mul RNE x3 x0)))
(assert (fp.geq (fp.add RNE x0 x2) (fp.add RNE x6 x0)))
(assert (fp.lt (fp.add RNE x2 x6) (fp.mul RNE x8 x4)))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x7 x8)))
(assert (fp.eq (fp.div RNE x2 x5) (fp.neg x3)))
(assert (fp.eq (fp.sub RNE x1 x5) (fp.mul RNE x4 x8)))
(assert (fp.gt (fp.div RNE x7 x1) (fp.sub RNE x7 x8)))
(assert (fp.geq (fp.div RNE x7 x0) (fp.div RNE x0 x6)))
(assert (fp.gt (fp.add RNE x2 x4) (fp.add RNE x0 x8)))
(assert (fp.geq (fp.add RNE x0 x5) (fp.add RNE x7 x5)))
(assert (fp.lt (fp.mul RNE x3 x1) (fp.mul RNE x5 x5)))
(assert (fp.lt (fp.sub RNE x7 x8) (fp.sub RNE x2 x5)))
(check-sat)
