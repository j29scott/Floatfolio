(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.add RNE x4 x3) (fp.neg x4)) (fp.add RNE (fp.add RNE x12 x1) (fp.mul RNE x11 x1))))
(assert (fp.eq (fp.sub RNE (fp.neg x12) (fp.add RNE x10 x10)) (fp.div RNE (fp.div RNE x13 x6) (fp.add RNE x2 x11))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x1 x12) (fp.mul RNE x13 x13)) (fp.add RNE (fp.div RNE x3 x9) (fp.mul RNE x6 x3))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x6 x0) (fp.sub RNE x3 x0)) (fp.div RNE (fp.neg x4) (fp.neg x7))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x12 x9) (fp.sub RNE x1 x2)) (fp.add RNE (fp.add RNE x5 x5) (fp.add RNE x6 x4))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x5 x3) (fp.div RNE x5 x6)) (fp.sub RNE (fp.div RNE x7 x13) (fp.add RNE x9 x2))))
(assert (fp.gt (fp.sub RNE (fp.neg x10) (fp.div RNE x5 x5)) (fp.add RNE (fp.div RNE x8 x8) (fp.sub RNE x2 x4))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x4) (fp.add RNE x8 x8)) (fp.add RNE (fp.div RNE x9 x4) (fp.sub RNE x8 x12))))
(assert (fp.gt (fp.neg (fp.sub RNE x4 x3)) (fp.mul RNE (fp.div RNE x12 x12) (fp.neg x13))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x11 x3) (fp.mul RNE x12 x9)) (fp.mul RNE (fp.mul RNE x0 x1) (fp.div RNE x13 x5))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x6 x7) (fp.neg x10)) (fp.div RNE (fp.mul RNE x13 x3) (fp.neg x3))))
(check-sat)
