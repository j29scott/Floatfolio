(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x3 x1)))
(assert (fp.leq (fp.mul RNE x4 x0) (fp.neg x1)))
(assert (fp.eq (fp.add RNE x1 x2) (fp.neg x3)))
(assert (fp.leq (fp.neg x2) (fp.add RNE x1 x5)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x5 x5)))
(assert (fp.geq (fp.sub RNE x1 x3) (fp.mul RNE x1 x4)))
(assert (fp.leq (fp.neg x0) (fp.div RNE x2 x1)))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x2 x2)))
(assert (fp.eq (fp.neg x1) (fp.sub RNE x2 x5)))
(assert (fp.lt (fp.mul RNE x4 x3) (fp.add RNE x5 x1)))
(assert (fp.lt (fp.sub RNE x1 x4) (fp.sub RNE x4 x1)))
(assert (fp.lt (fp.neg x0) (fp.sub RNE x0 x0)))
(assert (fp.gt (fp.neg x1) (fp.sub RNE x3 x4)))
(assert (fp.geq (fp.sub RNE x4 x3) (fp.div RNE x3 x2)))
(assert (fp.lt (fp.neg x5) (fp.neg x3)))
(assert (fp.gt (fp.mul RNE x3 x5) (fp.add RNE x3 x3)))
(assert (fp.geq (fp.mul RNE x4 x4) (fp.neg x3)))
(check-sat)
