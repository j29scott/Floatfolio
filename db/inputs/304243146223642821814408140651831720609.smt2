(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x5 x1) (fp.mul RNE x11 x2)))
(assert (fp.lt (fp.div RNE x0 x12) (fp.neg x2)))
(assert (fp.geq (fp.sub RNE x5 x12) (fp.mul RNE x7 x3)))
(assert (fp.lt (fp.add RNE x1 x16) (fp.add RNE x12 x0)))
(assert (fp.leq (fp.mul RNE x13 x1) (fp.sub RNE x9 x3)))
(assert (fp.geq (fp.neg x4) (fp.mul RNE x9 x12)))
(assert (fp.eq (fp.add RNE x16 x16) (fp.add RNE x12 x5)))
(assert (fp.gt (fp.add RNE x8 x12) (fp.sub RNE x15 x7)))
(assert (fp.gt (fp.div RNE x0 x9) (fp.neg x0)))
(assert (fp.eq (fp.neg x14) (fp.div RNE x16 x10)))
(check-sat)
