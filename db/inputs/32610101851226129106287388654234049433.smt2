(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE x7 x9) (fp.add RNE x6 x1)) (fp.mul RNE (fp.sub RNE x3 x6) (fp.div RNE x3 x7))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x6 x5) (fp.mul RNE x1 x8)) (fp.mul RNE (fp.sub RNE x4 x9) (fp.add RNE x4 x2))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x0 x8) (fp.sub RNE x1 x5)) (fp.sub RNE (fp.add RNE x9 x7) (fp.div RNE x8 x5))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x6 x2) (fp.add RNE x6 x6)) (fp.mul RNE (fp.mul RNE x4 x6) (fp.mul RNE x10 x5))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x0 x8) (fp.neg x4)) (fp.sub RNE (fp.div RNE x5 x5) (fp.mul RNE x6 x6))))
(assert (fp.geq (fp.div RNE (fp.add RNE x5 x3) (fp.add RNE x8 x9)) (fp.neg (fp.mul RNE x5 x6))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x3 x1) (fp.mul RNE x2 x9)) (fp.div RNE (fp.mul RNE x9 x2) (fp.neg x5))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x4 x2) (fp.add RNE x4 x3)) (fp.add RNE (fp.div RNE x1 x6) (fp.div RNE x8 x6))))
(assert (fp.eq (fp.add RNE (fp.div RNE x5 x6) (fp.add RNE x4 x3)) (fp.div RNE (fp.add RNE x3 x6) (fp.neg x7))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x5 x10) (fp.neg x2)) (fp.div RNE (fp.div RNE x0 x8) (fp.mul RNE x2 x4))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x9 x8) (fp.sub RNE x9 x5)) (fp.neg (fp.sub RNE x5 x0))))
(check-sat)
