(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg x4) (fp.div RNE x6 x9)) (fp.neg (fp.add RNE x6 x4))) (fp.mul RNE (fp.sub RNE (fp.add RNE x13 x4) (fp.sub RNE x4 x2)) (fp.div RNE (fp.mul RNE x10 x9) (fp.div RNE x1 x5)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x10) (fp.neg x0)) (fp.mul RNE (fp.neg x12) (fp.mul RNE x13 x9))) (fp.neg (fp.sub RNE (fp.sub RNE x9 x8) (fp.sub RNE x13 x2)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.mul RNE x7 x2) (fp.mul RNE x2 x2)) (fp.mul RNE (fp.div RNE x9 x1) (fp.mul RNE x1 x2))) (fp.add RNE (fp.div RNE (fp.div RNE x6 x13) (fp.div RNE x1 x13)) (fp.div RNE (fp.div RNE x2 x9) (fp.sub RNE x0 x11)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x11) (fp.add RNE x8 x9)) (fp.add RNE (fp.mul RNE x13 x6) (fp.sub RNE x11 x11))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x12) (fp.mul RNE x5 x5)) (fp.mul RNE (fp.sub RNE x1 x9) (fp.mul RNE x13 x4)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x7 x11) (fp.sub RNE x7 x1))) (fp.neg (fp.add RNE (fp.neg x12) (fp.mul RNE x11 x3)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x9))) (fp.div RNE (fp.div RNE (fp.neg x9) (fp.neg x4)) (fp.add RNE (fp.add RNE x13 x2) (fp.neg x5)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x1) (fp.add RNE x11 x11)) (fp.div RNE (fp.add RNE x8 x11) (fp.mul RNE x11 x2))) (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x8) (fp.div RNE x13 x4)) (fp.neg (fp.add RNE x3 x7)))))
(check-sat)
