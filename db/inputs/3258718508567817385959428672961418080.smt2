(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.neg x14) (fp.sub RNE x8 x14)) (fp.neg (fp.add RNE x0 x0))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x7 x20) (fp.neg x7)) (fp.mul RNE (fp.neg x20) (fp.mul RNE x18 x1))))
(assert (fp.gt (fp.div RNE (fp.add RNE x11 x2) (fp.add RNE x19 x14)) (fp.sub RNE (fp.neg x1) (fp.neg x11))))
(assert (fp.leq (fp.div RNE (fp.div RNE x2 x14) (fp.add RNE x3 x18)) (fp.div RNE (fp.div RNE x12 x5) (fp.mul RNE x7 x15))))
(assert (fp.gt (fp.div RNE (fp.neg x7) (fp.div RNE x8 x12)) (fp.sub RNE (fp.sub RNE x20 x12) (fp.sub RNE x3 x16))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x8 x13) (fp.neg x6)) (fp.div RNE (fp.neg x3) (fp.neg x19))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x2 x18) (fp.add RNE x2 x6)) (fp.add RNE (fp.sub RNE x15 x8) (fp.neg x7))))
(assert (fp.lt (fp.div RNE (fp.div RNE x19 x4) (fp.sub RNE x5 x9)) (fp.mul RNE (fp.sub RNE x1 x0) (fp.neg x13))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x10 x5) (fp.neg x20)) (fp.neg (fp.neg x14))))
(assert (fp.gt (fp.neg (fp.neg x20)) (fp.add RNE (fp.sub RNE x11 x17) (fp.neg x0))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x14 x11) (fp.sub RNE x16 x11)) (fp.neg (fp.sub RNE x6 x11))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x2 x19) (fp.neg x12)) (fp.div RNE (fp.sub RNE x5 x11) (fp.add RNE x6 x5))))
(assert (fp.gt (fp.sub RNE (fp.neg x2) (fp.sub RNE x21 x14)) (fp.sub RNE (fp.neg x15) (fp.sub RNE x17 x13))))
(assert (fp.geq (fp.div RNE (fp.neg x18) (fp.neg x2)) (fp.div RNE (fp.mul RNE x4 x7) (fp.neg x7))))
(assert (fp.eq (fp.add RNE (fp.add RNE x12 x17) (fp.sub RNE x8 x6)) (fp.sub RNE (fp.mul RNE x5 x10) (fp.add RNE x18 x13))))
(assert (fp.lt (fp.add RNE (fp.neg x15) (fp.add RNE x20 x0)) (fp.mul RNE (fp.add RNE x4 x14) (fp.div RNE x11 x9))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x18 x5) (fp.div RNE x14 x19)) (fp.neg (fp.neg x13))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x9 x17) (fp.sub RNE x16 x2)) (fp.add RNE (fp.mul RNE x15 x10) (fp.sub RNE x9 x6))))
(assert (fp.leq (fp.add RNE (fp.neg x19) (fp.add RNE x10 x19)) (fp.mul RNE (fp.sub RNE x20 x14) (fp.sub RNE x18 x19))))
(check-sat)
