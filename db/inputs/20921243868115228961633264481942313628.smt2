(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x3 x6) (fp.add RNE x14 x11)) (fp.add RNE (fp.neg x1) (fp.add RNE x4 x18))))
(assert (fp.gt (fp.add RNE (fp.add RNE x14 x4) (fp.add RNE x17 x0)) (fp.mul RNE (fp.sub RNE x20 x13) (fp.add RNE x16 x19))))
(assert (fp.eq (fp.neg (fp.mul RNE x19 x14)) (fp.sub RNE (fp.mul RNE x12 x20) (fp.div RNE x1 x10))))
(assert (fp.lt (fp.add RNE (fp.add RNE x17 x5) (fp.neg x5)) (fp.sub RNE (fp.div RNE x16 x6) (fp.sub RNE x1 x17))))
(assert (fp.gt (fp.neg (fp.neg x16)) (fp.sub RNE (fp.neg x12) (fp.sub RNE x11 x0))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x6 x9) (fp.div RNE x5 x4)) (fp.add RNE (fp.mul RNE x18 x15) (fp.div RNE x20 x19))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x18 x17) (fp.div RNE x6 x16)) (fp.mul RNE (fp.sub RNE x0 x14) (fp.mul RNE x18 x8))))
(assert (fp.leq (fp.div RNE (fp.neg x11) (fp.mul RNE x8 x17)) (fp.mul RNE (fp.mul RNE x13 x15) (fp.mul RNE x0 x17))))
(assert (fp.eq (fp.add RNE (fp.neg x16) (fp.neg x13)) (fp.mul RNE (fp.div RNE x13 x1) (fp.mul RNE x8 x17))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x10 x20) (fp.sub RNE x13 x1)) (fp.add RNE (fp.add RNE x11 x8) (fp.sub RNE x3 x0))))
(check-sat)
