(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x3 x8) (fp.mul RNE x9 x11)) (fp.sub RNE (fp.mul RNE x7 x10) (fp.div RNE x9 x14))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x15 x1) (fp.div RNE x9 x14)) (fp.mul RNE (fp.add RNE x8 x3) (fp.add RNE x11 x13))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x12 x0) (fp.mul RNE x10 x5)) (fp.neg (fp.neg x6))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x4 x14) (fp.mul RNE x11 x3)) (fp.add RNE (fp.sub RNE x6 x14) (fp.div RNE x9 x7))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x7 x0) (fp.div RNE x3 x13)) (fp.mul RNE (fp.sub RNE x3 x12) (fp.add RNE x10 x14))))
(check-sat)
