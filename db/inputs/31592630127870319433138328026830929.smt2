(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x11 x16) (fp.add RNE x17 x5)) (fp.mul RNE (fp.mul RNE x3 x17) (fp.neg x12))))
(assert (fp.lt (fp.div RNE (fp.add RNE x12 x15) (fp.div RNE x18 x17)) (fp.add RNE (fp.div RNE x9 x18) (fp.mul RNE x11 x2))))
(assert (fp.geq (fp.div RNE (fp.div RNE x15 x2) (fp.add RNE x6 x1)) (fp.add RNE (fp.sub RNE x17 x11) (fp.add RNE x11 x4))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x15 x11) (fp.mul RNE x2 x17)) (fp.mul RNE (fp.mul RNE x18 x3) (fp.mul RNE x2 x6))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x17 x6) (fp.div RNE x14 x11)) (fp.div RNE (fp.sub RNE x0 x10) (fp.div RNE x10 x13))))
(assert (fp.geq (fp.mul RNE (fp.neg x18) (fp.div RNE x16 x4)) (fp.add RNE (fp.add RNE x4 x3) (fp.add RNE x2 x17))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x12 x17) (fp.mul RNE x13 x17)) (fp.sub RNE (fp.add RNE x5 x9) (fp.add RNE x18 x18))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.sub RNE (fp.mul RNE x4 x0) (fp.sub RNE x9 x3))))
(assert (fp.lt (fp.neg (fp.neg x10)) (fp.mul RNE (fp.neg x3) (fp.div RNE x4 x12))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x10 x2) (fp.add RNE x6 x18)) (fp.sub RNE (fp.sub RNE x3 x10) (fp.add RNE x3 x9))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x17 x18) (fp.div RNE x11 x5)) (fp.sub RNE (fp.sub RNE x0 x0) (fp.add RNE x15 x4))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x18 x9) (fp.neg x4)) (fp.sub RNE (fp.add RNE x3 x18) (fp.add RNE x6 x13))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x15 x4) (fp.neg x7)) (fp.mul RNE (fp.add RNE x13 x9) (fp.add RNE x3 x4))))
(assert (fp.gt (fp.add RNE (fp.div RNE x10 x1) (fp.sub RNE x1 x14)) (fp.mul RNE (fp.add RNE x6 x5) (fp.sub RNE x7 x3))))
(assert (fp.leq (fp.neg (fp.add RNE x12 x6)) (fp.div RNE (fp.div RNE x10 x5) (fp.neg x9))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x4 x6) (fp.div RNE x6 x17)) (fp.sub RNE (fp.div RNE x7 x14) (fp.add RNE x15 x10))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x14 x18) (fp.mul RNE x12 x10)) (fp.sub RNE (fp.div RNE x6 x10) (fp.add RNE x6 x3))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x15 x0) (fp.add RNE x15 x15)) (fp.neg (fp.neg x6))))
(check-sat)
