(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.add RNE x10 x1) (fp.add RNE x4 x15)) (fp.neg (fp.add RNE x13 x20))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x20 x20) (fp.mul RNE x10 x4)) (fp.neg (fp.div RNE x9 x5))))
(assert (fp.gt (fp.add RNE (fp.neg x5) (fp.mul RNE x12 x19)) (fp.add RNE (fp.neg x5) (fp.add RNE x21 x11))))
(assert (fp.geq (fp.div RNE (fp.div RNE x13 x20) (fp.add RNE x18 x11)) (fp.add RNE (fp.sub RNE x8 x3) (fp.mul RNE x7 x17))))
(assert (fp.eq (fp.mul RNE (fp.neg x1) (fp.mul RNE x21 x13)) (fp.div RNE (fp.div RNE x19 x18) (fp.mul RNE x3 x14))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x7 x7) (fp.neg x18)) (fp.neg (fp.div RNE x21 x15))))
(assert (fp.lt (fp.add RNE (fp.div RNE x14 x18) (fp.neg x11)) (fp.add RNE (fp.sub RNE x7 x3) (fp.add RNE x13 x2))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x10 x13) (fp.add RNE x15 x10)) (fp.div RNE (fp.add RNE x4 x18) (fp.mul RNE x20 x20))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x17 x14) (fp.add RNE x19 x19)) (fp.mul RNE (fp.neg x2) (fp.add RNE x15 x16))))
(assert (fp.geq (fp.sub RNE (fp.neg x14) (fp.neg x20)) (fp.sub RNE (fp.div RNE x11 x6) (fp.add RNE x15 x12))))
(assert (fp.leq (fp.neg (fp.add RNE x19 x0)) (fp.add RNE (fp.div RNE x16 x11) (fp.mul RNE x17 x8))))
(assert (fp.geq (fp.neg (fp.mul RNE x16 x0)) (fp.sub RNE (fp.sub RNE x7 x13) (fp.mul RNE x5 x5))))
(assert (fp.geq (fp.div RNE (fp.add RNE x10 x15) (fp.neg x5)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.neg (fp.mul RNE x2 x9)) (fp.div RNE (fp.div RNE x19 x15) (fp.sub RNE x21 x18))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x1 x2) (fp.neg x8)) (fp.div RNE (fp.sub RNE x1 x17) (fp.neg x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x3 x9) (fp.mul RNE x3 x10)) (fp.mul RNE (fp.mul RNE x6 x1) (fp.neg x15))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x5 x20) (fp.sub RNE x6 x19)) (fp.div RNE (fp.sub RNE x5 x19) (fp.add RNE x10 x20))))
(check-sat)
