(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x2 x14) (fp.neg x20)))
(assert (fp.geq (fp.neg x13) (fp.add RNE x16 x26)))
(assert (fp.gt (fp.mul RNE x17 x5) (fp.div RNE x21 x19)))
(assert (fp.lt (fp.div RNE x18 x19) (fp.sub RNE x21 x5)))
(assert (fp.gt (fp.sub RNE x1 x0) (fp.sub RNE x0 x19)))
(assert (fp.lt (fp.div RNE x8 x10) (fp.neg x9)))
(assert (fp.gt (fp.add RNE x18 x22) (fp.mul RNE x26 x9)))
(assert (fp.leq (fp.mul RNE x17 x2) (fp.div RNE x25 x19)))
(assert (fp.geq (fp.div RNE x16 x25) (fp.sub RNE x13 x19)))
(assert (fp.lt (fp.neg x17) (fp.div RNE x14 x1)))
(assert (fp.leq (fp.mul RNE x18 x8) (fp.div RNE x2 x7)))
(assert (fp.eq (fp.mul RNE x22 x12) (fp.sub RNE x16 x15)))
(assert (fp.eq (fp.add RNE x2 x23) (fp.neg x17)))
(assert (fp.lt (fp.mul RNE x19 x12) (fp.add RNE x7 x2)))
(assert (fp.lt (fp.add RNE x1 x17) (fp.neg x16)))
(assert (fp.geq (fp.neg x3) (fp.div RNE x20 x9)))
(assert (fp.lt (fp.add RNE x20 x18) (fp.div RNE x15 x13)))
(check-sat)
