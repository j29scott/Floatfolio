(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE x10 x2) (fp.sub RNE x10 x8)))
(assert (fp.gt (fp.div RNE x7 x9) (fp.sub RNE x13 x1)))
(assert (fp.lt (fp.mul RNE x4 x13) (fp.add RNE x1 x3)))
(assert (fp.geq (fp.neg x7) (fp.div RNE x12 x5)))
(assert (fp.lt (fp.sub RNE x0 x1) (fp.div RNE x2 x9)))
(assert (fp.lt (fp.sub RNE x4 x12) (fp.div RNE x13 x9)))
(assert (fp.lt (fp.add RNE x11 x12) (fp.add RNE x9 x6)))
(assert (fp.lt (fp.mul RNE x1 x14) (fp.mul RNE x4 x5)))
(assert (fp.leq (fp.div RNE x13 x0) (fp.neg x5)))
(assert (fp.lt (fp.mul RNE x11 x1) (fp.div RNE x6 x6)))
(assert (fp.leq (fp.add RNE x9 x7) (fp.add RNE x11 x11)))
(check-sat)
