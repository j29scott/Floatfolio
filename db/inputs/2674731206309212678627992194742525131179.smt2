(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.sub RNE x5 x11) (fp.neg x2)) (fp.add RNE (fp.mul RNE x4 x1) (fp.mul RNE x5 x0))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x0 x10) (fp.div RNE x10 x7)) (fp.neg (fp.mul RNE x9 x8))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x6 x7) (fp.sub RNE x1 x4)) (fp.sub RNE (fp.mul RNE x5 x5) (fp.sub RNE x9 x0))))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.div RNE x11 x3)) (fp.div RNE (fp.neg x7) (fp.mul RNE x10 x4))))
(assert (fp.gt (fp.add RNE (fp.neg x0) (fp.mul RNE x4 x9)) (fp.add RNE (fp.sub RNE x10 x0) (fp.mul RNE x5 x9))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x9 x5) (fp.sub RNE x1 x10)) (fp.neg (fp.neg x2))))
(check-sat)
