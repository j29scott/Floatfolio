(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE x4 x7) (fp.div RNE x1 x4)) (fp.div RNE (fp.mul RNE x2 x6) (fp.mul RNE x3 x6))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x7 x2) (fp.div RNE x6 x3)) (fp.neg (fp.mul RNE x3 x5))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x4 x6) (fp.add RNE x0 x6)) (fp.mul RNE (fp.sub RNE x1 x5) (fp.sub RNE x7 x2))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x5) (fp.mul RNE x0 x6)) (fp.sub RNE (fp.sub RNE x0 x0) (fp.div RNE x6 x0))))
(assert (fp.eq (fp.neg (fp.add RNE x3 x1)) (fp.sub RNE (fp.div RNE x1 x0) (fp.mul RNE x0 x6))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x0 x0) (fp.add RNE x2 x4)) (fp.add RNE (fp.sub RNE x0 x3) (fp.mul RNE x1 x0))))
(assert (fp.eq (fp.div RNE (fp.neg x4) (fp.mul RNE x0 x6)) (fp.mul RNE (fp.mul RNE x3 x6) (fp.div RNE x7 x4))))
(assert (fp.lt (fp.sub RNE (fp.neg x4) (fp.mul RNE x6 x4)) (fp.div RNE (fp.add RNE x6 x5) (fp.add RNE x1 x5))))
(check-sat)
