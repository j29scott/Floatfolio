(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x13 x0) (fp.neg x11)) (fp.neg (fp.div RNE x16 x1))) (fp.neg (fp.add RNE (fp.neg x15) (fp.div RNE x3 x9)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE x8 x12) (fp.mul RNE x10 x14))) (fp.neg (fp.add RNE (fp.add RNE x1 x9) (fp.div RNE x16 x2)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.neg x9) (fp.mul RNE x13 x13)) (fp.mul RNE (fp.neg x9) (fp.div RNE x1 x11))) (fp.div RNE (fp.mul RNE (fp.div RNE x8 x15) (fp.mul RNE x16 x11)) (fp.sub RNE (fp.sub RNE x7 x9) (fp.mul RNE x1 x4)))))
(check-sat)
