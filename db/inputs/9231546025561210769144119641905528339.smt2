(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x6 x3) (fp.neg x0)))
(assert (fp.leq (fp.add RNE x10 x13) (fp.add RNE x8 x9)))
(assert (fp.leq (fp.mul RNE x12 x8) (fp.div RNE x8 x8)))
(assert (fp.leq (fp.mul RNE x9 x6) (fp.neg x13)))
(assert (fp.gt (fp.neg x2) (fp.mul RNE x5 x3)))
(assert (fp.eq (fp.neg x9) (fp.div RNE x1 x8)))
(assert (fp.lt (fp.add RNE x11 x5) (fp.div RNE x3 x2)))
(assert (fp.eq (fp.mul RNE x9 x2) (fp.neg x0)))
(assert (fp.geq (fp.neg x13) (fp.neg x11)))
(assert (fp.geq (fp.neg x8) (fp.sub RNE x13 x13)))
(assert (fp.gt (fp.neg x10) (fp.sub RNE x12 x8)))
(assert (fp.lt (fp.neg x9) (fp.add RNE x11 x6)))
(assert (fp.lt (fp.div RNE x8 x0) (fp.sub RNE x11 x3)))
(assert (fp.eq (fp.sub RNE x10 x12) (fp.div RNE x8 x0)))
(check-sat)
