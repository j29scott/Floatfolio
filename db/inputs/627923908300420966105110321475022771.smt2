(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x12 x9) (fp.add RNE x17 x15)) (fp.div RNE (fp.neg x6) (fp.sub RNE x2 x0))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x6 x8) (fp.mul RNE x10 x15)) (fp.div RNE (fp.div RNE x5 x12) (fp.sub RNE x0 x5)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.add RNE x7 x17) (fp.neg x14)) (fp.add RNE (fp.add RNE x13 x9) (fp.div RNE x16 x2))) (fp.neg (fp.mul RNE (fp.sub RNE x11 x16) (fp.add RNE x2 x1)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.add RNE x8 x15) (fp.sub RNE x8 x1)) (fp.sub RNE (fp.div RNE x17 x10) (fp.neg x12))) (fp.sub RNE (fp.div RNE (fp.neg x4) (fp.neg x17)) (fp.neg (fp.mul RNE x10 x2)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x14 x12) (fp.neg x2)) (fp.div RNE (fp.sub RNE x5 x14) (fp.add RNE x6 x0))) (fp.add RNE (fp.add RNE (fp.sub RNE x3 x9) (fp.div RNE x11 x6)) (fp.sub RNE (fp.sub RNE x11 x2) (fp.add RNE x10 x4)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.div RNE x13 x16) (fp.add RNE x5 x12)) (fp.mul RNE (fp.add RNE x4 x11) (fp.add RNE x11 x16))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x10) (fp.sub RNE x6 x17)) (fp.mul RNE (fp.mul RNE x2 x12) (fp.div RNE x17 x7)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x0 x15) (fp.sub RNE x14 x12))) (fp.add RNE (fp.sub RNE (fp.div RNE x2 x3) (fp.mul RNE x17 x12)) (fp.add RNE (fp.neg x1) (fp.div RNE x11 x9)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x12) (fp.sub RNE x16 x2)) (fp.mul RNE (fp.add RNE x10 x10) (fp.add RNE x9 x10))) (fp.div RNE (fp.add RNE (fp.mul RNE x13 x3) (fp.mul RNE x14 x6)) (fp.mul RNE (fp.sub RNE x4 x0) (fp.mul RNE x11 x5)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x6 x12) (fp.sub RNE x5 x15)) (fp.div RNE (fp.add RNE x9 x3) (fp.add RNE x17 x17))) (fp.add RNE (fp.sub RNE (fp.div RNE x9 x14) (fp.add RNE x2 x9)) (fp.sub RNE (fp.sub RNE x6 x3) (fp.neg x1)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x14 x15) (fp.add RNE x12 x13))) (fp.mul RNE (fp.neg (fp.div RNE x1 x1)) (fp.neg (fp.add RNE x9 x1)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x15) (fp.sub RNE x7 x2)) (fp.add RNE (fp.neg x9) (fp.add RNE x9 x3))) (fp.div RNE (fp.add RNE (fp.add RNE x3 x8) (fp.mul RNE x7 x0)) (fp.add RNE (fp.add RNE x0 x9) (fp.sub RNE x16 x9)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x14) (fp.neg x0)) (fp.neg (fp.sub RNE x15 x16))) (fp.sub RNE (fp.sub RNE (fp.div RNE x5 x9) (fp.neg x3)) (fp.mul RNE (fp.div RNE x7 x15) (fp.add RNE x12 x0)))))
(check-sat)
