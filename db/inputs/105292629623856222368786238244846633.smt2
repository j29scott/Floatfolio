(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x6) (fp.neg x8)) (fp.neg (fp.add RNE x4 x3))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x8) (fp.neg x4)) (fp.div RNE (fp.div RNE x0 x10) (fp.neg x4))))
(assert (fp.eq (fp.div RNE (fp.neg x14) (fp.mul RNE x3 x14)) (fp.mul RNE (fp.neg x6) (fp.sub RNE x4 x3))))
(assert (fp.geq (fp.div RNE (fp.neg x9) (fp.sub RNE x2 x11)) (fp.add RNE (fp.div RNE x0 x7) (fp.sub RNE x14 x9))))
(assert (fp.lt (fp.mul RNE (fp.neg x7) (fp.add RNE x6 x6)) (fp.sub RNE (fp.add RNE x6 x8) (fp.sub RNE x14 x1))))
(assert (fp.geq (fp.neg (fp.add RNE x9 x8)) (fp.mul RNE (fp.mul RNE x3 x14) (fp.add RNE x4 x7))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x13 x9) (fp.sub RNE x4 x0)) (fp.mul RNE (fp.mul RNE x5 x11) (fp.add RNE x9 x1))))
(assert (fp.lt (fp.neg (fp.neg x5)) (fp.sub RNE (fp.sub RNE x1 x7) (fp.add RNE x6 x1))))
(assert (fp.leq (fp.add RNE (fp.add RNE x3 x9) (fp.add RNE x7 x6)) (fp.neg (fp.div RNE x7 x10))))
(assert (fp.eq (fp.add RNE (fp.neg x7) (fp.div RNE x12 x11)) (fp.neg (fp.add RNE x14 x6))))
(assert (fp.gt (fp.neg (fp.div RNE x11 x5)) (fp.sub RNE (fp.sub RNE x7 x7) (fp.neg x2))))
(assert (fp.eq (fp.div RNE (fp.div RNE x11 x5) (fp.add RNE x11 x9)) (fp.neg (fp.neg x9))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x8 x6) (fp.add RNE x13 x0)) (fp.neg (fp.add RNE x7 x2))))
(assert (fp.gt (fp.neg (fp.div RNE x0 x2)) (fp.div RNE (fp.div RNE x13 x0) (fp.sub RNE x12 x3))))
(check-sat)
