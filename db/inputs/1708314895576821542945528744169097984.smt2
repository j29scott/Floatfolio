(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE x6 x12) (fp.sub RNE x17 x16)) (fp.add RNE (fp.add RNE x4 x14) (fp.neg x1))))
(assert (fp.leq (fp.div RNE (fp.div RNE x13 x11) (fp.mul RNE x18 x15)) (fp.neg (fp.add RNE x10 x9))))
(assert (fp.leq (fp.mul RNE (fp.neg x8) (fp.neg x16)) (fp.mul RNE (fp.sub RNE x19 x10) (fp.sub RNE x20 x9))))
(assert (fp.leq (fp.add RNE (fp.neg x9) (fp.div RNE x11 x2)) (fp.add RNE (fp.sub RNE x2 x14) (fp.add RNE x17 x18))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x3 x17) (fp.add RNE x1 x3)) (fp.sub RNE (fp.add RNE x8 x18) (fp.add RNE x17 x5))))
(assert (fp.lt (fp.add RNE (fp.add RNE x4 x18) (fp.mul RNE x20 x5)) (fp.neg (fp.div RNE x9 x1))))
(check-sat)
