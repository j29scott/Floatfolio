(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE x16 x13) (fp.add RNE x7 x3)) (fp.mul RNE (fp.add RNE x15 x10) (fp.div RNE x8 x12))) (fp.mul RNE (fp.neg (fp.add RNE x1 x9)) (fp.div RNE (fp.add RNE x14 x6) (fp.neg x7)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE x13 x12) (fp.div RNE x12 x2)) (fp.div RNE (fp.add RNE x2 x1) (fp.sub RNE x11 x15))) (fp.mul RNE (fp.add RNE (fp.neg x0) (fp.div RNE x6 x1)) (fp.neg (fp.add RNE x16 x12)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x9 x15) (fp.add RNE x1 x1)) (fp.div RNE (fp.mul RNE x6 x10) (fp.add RNE x4 x0))) (fp.sub RNE (fp.sub RNE (fp.div RNE x10 x0) (fp.mul RNE x1 x6)) (fp.add RNE (fp.div RNE x1 x3) (fp.neg x13)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x9 x4) (fp.mul RNE x15 x5)) (fp.add RNE (fp.neg x4) (fp.neg x11))) (fp.neg (fp.mul RNE (fp.neg x5) (fp.add RNE x12 x1)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.div RNE x5 x12) (fp.sub RNE x12 x10)) (fp.div RNE (fp.sub RNE x15 x13) (fp.add RNE x12 x14))) (fp.div RNE (fp.neg (fp.neg x5)) (fp.add RNE (fp.div RNE x11 x12) (fp.div RNE x5 x12)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg x12) (fp.div RNE x15 x7)) (fp.div RNE (fp.neg x16) (fp.add RNE x10 x1))) (fp.neg (fp.div RNE (fp.add RNE x4 x0) (fp.mul RNE x6 x16)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg x14)) (fp.neg (fp.add RNE x16 x10))) (fp.sub RNE (fp.neg (fp.neg x16)) (fp.neg (fp.div RNE x15 x1)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.div RNE x1 x7) (fp.add RNE x12 x12)) (fp.neg (fp.add RNE x8 x3))) (fp.mul RNE (fp.div RNE (fp.add RNE x2 x2) (fp.div RNE x3 x15)) (fp.neg (fp.add RNE x13 x16)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x4 x12) (fp.div RNE x4 x4)) (fp.div RNE (fp.neg x0) (fp.add RNE x9 x3))) (fp.sub RNE (fp.neg (fp.add RNE x15 x10)) (fp.mul RNE (fp.mul RNE x4 x14) (fp.mul RNE x0 x14)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE x12 x9) (fp.add RNE x1 x12)) (fp.mul RNE (fp.add RNE x6 x5) (fp.neg x9))) (fp.sub RNE (fp.div RNE (fp.neg x13) (fp.div RNE x6 x3)) (fp.sub RNE (fp.sub RNE x3 x15) (fp.div RNE x15 x0)))))
(check-sat)
