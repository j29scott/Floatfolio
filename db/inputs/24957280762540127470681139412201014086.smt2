(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x18 x17) (fp.neg x21)) (fp.sub RNE (fp.mul RNE x10 x0) (fp.add RNE x15 x4))) (fp.add RNE (fp.neg (fp.sub RNE x18 x1)) (fp.mul RNE (fp.mul RNE x13 x14) (fp.neg x1)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x14 x21) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x0 x20) (fp.mul RNE x6 x12))) (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x23) (fp.add RNE x12 x8)) (fp.neg (fp.neg x10)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x14 x6) (fp.add RNE x6 x11)) (fp.sub RNE (fp.mul RNE x21 x10) (fp.sub RNE x17 x3))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x9 x1) (fp.div RNE x0 x16)) (fp.add RNE (fp.add RNE x6 x17) (fp.div RNE x15 x20)))))
(assert (fp.leq (fp.neg (fp.neg (fp.div RNE x5 x8))) (fp.neg (fp.neg (fp.mul RNE x5 x23)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.mul RNE x11 x0) (fp.add RNE x2 x20)) (fp.add RNE (fp.sub RNE x14 x19) (fp.add RNE x20 x1))) (fp.mul RNE (fp.div RNE (fp.div RNE x9 x14) (fp.div RNE x18 x22)) (fp.add RNE (fp.add RNE x22 x22) (fp.sub RNE x22 x0)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE x20 x9) (fp.neg x4)) (fp.add RNE (fp.add RNE x11 x14) (fp.mul RNE x10 x9))) (fp.mul RNE (fp.add RNE (fp.div RNE x8 x3) (fp.mul RNE x10 x7)) (fp.neg (fp.mul RNE x20 x11)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x2 x8) (fp.add RNE x16 x11))) (fp.sub RNE (fp.div RNE (fp.add RNE x10 x18) (fp.neg x7)) (fp.neg (fp.div RNE x21 x23)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x8 x8) (fp.mul RNE x20 x16)) (fp.mul RNE (fp.mul RNE x5 x0) (fp.div RNE x8 x11))) (fp.mul RNE (fp.add RNE (fp.mul RNE x23 x0) (fp.div RNE x4 x10)) (fp.mul RNE (fp.div RNE x9 x8) (fp.add RNE x18 x17)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x8) (fp.neg x13)) (fp.sub RNE (fp.mul RNE x9 x13) (fp.div RNE x7 x19))) (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x21) (fp.div RNE x3 x15)) (fp.add RNE (fp.sub RNE x3 x19) (fp.neg x17)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE x20 x2) (fp.mul RNE x8 x2)) (fp.div RNE (fp.neg x6) (fp.div RNE x5 x9))) (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x4) (fp.add RNE x18 x7)) (fp.sub RNE (fp.sub RNE x1 x6) (fp.add RNE x9 x15)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.sub RNE x9 x3)) (fp.sub RNE (fp.sub RNE x9 x3) (fp.sub RNE x6 x20))) (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x4) (fp.sub RNE x19 x12)) (fp.div RNE (fp.mul RNE x2 x11) (fp.div RNE x23 x10)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x17) (fp.neg x7)) (fp.div RNE (fp.mul RNE x11 x18) (fp.sub RNE x15 x6))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x16) (fp.mul RNE x14 x9)) (fp.add RNE (fp.add RNE x4 x5) (fp.div RNE x14 x9)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE x10 x4) (fp.mul RNE x3 x20)) (fp.mul RNE (fp.neg x18) (fp.add RNE x5 x12))) (fp.neg (fp.mul RNE (fp.mul RNE x18 x8) (fp.sub RNE x0 x20)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.add RNE x14 x4) (fp.neg x16)) (fp.add RNE (fp.add RNE x14 x22) (fp.neg x0))) (fp.mul RNE (fp.neg (fp.neg x9)) (fp.div RNE (fp.div RNE x6 x20) (fp.neg x11)))))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE x7 x21))) (fp.div RNE (fp.neg (fp.mul RNE x14 x16)) (fp.div RNE (fp.mul RNE x19 x9) (fp.neg x4)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.div RNE x21 x7)) (fp.div RNE (fp.add RNE x20 x16) (fp.sub RNE x5 x10))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x10) (fp.add RNE x15 x9)) (fp.neg (fp.add RNE x8 x17)))))
(check-sat)
