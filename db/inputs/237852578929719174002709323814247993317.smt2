(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x5 x3) (fp.mul RNE x9 x13)) (fp.sub RNE (fp.neg x5) (fp.neg x7))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x2 x1) (fp.mul RNE x13 x16)) (fp.neg (fp.add RNE x3 x9))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x8 x6) (fp.add RNE x6 x11)) (fp.add RNE (fp.div RNE x4 x8) (fp.neg x3))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x9 x10) (fp.div RNE x6 x10)) (fp.sub RNE (fp.neg x2) (fp.sub RNE x13 x9))))
(assert (fp.lt (fp.mul RNE (fp.neg x8) (fp.div RNE x1 x15)) (fp.neg (fp.mul RNE x9 x1))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x15 x1) (fp.neg x12)) (fp.mul RNE (fp.add RNE x12 x8) (fp.neg x9))))
(check-sat)
