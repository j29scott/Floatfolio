(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.mul RNE x9 x17)) (fp.add RNE (fp.add RNE x0 x21) (fp.neg x9))) (fp.neg (fp.add RNE (fp.neg x22) (fp.mul RNE x6 x10)))) (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x13 x10) (fp.div RNE x10 x6))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE (fp.div RNE x21 x0) (fp.add RNE x11 x6))) (fp.mul RNE (fp.neg (fp.sub RNE x20 x9)) (fp.add RNE (fp.mul RNE x6 x21) (fp.div RNE x15 x15)))) (fp.neg (fp.add RNE (fp.add RNE (fp.sub RNE x3 x3) (fp.mul RNE x16 x12)) (fp.add RNE (fp.add RNE x21 x16) (fp.neg x12))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg (fp.sub RNE x19 x9)) (fp.div RNE (fp.neg x14) (fp.neg x1))) (fp.neg (fp.sub RNE (fp.sub RNE x6 x4) (fp.sub RNE x19 x16)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x15 x21) (fp.mul RNE x2 x11)) (fp.div RNE (fp.add RNE x14 x15) (fp.add RNE x9 x16))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE (fp.add RNE x11 x21) (fp.mul RNE x7 x3)) (fp.neg (fp.sub RNE x7 x18))) (fp.add RNE (fp.neg (fp.neg x23)) (fp.add RNE (fp.mul RNE x1 x2) (fp.add RNE x14 x6)))) (fp.neg (fp.mul RNE (fp.neg (fp.neg x0)) (fp.neg (fp.add RNE x22 x18))))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE (fp.sub RNE x23 x4) (fp.div RNE x10 x13)) (fp.neg (fp.sub RNE x12 x8))) (fp.sub RNE (fp.add RNE (fp.mul RNE x15 x12) (fp.add RNE x11 x23)) (fp.neg (fp.mul RNE x11 x21)))) (fp.neg (fp.neg (fp.add RNE (fp.div RNE x10 x8) (fp.add RNE x23 x15))))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x7 x14) (fp.add RNE x1 x11)) (fp.add RNE (fp.div RNE x0 x20) (fp.mul RNE x12 x19))) (fp.sub RNE (fp.sub RNE (fp.neg x20) (fp.neg x10)) (fp.sub RNE (fp.div RNE x18 x0) (fp.div RNE x23 x20)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x14 x20) (fp.mul RNE x13 x22))) (fp.sub RNE (fp.add RNE (fp.add RNE x12 x10) (fp.add RNE x4 x3)) (fp.neg (fp.mul RNE x3 x7))))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg (fp.add RNE x12 x23)) (fp.add RNE (fp.neg x15) (fp.neg x16))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x12 x13) (fp.div RNE x16 x3)) (fp.add RNE (fp.neg x0) (fp.div RNE x14 x20)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.add RNE x18 x2) (fp.neg x4)) (fp.mul RNE (fp.add RNE x13 x17) (fp.neg x8))) (fp.neg (fp.div RNE (fp.neg x18) (fp.mul RNE x19 x16))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE (fp.div RNE x7 x0) (fp.div RNE x3 x20)) (fp.div RNE (fp.mul RNE x1 x22) (fp.div RNE x9 x6)))) (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x7 x6)) (fp.sub RNE (fp.sub RNE x3 x19) (fp.mul RNE x20 x14))) (fp.neg (fp.mul RNE (fp.neg x5) (fp.add RNE x19 x17))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x2 x17) (fp.mul RNE x5 x1)) (fp.div RNE (fp.sub RNE x1 x22) (fp.add RNE x3 x16))) (fp.mul RNE (fp.add RNE (fp.add RNE x17 x10) (fp.add RNE x20 x11)) (fp.neg (fp.sub RNE x21 x5)))) (fp.neg (fp.neg (fp.sub RNE (fp.div RNE x20 x1) (fp.sub RNE x5 x21))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE (fp.add RNE x8 x4) (fp.div RNE x16 x10)) (fp.add RNE (fp.div RNE x17 x6) (fp.sub RNE x20 x4)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.div RNE x11 x22) (fp.neg x18))) (fp.div RNE (fp.add RNE (fp.sub RNE x7 x22) (fp.neg x13)) (fp.mul RNE (fp.div RNE x4 x6) (fp.sub RNE x22 x10))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x20 x12) (fp.div RNE x15 x17)) (fp.neg (fp.mul RNE x21 x16))) (fp.neg (fp.neg (fp.sub RNE x15 x11)))) (fp.neg (fp.add RNE (fp.neg (fp.neg x23)) (fp.div RNE (fp.add RNE x15 x18) (fp.div RNE x8 x10))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg (fp.div RNE x23 x0)) (fp.mul RNE (fp.add RNE x1 x6) (fp.mul RNE x6 x12)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x6) (fp.add RNE x15 x18)) (fp.neg (fp.neg x6))))))
(check-sat)
