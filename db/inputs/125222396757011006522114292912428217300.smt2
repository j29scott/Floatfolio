(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x0 x9) (fp.neg x6)))
(assert (fp.lt (fp.sub RNE x5 x7) (fp.neg x10)))
(assert (fp.gt (fp.neg x5) (fp.mul RNE x2 x4)))
(assert (fp.lt (fp.sub RNE x1 x9) (fp.neg x7)))
(assert (fp.eq (fp.sub RNE x9 x2) (fp.mul RNE x11 x1)))
(assert (fp.eq (fp.neg x10) (fp.div RNE x3 x11)))
(assert (fp.geq (fp.mul RNE x1 x3) (fp.div RNE x8 x10)))
(assert (fp.eq (fp.mul RNE x6 x2) (fp.sub RNE x10 x6)))
(assert (fp.eq (fp.sub RNE x3 x10) (fp.sub RNE x9 x7)))
(assert (fp.eq (fp.div RNE x1 x0) (fp.mul RNE x2 x5)))
(assert (fp.gt (fp.div RNE x3 x10) (fp.neg x11)))
(assert (fp.geq (fp.mul RNE x3 x8) (fp.mul RNE x2 x3)))
(assert (fp.geq (fp.div RNE x7 x10) (fp.sub RNE x3 x11)))
(assert (fp.leq (fp.mul RNE x7 x9) (fp.div RNE x9 x7)))
(assert (fp.geq (fp.add RNE x8 x0) (fp.sub RNE x10 x3)))
(assert (fp.gt (fp.add RNE x3 x1) (fp.mul RNE x8 x5)))
(check-sat)
