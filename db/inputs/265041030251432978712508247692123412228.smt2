(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE (fp.sub RNE x12 x14) (fp.add RNE x2 x1)) (fp.neg (fp.neg x2)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.div RNE x8 x15) (fp.add RNE x11 x0)) (fp.neg (fp.neg x10))) (fp.mul RNE (fp.div RNE (fp.add RNE x11 x6) (fp.neg x9)) (fp.mul RNE (fp.sub RNE x0 x10) (fp.neg x12))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg (fp.mul RNE x8 x7))) (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x9 x5)) (fp.neg (fp.add RNE x7 x0)))) (fp.div RNE (fp.neg (fp.neg (fp.neg x4))) (fp.neg (fp.neg (fp.sub RNE x1 x8))))))
(check-sat)
