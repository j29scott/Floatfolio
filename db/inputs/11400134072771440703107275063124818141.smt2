(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg x10) (fp.add RNE x5 x6)))
(assert (fp.eq (fp.neg x10) (fp.sub RNE x7 x2)))
(assert (fp.leq (fp.div RNE x5 x12) (fp.mul RNE x5 x8)))
(assert (fp.leq (fp.div RNE x13 x4) (fp.add RNE x5 x9)))
(assert (fp.geq (fp.neg x12) (fp.neg x11)))
(assert (fp.geq (fp.div RNE x6 x0) (fp.add RNE x0 x5)))
(assert (fp.gt (fp.add RNE x6 x3) (fp.neg x13)))
(assert (fp.geq (fp.sub RNE x5 x11) (fp.add RNE x8 x1)))
(assert (fp.lt (fp.mul RNE x7 x5) (fp.div RNE x9 x6)))
(assert (fp.lt (fp.neg x9) (fp.mul RNE x12 x6)))
(assert (fp.gt (fp.neg x10) (fp.div RNE x12 x3)))
(assert (fp.geq (fp.add RNE x1 x13) (fp.mul RNE x10 x0)))
(assert (fp.eq (fp.div RNE x10 x8) (fp.mul RNE x12 x3)))
(check-sat)
