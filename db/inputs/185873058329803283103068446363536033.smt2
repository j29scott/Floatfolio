(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x5 x1) (fp.div RNE x3 x7)))
(assert (fp.geq (fp.div RNE x6 x5) (fp.mul RNE x3 x1)))
(assert (fp.gt (fp.div RNE x3 x0) (fp.mul RNE x6 x0)))
(assert (fp.eq (fp.neg x1) (fp.mul RNE x6 x4)))
(assert (fp.eq (fp.add RNE x5 x7) (fp.mul RNE x6 x1)))
(assert (fp.lt (fp.neg x5) (fp.mul RNE x3 x1)))
(assert (fp.geq (fp.mul RNE x7 x7) (fp.div RNE x5 x1)))
(assert (fp.lt (fp.neg x7) (fp.neg x7)))
(assert (fp.geq (fp.div RNE x5 x6) (fp.sub RNE x4 x0)))
(assert (fp.eq (fp.neg x1) (fp.add RNE x5 x2)))
(assert (fp.eq (fp.sub RNE x5 x6) (fp.sub RNE x0 x0)))
(assert (fp.geq (fp.mul RNE x5 x2) (fp.neg x1)))
(assert (fp.leq (fp.mul RNE x5 x2) (fp.div RNE x6 x4)))
(assert (fp.eq (fp.sub RNE x4 x2) (fp.div RNE x1 x3)))
(assert (fp.gt (fp.neg x1) (fp.neg x7)))
(check-sat)
