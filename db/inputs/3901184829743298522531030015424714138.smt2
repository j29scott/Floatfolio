(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x5) (fp.div RNE x5 x6)) (fp.neg (fp.sub RNE x0 x8))) (fp.add RNE (fp.mul RNE (fp.add RNE x5 x9) (fp.div RNE x8 x2)) (fp.div RNE (fp.mul RNE x7 x4) (fp.add RNE x5 x10)))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x8 x7))) (fp.sub RNE (fp.add RNE (fp.neg x7) (fp.mul RNE x4 x11)) (fp.neg (fp.mul RNE x4 x6)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x5) (fp.add RNE x10 x10)) (fp.div RNE (fp.add RNE x9 x0) (fp.neg x3))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x2 x10) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x5 x11) (fp.sub RNE x11 x3)))))
(check-sat)
