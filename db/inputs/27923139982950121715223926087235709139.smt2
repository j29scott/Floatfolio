(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.sub RNE x2 x2)) (fp.sub RNE (fp.sub RNE x6 x1) (fp.sub RNE x8 x2))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x4 x6) (fp.mul RNE x3 x10)) (fp.neg (fp.mul RNE x10 x0))))
(assert (fp.leq (fp.div RNE (fp.neg x10) (fp.div RNE x6 x0)) (fp.add RNE (fp.mul RNE x5 x2) (fp.sub RNE x5 x9))))
(assert (fp.lt (fp.div RNE (fp.div RNE x6 x7) (fp.div RNE x8 x1)) (fp.mul RNE (fp.div RNE x1 x2) (fp.neg x8))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x10 x3) (fp.sub RNE x9 x6)) (fp.div RNE (fp.neg x5) (fp.neg x2))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x4 x9) (fp.add RNE x0 x9)) (fp.sub RNE (fp.div RNE x7 x3) (fp.mul RNE x10 x9))))
(assert (fp.eq (fp.add RNE (fp.add RNE x3 x8) (fp.neg x3)) (fp.div RNE (fp.add RNE x8 x0) (fp.neg x1))))
(assert (fp.gt (fp.neg (fp.mul RNE x4 x0)) (fp.add RNE (fp.mul RNE x4 x9) (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x5 x5) (fp.neg x8)) (fp.add RNE (fp.mul RNE x9 x10) (fp.neg x10))))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.add RNE x3 x1)) (fp.mul RNE (fp.neg x0) (fp.div RNE x6 x0))))
(assert (fp.lt (fp.neg (fp.add RNE x5 x5)) (fp.div RNE (fp.add RNE x5 x5) (fp.neg x2))))
(check-sat)
