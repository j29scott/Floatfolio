(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE x6 x0) (fp.neg x2)) (fp.div RNE (fp.neg x8) (fp.div RNE x6 x1))) (fp.neg (fp.sub RNE (fp.div RNE x8 x11) (fp.div RNE x2 x7)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.sub RNE x8 x4)) (fp.neg (fp.sub RNE x3 x8))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x11) (fp.sub RNE x7 x7)) (fp.neg (fp.neg x6))))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x8) (fp.sub RNE x9 x6)) (fp.mul RNE (fp.mul RNE x1 x10) (fp.mul RNE x8 x8))) (fp.sub RNE (fp.sub RNE (fp.div RNE x10 x8) (fp.neg x12)) (fp.add RNE (fp.add RNE x0 x12) (fp.add RNE x9 x3)))) (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x9 x12)) (fp.div RNE (fp.mul RNE x0 x8) (fp.sub RNE x5 x5))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE (fp.mul RNE x0 x7) (fp.mul RNE x1 x1)) (fp.add RNE (fp.add RNE x7 x5) (fp.sub RNE x3 x4))) (fp.add RNE (fp.sub RNE (fp.add RNE x9 x11) (fp.div RNE x10 x1)) (fp.neg (fp.sub RNE x11 x4)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x9 x6) (fp.mul RNE x0 x12))) (fp.neg (fp.div RNE (fp.sub RNE x6 x3) (fp.neg x5))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x0 x0) (fp.sub RNE x12 x0)) (fp.sub RNE (fp.sub RNE x8 x8) (fp.add RNE x8 x6))) (fp.sub RNE (fp.neg (fp.sub RNE x10 x3)) (fp.neg (fp.add RNE x12 x9)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x1) (fp.add RNE x4 x7)) (fp.neg (fp.add RNE x10 x10))) (fp.div RNE (fp.add RNE (fp.div RNE x1 x9) (fp.add RNE x6 x10)) (fp.add RNE (fp.sub RNE x9 x4) (fp.sub RNE x6 x5))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE (fp.div RNE x6 x12) (fp.add RNE x2 x0))) (fp.sub RNE (fp.div RNE (fp.mul RNE x6 x11) (fp.div RNE x12 x4)) (fp.mul RNE (fp.div RNE x9 x0) (fp.div RNE x3 x2)))) (fp.neg (fp.div RNE (fp.div RNE (fp.add RNE x3 x2) (fp.mul RNE x10 x11)) (fp.sub RNE (fp.add RNE x5 x1) (fp.mul RNE x9 x11))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.div RNE x9 x6) (fp.div RNE x9 x5)) (fp.sub RNE (fp.div RNE x12 x12) (fp.add RNE x7 x10))) (fp.add RNE (fp.sub RNE (fp.mul RNE x6 x3) (fp.div RNE x4 x10)) (fp.sub RNE (fp.div RNE x0 x3) (fp.neg x9)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x11) (fp.sub RNE x0 x1)) (fp.add RNE (fp.sub RNE x1 x6) (fp.mul RNE x9 x9))) (fp.sub RNE (fp.neg (fp.div RNE x3 x7)) (fp.neg (fp.neg x11))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x5) (fp.div RNE x2 x4)) (fp.mul RNE (fp.div RNE x10 x11) (fp.add RNE x12 x11))) (fp.mul RNE (fp.add RNE (fp.add RNE x2 x4) (fp.div RNE x9 x7)) (fp.mul RNE (fp.sub RNE x6 x12) (fp.neg x2)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE x3 x11)) (fp.neg (fp.mul RNE x10 x4))) (fp.div RNE (fp.sub RNE (fp.div RNE x9 x9) (fp.add RNE x4 x6)) (fp.mul RNE (fp.sub RNE x8 x0) (fp.neg x2))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE (fp.div RNE x4 x11) (fp.sub RNE x3 x9)) (fp.add RNE (fp.sub RNE x9 x3) (fp.mul RNE x0 x11))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x8 x1) (fp.mul RNE x2 x4)) (fp.add RNE (fp.div RNE x2 x3) (fp.sub RNE x10 x6)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.sub RNE x3 x12) (fp.add RNE x3 x4)) (fp.div RNE (fp.neg x11) (fp.neg x0))) (fp.neg (fp.add RNE (fp.sub RNE x2 x5) (fp.add RNE x10 x11))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE (fp.add RNE x4 x10) (fp.div RNE x8 x10))) (fp.mul RNE (fp.mul RNE (fp.add RNE x1 x11) (fp.mul RNE x8 x2)) (fp.mul RNE (fp.add RNE x9 x0) (fp.div RNE x2 x3)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.add RNE x9 x5) (fp.div RNE x8 x1)) (fp.mul RNE (fp.mul RNE x3 x7) (fp.sub RNE x0 x3))) (fp.neg (fp.mul RNE (fp.mul RNE x6 x4) (fp.sub RNE x11 x1))))))
(check-sat)
