(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x6 x0) (fp.mul RNE x6 x4)) (fp.mul RNE (fp.neg x9) (fp.neg x3))))
(assert (fp.geq (fp.div RNE (fp.neg x8) (fp.neg x5)) (fp.div RNE (fp.add RNE x8 x6) (fp.add RNE x8 x9))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x5 x6) (fp.mul RNE x4 x4)) (fp.add RNE (fp.neg x7) (fp.div RNE x9 x9))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x4 x1) (fp.add RNE x7 x1)) (fp.neg (fp.div RNE x1 x0))))
(assert (fp.eq (fp.sub RNE (fp.neg x1) (fp.sub RNE x5 x6)) (fp.sub RNE (fp.mul RNE x7 x0) (fp.mul RNE x3 x5))))
(assert (fp.eq (fp.neg (fp.div RNE x3 x6)) (fp.div RNE (fp.sub RNE x6 x5) (fp.mul RNE x2 x6))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x3 x7) (fp.sub RNE x0 x5)) (fp.mul RNE (fp.div RNE x7 x0) (fp.neg x4))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x4 x7) (fp.mul RNE x7 x1)) (fp.mul RNE (fp.add RNE x9 x9) (fp.mul RNE x1 x3))))
(check-sat)
