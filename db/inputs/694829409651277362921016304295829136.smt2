(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x8 x8) (fp.neg x14)))
(assert (fp.leq (fp.sub RNE x6 x15) (fp.add RNE x8 x9)))
(assert (fp.lt (fp.sub RNE x7 x15) (fp.mul RNE x3 x7)))
(assert (fp.gt (fp.div RNE x8 x9) (fp.add RNE x9 x9)))
(assert (fp.leq (fp.sub RNE x13 x11) (fp.add RNE x3 x11)))
(assert (fp.geq (fp.sub RNE x2 x6) (fp.add RNE x6 x13)))
(assert (fp.lt (fp.div RNE x10 x6) (fp.sub RNE x12 x9)))
(assert (fp.leq (fp.div RNE x2 x8) (fp.div RNE x7 x8)))
(check-sat)
