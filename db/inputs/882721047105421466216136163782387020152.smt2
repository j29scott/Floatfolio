(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.neg x1) (fp.sub RNE x3 x3)) (fp.mul RNE (fp.neg x2) (fp.div RNE x6 x9))))
(assert (fp.eq (fp.sub RNE (fp.neg x13) (fp.add RNE x5 x9)) (fp.add RNE (fp.div RNE x13 x0) (fp.mul RNE x1 x13))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x5) (fp.add RNE x13 x13)) (fp.sub RNE (fp.div RNE x5 x11) (fp.neg x13))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x10 x0) (fp.sub RNE x8 x9)) (fp.neg (fp.mul RNE x3 x9))))
(assert (fp.leq (fp.sub RNE (fp.neg x7) (fp.sub RNE x12 x10)) (fp.sub RNE (fp.div RNE x8 x13) (fp.div RNE x2 x13))))
(assert (fp.lt (fp.div RNE (fp.div RNE x12 x6) (fp.sub RNE x2 x2)) (fp.sub RNE (fp.mul RNE x12 x13) (fp.neg x5))))
(assert (fp.geq (fp.neg (fp.neg x5)) (fp.mul RNE (fp.mul RNE x4 x9) (fp.neg x9))))
(assert (fp.leq (fp.add RNE (fp.add RNE x1 x2) (fp.neg x9)) (fp.div RNE (fp.div RNE x2 x10) (fp.div RNE x7 x2))))
(assert (fp.gt (fp.div RNE (fp.neg x4) (fp.div RNE x4 x6)) (fp.mul RNE (fp.add RNE x2 x5) (fp.mul RNE x2 x6))))
(check-sat)
