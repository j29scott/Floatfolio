(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE x2 x8) (fp.mul RNE x11 x5))) (fp.div RNE (fp.div RNE (fp.neg x11) (fp.div RNE x2 x15)) (fp.add RNE (fp.mul RNE x16 x13) (fp.neg x5)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x5) (fp.neg x10)) (fp.add RNE (fp.mul RNE x6 x7) (fp.mul RNE x3 x16))) (fp.add RNE (fp.sub RNE (fp.div RNE x7 x7) (fp.add RNE x5 x15)) (fp.add RNE (fp.mul RNE x1 x3) (fp.sub RNE x0 x13)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x7 x6) (fp.div RNE x13 x0))) (fp.sub RNE (fp.add RNE (fp.mul RNE x5 x4) (fp.neg x12)) (fp.mul RNE (fp.mul RNE x10 x2) (fp.add RNE x5 x14)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x16 x13) (fp.sub RNE x3 x3)) (fp.sub RNE (fp.sub RNE x15 x3) (fp.neg x6))) (fp.neg (fp.neg (fp.neg x8)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x12 x5) (fp.sub RNE x8 x0)) (fp.div RNE (fp.mul RNE x2 x1) (fp.neg x7))) (fp.neg (fp.mul RNE (fp.sub RNE x3 x11) (fp.neg x2)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x6 x3) (fp.mul RNE x2 x12)) (fp.sub RNE (fp.sub RNE x12 x3) (fp.neg x8))) (fp.neg (fp.mul RNE (fp.add RNE x7 x13) (fp.add RNE x8 x4)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x16) (fp.mul RNE x10 x11)) (fp.mul RNE (fp.add RNE x11 x4) (fp.sub RNE x0 x2))) (fp.div RNE (fp.sub RNE (fp.div RNE x7 x3) (fp.div RNE x13 x6)) (fp.mul RNE (fp.mul RNE x6 x0) (fp.div RNE x12 x1)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE x2 x16) (fp.neg x12)) (fp.div RNE (fp.add RNE x7 x11) (fp.add RNE x1 x9))) (fp.mul RNE (fp.add RNE (fp.div RNE x14 x2) (fp.neg x11)) (fp.mul RNE (fp.add RNE x11 x14) (fp.add RNE x11 x13)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.neg x2) (fp.mul RNE x1 x14)) (fp.add RNE (fp.sub RNE x0 x7) (fp.sub RNE x3 x4))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x16) (fp.sub RNE x6 x16)) (fp.neg (fp.mul RNE x13 x7)))))
(check-sat)
