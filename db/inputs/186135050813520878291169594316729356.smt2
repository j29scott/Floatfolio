(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x12 x11) (fp.add RNE x16 x9)) (fp.mul RNE (fp.div RNE x2 x10) (fp.add RNE x3 x13))) (fp.neg (fp.neg (fp.div RNE x3 x6)))) (fp.neg (fp.neg (fp.mul RNE (fp.neg x10) (fp.neg x18))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.sub RNE x13 x0)) (fp.add RNE (fp.sub RNE x21 x0) (fp.div RNE x3 x7))) (fp.neg (fp.sub RNE (fp.mul RNE x10 x0) (fp.mul RNE x14 x9)))) (fp.mul RNE (fp.neg (fp.neg (fp.mul RNE x8 x8))) (fp.div RNE (fp.sub RNE (fp.add RNE x20 x1) (fp.div RNE x9 x19)) (fp.mul RNE (fp.div RNE x7 x19) (fp.mul RNE x7 x8))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE (fp.add RNE x11 x19) (fp.mul RNE x19 x13)) (fp.sub RNE (fp.div RNE x17 x10) (fp.add RNE x8 x9))) (fp.neg (fp.sub RNE (fp.add RNE x2 x6) (fp.div RNE x3 x9)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x1 x12) (fp.mul RNE x21 x20))) (fp.add RNE (fp.neg (fp.div RNE x0 x11)) (fp.div RNE (fp.add RNE x12 x21) (fp.add RNE x11 x8))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg (fp.add RNE x21 x6))) (fp.neg (fp.sub RNE (fp.div RNE x9 x8) (fp.div RNE x2 x3)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.add RNE x1 x17) (fp.sub RNE x8 x3)) (fp.neg (fp.mul RNE x13 x3))) (fp.mul RNE (fp.add RNE (fp.sub RNE x6 x8) (fp.neg x2)) (fp.sub RNE (fp.add RNE x13 x10) (fp.sub RNE x8 x17))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x10 x7) (fp.sub RNE x19 x20)) (fp.sub RNE (fp.mul RNE x11 x8) (fp.neg x5))) (fp.neg (fp.add RNE (fp.add RNE x7 x11) (fp.mul RNE x15 x8)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.div RNE x10 x8)) (fp.sub RNE (fp.sub RNE x18 x11) (fp.sub RNE x5 x19))) (fp.mul RNE (fp.neg (fp.sub RNE x8 x6)) (fp.mul RNE (fp.add RNE x15 x14) (fp.sub RNE x19 x5))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE (fp.neg x8) (fp.sub RNE x21 x5)) (fp.mul RNE (fp.add RNE x19 x10) (fp.div RNE x15 x0))) (fp.mul RNE (fp.neg (fp.div RNE x4 x18)) (fp.neg (fp.div RNE x10 x13)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x15) (fp.sub RNE x0 x10)) (fp.add RNE (fp.sub RNE x2 x16) (fp.neg x3))) (fp.div RNE (fp.div RNE (fp.add RNE x8 x3) (fp.div RNE x19 x10)) (fp.div RNE (fp.sub RNE x10 x0) (fp.add RNE x18 x6))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x7 x8) (fp.add RNE x5 x21)) (fp.div RNE (fp.add RNE x12 x1) (fp.add RNE x0 x20))) (fp.neg (fp.neg (fp.sub RNE x19 x14)))) (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x7 x12)) (fp.neg (fp.add RNE x2 x17))) (fp.add RNE (fp.neg (fp.mul RNE x7 x7)) (fp.sub RNE (fp.add RNE x0 x0) (fp.sub RNE x6 x7))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x22 x7) (fp.mul RNE x2 x4)) (fp.div RNE (fp.mul RNE x13 x10) (fp.div RNE x19 x8))) (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x15) (fp.sub RNE x18 x6)) (fp.div RNE (fp.mul RNE x3 x22) (fp.sub RNE x17 x8)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.neg x22) (fp.add RNE x6 x12)) (fp.neg (fp.neg x5))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x0) (fp.div RNE x4 x14)) (fp.sub RNE (fp.mul RNE x11 x6) (fp.sub RNE x9 x1))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x6 x5) (fp.div RNE x8 x5)) (fp.add RNE (fp.sub RNE x3 x12) (fp.neg x19))) (fp.add RNE (fp.sub RNE (fp.sub RNE x9 x13) (fp.neg x2)) (fp.neg (fp.mul RNE x12 x5)))) (fp.neg (fp.add RNE (fp.add RNE (fp.sub RNE x14 x22) (fp.add RNE x14 x1)) (fp.neg (fp.div RNE x19 x10))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE (fp.add RNE x21 x17) (fp.sub RNE x9 x16)) (fp.add RNE (fp.add RNE x13 x12) (fp.sub RNE x17 x16)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.sub RNE x6 x13) (fp.sub RNE x9 x2))) (fp.neg (fp.sub RNE (fp.div RNE x16 x10) (fp.mul RNE x6 x4))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg (fp.sub RNE x2 x14)) (fp.add RNE (fp.neg x14) (fp.div RNE x10 x10))) (fp.sub RNE (fp.sub RNE (fp.neg x13) (fp.neg x16)) (fp.div RNE (fp.add RNE x6 x4) (fp.neg x14)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x14 x22)) (fp.div RNE (fp.div RNE x19 x22) (fp.add RNE x15 x11))) (fp.neg (fp.sub RNE (fp.sub RNE x20 x19) (fp.add RNE x4 x1))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x11) (fp.mul RNE x20 x17)) (fp.sub RNE (fp.neg x19) (fp.neg x10))) (fp.sub RNE (fp.mul RNE (fp.add RNE x11 x7) (fp.mul RNE x2 x13)) (fp.add RNE (fp.neg x18) (fp.div RNE x5 x17)))) (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x16 x7)) (fp.sub RNE (fp.sub RNE x20 x17) (fp.add RNE x6 x8))) (fp.neg (fp.mul RNE (fp.div RNE x22 x4) (fp.add RNE x13 x8))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE (fp.neg x6) (fp.neg x21)) (fp.neg (fp.mul RNE x18 x14))) (fp.sub RNE (fp.mul RNE (fp.add RNE x3 x16) (fp.add RNE x6 x16)) (fp.neg (fp.sub RNE x3 x2)))) (fp.add RNE (fp.add RNE (fp.neg (fp.add RNE x4 x19)) (fp.add RNE (fp.div RNE x12 x9) (fp.div RNE x10 x1))) (fp.add RNE (fp.div RNE (fp.add RNE x6 x11) (fp.mul RNE x6 x18)) (fp.neg (fp.add RNE x11 x22))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x6 x7) (fp.mul RNE x2 x14)) (fp.add RNE (fp.mul RNE x19 x22) (fp.div RNE x11 x3))) (fp.neg (fp.add RNE (fp.sub RNE x9 x21) (fp.add RNE x6 x6)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.neg x12) (fp.mul RNE x15 x17)) (fp.sub RNE (fp.sub RNE x3 x14) (fp.add RNE x5 x22))))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.neg (fp.div RNE x15 x18))) (fp.neg (fp.mul RNE (fp.div RNE x12 x7) (fp.sub RNE x2 x15)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x11 x2) (fp.mul RNE x4 x18)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x7 x7))) (fp.sub RNE (fp.div RNE (fp.div RNE x4 x2) (fp.mul RNE x14 x11)) (fp.add RNE (fp.div RNE x7 x7) (fp.sub RNE x12 x11))))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE (fp.mul RNE x7 x16) (fp.mul RNE x20 x4)))) (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x13 x4) (fp.sub RNE x0 x13))))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x10 x10) (fp.sub RNE x18 x11)) (fp.sub RNE (fp.add RNE x16 x18) (fp.sub RNE x15 x8))) (fp.div RNE (fp.div RNE (fp.div RNE x22 x14) (fp.sub RNE x14 x22)) (fp.div RNE (fp.sub RNE x7 x1) (fp.neg x9)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.neg x17)) (fp.add RNE (fp.add RNE x1 x3) (fp.mul RNE x16 x12))) (fp.div RNE (fp.sub RNE (fp.sub RNE x17 x18) (fp.sub RNE x5 x0)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x6 x15))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x6) (fp.neg x0)) (fp.add RNE (fp.add RNE x12 x17) (fp.add RNE x7 x14)))) (fp.div RNE (fp.div RNE (fp.neg (fp.add RNE x14 x17)) (fp.neg (fp.mul RNE x16 x16))) (fp.neg (fp.sub RNE (fp.sub RNE x4 x3) (fp.div RNE x7 x7))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x6) (fp.sub RNE x2 x22)) (fp.add RNE (fp.mul RNE x22 x13) (fp.add RNE x10 x14))) (fp.add RNE (fp.add RNE (fp.add RNE x13 x8) (fp.add RNE x3 x17)) (fp.mul RNE (fp.add RNE x7 x13) (fp.div RNE x1 x3)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.div RNE x12 x11) (fp.neg x1)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x15 x10))) (fp.add RNE (fp.sub RNE (fp.add RNE x4 x16) (fp.mul RNE x20 x8)) (fp.div RNE (fp.add RNE x12 x6) (fp.sub RNE x10 x6))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x20 x20) (fp.mul RNE x14 x16)) (fp.neg (fp.div RNE x19 x20)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x12 x13)) (fp.neg (fp.sub RNE x6 x2))) (fp.add RNE (fp.div RNE (fp.sub RNE x3 x12) (fp.add RNE x11 x8)) (fp.div RNE (fp.mul RNE x2 x16) (fp.add RNE x13 x20))))))
(check-sat)
