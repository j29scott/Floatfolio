(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE x3 x7)) (fp.neg (fp.mul RNE x4 x2))))
(assert (fp.leq (fp.add RNE (fp.neg x6) (fp.add RNE x1 x6)) (fp.sub RNE (fp.add RNE x3 x6) (fp.div RNE x6 x1))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x7 x0) (fp.neg x1)) (fp.mul RNE (fp.div RNE x2 x7) (fp.sub RNE x2 x3))))
(assert (fp.gt (fp.add RNE (fp.neg x2) (fp.neg x8)) (fp.neg (fp.neg x3))))
(assert (fp.eq (fp.neg (fp.neg x8)) (fp.sub RNE (fp.div RNE x6 x0) (fp.sub RNE x0 x5))))
(assert (fp.gt (fp.div RNE (fp.neg x0) (fp.add RNE x7 x3)) (fp.div RNE (fp.div RNE x2 x8) (fp.neg x3))))
(assert (fp.eq (fp.neg (fp.add RNE x7 x8)) (fp.div RNE (fp.div RNE x7 x4) (fp.mul RNE x7 x5))))
(check-sat)
