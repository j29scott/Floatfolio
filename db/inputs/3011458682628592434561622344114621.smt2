(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE x12 x9) (fp.neg x4)))
(assert (fp.leq (fp.mul RNE x0 x2) (fp.sub RNE x1 x6)))
(assert (fp.eq (fp.neg x0) (fp.add RNE x0 x9)))
(assert (fp.gt (fp.add RNE x0 x0) (fp.mul RNE x7 x2)))
(assert (fp.geq (fp.neg x11) (fp.neg x1)))
(assert (fp.gt (fp.neg x3) (fp.neg x4)))
(assert (fp.geq (fp.mul RNE x9 x9) (fp.neg x1)))
(assert (fp.gt (fp.neg x10) (fp.sub RNE x5 x6)))
(assert (fp.leq (fp.add RNE x1 x7) (fp.neg x1)))
(assert (fp.lt (fp.sub RNE x12 x7) (fp.mul RNE x0 x8)))
(assert (fp.lt (fp.sub RNE x0 x0) (fp.add RNE x0 x2)))
(check-sat)
