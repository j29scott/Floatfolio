(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE x2 x1) (fp.div RNE x1 x7)))
(assert (fp.lt (fp.div RNE x0 x6) (fp.div RNE x7 x8)))
(assert (fp.geq (fp.add RNE x5 x4) (fp.mul RNE x4 x8)))
(assert (fp.geq (fp.add RNE x8 x4) (fp.sub RNE x3 x8)))
(assert (fp.geq (fp.div RNE x3 x3) (fp.add RNE x7 x5)))
(assert (fp.eq (fp.add RNE x8 x8) (fp.mul RNE x0 x4)))
(assert (fp.gt (fp.neg x7) (fp.add RNE x7 x4)))
(assert (fp.lt (fp.add RNE x9 x7) (fp.div RNE x9 x9)))
(assert (fp.gt (fp.mul RNE x5 x1) (fp.mul RNE x9 x2)))
(assert (fp.leq (fp.neg x1) (fp.sub RNE x2 x2)))
(assert (fp.eq (fp.neg x0) (fp.sub RNE x3 x0)))
(assert (fp.leq (fp.sub RNE x1 x2) (fp.div RNE x4 x2)))
(assert (fp.geq (fp.add RNE x2 x7) (fp.neg x9)))
(assert (fp.eq (fp.div RNE x6 x1) (fp.add RNE x0 x1)))
(assert (fp.leq (fp.neg x7) (fp.div RNE x4 x8)))
(assert (fp.eq (fp.add RNE x9 x2) (fp.div RNE x7 x8)))
(assert (fp.lt (fp.neg x0) (fp.sub RNE x8 x8)))
(check-sat)
