(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x7 x10) (fp.add RNE x8 x6)))
(assert (fp.lt (fp.add RNE x0 x3) (fp.div RNE x6 x5)))
(assert (fp.lt (fp.add RNE x4 x0) (fp.add RNE x7 x0)))
(assert (fp.leq (fp.neg x6) (fp.add RNE x9 x7)))
(assert (fp.leq (fp.neg x3) (fp.neg x4)))
(assert (fp.eq (fp.sub RNE x8 x9) (fp.neg x12)))
(assert (fp.gt (fp.add RNE x10 x0) (fp.mul RNE x4 x3)))
(assert (fp.geq (fp.add RNE x9 x4) (fp.add RNE x1 x4)))
(assert (fp.eq (fp.sub RNE x2 x10) (fp.sub RNE x5 x2)))
(assert (fp.leq (fp.sub RNE x0 x1) (fp.div RNE x6 x3)))
(assert (fp.lt (fp.sub RNE x12 x8) (fp.add RNE x3 x8)))
(assert (fp.geq (fp.sub RNE x2 x11) (fp.add RNE x8 x7)))
(check-sat)
