(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE x1 x0) (fp.add RNE x7 x2)) (fp.div RNE (fp.mul RNE x5 x3) (fp.div RNE x6 x2))))
(assert (fp.lt (fp.div RNE (fp.neg x6) (fp.mul RNE x4 x6)) (fp.mul RNE (fp.sub RNE x7 x7) (fp.add RNE x4 x9))))
(assert (fp.lt (fp.add RNE (fp.neg x7) (fp.neg x0)) (fp.add RNE (fp.sub RNE x3 x5) (fp.div RNE x8 x6))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x9 x5) (fp.div RNE x5 x5)) (fp.sub RNE (fp.sub RNE x4 x3) (fp.add RNE x8 x6))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x7 x3) (fp.mul RNE x6 x7)) (fp.mul RNE (fp.div RNE x8 x2) (fp.div RNE x2 x8))))
(assert (fp.leq (fp.div RNE (fp.add RNE x0 x7) (fp.sub RNE x0 x8)) (fp.sub RNE (fp.mul RNE x6 x4) (fp.mul RNE x1 x0))))
(assert (fp.gt (fp.div RNE (fp.add RNE x0 x4) (fp.neg x9)) (fp.add RNE (fp.mul RNE x7 x4) (fp.sub RNE x1 x5))))
(check-sat)
