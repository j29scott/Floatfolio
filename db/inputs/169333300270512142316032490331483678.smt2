(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x2) (fp.add RNE x6 x3)))
(assert (fp.geq (fp.mul RNE x7 x5) (fp.add RNE x3 x8)))
(assert (fp.eq (fp.sub RNE x1 x0) (fp.neg x1)))
(assert (fp.leq (fp.neg x8) (fp.mul RNE x4 x4)))
(assert (fp.leq (fp.add RNE x5 x4) (fp.div RNE x6 x3)))
(assert (fp.eq (fp.sub RNE x7 x4) (fp.neg x7)))
(assert (fp.geq (fp.mul RNE x3 x3) (fp.add RNE x5 x1)))
(assert (fp.lt (fp.div RNE x4 x7) (fp.neg x7)))
(assert (fp.leq (fp.add RNE x0 x4) (fp.mul RNE x6 x1)))
(assert (fp.eq (fp.add RNE x7 x2) (fp.div RNE x0 x8)))
(assert (fp.lt (fp.div RNE x7 x4) (fp.sub RNE x5 x1)))
(assert (fp.eq (fp.sub RNE x8 x2) (fp.div RNE x7 x0)))
(assert (fp.gt (fp.sub RNE x7 x5) (fp.neg x0)))
(assert (fp.lt (fp.mul RNE x1 x1) (fp.neg x4)))
(check-sat)
