(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE x7 x0) (fp.sub RNE x5 x7)) (fp.neg (fp.sub RNE x6 x2))) (fp.sub RNE (fp.neg (fp.mul RNE x1 x7)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x5 x7)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.sub RNE x7 x5) (fp.neg x5)) (fp.add RNE (fp.add RNE x0 x5) (fp.sub RNE x2 x5))) (fp.mul RNE (fp.sub RNE (fp.add RNE x1 x1) (fp.add RNE x3 x2)) (fp.add RNE (fp.mul RNE x3 x2) (fp.sub RNE x6 x4)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.div RNE x1 x2) (fp.div RNE x0 x7)) (fp.mul RNE (fp.mul RNE x0 x5) (fp.sub RNE x3 x6))) (fp.add RNE (fp.mul RNE (fp.add RNE x4 x3) (fp.sub RNE x5 x6)) (fp.sub RNE (fp.mul RNE x3 x5) (fp.sub RNE x2 x3)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.neg x2) (fp.div RNE x2 x3)) (fp.neg (fp.div RNE x0 x0))) (fp.sub RNE (fp.neg (fp.mul RNE x6 x1)) (fp.neg (fp.add RNE x2 x1)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x1) (fp.sub RNE x1 x2))) (fp.neg (fp.neg (fp.mul RNE x7 x2)))))
(check-sat)
