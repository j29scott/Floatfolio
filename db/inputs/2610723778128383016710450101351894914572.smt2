(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.div RNE x4 x3)) (fp.mul RNE (fp.neg x4) (fp.div RNE x5 x3))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x5 x11) (fp.div RNE x15 x0)) (fp.mul RNE (fp.div RNE x12 x12) (fp.div RNE x9 x13))))
(assert (fp.gt (fp.mul RNE (fp.neg x5) (fp.mul RNE x6 x12)) (fp.neg (fp.mul RNE x7 x14))))
(assert (fp.geq (fp.neg (fp.add RNE x14 x2)) (fp.mul RNE (fp.div RNE x4 x9) (fp.neg x0))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x13 x5) (fp.neg x8)) (fp.mul RNE (fp.neg x0) (fp.add RNE x10 x3))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x10 x2) (fp.neg x10)) (fp.sub RNE (fp.div RNE x2 x10) (fp.mul RNE x1 x15))))
(assert (fp.eq (fp.sub RNE (fp.neg x2) (fp.add RNE x14 x8)) (fp.neg (fp.div RNE x15 x5))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x12 x11) (fp.add RNE x12 x7)) (fp.neg (fp.add RNE x4 x9))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x9 x2) (fp.sub RNE x12 x8)) (fp.add RNE (fp.add RNE x0 x2) (fp.div RNE x14 x6))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x14 x2) (fp.neg x7)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x15 x6))))
(assert (fp.lt (fp.add RNE (fp.add RNE x14 x2) (fp.sub RNE x1 x0)) (fp.mul RNE (fp.mul RNE x2 x8) (fp.mul RNE x10 x3))))
(assert (fp.leq (fp.sub RNE (fp.neg x14) (fp.neg x11)) (fp.add RNE (fp.add RNE x15 x8) (fp.sub RNE x1 x5))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x7 x12) (fp.sub RNE x15 x8)) (fp.sub RNE (fp.add RNE x0 x13) (fp.div RNE x10 x9))))
(check-sat)
