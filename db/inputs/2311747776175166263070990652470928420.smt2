(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE x3 x6) (fp.mul RNE x7 x8)) (fp.sub RNE (fp.mul RNE x0 x4) (fp.sub RNE x6 x10))) (fp.add RNE (fp.neg (fp.sub RNE x2 x4)) (fp.add RNE (fp.add RNE x9 x5) (fp.mul RNE x5 x3)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE x8 x2) (fp.add RNE x3 x4))) (fp.add RNE (fp.div RNE (fp.mul RNE x7 x0) (fp.mul RNE x2 x7)) (fp.mul RNE (fp.div RNE x0 x8) (fp.div RNE x3 x6)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x8 x3) (fp.neg x2))) (fp.div RNE (fp.neg (fp.div RNE x7 x5)) (fp.mul RNE (fp.sub RNE x2 x6) (fp.div RNE x0 x5)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x0 x9) (fp.neg x5))) (fp.sub RNE (fp.add RNE (fp.sub RNE x7 x2) (fp.div RNE x4 x8)) (fp.mul RNE (fp.add RNE x3 x7) (fp.mul RNE x0 x10)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x6) (fp.add RNE x9 x5)) (fp.sub RNE (fp.sub RNE x4 x0) (fp.sub RNE x1 x9))) (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x7) (fp.neg x1)) (fp.div RNE (fp.mul RNE x7 x9) (fp.neg x5)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x3 x5) (fp.mul RNE x0 x5)) (fp.add RNE (fp.sub RNE x8 x8) (fp.sub RNE x2 x9))) (fp.mul RNE (fp.neg (fp.sub RNE x0 x5)) (fp.neg (fp.add RNE x10 x8)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x3 x7) (fp.add RNE x6 x2)) (fp.add RNE (fp.div RNE x1 x3) (fp.sub RNE x6 x6))) (fp.add RNE (fp.add RNE (fp.mul RNE x3 x3) (fp.mul RNE x10 x1)) (fp.neg (fp.neg x0)))))
(check-sat)
