(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x7 x13) (fp.sub RNE x13 x9)))
(assert (fp.eq (fp.sub RNE x4 x15) (fp.mul RNE x11 x9)))
(assert (fp.geq (fp.sub RNE x16 x4) (fp.mul RNE x1 x7)))
(assert (fp.eq (fp.mul RNE x0 x6) (fp.div RNE x6 x17)))
(assert (fp.leq (fp.sub RNE x11 x13) (fp.div RNE x7 x3)))
(assert (fp.lt (fp.sub RNE x15 x17) (fp.add RNE x15 x15)))
(assert (fp.eq (fp.mul RNE x5 x17) (fp.sub RNE x6 x13)))
(check-sat)
