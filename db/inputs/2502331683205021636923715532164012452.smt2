(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x13 x21) (fp.sub RNE x22 x3)) (fp.mul RNE (fp.div RNE x22 x16) (fp.add RNE x15 x0))) (fp.div RNE (fp.sub RNE (fp.add RNE x17 x19) (fp.div RNE x20 x4)) (fp.mul RNE (fp.div RNE x21 x18) (fp.add RNE x7 x7)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.sub RNE x15 x19)) (fp.sub RNE (fp.add RNE x22 x14) (fp.mul RNE x4 x4))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x21) (fp.mul RNE x4 x23)) (fp.sub RNE (fp.add RNE x20 x3) (fp.add RNE x0 x23))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x10) (fp.div RNE x8 x6)) (fp.neg (fp.div RNE x10 x2))) (fp.neg (fp.mul RNE (fp.mul RNE x10 x16) (fp.sub RNE x11 x2)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x10) (fp.div RNE x1 x14)) (fp.div RNE (fp.add RNE x1 x2) (fp.sub RNE x2 x21))) (fp.div RNE (fp.add RNE (fp.neg x0) (fp.div RNE x14 x20)) (fp.sub RNE (fp.sub RNE x8 x4) (fp.div RNE x23 x15))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x14 x6) (fp.div RNE x23 x2)) (fp.add RNE (fp.div RNE x18 x4) (fp.neg x21))) (fp.add RNE (fp.add RNE (fp.neg x14) (fp.div RNE x21 x12)) (fp.sub RNE (fp.div RNE x3 x15) (fp.add RNE x19 x20)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.mul RNE x14 x9) (fp.add RNE x9 x5))) (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x2) (fp.add RNE x12 x23)) (fp.neg (fp.neg x21))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.div RNE (fp.neg x16) (fp.div RNE x12 x10)) (fp.mul RNE (fp.sub RNE x9 x9) (fp.neg x3))) (fp.add RNE (fp.neg (fp.sub RNE x19 x0)) (fp.div RNE (fp.div RNE x3 x16) (fp.add RNE x20 x16)))) (fp.add RNE (fp.neg (fp.neg (fp.sub RNE x11 x3))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x3 x20) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x6 x1) (fp.add RNE x7 x4))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE (fp.neg x10) (fp.add RNE x20 x11))) (fp.div RNE (fp.sub RNE (fp.sub RNE x6 x11) (fp.div RNE x1 x14)) (fp.mul RNE (fp.neg x10) (fp.add RNE x16 x11)))) (fp.neg (fp.div RNE (fp.neg (fp.add RNE x21 x8)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x23 x2))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.add RNE (fp.div RNE x17 x11) (fp.add RNE x18 x11))) (fp.add RNE (fp.neg (fp.mul RNE x1 x16)) (fp.add RNE (fp.div RNE x17 x1) (fp.sub RNE x14 x17)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.mul RNE x3 x21) (fp.sub RNE x5 x17))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x0 x14) (fp.sub RNE x9 x21)) (fp.div RNE (fp.mul RNE x11 x18) (fp.div RNE x23 x14))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x19 x10) (fp.neg x7)) (fp.add RNE (fp.mul RNE x9 x14) (fp.neg x23))) (fp.add RNE (fp.mul RNE (fp.div RNE x13 x4) (fp.sub RNE x5 x0)) (fp.add RNE (fp.div RNE x13 x20) (fp.div RNE x18 x7)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.neg x15) (fp.sub RNE x22 x8))) (fp.mul RNE (fp.add RNE (fp.div RNE x11 x10) (fp.add RNE x22 x20)) (fp.div RNE (fp.add RNE x4 x14) (fp.neg x15))))))
(check-sat)
