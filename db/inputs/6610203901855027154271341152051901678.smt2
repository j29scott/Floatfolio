(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x1) (fp.mul RNE x5 x5)))
(assert (fp.geq (fp.sub RNE x4 x3) (fp.add RNE x3 x1)))
(assert (fp.leq (fp.sub RNE x5 x2) (fp.sub RNE x4 x2)))
(assert (fp.leq (fp.mul RNE x3 x3) (fp.neg x0)))
(assert (fp.gt (fp.add RNE x1 x6) (fp.neg x5)))
(assert (fp.leq (fp.neg x2) (fp.mul RNE x6 x3)))
(assert (fp.eq (fp.mul RNE x4 x6) (fp.sub RNE x2 x2)))
(assert (fp.leq (fp.sub RNE x1 x4) (fp.add RNE x4 x4)))
(assert (fp.geq (fp.mul RNE x0 x5) (fp.neg x1)))
(assert (fp.geq (fp.neg x0) (fp.div RNE x4 x4)))
(assert (fp.gt (fp.mul RNE x5 x3) (fp.div RNE x3 x5)))
(assert (fp.gt (fp.add RNE x4 x5) (fp.neg x3)))
(assert (fp.geq (fp.div RNE x4 x3) (fp.div RNE x2 x0)))
(assert (fp.leq (fp.sub RNE x1 x0) (fp.neg x2)))
(check-sat)
