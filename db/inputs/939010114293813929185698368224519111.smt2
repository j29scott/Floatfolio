(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE x1 x0) (fp.sub RNE x4 x2)) (fp.neg (fp.div RNE x11 x11))) (fp.add RNE (fp.add RNE (fp.div RNE x11 x5) (fp.div RNE x7 x4)) (fp.sub RNE (fp.sub RNE x6 x6) (fp.add RNE x0 x5)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.div RNE x2 x2) (fp.mul RNE x9 x7)) (fp.neg (fp.add RNE x7 x0))) (fp.add RNE (fp.neg (fp.add RNE x2 x1)) (fp.mul RNE (fp.add RNE x4 x2) (fp.neg x3)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x8)) (fp.neg (fp.neg x2))) (fp.neg (fp.sub RNE (fp.mul RNE x9 x10) (fp.mul RNE x10 x6)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE x6 x9) (fp.div RNE x7 x7)) (fp.add RNE (fp.div RNE x5 x6) (fp.div RNE x9 x9))) (fp.neg (fp.div RNE (fp.sub RNE x2 x3) (fp.mul RNE x11 x2)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE x5 x1)) (fp.div RNE (fp.sub RNE x0 x9) (fp.add RNE x6 x1))) (fp.mul RNE (fp.neg (fp.mul RNE x9 x8)) (fp.div RNE (fp.sub RNE x1 x3) (fp.div RNE x1 x7)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.mul RNE x9 x9)) (fp.div RNE (fp.div RNE x6 x6) (fp.mul RNE x8 x10))) (fp.mul RNE (fp.sub RNE (fp.div RNE x3 x0) (fp.div RNE x8 x0)) (fp.neg (fp.div RNE x5 x9)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x7) (fp.sub RNE x1 x8)) (fp.neg (fp.div RNE x5 x1))) (fp.div RNE (fp.mul RNE (fp.sub RNE x1 x5) (fp.mul RNE x10 x1)) (fp.div RNE (fp.sub RNE x9 x1) (fp.div RNE x2 x10)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.div RNE x9 x8) (fp.div RNE x9 x8)) (fp.div RNE (fp.add RNE x4 x8) (fp.div RNE x11 x0))) (fp.div RNE (fp.neg (fp.mul RNE x10 x11)) (fp.mul RNE (fp.sub RNE x1 x9) (fp.sub RNE x9 x6)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.add RNE x7 x3) (fp.sub RNE x7 x1)) (fp.div RNE (fp.sub RNE x2 x2) (fp.add RNE x2 x5))) (fp.mul RNE (fp.add RNE (fp.neg x2) (fp.neg x6)) (fp.sub RNE (fp.div RNE x6 x10) (fp.add RNE x1 x2)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x10 x2) (fp.mul RNE x1 x7))) (fp.neg (fp.sub RNE (fp.add RNE x10 x9) (fp.mul RNE x11 x0)))))
(check-sat)
