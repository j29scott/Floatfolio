(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.add RNE x12 x17) (fp.mul RNE x9 x16)) (fp.sub RNE (fp.sub RNE x2 x16) (fp.sub RNE x16 x10))) (fp.mul RNE (fp.mul RNE (fp.neg x2) (fp.neg x6)) (fp.sub RNE (fp.add RNE x16 x8) (fp.add RNE x0 x12)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x10) (fp.mul RNE x16 x1)) (fp.div RNE (fp.sub RNE x6 x5) (fp.mul RNE x12 x7))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x7 x10)) (fp.mul RNE (fp.div RNE x1 x14) (fp.add RNE x20 x7)))) (fp.mul RNE (fp.neg (fp.neg (fp.add RNE x2 x20))) (fp.mul RNE (fp.neg (fp.div RNE x20 x19)) (fp.neg (fp.sub RNE x13 x4))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.neg x4) (fp.add RNE x14 x6)) (fp.div RNE (fp.neg x5) (fp.mul RNE x1 x12))) (fp.neg (fp.mul RNE (fp.mul RNE x2 x17) (fp.mul RNE x1 x7)))) (fp.neg (fp.div RNE (fp.neg (fp.neg x0)) (fp.div RNE (fp.neg x3) (fp.div RNE x9 x4))))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x1) (fp.sub RNE x16 x3)) (fp.mul RNE (fp.mul RNE x2 x0) (fp.sub RNE x17 x7))) (fp.div RNE (fp.sub RNE (fp.div RNE x11 x14) (fp.neg x16)) (fp.mul RNE (fp.div RNE x14 x2) (fp.add RNE x4 x15)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.sub RNE x8 x7) (fp.sub RNE x13 x3))) (fp.div RNE (fp.sub RNE (fp.sub RNE x2 x0) (fp.neg x16)) (fp.div RNE (fp.sub RNE x1 x5) (fp.sub RNE x15 x17))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE (fp.add RNE x3 x7) (fp.mul RNE x13 x11)) (fp.add RNE (fp.mul RNE x14 x8) (fp.mul RNE x0 x6)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x0) (fp.neg x2)) (fp.sub RNE (fp.add RNE x5 x1) (fp.mul RNE x5 x15))) (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x13) (fp.mul RNE x6 x7)) (fp.mul RNE (fp.sub RNE x18 x1) (fp.add RNE x10 x14))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.sub RNE x20 x13)) (fp.neg (fp.add RNE x10 x1))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x16) (fp.div RNE x6 x11)) (fp.div RNE (fp.add RNE x1 x0) (fp.sub RNE x8 x18)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.div RNE x19 x15) (fp.add RNE x18 x11)) (fp.sub RNE (fp.neg x16) (fp.div RNE x15 x15))) (fp.mul RNE (fp.mul RNE (fp.neg x18) (fp.add RNE x20 x16)) (fp.div RNE (fp.div RNE x14 x7) (fp.add RNE x18 x1))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x9 x19) (fp.add RNE x15 x4)) (fp.sub RNE (fp.neg x19) (fp.mul RNE x17 x5))) (fp.mul RNE (fp.sub RNE (fp.add RNE x18 x8) (fp.div RNE x4 x6)) (fp.add RNE (fp.neg x11) (fp.mul RNE x15 x12)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x5 x3) (fp.sub RNE x5 x19)) (fp.add RNE (fp.div RNE x5 x11) (fp.neg x6))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.neg (fp.sub RNE x14 x19)) (fp.add RNE (fp.mul RNE x13 x14) (fp.add RNE x12 x6))) (fp.neg (fp.div RNE (fp.div RNE x14 x11) (fp.div RNE x12 x9)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x3) (fp.add RNE x13 x16)) (fp.neg (fp.sub RNE x2 x19))) (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x10) (fp.add RNE x18 x9)) (fp.neg (fp.neg x1))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x0 x9) (fp.sub RNE x5 x8)) (fp.div RNE (fp.sub RNE x2 x14) (fp.sub RNE x17 x12))) (fp.sub RNE (fp.div RNE (fp.neg x1) (fp.sub RNE x1 x18)) (fp.div RNE (fp.div RNE x17 x16) (fp.neg x16)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x19 x15) (fp.sub RNE x12 x8)) (fp.mul RNE (fp.sub RNE x2 x20) (fp.neg x10))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE (fp.add RNE x10 x12) (fp.sub RNE x4 x19)) (fp.sub RNE (fp.neg x10) (fp.sub RNE x10 x7)))) (fp.neg (fp.mul RNE (fp.sub RNE (fp.sub RNE x9 x2) (fp.add RNE x11 x8)) (fp.sub RNE (fp.div RNE x4 x13) (fp.neg x2))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.div RNE x11 x12) (fp.add RNE x9 x5)) (fp.neg (fp.add RNE x13 x8))) (fp.mul RNE (fp.mul RNE (fp.add RNE x7 x10) (fp.neg x3)) (fp.mul RNE (fp.div RNE x15 x12) (fp.div RNE x15 x4)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.mul RNE x0 x15) (fp.div RNE x5 x9)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.neg x13))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x9 x13) (fp.add RNE x3 x0)) (fp.sub RNE (fp.sub RNE x18 x2) (fp.sub RNE x6 x9))) (fp.neg (fp.add RNE (fp.sub RNE x0 x17) (fp.neg x3)))) (fp.neg (fp.sub RNE (fp.neg (fp.sub RNE x14 x7)) (fp.add RNE (fp.sub RNE x15 x12) (fp.sub RNE x1 x2))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x0 x20) (fp.sub RNE x14 x9)) (fp.div RNE (fp.neg x16) (fp.div RNE x2 x0))) (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x7) (fp.div RNE x11 x14)) (fp.mul RNE (fp.add RNE x14 x0) (fp.div RNE x1 x2)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x3 x5) (fp.div RNE x10 x14)) (fp.neg (fp.neg x3))) (fp.neg (fp.sub RNE (fp.sub RNE x20 x20) (fp.div RNE x13 x18))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE (fp.div RNE x17 x14) (fp.neg x14))) (fp.add RNE (fp.neg (fp.mul RNE x5 x2)) (fp.div RNE (fp.add RNE x14 x11) (fp.div RNE x4 x15)))) (fp.neg (fp.div RNE (fp.div RNE (fp.div RNE x4 x12) (fp.neg x17)) (fp.mul RNE (fp.sub RNE x11 x11) (fp.mul RNE x10 x17))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x17 x8) (fp.neg x19)) (fp.div RNE (fp.div RNE x10 x2) (fp.mul RNE x11 x10)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x6) (fp.div RNE x20 x14)) (fp.mul RNE (fp.mul RNE x9 x7) (fp.div RNE x17 x20))) (fp.sub RNE (fp.neg (fp.add RNE x8 x1)) (fp.mul RNE (fp.neg x17) (fp.neg x17))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE (fp.sub RNE x11 x6) (fp.div RNE x1 x7)) (fp.neg (fp.mul RNE x1 x7)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.div RNE x6 x0) (fp.mul RNE x8 x9))) (fp.div RNE (fp.sub RNE (fp.div RNE x18 x14) (fp.neg x8)) (fp.neg (fp.add RNE x6 x11))))))
(check-sat)
