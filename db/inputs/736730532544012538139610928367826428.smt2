(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.add RNE x13 x10) (fp.add RNE x14 x10)) (fp.mul RNE (fp.sub RNE x3 x12) (fp.mul RNE x8 x1))) (fp.add RNE (fp.div RNE (fp.mul RNE x7 x8) (fp.sub RNE x15 x11)) (fp.sub RNE (fp.div RNE x6 x5) (fp.mul RNE x0 x1)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.neg x16) (fp.div RNE x16 x1)) (fp.div RNE (fp.div RNE x6 x12) (fp.div RNE x4 x7))) (fp.neg (fp.add RNE (fp.sub RNE x6 x4) (fp.neg x2))))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.add RNE (fp.div RNE x3 x13) (fp.div RNE x11 x15)) (fp.mul RNE (fp.sub RNE x11 x11) (fp.neg x14))) (fp.div RNE (fp.sub RNE (fp.mul RNE x15 x0) (fp.neg x13)) (fp.add RNE (fp.div RNE x2 x13) (fp.mul RNE x1 x9)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.add RNE x2 x16) (fp.mul RNE x1 x14)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.neg (fp.sub RNE x17 x2)) (fp.div RNE (fp.add RNE x15 x1) (fp.div RNE x7 x3))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.neg (fp.mul RNE x16 x16)) (fp.div RNE (fp.mul RNE x8 x4) (fp.mul RNE x8 x4))) (fp.add RNE (fp.add RNE (fp.add RNE x7 x13) (fp.add RNE x13 x16)) (fp.sub RNE (fp.div RNE x10 x4) (fp.add RNE x3 x4)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.add RNE x1 x6) (fp.sub RNE x11 x1)) (fp.neg (fp.div RNE x6 x13))) (fp.add RNE (fp.add RNE (fp.neg x0) (fp.add RNE x6 x13)) (fp.neg (fp.neg x5))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.mul RNE x11 x3) (fp.sub RNE x10 x8)) (fp.div RNE (fp.sub RNE x1 x10) (fp.add RNE x7 x9)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x6 x17) (fp.sub RNE x15 x11)) (fp.sub RNE (fp.neg x10) (fp.add RNE x2 x5))) (fp.mul RNE (fp.add RNE (fp.neg x8) (fp.neg x17)) (fp.neg (fp.sub RNE x3 x16))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x11 x16) (fp.div RNE x2 x4)) (fp.sub RNE (fp.neg x15) (fp.mul RNE x1 x6))) (fp.neg (fp.div RNE (fp.neg x11) (fp.sub RNE x0 x10)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.neg x16)) (fp.add RNE (fp.sub RNE x6 x6) (fp.neg x16))) (fp.mul RNE (fp.sub RNE (fp.div RNE x7 x13) (fp.div RNE x16 x5)) (fp.div RNE (fp.sub RNE x6 x8) (fp.neg x4))))))
(check-sat)
