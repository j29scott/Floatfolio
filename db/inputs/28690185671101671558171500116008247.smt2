(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x0) (fp.sub RNE x4 x3)))
(assert (fp.geq (fp.div RNE x5 x3) (fp.add RNE x9 x11)))
(assert (fp.leq (fp.neg x9) (fp.add RNE x7 x6)))
(assert (fp.gt (fp.div RNE x0 x7) (fp.div RNE x0 x3)))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x7 x4)))
(assert (fp.lt (fp.div RNE x5 x5) (fp.add RNE x4 x11)))
(assert (fp.geq (fp.sub RNE x11 x2) (fp.sub RNE x1 x7)))
(assert (fp.lt (fp.div RNE x1 x7) (fp.mul RNE x4 x11)))
(assert (fp.leq (fp.add RNE x2 x3) (fp.sub RNE x4 x4)))
(assert (fp.eq (fp.add RNE x11 x0) (fp.sub RNE x0 x4)))
(assert (fp.eq (fp.neg x7) (fp.div RNE x4 x5)))
(assert (fp.lt (fp.mul RNE x4 x8) (fp.add RNE x9 x0)))
(assert (fp.gt (fp.mul RNE x3 x1) (fp.div RNE x0 x10)))
(assert (fp.eq (fp.div RNE x11 x9) (fp.div RNE x2 x5)))
(assert (fp.gt (fp.add RNE x6 x3) (fp.add RNE x0 x1)))
(assert (fp.geq (fp.neg x0) (fp.neg x10)))
(assert (fp.lt (fp.mul RNE x9 x10) (fp.sub RNE x7 x8)))
(check-sat)
