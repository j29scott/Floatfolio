(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.add RNE x21 x16) (fp.sub RNE x9 x4)) (fp.sub RNE (fp.sub RNE x7 x12) (fp.sub RNE x2 x20))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x2 x14) (fp.div RNE x5 x14)) (fp.div RNE (fp.mul RNE x17 x21) (fp.add RNE x13 x16))))
(assert (fp.lt (fp.sub RNE (fp.neg x10) (fp.mul RNE x18 x15)) (fp.neg (fp.neg x14))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x1 x13) (fp.add RNE x8 x0)) (fp.div RNE (fp.div RNE x7 x1) (fp.neg x10))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x19 x11) (fp.sub RNE x1 x11)) (fp.sub RNE (fp.add RNE x19 x0) (fp.add RNE x0 x9))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x6 x11) (fp.sub RNE x21 x17)) (fp.sub RNE (fp.add RNE x10 x12) (fp.mul RNE x18 x6))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x7 x21) (fp.sub RNE x3 x0)) (fp.div RNE (fp.sub RNE x14 x17) (fp.div RNE x13 x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x0 x1) (fp.neg x7)) (fp.neg (fp.mul RNE x15 x7))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x12 x18) (fp.sub RNE x4 x16)) (fp.sub RNE (fp.mul RNE x1 x19) (fp.sub RNE x15 x7))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x13 x14) (fp.neg x8)) (fp.neg (fp.div RNE x8 x9))))
(assert (fp.lt (fp.add RNE (fp.add RNE x9 x7) (fp.add RNE x10 x16)) (fp.div RNE (fp.div RNE x9 x1) (fp.add RNE x21 x11))))
(assert (fp.lt (fp.add RNE (fp.div RNE x21 x2) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x10 x8) (fp.sub RNE x16 x9))))
(assert (fp.leq (fp.div RNE (fp.add RNE x15 x18) (fp.add RNE x3 x14)) (fp.sub RNE (fp.div RNE x8 x20) (fp.neg x4))))
(assert (fp.leq (fp.div RNE (fp.neg x14) (fp.mul RNE x15 x2)) (fp.neg (fp.div RNE x11 x10))))
(assert (fp.eq (fp.div RNE (fp.div RNE x12 x1) (fp.mul RNE x20 x4)) (fp.add RNE (fp.neg x4) (fp.div RNE x2 x16))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x4 x21) (fp.mul RNE x18 x14)) (fp.div RNE (fp.mul RNE x16 x4) (fp.mul RNE x6 x8))))
(assert (fp.geq (fp.neg (fp.mul RNE x11 x4)) (fp.sub RNE (fp.sub RNE x6 x14) (fp.mul RNE x12 x1))))
(assert (fp.leq (fp.add RNE (fp.neg x8) (fp.add RNE x8 x2)) (fp.mul RNE (fp.sub RNE x4 x17) (fp.mul RNE x4 x11))))
(assert (fp.leq (fp.add RNE (fp.add RNE x1 x18) (fp.sub RNE x19 x18)) (fp.div RNE (fp.add RNE x16 x1) (fp.div RNE x11 x1))))
(assert (fp.gt (fp.sub RNE (fp.neg x12) (fp.add RNE x0 x3)) (fp.sub RNE (fp.neg x21) (fp.mul RNE x21 x17))))
(check-sat)
