(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE x12 x1) (fp.div RNE x1 x4)) (fp.div RNE (fp.div RNE x0 x8) (fp.sub RNE x1 x15))))
(assert (fp.lt (fp.sub RNE (fp.neg x14) (fp.sub RNE x7 x6)) (fp.sub RNE (fp.mul RNE x7 x6) (fp.div RNE x12 x12))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x1 x16) (fp.add RNE x14 x0)) (fp.neg (fp.mul RNE x14 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x2) (fp.div RNE x3 x5)) (fp.mul RNE (fp.neg x3) (fp.add RNE x1 x5))))
(assert (fp.geq (fp.neg (fp.mul RNE x11 x1)) (fp.add RNE (fp.neg x7) (fp.div RNE x10 x4))))
(check-sat)
