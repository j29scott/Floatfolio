(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x25 x11) (fp.neg x24)) (fp.div RNE (fp.mul RNE x26 x16) (fp.neg x25))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x25 x5) (fp.mul RNE x13 x4)) (fp.mul RNE (fp.sub RNE x5 x3) (fp.div RNE x19 x18))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x1 x3) (fp.mul RNE x17 x26)) (fp.div RNE (fp.sub RNE x11 x23) (fp.neg x7))))
(assert (fp.geq (fp.add RNE (fp.div RNE x15 x10) (fp.mul RNE x9 x16)) (fp.div RNE (fp.add RNE x26 x21) (fp.mul RNE x8 x14))))
(assert (fp.gt (fp.add RNE (fp.add RNE x22 x20) (fp.neg x0)) (fp.div RNE (fp.add RNE x21 x14) (fp.mul RNE x25 x14))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x17 x10) (fp.add RNE x24 x22)) (fp.mul RNE (fp.sub RNE x21 x3) (fp.add RNE x16 x14))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x1 x6) (fp.add RNE x6 x18)) (fp.div RNE (fp.add RNE x12 x20) (fp.neg x19))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x8 x22) (fp.sub RNE x9 x26)) (fp.add RNE (fp.add RNE x15 x23) (fp.div RNE x5 x16))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x26 x5) (fp.sub RNE x25 x17)) (fp.mul RNE (fp.sub RNE x15 x22) (fp.div RNE x19 x11))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x4 x9) (fp.neg x24)) (fp.add RNE (fp.sub RNE x12 x0) (fp.div RNE x9 x23))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x3 x23) (fp.div RNE x22 x16)) (fp.add RNE (fp.div RNE x22 x5) (fp.neg x18))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x4 x10) (fp.sub RNE x21 x11)) (fp.add RNE (fp.mul RNE x18 x7) (fp.add RNE x4 x20))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x2 x2) (fp.div RNE x23 x7)) (fp.sub RNE (fp.neg x19) (fp.div RNE x23 x11))))
(assert (fp.lt (fp.sub RNE (fp.neg x20) (fp.sub RNE x20 x19)) (fp.neg (fp.sub RNE x23 x9))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x13 x8) (fp.add RNE x10 x0)) (fp.add RNE (fp.neg x3) (fp.div RNE x25 x1))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x17 x17) (fp.mul RNE x14 x7)) (fp.add RNE (fp.add RNE x18 x13) (fp.div RNE x26 x11))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x24 x11) (fp.mul RNE x20 x14)) (fp.sub RNE (fp.sub RNE x13 x20) (fp.add RNE x24 x23))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x8 x4) (fp.div RNE x7 x16)) (fp.mul RNE (fp.mul RNE x19 x4) (fp.div RNE x19 x3))))
(check-sat)
