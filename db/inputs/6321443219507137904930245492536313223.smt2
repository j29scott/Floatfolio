(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x6 x4) (fp.mul RNE x2 x7)))
(assert (fp.eq (fp.add RNE x6 x5) (fp.div RNE x3 x4)))
(assert (fp.geq (fp.add RNE x6 x4) (fp.sub RNE x0 x4)))
(assert (fp.geq (fp.div RNE x2 x6) (fp.neg x1)))
(assert (fp.lt (fp.mul RNE x0 x5) (fp.div RNE x0 x1)))
(assert (fp.eq (fp.mul RNE x2 x1) (fp.mul RNE x5 x0)))
(assert (fp.eq (fp.add RNE x6 x1) (fp.neg x0)))
(assert (fp.eq (fp.div RNE x2 x5) (fp.div RNE x5 x2)))
(assert (fp.geq (fp.add RNE x3 x4) (fp.mul RNE x4 x6)))
(assert (fp.gt (fp.sub RNE x0 x4) (fp.div RNE x3 x4)))
(assert (fp.gt (fp.div RNE x5 x7) (fp.div RNE x7 x3)))
(assert (fp.eq (fp.sub RNE x3 x3) (fp.sub RNE x5 x1)))
(assert (fp.eq (fp.neg x5) (fp.div RNE x5 x4)))
(check-sat)
