(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.neg x11)) (fp.add RNE (fp.sub RNE x2 x8) (fp.div RNE x4 x2))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x5 x10) (fp.mul RNE x3 x1)) (fp.div RNE (fp.add RNE x1 x4) (fp.mul RNE x12 x4))))
(assert (fp.gt (fp.neg (fp.div RNE x11 x10)) (fp.neg (fp.add RNE x4 x8))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x12 x6) (fp.sub RNE x0 x9)) (fp.add RNE (fp.add RNE x9 x10) (fp.add RNE x11 x9))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x5 x7) (fp.add RNE x6 x9)) (fp.neg (fp.mul RNE x10 x6))))
(assert (fp.leq (fp.neg (fp.neg x6)) (fp.sub RNE (fp.div RNE x4 x12) (fp.div RNE x2 x3))))
(assert (fp.lt (fp.add RNE (fp.neg x2) (fp.add RNE x3 x8)) (fp.add RNE (fp.neg x9) (fp.add RNE x11 x4))))
(assert (fp.lt (fp.neg (fp.add RNE x10 x8)) (fp.neg (fp.neg x1))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x11 x2) (fp.add RNE x12 x11)) (fp.sub RNE (fp.sub RNE x2 x8) (fp.sub RNE x11 x4))))
(assert (fp.geq (fp.neg (fp.mul RNE x4 x11)) (fp.mul RNE (fp.add RNE x2 x11) (fp.mul RNE x2 x7))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x10 x9) (fp.neg x2)) (fp.add RNE (fp.div RNE x9 x9) (fp.neg x4))))
(assert (fp.geq (fp.add RNE (fp.div RNE x8 x9) (fp.add RNE x1 x7)) (fp.add RNE (fp.mul RNE x10 x5) (fp.mul RNE x11 x11))))
(assert (fp.lt (fp.add RNE (fp.neg x8) (fp.sub RNE x10 x2)) (fp.sub RNE (fp.add RNE x11 x6) (fp.add RNE x6 x9))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x0 x5) (fp.div RNE x3 x8)) (fp.div RNE (fp.add RNE x10 x11) (fp.div RNE x1 x10))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x12 x4) (fp.div RNE x3 x4)) (fp.neg (fp.div RNE x1 x3))))
(assert (fp.leq (fp.add RNE (fp.add RNE x5 x3) (fp.sub RNE x12 x3)) (fp.add RNE (fp.add RNE x12 x4) (fp.mul RNE x11 x1))))
(assert (fp.gt (fp.div RNE (fp.add RNE x6 x4) (fp.div RNE x2 x4)) (fp.add RNE (fp.neg x2) (fp.div RNE x7 x5))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x11 x9) (fp.neg x10)) (fp.mul RNE (fp.mul RNE x9 x1) (fp.sub RNE x2 x3))))
(assert (fp.eq (fp.neg (fp.div RNE x8 x0)) (fp.add RNE (fp.mul RNE x5 x12) (fp.add RNE x5 x12))))
(check-sat)
