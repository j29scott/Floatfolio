(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x1) (fp.neg x7)))
(assert (fp.gt (fp.mul RNE x7 x3) (fp.mul RNE x0 x3)))
(assert (fp.lt (fp.div RNE x10 x4) (fp.add RNE x5 x2)))
(assert (fp.leq (fp.neg x5) (fp.add RNE x1 x5)))
(assert (fp.eq (fp.div RNE x0 x5) (fp.sub RNE x7 x9)))
(assert (fp.geq (fp.sub RNE x0 x0) (fp.add RNE x1 x4)))
(assert (fp.eq (fp.div RNE x0 x6) (fp.sub RNE x7 x5)))
(assert (fp.lt (fp.mul RNE x5 x2) (fp.mul RNE x6 x0)))
(assert (fp.lt (fp.add RNE x4 x6) (fp.mul RNE x2 x1)))
(assert (fp.lt (fp.neg x1) (fp.add RNE x3 x1)))
(assert (fp.eq (fp.div RNE x5 x4) (fp.mul RNE x6 x3)))
(assert (fp.eq (fp.mul RNE x0 x8) (fp.neg x0)))
(assert (fp.leq (fp.add RNE x2 x0) (fp.div RNE x4 x10)))
(assert (fp.geq (fp.div RNE x7 x4) (fp.mul RNE x1 x2)))
(assert (fp.lt (fp.add RNE x5 x8) (fp.div RNE x8 x1)))
(assert (fp.gt (fp.sub RNE x5 x9) (fp.div RNE x4 x10)))
(check-sat)
