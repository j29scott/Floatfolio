(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x6 x12)) (fp.add RNE (fp.div RNE x8 x17) (fp.add RNE x4 x11))) (fp.sub RNE (fp.mul RNE (fp.neg x9) (fp.div RNE x4 x0)) (fp.div RNE (fp.add RNE x5 x10) (fp.add RNE x9 x6)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x6 x3)) (fp.add RNE (fp.neg x2) (fp.mul RNE x1 x7))) (fp.add RNE (fp.add RNE (fp.add RNE x15 x7) (fp.mul RNE x2 x8)) (fp.add RNE (fp.neg x7) (fp.div RNE x4 x18)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.neg x4) (fp.sub RNE x18 x12))) (fp.div RNE (fp.sub RNE (fp.mul RNE x1 x8) (fp.mul RNE x6 x10)) (fp.div RNE (fp.mul RNE x3 x16) (fp.mul RNE x15 x14)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg x16) (fp.neg x0)) (fp.sub RNE (fp.neg x10) (fp.div RNE x7 x3))) (fp.mul RNE (fp.mul RNE (fp.neg x16) (fp.sub RNE x12 x7)) (fp.mul RNE (fp.sub RNE x2 x16) (fp.neg x8)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg x2) (fp.sub RNE x13 x17)) (fp.sub RNE (fp.sub RNE x11 x5) (fp.neg x7))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x4) (fp.div RNE x14 x13)) (fp.mul RNE (fp.mul RNE x10 x9) (fp.div RNE x13 x15)))))
(check-sat)
