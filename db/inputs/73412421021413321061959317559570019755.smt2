(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x13 x11)) (fp.sub RNE (fp.sub RNE x1 x16) (fp.add RNE x1 x12))) (fp.div RNE (fp.neg (fp.div RNE x16 x2)) (fp.neg (fp.sub RNE x12 x7)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x6 x9) (fp.add RNE x12 x13)) (fp.div RNE (fp.neg x13) (fp.sub RNE x2 x5))) (fp.sub RNE (fp.neg (fp.sub RNE x6 x14)) (fp.div RNE (fp.sub RNE x1 x0) (fp.mul RNE x14 x3))))))
(check-sat)
