(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x4 x7) (fp.neg x4)) (fp.mul RNE (fp.div RNE x7 x9) (fp.add RNE x10 x6))) (fp.add RNE (fp.mul RNE (fp.div RNE x5 x5) (fp.add RNE x2 x7)) (fp.sub RNE (fp.add RNE x5 x4) (fp.add RNE x9 x8)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.mul RNE x3 x2) (fp.mul RNE x10 x3)) (fp.sub RNE (fp.neg x6) (fp.div RNE x0 x9))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x6 x9) (fp.div RNE x10 x9)) (fp.add RNE (fp.add RNE x4 x8) (fp.div RNE x9 x9)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.sub RNE x1 x7) (fp.div RNE x4 x1))) (fp.add RNE (fp.sub RNE (fp.mul RNE x9 x4) (fp.div RNE x10 x2)) (fp.mul RNE (fp.div RNE x6 x10) (fp.div RNE x7 x5)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.add RNE x4 x5)) (fp.sub RNE (fp.sub RNE x8 x3) (fp.mul RNE x0 x8))) (fp.div RNE (fp.sub RNE (fp.mul RNE x3 x2) (fp.sub RNE x3 x10)) (fp.div RNE (fp.div RNE x4 x10) (fp.mul RNE x7 x7)))))
(check-sat)
