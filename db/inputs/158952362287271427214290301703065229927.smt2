(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x9 x8) (fp.mul RNE x0 x10)) (fp.add RNE (fp.mul RNE x4 x0) (fp.mul RNE x10 x4))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x9) (fp.neg x9)) (fp.neg (fp.add RNE x10 x6)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE x10 x2) (fp.div RNE x5 x2)) (fp.mul RNE (fp.add RNE x3 x8) (fp.neg x7))) (fp.neg (fp.mul RNE (fp.neg x10) (fp.add RNE x7 x11)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE x1 x0)) (fp.neg (fp.mul RNE x6 x5))) (fp.div RNE (fp.add RNE (fp.sub RNE x5 x1) (fp.div RNE x10 x1)) (fp.neg (fp.sub RNE x9 x4)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x7 x2) (fp.mul RNE x8 x0)) (fp.neg (fp.div RNE x6 x9))) (fp.div RNE (fp.neg (fp.mul RNE x3 x11)) (fp.neg (fp.div RNE x8 x0)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE x7 x1) (fp.div RNE x10 x5)) (fp.div RNE (fp.div RNE x5 x10) (fp.neg x9))) (fp.neg (fp.sub RNE (fp.neg x9) (fp.div RNE x9 x11)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.neg x11) (fp.neg x9)) (fp.div RNE (fp.div RNE x8 x6) (fp.div RNE x3 x6))) (fp.neg (fp.mul RNE (fp.add RNE x0 x0) (fp.add RNE x2 x11)))))
(check-sat)
