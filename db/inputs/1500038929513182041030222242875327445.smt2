(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.div RNE (fp.sub RNE x7 x3) (fp.div RNE x13 x9)) (fp.mul RNE (fp.div RNE x7 x12) (fp.sub RNE x3 x2))) (fp.mul RNE (fp.add RNE (fp.add RNE x12 x2) (fp.neg x3)) (fp.div RNE (fp.neg x8) (fp.div RNE x13 x2)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x12 x4) (fp.mul RNE x9 x15)) (fp.neg (fp.neg x2))) (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x12) (fp.add RNE x1 x6)) (fp.neg (fp.sub RNE x4 x7))))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE (fp.sub RNE x2 x13) (fp.mul RNE x14 x3))) (fp.mul RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x6 x14)) (fp.div RNE (fp.mul RNE x15 x4) (fp.sub RNE x15 x7)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.sub RNE x2 x5) (fp.mul RNE x10 x13))) (fp.neg (fp.neg (fp.div RNE x6 x0))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x2 x14)) (fp.mul RNE (fp.mul RNE x13 x2) (fp.div RNE x9 x10))) (fp.neg (fp.div RNE (fp.sub RNE x7 x12) (fp.div RNE x3 x14)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x9 x6) (fp.mul RNE x4 x4)) (fp.div RNE (fp.neg x5) (fp.div RNE x9 x2))) (fp.mul RNE (fp.neg (fp.mul RNE x4 x10)) (fp.sub RNE (fp.mul RNE x0 x3) (fp.div RNE x4 x0))))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.neg (fp.neg x13)) (fp.mul RNE (fp.mul RNE x11 x13) (fp.div RNE x8 x12))) (fp.mul RNE (fp.neg (fp.sub RNE x10 x8)) (fp.sub RNE (fp.neg x15) (fp.add RNE x6 x1)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.div RNE x6 x0) (fp.mul RNE x4 x11)) (fp.sub RNE (fp.div RNE x13 x15) (fp.add RNE x1 x0))) (fp.add RNE (fp.neg (fp.sub RNE x6 x9)) (fp.neg (fp.sub RNE x3 x3))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE (fp.add RNE x2 x5) (fp.add RNE x14 x9)) (fp.div RNE (fp.add RNE x0 x6) (fp.sub RNE x0 x2)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.mul RNE x14 x9) (fp.sub RNE x12 x0))) (fp.sub RNE (fp.div RNE (fp.neg x15) (fp.mul RNE x15 x12)) (fp.add RNE (fp.neg x15) (fp.neg x13))))))
(check-sat)
