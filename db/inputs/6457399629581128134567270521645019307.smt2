(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.mul RNE x16 x3) (fp.div RNE x8 x4)) (fp.neg (fp.div RNE x9 x12))) (fp.add RNE (fp.sub RNE (fp.sub RNE x3 x3) (fp.mul RNE x0 x9)) (fp.add RNE (fp.mul RNE x10 x11) (fp.div RNE x4 x16)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.div RNE x12 x9) (fp.add RNE x4 x8))) (fp.div RNE (fp.mul RNE (fp.neg x3) (fp.sub RNE x16 x10)) (fp.neg (fp.add RNE x12 x13)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x5) (fp.neg x13)) (fp.add RNE (fp.mul RNE x3 x11) (fp.neg x15))) (fp.mul RNE (fp.neg (fp.mul RNE x8 x15)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x12 x16)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x8 x3) (fp.neg x1))) (fp.mul RNE (fp.add RNE (fp.mul RNE x16 x3) (fp.sub RNE x16 x9)) (fp.mul RNE (fp.div RNE x0 x9) (fp.add RNE x14 x1)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x3 x13) (fp.add RNE x7 x16)) (fp.div RNE (fp.neg x15) (fp.add RNE x11 x3))) (fp.neg (fp.add RNE (fp.add RNE x3 x8) (fp.add RNE x2 x1)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x6 x7) (fp.div RNE x1 x10)) (fp.sub RNE (fp.add RNE x11 x8) (fp.div RNE x12 x9))) (fp.div RNE (fp.mul RNE (fp.sub RNE x2 x1) (fp.sub RNE x5 x6)) (fp.neg (fp.sub RNE x16 x0)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.neg x2)) (fp.sub RNE (fp.div RNE x6 x10) (fp.div RNE x9 x2))) (fp.sub RNE (fp.sub RNE (fp.add RNE x10 x14) (fp.add RNE x14 x5)) (fp.div RNE (fp.div RNE x10 x2) (fp.neg x4)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x2 x4) (fp.sub RNE x15 x13)) (fp.add RNE (fp.neg x16) (fp.div RNE x16 x13))) (fp.div RNE (fp.sub RNE (fp.neg x15) (fp.mul RNE x0 x16)) (fp.sub RNE (fp.sub RNE x9 x5) (fp.div RNE x5 x11)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.div RNE x10 x9) (fp.sub RNE x1 x0))) (fp.div RNE (fp.neg (fp.sub RNE x8 x4)) (fp.mul RNE (fp.add RNE x3 x16) (fp.div RNE x6 x0)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x0 x8) (fp.neg x13))) (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x7) (fp.mul RNE x4 x1)) (fp.div RNE (fp.div RNE x1 x14) (fp.mul RNE x5 x6)))))
(check-sat)
