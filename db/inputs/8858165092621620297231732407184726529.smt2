(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.sub RNE x15 x5) (fp.sub RNE x0 x4)) (fp.div RNE (fp.mul RNE x15 x4) (fp.add RNE x7 x18))) (fp.neg (fp.mul RNE (fp.sub RNE x10 x2) (fp.mul RNE x7 x1)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE x7 x7) (fp.neg x15)) (fp.mul RNE (fp.div RNE x7 x9) (fp.div RNE x0 x3))) (fp.neg (fp.add RNE (fp.div RNE x7 x9) (fp.mul RNE x1 x0)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x18) (fp.neg x8)) (fp.sub RNE (fp.sub RNE x1 x3) (fp.sub RNE x3 x3))) (fp.mul RNE (fp.add RNE (fp.sub RNE x2 x3) (fp.div RNE x15 x1)) (fp.neg (fp.neg x8)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.div RNE x15 x5) (fp.sub RNE x1 x5)) (fp.neg (fp.mul RNE x7 x19))) (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x12) (fp.sub RNE x1 x11)) (fp.sub RNE (fp.add RNE x0 x16) (fp.mul RNE x12 x16)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x20 x16) (fp.neg x1)) (fp.div RNE (fp.add RNE x1 x19) (fp.neg x6))) (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x0) (fp.neg x10)) (fp.sub RNE (fp.div RNE x0 x20) (fp.add RNE x11 x16)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x6 x15) (fp.sub RNE x3 x18)) (fp.neg (fp.sub RNE x0 x12))) (fp.neg (fp.add RNE (fp.div RNE x12 x13) (fp.mul RNE x0 x14)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x4 x14)) (fp.div RNE (fp.div RNE x17 x15) (fp.add RNE x18 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x9) (fp.sub RNE x19 x15)) (fp.div RNE (fp.neg x12) (fp.add RNE x3 x19)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x6 x17) (fp.div RNE x11 x13)) (fp.add RNE (fp.mul RNE x8 x10) (fp.sub RNE x7 x6))) (fp.sub RNE (fp.div RNE (fp.sub RNE x15 x9) (fp.neg x4)) (fp.div RNE (fp.neg x5) (fp.div RNE x12 x18)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x18 x2) (fp.div RNE x15 x0)) (fp.sub RNE (fp.mul RNE x15 x11) (fp.div RNE x16 x12))) (fp.div RNE (fp.add RNE (fp.div RNE x3 x5) (fp.neg x15)) (fp.sub RNE (fp.div RNE x4 x17) (fp.add RNE x7 x15)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.mul RNE x3 x6) (fp.sub RNE x20 x2)) (fp.sub RNE (fp.add RNE x20 x18) (fp.neg x15))) (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.mul RNE x20 x15)) (fp.sub RNE (fp.mul RNE x6 x18) (fp.neg x2)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x2) (fp.add RNE x7 x5)) (fp.div RNE (fp.sub RNE x4 x13) (fp.neg x13))) (fp.div RNE (fp.add RNE (fp.div RNE x12 x4) (fp.mul RNE x17 x0)) (fp.add RNE (fp.mul RNE x14 x7) (fp.add RNE x9 x18)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x8) (fp.add RNE x15 x9)) (fp.mul RNE (fp.add RNE x7 x5) (fp.mul RNE x3 x16))) (fp.neg (fp.sub RNE (fp.div RNE x19 x4) (fp.add RNE x18 x18)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.sub RNE x8 x4) (fp.add RNE x7 x1)) (fp.add RNE (fp.add RNE x1 x16) (fp.neg x6))) (fp.div RNE (fp.mul RNE (fp.mul RNE x15 x6) (fp.neg x15)) (fp.neg (fp.div RNE x13 x16)))))
(check-sat)
