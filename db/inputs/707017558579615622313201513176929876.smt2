(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x4 x10) (fp.add RNE x7 x4)) (fp.mul RNE (fp.mul RNE x8 x0) (fp.mul RNE x3 x4))))
(assert (fp.geq (fp.neg (fp.sub RNE x16 x3)) (fp.mul RNE (fp.add RNE x11 x6) (fp.add RNE x4 x0))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x13 x16) (fp.add RNE x6 x1)) (fp.sub RNE (fp.div RNE x1 x8) (fp.mul RNE x3 x5))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x5 x17) (fp.neg x13)) (fp.sub RNE (fp.add RNE x5 x12) (fp.neg x3))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x6 x14) (fp.div RNE x8 x3)) (fp.neg (fp.sub RNE x8 x0))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x2 x1) (fp.div RNE x13 x1)) (fp.sub RNE (fp.add RNE x12 x14) (fp.add RNE x3 x13))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x3 x10) (fp.neg x0)) (fp.mul RNE (fp.div RNE x17 x1) (fp.neg x11))))
(check-sat)
