(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.neg x6) (fp.neg x8)) (fp.neg (fp.sub RNE x13 x2))))
(assert (fp.geq (fp.mul RNE (fp.neg x6) (fp.div RNE x8 x6)) (fp.neg (fp.div RNE x4 x1))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x1 x16) (fp.add RNE x3 x15)) (fp.mul RNE (fp.sub RNE x1 x6) (fp.div RNE x7 x15))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x5) (fp.add RNE x1 x15)) (fp.sub RNE (fp.add RNE x8 x17) (fp.div RNE x1 x5))))
(check-sat)
