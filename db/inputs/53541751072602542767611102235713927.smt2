(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.div RNE x10 x8) (fp.div RNE x16 x13)) (fp.sub RNE (fp.mul RNE x21 x16) (fp.mul RNE x2 x21))) (fp.sub RNE (fp.add RNE (fp.div RNE x20 x21) (fp.add RNE x6 x18)) (fp.sub RNE (fp.div RNE x21 x2) (fp.add RNE x11 x8)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg x3) (fp.div RNE x7 x1)) (fp.mul RNE (fp.sub RNE x21 x16) (fp.div RNE x9 x3))) (fp.div RNE (fp.div RNE (fp.div RNE x0 x7) (fp.add RNE x19 x8)) (fp.add RNE (fp.mul RNE x19 x11) (fp.neg x11)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.div RNE x5 x21) (fp.sub RNE x22 x14)) (fp.sub RNE (fp.sub RNE x18 x22) (fp.div RNE x5 x9))) (fp.mul RNE (fp.mul RNE (fp.div RNE x9 x12) (fp.add RNE x15 x10)) (fp.mul RNE (fp.neg x21) (fp.neg x23)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x21 x18) (fp.add RNE x1 x10)) (fp.sub RNE (fp.mul RNE x10 x5) (fp.neg x22))) (fp.div RNE (fp.neg (fp.sub RNE x0 x4)) (fp.div RNE (fp.mul RNE x24 x2) (fp.div RNE x22 x3)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x5 x3) (fp.add RNE x23 x13))) (fp.mul RNE (fp.neg (fp.mul RNE x10 x0)) (fp.mul RNE (fp.neg x1) (fp.neg x23)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.sub RNE x8 x8) (fp.add RNE x2 x12)) (fp.add RNE (fp.sub RNE x3 x18) (fp.div RNE x21 x19))) (fp.div RNE (fp.div RNE (fp.sub RNE x24 x9) (fp.div RNE x12 x8)) (fp.mul RNE (fp.sub RNE x23 x5) (fp.mul RNE x22 x3)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x11 x18) (fp.add RNE x0 x20)) (fp.mul RNE (fp.div RNE x7 x8) (fp.div RNE x12 x17))) (fp.add RNE (fp.sub RNE (fp.div RNE x6 x21) (fp.div RNE x3 x17)) (fp.sub RNE (fp.mul RNE x21 x9) (fp.sub RNE x13 x15)))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x7 x14))) (fp.mul RNE (fp.mul RNE (fp.add RNE x7 x14) (fp.add RNE x3 x12)) (fp.sub RNE (fp.add RNE x3 x22) (fp.add RNE x22 x1)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x21 x8) (fp.neg x6)) (fp.add RNE (fp.div RNE x21 x19) (fp.mul RNE x23 x6))) (fp.neg (fp.add RNE (fp.mul RNE x6 x19) (fp.sub RNE x21 x0)))))
(check-sat)
