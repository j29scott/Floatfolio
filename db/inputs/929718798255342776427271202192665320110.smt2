(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.div RNE (fp.sub RNE x23 x24) (fp.neg x19))) (fp.div RNE (fp.neg (fp.mul RNE x4 x10)) (fp.neg (fp.sub RNE x1 x10)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg x21) (fp.neg x14)) (fp.div RNE (fp.div RNE x7 x18) (fp.add RNE x9 x19))) (fp.mul RNE (fp.neg (fp.div RNE x3 x19)) (fp.neg (fp.mul RNE x4 x16)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x16) (fp.mul RNE x24 x12)) (fp.add RNE (fp.add RNE x20 x4) (fp.div RNE x13 x23))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x13 x15) (fp.sub RNE x16 x0)) (fp.neg (fp.add RNE x22 x1)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.mul RNE x9 x12)) (fp.neg (fp.sub RNE x19 x22))) (fp.add RNE (fp.div RNE (fp.div RNE x9 x16) (fp.div RNE x23 x2)) (fp.mul RNE (fp.add RNE x15 x12) (fp.sub RNE x7 x15)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.div RNE x2 x11)) (fp.neg (fp.div RNE x20 x19))) (fp.neg (fp.neg (fp.sub RNE x18 x7)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.sub RNE x6 x9)) (fp.div RNE (fp.neg x14) (fp.div RNE x24 x12))) (fp.neg (fp.add RNE (fp.add RNE x23 x3) (fp.neg x19)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x4 x10) (fp.mul RNE x4 x2)) (fp.add RNE (fp.mul RNE x15 x18) (fp.div RNE x6 x16))) (fp.neg (fp.div RNE (fp.mul RNE x9 x1) (fp.neg x20)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x6 x10) (fp.neg x2)) (fp.sub RNE (fp.add RNE x10 x5) (fp.neg x7))) (fp.neg (fp.sub RNE (fp.add RNE x1 x7) (fp.div RNE x1 x11)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE x6 x6)) (fp.add RNE (fp.neg x24) (fp.neg x21))) (fp.add RNE (fp.sub RNE (fp.neg x15) (fp.sub RNE x24 x23)) (fp.neg (fp.sub RNE x0 x6)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x2) (fp.neg x0)) (fp.sub RNE (fp.sub RNE x20 x6) (fp.add RNE x7 x1))) (fp.neg (fp.sub RNE (fp.mul RNE x23 x5) (fp.neg x10)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x23 x19) (fp.mul RNE x7 x0)) (fp.neg (fp.add RNE x23 x15))) (fp.mul RNE (fp.div RNE (fp.div RNE x7 x1) (fp.add RNE x3 x9)) (fp.div RNE (fp.div RNE x21 x6) (fp.add RNE x19 x3)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x2 x14) (fp.neg x20))) (fp.mul RNE (fp.sub RNE (fp.add RNE x17 x6) (fp.div RNE x15 x23)) (fp.mul RNE (fp.div RNE x23 x20) (fp.add RNE x19 x18)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE x4 x3)) (fp.mul RNE (fp.mul RNE x16 x24) (fp.add RNE x14 x17))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x21 x7) (fp.div RNE x4 x5)) (fp.mul RNE (fp.add RNE x6 x17) (fp.mul RNE x22 x23)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.mul RNE x6 x2) (fp.add RNE x15 x8))) (fp.add RNE (fp.neg (fp.div RNE x24 x1)) (fp.add RNE (fp.sub RNE x10 x16) (fp.neg x8)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.neg x5)) (fp.neg (fp.mul RNE x7 x13))) (fp.neg (fp.mul RNE (fp.neg x10) (fp.div RNE x23 x8)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x9 x7) (fp.neg x6)) (fp.neg (fp.add RNE x11 x22))) (fp.add RNE (fp.sub RNE (fp.add RNE x23 x4) (fp.mul RNE x8 x14)) (fp.neg (fp.sub RNE x12 x2)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x0 x0)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x13 x19))) (fp.add RNE (fp.div RNE (fp.mul RNE x17 x3) (fp.mul RNE x23 x11)) (fp.add RNE (fp.neg x0) (fp.add RNE x8 x9)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE x6 x4) (fp.add RNE x14 x1)) (fp.sub RNE (fp.sub RNE x13 x7) (fp.add RNE x22 x18))) (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x10) (fp.neg x14)) (fp.div RNE (fp.sub RNE x15 x16) (fp.sub RNE x17 x2)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x1 x15) (fp.neg x16))) (fp.neg (fp.mul RNE (fp.add RNE x15 x21) (fp.mul RNE x1 x19)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg x19) (fp.sub RNE x18 x3))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x10) (fp.sub RNE x19 x12)) (fp.add RNE (fp.mul RNE x3 x13) (fp.mul RNE x6 x4)))))
(check-sat)
