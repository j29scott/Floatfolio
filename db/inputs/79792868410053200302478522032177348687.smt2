(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x17 x5) (fp.mul RNE x17 x12)))
(assert (fp.leq (fp.div RNE x3 x3) (fp.sub RNE x13 x0)))
(assert (fp.eq (fp.sub RNE x12 x12) (fp.neg x5)))
(assert (fp.gt (fp.mul RNE x8 x14) (fp.mul RNE x6 x9)))
(assert (fp.geq (fp.mul RNE x12 x2) (fp.div RNE x7 x7)))
(assert (fp.leq (fp.mul RNE x13 x1) (fp.div RNE x13 x3)))
(assert (fp.leq (fp.div RNE x1 x15) (fp.div RNE x3 x15)))
(check-sat)
