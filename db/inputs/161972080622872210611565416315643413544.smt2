(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.add RNE x8 x10)) (fp.sub RNE (fp.sub RNE x6 x16) (fp.neg x3))))
(assert (fp.geq (fp.neg (fp.sub RNE x10 x6)) (fp.neg (fp.neg x4))))
(assert (fp.geq (fp.neg (fp.div RNE x9 x5)) (fp.add RNE (fp.div RNE x0 x8) (fp.mul RNE x8 x2))))
(assert (fp.eq (fp.div RNE (fp.add RNE x14 x3) (fp.sub RNE x2 x16)) (fp.mul RNE (fp.mul RNE x8 x9) (fp.sub RNE x4 x8))))
(assert (fp.gt (fp.neg (fp.sub RNE x11 x4)) (fp.neg (fp.mul RNE x11 x5))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x8 x16) (fp.neg x1)) (fp.add RNE (fp.mul RNE x9 x7) (fp.div RNE x6 x14))))
(assert (fp.leq (fp.add RNE (fp.div RNE x11 x3) (fp.add RNE x4 x15)) (fp.add RNE (fp.mul RNE x3 x8) (fp.neg x7))))
(assert (fp.leq (fp.sub RNE (fp.neg x16) (fp.div RNE x13 x15)) (fp.sub RNE (fp.mul RNE x0 x15) (fp.neg x14))))
(assert (fp.leq (fp.div RNE (fp.add RNE x7 x3) (fp.add RNE x13 x14)) (fp.add RNE (fp.neg x8) (fp.neg x5))))
(assert (fp.leq (fp.neg (fp.neg x8)) (fp.add RNE (fp.div RNE x15 x16) (fp.neg x2))))
(assert (fp.geq (fp.neg (fp.add RNE x9 x6)) (fp.mul RNE (fp.sub RNE x8 x12) (fp.add RNE x16 x16))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x10 x10) (fp.sub RNE x9 x2)) (fp.neg (fp.div RNE x16 x7))))
(assert (fp.lt (fp.sub RNE (fp.neg x2) (fp.div RNE x4 x7)) (fp.div RNE (fp.neg x0) (fp.sub RNE x5 x2))))
(assert (fp.geq (fp.neg (fp.div RNE x1 x1)) (fp.div RNE (fp.div RNE x13 x7) (fp.sub RNE x13 x10))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x15 x7) (fp.neg x13)) (fp.mul RNE (fp.neg x2) (fp.div RNE x4 x11))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x14 x16) (fp.mul RNE x11 x13)) (fp.add RNE (fp.add RNE x13 x1) (fp.add RNE x11 x9))))
(assert (fp.lt (fp.div RNE (fp.div RNE x9 x5) (fp.sub RNE x15 x14)) (fp.sub RNE (fp.mul RNE x8 x9) (fp.mul RNE x16 x9))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x4 x5) (fp.neg x10)) (fp.div RNE (fp.div RNE x8 x15) (fp.div RNE x8 x6))))
(assert (fp.geq (fp.div RNE (fp.neg x7) (fp.neg x16)) (fp.div RNE (fp.add RNE x6 x16) (fp.sub RNE x12 x10))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x13 x9) (fp.div RNE x6 x10)) (fp.add RNE (fp.add RNE x6 x0) (fp.add RNE x0 x12))))
(check-sat)
