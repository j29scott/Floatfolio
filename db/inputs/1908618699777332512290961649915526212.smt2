(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.neg x13) (fp.add RNE x0 x0)) (fp.div RNE (fp.sub RNE x1 x1) (fp.mul RNE x15 x19))))
(assert (fp.gt (fp.neg (fp.add RNE x16 x7)) (fp.div RNE (fp.add RNE x0 x11) (fp.add RNE x5 x7))))
(assert (fp.geq (fp.div RNE (fp.add RNE x9 x2) (fp.neg x19)) (fp.add RNE (fp.add RNE x9 x17) (fp.neg x6))))
(assert (fp.gt (fp.neg (fp.mul RNE x7 x7)) (fp.neg (fp.neg x15))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x6 x10) (fp.sub RNE x15 x2)) (fp.div RNE (fp.sub RNE x14 x0) (fp.sub RNE x21 x21))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x7 x12) (fp.neg x17)) (fp.neg (fp.div RNE x17 x22))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x9 x20) (fp.neg x0)) (fp.sub RNE (fp.sub RNE x1 x5) (fp.div RNE x20 x0))))
(assert (fp.lt (fp.neg (fp.div RNE x21 x4)) (fp.neg (fp.add RNE x23 x9))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x7 x6) (fp.mul RNE x10 x18)) (fp.neg (fp.mul RNE x0 x17))))
(assert (fp.geq (fp.div RNE (fp.neg x17) (fp.add RNE x14 x18)) (fp.neg (fp.div RNE x24 x17))))
(check-sat)
