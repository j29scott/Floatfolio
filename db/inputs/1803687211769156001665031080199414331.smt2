(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x5 x3) (fp.add RNE x10 x12)) (fp.mul RNE (fp.add RNE x19 x16) (fp.mul RNE x7 x16))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x10 x9) (fp.neg x9)) (fp.add RNE (fp.div RNE x24 x5) (fp.mul RNE x7 x19))))
(assert (fp.leq (fp.div RNE (fp.add RNE x21 x5) (fp.sub RNE x23 x12)) (fp.div RNE (fp.div RNE x15 x3) (fp.sub RNE x16 x7))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x11 x13) (fp.add RNE x18 x17)) (fp.add RNE (fp.sub RNE x25 x11) (fp.div RNE x15 x13))))
(assert (fp.leq (fp.div RNE (fp.div RNE x20 x16) (fp.add RNE x1 x12)) (fp.neg (fp.mul RNE x7 x5))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x8 x16) (fp.sub RNE x9 x5)) (fp.neg (fp.add RNE x0 x23))))
(assert (fp.geq (fp.add RNE (fp.neg x16) (fp.div RNE x23 x2)) (fp.add RNE (fp.sub RNE x5 x5) (fp.sub RNE x8 x13))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x19 x3) (fp.neg x16)) (fp.div RNE (fp.div RNE x6 x8) (fp.div RNE x25 x2))))
(assert (fp.eq (fp.mul RNE (fp.neg x23) (fp.div RNE x3 x19)) (fp.neg (fp.div RNE x20 x9))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x25 x0) (fp.add RNE x6 x22)) (fp.div RNE (fp.div RNE x4 x0) (fp.sub RNE x13 x19))))
(assert (fp.eq (fp.div RNE (fp.add RNE x23 x5) (fp.div RNE x21 x24)) (fp.sub RNE (fp.neg x18) (fp.mul RNE x3 x20))))
(assert (fp.lt (fp.mul RNE (fp.neg x1) (fp.sub RNE x24 x2)) (fp.neg (fp.neg x24))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x19 x3) (fp.mul RNE x11 x15)) (fp.div RNE (fp.neg x7) (fp.div RNE x5 x7))))
(assert (fp.eq (fp.add RNE (fp.neg x18) (fp.sub RNE x3 x22)) (fp.sub RNE (fp.sub RNE x25 x19) (fp.mul RNE x17 x19))))
(assert (fp.eq (fp.div RNE (fp.add RNE x17 x9) (fp.neg x22)) (fp.sub RNE (fp.neg x20) (fp.mul RNE x16 x15))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x16) (fp.neg x9)) (fp.neg (fp.div RNE x15 x17))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x10 x4) (fp.add RNE x19 x18)) (fp.sub RNE (fp.add RNE x4 x8) (fp.div RNE x10 x2))))
(assert (fp.leq (fp.div RNE (fp.neg x11) (fp.mul RNE x11 x23)) (fp.neg (fp.div RNE x23 x15))))
(assert (fp.leq (fp.neg (fp.neg x6)) (fp.sub RNE (fp.mul RNE x14 x4) (fp.sub RNE x16 x6))))
(check-sat)
