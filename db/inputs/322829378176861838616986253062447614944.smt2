(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE (fp.mul RNE x2 x0) (fp.sub RNE x8 x6))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x4) (fp.div RNE x4 x8)) (fp.mul RNE (fp.add RNE x5 x0) (fp.mul RNE x4 x0)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x5 x7) (fp.div RNE x1 x3)) (fp.neg (fp.mul RNE x0 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x1) (fp.mul RNE x1 x0)) (fp.mul RNE (fp.add RNE x0 x5) (fp.mul RNE x8 x4))))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.sub RNE (fp.div RNE x0 x8) (fp.div RNE x0 x5)) (fp.neg (fp.div RNE x5 x4))) (fp.mul RNE (fp.neg (fp.add RNE x1 x3)) (fp.sub RNE (fp.div RNE x0 x7) (fp.sub RNE x6 x0)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.add RNE x1 x7) (fp.sub RNE x6 x7)) (fp.sub RNE (fp.div RNE x6 x7) (fp.neg x4))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x3) (fp.neg x1)) (fp.neg (fp.add RNE x7 x5))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.add RNE (fp.div RNE x7 x0) (fp.add RNE x4 x2)) (fp.mul RNE (fp.sub RNE x0 x3) (fp.div RNE x1 x5))) (fp.add RNE (fp.mul RNE (fp.div RNE x7 x2) (fp.sub RNE x3 x4)) (fp.sub RNE (fp.mul RNE x8 x0) (fp.sub RNE x5 x8)))) (fp.add RNE (fp.neg (fp.add RNE (fp.add RNE x3 x0) (fp.div RNE x4 x5))) (fp.add RNE (fp.mul RNE (fp.sub RNE x4 x2) (fp.mul RNE x8 x5)) (fp.neg (fp.neg x1))))))
(check-sat)
