(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x3 x8) (fp.mul RNE x8 x6)) (fp.div RNE (fp.sub RNE x3 x2) (fp.add RNE x12 x11))) (fp.neg (fp.add RNE (fp.mul RNE x12 x9) (fp.neg x10)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x1 x11) (fp.add RNE x11 x0))) (fp.neg (fp.add RNE (fp.neg x12) (fp.mul RNE x7 x10)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x3) (fp.sub RNE x6 x11)) (fp.mul RNE (fp.mul RNE x10 x5) (fp.mul RNE x0 x2))) (fp.add RNE (fp.div RNE (fp.div RNE x10 x1) (fp.sub RNE x9 x9)) (fp.neg (fp.neg x11)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x12 x2) (fp.mul RNE x8 x4)) (fp.neg (fp.add RNE x6 x9))) (fp.mul RNE (fp.neg (fp.add RNE x5 x10)) (fp.sub RNE (fp.mul RNE x12 x12) (fp.div RNE x4 x5)))))
(check-sat)
