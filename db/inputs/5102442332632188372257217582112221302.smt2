(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg x7) (fp.neg x11)) (fp.add RNE (fp.sub RNE x2 x2) (fp.add RNE x2 x1))))
(assert (fp.gt (fp.div RNE (fp.add RNE x7 x0) (fp.sub RNE x2 x0)) (fp.sub RNE (fp.add RNE x1 x0) (fp.mul RNE x6 x9))))
(assert (fp.gt (fp.add RNE (fp.neg x2) (fp.neg x2)) (fp.div RNE (fp.mul RNE x3 x14) (fp.mul RNE x8 x9))))
(assert (fp.gt (fp.neg (fp.sub RNE x11 x9)) (fp.add RNE (fp.sub RNE x9 x3) (fp.mul RNE x6 x1))))
(assert (fp.geq (fp.neg (fp.neg x11)) (fp.div RNE (fp.sub RNE x2 x13) (fp.add RNE x10 x7))))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.add RNE x10 x5)) (fp.neg (fp.neg x10))))
(check-sat)
