(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE x7 x1) (fp.add RNE x7 x6)))
(assert (fp.eq (fp.add RNE x7 x2) (fp.div RNE x3 x6)))
(assert (fp.leq (fp.div RNE x3 x2) (fp.mul RNE x5 x0)))
(assert (fp.leq (fp.sub RNE x8 x5) (fp.neg x5)))
(assert (fp.leq (fp.div RNE x7 x2) (fp.sub RNE x2 x2)))
(assert (fp.lt (fp.add RNE x3 x6) (fp.neg x0)))
(assert (fp.geq (fp.neg x8) (fp.mul RNE x7 x8)))
(assert (fp.leq (fp.add RNE x1 x8) (fp.mul RNE x7 x3)))
(assert (fp.gt (fp.add RNE x4 x5) (fp.neg x8)))
(assert (fp.eq (fp.mul RNE x2 x6) (fp.sub RNE x8 x4)))
(assert (fp.lt (fp.div RNE x1 x3) (fp.sub RNE x2 x3)))
(assert (fp.lt (fp.div RNE x4 x5) (fp.add RNE x7 x7)))
(assert (fp.geq (fp.div RNE x1 x8) (fp.sub RNE x5 x6)))
(assert (fp.eq (fp.div RNE x5 x4) (fp.sub RNE x7 x4)))
(assert (fp.eq (fp.div RNE x6 x0) (fp.mul RNE x1 x6)))
(assert (fp.leq (fp.sub RNE x7 x4) (fp.neg x6)))
(check-sat)
