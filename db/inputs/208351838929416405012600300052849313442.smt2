(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE x14 x2) (fp.mul RNE x12 x9))) (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x9) (fp.mul RNE x9 x2)) (fp.sub RNE (fp.div RNE x0 x15) (fp.div RNE x10 x14)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x17)) (fp.add RNE (fp.mul RNE x12 x5) (fp.neg x13))) (fp.mul RNE (fp.neg (fp.neg x4)) (fp.div RNE (fp.mul RNE x17 x1) (fp.sub RNE x14 x18)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x10) (fp.div RNE x11 x0)) (fp.div RNE (fp.neg x19) (fp.add RNE x4 x6))) (fp.sub RNE (fp.div RNE (fp.sub RNE x18 x0) (fp.neg x17)) (fp.div RNE (fp.sub RNE x13 x4) (fp.neg x11)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x16 x15) (fp.sub RNE x15 x11)) (fp.div RNE (fp.mul RNE x13 x12) (fp.div RNE x13 x3))) (fp.add RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x10 x19)) (fp.mul RNE (fp.sub RNE x16 x6) (fp.mul RNE x9 x3)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x9) (fp.mul RNE x12 x3)) (fp.neg (fp.sub RNE x14 x6))) (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.sub RNE x7 x14)) (fp.div RNE (fp.add RNE x17 x11) (fp.mul RNE x19 x5)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.add RNE x11 x12) (fp.div RNE x11 x12)) (fp.div RNE (fp.neg x3) (fp.mul RNE x1 x19))) (fp.add RNE (fp.add RNE (fp.div RNE x12 x3) (fp.div RNE x5 x9)) (fp.div RNE (fp.add RNE x13 x6) (fp.mul RNE x11 x10)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x11 x12) (fp.add RNE x13 x18)) (fp.mul RNE (fp.div RNE x17 x11) (fp.div RNE x3 x11))) (fp.mul RNE (fp.add RNE (fp.neg x11) (fp.add RNE x12 x14)) (fp.add RNE (fp.add RNE x5 x8) (fp.add RNE x9 x0)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x4 x13) (fp.add RNE x2 x4)) (fp.sub RNE (fp.neg x11) (fp.add RNE x16 x3))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x17) (fp.sub RNE x15 x18)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.neg x18) (fp.add RNE x17 x2)) (fp.sub RNE (fp.neg x11) (fp.add RNE x3 x6))) (fp.sub RNE (fp.neg (fp.mul RNE x9 x16)) (fp.add RNE (fp.div RNE x19 x14) (fp.mul RNE x15 x3)))))
(check-sat)
