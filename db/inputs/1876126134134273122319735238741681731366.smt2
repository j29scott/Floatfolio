(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.add RNE x7 x6) (fp.add RNE x2 x5)) (fp.mul RNE (fp.add RNE x11 x13) (fp.sub RNE x5 x1))))
(assert (fp.eq (fp.neg (fp.sub RNE x11 x6)) (fp.neg (fp.add RNE x11 x15))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x13 x13) (fp.sub RNE x10 x5)) (fp.mul RNE (fp.mul RNE x6 x6) (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x12 x0) (fp.add RNE x5 x8)) (fp.mul RNE (fp.add RNE x11 x11) (fp.sub RNE x14 x2))))
(assert (fp.eq (fp.div RNE (fp.neg x8) (fp.neg x15)) (fp.div RNE (fp.mul RNE x3 x11) (fp.neg x2))))
(assert (fp.geq (fp.div RNE (fp.add RNE x13 x3) (fp.div RNE x11 x1)) (fp.div RNE (fp.sub RNE x13 x15) (fp.add RNE x4 x2))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x4 x6) (fp.sub RNE x10 x1)) (fp.div RNE (fp.neg x10) (fp.sub RNE x0 x10))))
(check-sat)
