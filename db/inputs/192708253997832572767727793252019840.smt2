(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.mul RNE x5 x8)) (fp.add RNE (fp.mul RNE x7 x4) (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.neg x1) (fp.neg x7)) (fp.mul RNE (fp.div RNE x5 x1) (fp.add RNE x8 x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x8 x5) (fp.sub RNE x9 x6)) (fp.mul RNE (fp.div RNE x3 x4) (fp.sub RNE x2 x4))))
(assert (fp.eq (fp.add RNE (fp.add RNE x7 x10) (fp.add RNE x3 x7)) (fp.add RNE (fp.sub RNE x0 x3) (fp.sub RNE x9 x8))))
(assert (fp.leq (fp.div RNE (fp.neg x7) (fp.add RNE x4 x2)) (fp.mul RNE (fp.neg x10) (fp.mul RNE x6 x8))))
(assert (fp.eq (fp.add RNE (fp.div RNE x6 x8) (fp.div RNE x8 x10)) (fp.mul RNE (fp.sub RNE x6 x3) (fp.sub RNE x1 x4))))
(assert (fp.geq (fp.div RNE (fp.div RNE x10 x6) (fp.add RNE x8 x0)) (fp.sub RNE (fp.mul RNE x7 x7) (fp.mul RNE x1 x7))))
(assert (fp.leq (fp.neg (fp.neg x5)) (fp.add RNE (fp.mul RNE x6 x10) (fp.neg x2))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x2 x1) (fp.neg x2)) (fp.div RNE (fp.div RNE x10 x7) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.neg x8)) (fp.mul RNE (fp.neg x1) (fp.div RNE x6 x8))))
(check-sat)
