(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.mul RNE x5 x9) (fp.neg x2)) (fp.sub RNE (fp.div RNE x9 x4) (fp.add RNE x0 x4))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x4 x9) (fp.div RNE x5 x4)) (fp.sub RNE (fp.div RNE x2 x2) (fp.div RNE x7 x4))))
(assert (fp.gt (fp.add RNE (fp.add RNE x7 x0) (fp.sub RNE x7 x6)) (fp.add RNE (fp.neg x2) (fp.add RNE x1 x9))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x9 x9) (fp.sub RNE x0 x0)) (fp.sub RNE (fp.sub RNE x6 x2) (fp.sub RNE x0 x9))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.add RNE x3 x3)) (fp.add RNE (fp.sub RNE x0 x6) (fp.sub RNE x7 x4))))
(assert (fp.leq (fp.div RNE (fp.add RNE x6 x9) (fp.neg x6)) (fp.neg (fp.neg x0))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x3 x1) (fp.add RNE x7 x2)) (fp.add RNE (fp.mul RNE x4 x9) (fp.mul RNE x2 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x7 x9) (fp.neg x2)) (fp.add RNE (fp.neg x1) (fp.neg x3))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x9 x6) (fp.mul RNE x0 x2)) (fp.sub RNE (fp.add RNE x5 x5) (fp.neg x1))))
(check-sat)
