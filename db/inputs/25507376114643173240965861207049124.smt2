(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.sub RNE x10 x15) (fp.neg x16)) (fp.add RNE (fp.div RNE x10 x7) (fp.sub RNE x1 x1))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x16 x17) (fp.neg x15)) (fp.div RNE (fp.neg x9) (fp.add RNE x18 x4))))
(assert (fp.gt (fp.add RNE (fp.neg x18) (fp.div RNE x9 x2)) (fp.mul RNE (fp.sub RNE x0 x0) (fp.div RNE x8 x19))))
(assert (fp.eq (fp.add RNE (fp.div RNE x4 x5) (fp.div RNE x10 x2)) (fp.neg (fp.div RNE x4 x2))))
(assert (fp.eq (fp.div RNE (fp.add RNE x13 x15) (fp.div RNE x18 x8)) (fp.div RNE (fp.neg x9) (fp.add RNE x11 x20))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x11 x19) (fp.neg x0)) (fp.mul RNE (fp.add RNE x15 x19) (fp.add RNE x19 x13))))
(assert (fp.eq (fp.add RNE (fp.div RNE x18 x0) (fp.mul RNE x22 x20)) (fp.div RNE (fp.mul RNE x12 x5) (fp.neg x7))))
(assert (fp.eq (fp.add RNE (fp.neg x6) (fp.mul RNE x12 x0)) (fp.add RNE (fp.sub RNE x15 x13) (fp.add RNE x19 x8))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x3 x6) (fp.neg x1)) (fp.add RNE (fp.div RNE x13 x14) (fp.neg x9))))
(assert (fp.eq (fp.sub RNE (fp.neg x21) (fp.neg x9)) (fp.div RNE (fp.sub RNE x4 x5) (fp.sub RNE x4 x9))))
(assert (fp.leq (fp.sub RNE (fp.neg x4) (fp.mul RNE x11 x9)) (fp.mul RNE (fp.div RNE x1 x2) (fp.mul RNE x7 x11))))
(assert (fp.gt (fp.add RNE (fp.neg x12) (fp.div RNE x18 x17)) (fp.add RNE (fp.neg x9) (fp.add RNE x3 x21))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x14 x11) (fp.neg x8)) (fp.mul RNE (fp.add RNE x4 x5) (fp.add RNE x21 x19))))
(check-sat)
