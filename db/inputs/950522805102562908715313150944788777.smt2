(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.div RNE x6 x5) (fp.div RNE x1 x6)) (fp.sub RNE (fp.sub RNE x0 x2) (fp.div RNE x11 x12))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x3 x6) (fp.sub RNE x7 x6)) (fp.mul RNE (fp.neg x13) (fp.add RNE x6 x12))))
(assert (fp.geq (fp.div RNE (fp.neg x2) (fp.mul RNE x13 x11)) (fp.div RNE (fp.div RNE x13 x9) (fp.neg x14))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x12) (fp.mul RNE x13 x13)) (fp.add RNE (fp.sub RNE x8 x10) (fp.add RNE x11 x1))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x11 x14) (fp.add RNE x13 x5)) (fp.neg (fp.div RNE x5 x3))))
(check-sat)
