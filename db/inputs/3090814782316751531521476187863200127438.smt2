(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE x12 x23) (fp.sub RNE x12 x13)) (fp.sub RNE (fp.div RNE x12 x3) (fp.sub RNE x21 x7))))
(assert (fp.gt (fp.neg (fp.mul RNE x1 x15)) (fp.neg (fp.mul RNE x16 x26))))
(assert (fp.lt (fp.neg (fp.sub RNE x22 x24)) (fp.mul RNE (fp.div RNE x10 x18) (fp.neg x10))))
(assert (fp.gt (fp.add RNE (fp.neg x10) (fp.neg x21)) (fp.add RNE (fp.add RNE x16 x9) (fp.sub RNE x22 x23))))
(assert (fp.leq (fp.neg (fp.sub RNE x10 x4)) (fp.add RNE (fp.add RNE x22 x18) (fp.sub RNE x4 x11))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x3 x4) (fp.mul RNE x22 x6)) (fp.add RNE (fp.mul RNE x17 x9) (fp.sub RNE x5 x11))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x7 x4) (fp.add RNE x10 x22)) (fp.neg (fp.div RNE x18 x0))))
(assert (fp.geq (fp.div RNE (fp.add RNE x14 x21) (fp.add RNE x18 x13)) (fp.div RNE (fp.neg x16) (fp.add RNE x0 x24))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x10 x16) (fp.sub RNE x6 x17)) (fp.neg (fp.div RNE x24 x0))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x12 x14) (fp.add RNE x4 x9)) (fp.sub RNE (fp.div RNE x7 x7) (fp.mul RNE x10 x21))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x23 x11) (fp.div RNE x23 x7)) (fp.sub RNE (fp.add RNE x9 x8) (fp.sub RNE x8 x1))))
(assert (fp.eq (fp.sub RNE (fp.neg x7) (fp.sub RNE x12 x5)) (fp.mul RNE (fp.add RNE x24 x7) (fp.mul RNE x22 x12))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x16 x2) (fp.mul RNE x15 x7)) (fp.mul RNE (fp.add RNE x26 x21) (fp.neg x10))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x24 x13) (fp.div RNE x24 x26)) (fp.sub RNE (fp.sub RNE x12 x4) (fp.div RNE x25 x26))))
(assert (fp.geq (fp.add RNE (fp.div RNE x5 x15) (fp.neg x13)) (fp.neg (fp.sub RNE x22 x3))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x26 x3) (fp.sub RNE x24 x8)) (fp.neg (fp.add RNE x25 x0))))
(assert (fp.eq (fp.neg (fp.mul RNE x22 x10)) (fp.div RNE (fp.div RNE x8 x11) (fp.add RNE x13 x22))))
(check-sat)
