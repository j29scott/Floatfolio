(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x8 x12) (fp.mul RNE x2 x6))) (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x12) (fp.div RNE x6 x3)) (fp.add RNE (fp.add RNE x12 x1) (fp.div RNE x2 x10)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.add RNE x8 x9)) (fp.add RNE (fp.neg x3) (fp.mul RNE x5 x10))) (fp.div RNE (fp.add RNE (fp.mul RNE x3 x8) (fp.neg x3)) (fp.div RNE (fp.div RNE x7 x5) (fp.neg x8)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.neg x0) (fp.add RNE x12 x6)) (fp.neg (fp.add RNE x1 x9))) (fp.add RNE (fp.neg (fp.sub RNE x9 x0)) (fp.mul RNE (fp.sub RNE x0 x11) (fp.sub RNE x8 x9)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x11 x11) (fp.add RNE x2 x0))) (fp.add RNE (fp.sub RNE (fp.sub RNE x4 x8) (fp.neg x2)) (fp.mul RNE (fp.add RNE x6 x8) (fp.neg x5)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.add RNE x8 x4) (fp.add RNE x10 x3)) (fp.sub RNE (fp.sub RNE x3 x5) (fp.add RNE x0 x9))) (fp.div RNE (fp.neg (fp.div RNE x9 x11)) (fp.add RNE (fp.mul RNE x10 x11) (fp.add RNE x12 x1)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE x8 x6) (fp.neg x8)) (fp.sub RNE (fp.add RNE x5 x1) (fp.neg x12))) (fp.neg (fp.mul RNE (fp.add RNE x0 x4) (fp.sub RNE x11 x3)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.div RNE x2 x9) (fp.neg x2)) (fp.add RNE (fp.mul RNE x11 x8) (fp.div RNE x2 x3))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x3 x1) (fp.add RNE x8 x1)) (fp.add RNE (fp.div RNE x10 x3) (fp.add RNE x3 x10)))))
(check-sat)
