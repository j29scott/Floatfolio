(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.mul RNE x12 x14) (fp.mul RNE x12 x16)) (fp.div RNE (fp.div RNE x3 x13) (fp.sub RNE x14 x9))))
(assert (fp.lt (fp.mul RNE (fp.neg x13) (fp.neg x8)) (fp.add RNE (fp.sub RNE x1 x9) (fp.sub RNE x7 x8))))
(assert (fp.eq (fp.div RNE (fp.div RNE x12 x9) (fp.sub RNE x1 x13)) (fp.mul RNE (fp.neg x9) (fp.add RNE x16 x16))))
(assert (fp.eq (fp.add RNE (fp.add RNE x16 x9) (fp.neg x16)) (fp.sub RNE (fp.mul RNE x4 x14) (fp.neg x12))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x13 x10) (fp.div RNE x15 x11)) (fp.add RNE (fp.add RNE x17 x2) (fp.div RNE x13 x2))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x4 x13) (fp.add RNE x17 x4)) (fp.neg (fp.neg x15))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x13 x5) (fp.mul RNE x17 x2)) (fp.add RNE (fp.sub RNE x1 x2) (fp.div RNE x7 x0))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x12 x15) (fp.sub RNE x6 x2)) (fp.div RNE (fp.neg x11) (fp.mul RNE x3 x15))))
(assert (fp.geq (fp.sub RNE (fp.neg x5) (fp.add RNE x9 x2)) (fp.add RNE (fp.neg x7) (fp.mul RNE x10 x9))))
(assert (fp.gt (fp.div RNE (fp.div RNE x12 x11) (fp.neg x1)) (fp.add RNE (fp.neg x0) (fp.add RNE x7 x7))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x10 x12) (fp.add RNE x17 x6)) (fp.sub RNE (fp.mul RNE x9 x14) (fp.sub RNE x0 x4))))
(assert (fp.eq (fp.add RNE (fp.neg x2) (fp.sub RNE x3 x7)) (fp.neg (fp.add RNE x12 x13))))
(assert (fp.lt (fp.add RNE (fp.div RNE x0 x6) (fp.add RNE x17 x14)) (fp.sub RNE (fp.neg x5) (fp.add RNE x0 x8))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x7 x4) (fp.mul RNE x0 x11)) (fp.sub RNE (fp.sub RNE x5 x16) (fp.div RNE x11 x12))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x13 x9) (fp.div RNE x10 x5)) (fp.div RNE (fp.neg x4) (fp.neg x1))))
(check-sat)
