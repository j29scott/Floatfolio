(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x8 x12)) (fp.neg (fp.add RNE x0 x15))) (fp.add RNE (fp.add RNE (fp.div RNE x10 x6) (fp.add RNE x6 x8)) (fp.neg (fp.sub RNE x4 x5)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x15 x15) (fp.sub RNE x2 x3)) (fp.div RNE (fp.mul RNE x16 x9) (fp.sub RNE x16 x5))) (fp.add RNE (fp.neg (fp.div RNE x0 x5)) (fp.neg (fp.sub RNE x10 x0)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.mul RNE x16 x16) (fp.neg x17)) (fp.sub RNE (fp.div RNE x4 x3) (fp.neg x4))) (fp.add RNE (fp.neg (fp.add RNE x7 x11)) (fp.add RNE (fp.sub RNE x2 x2) (fp.mul RNE x0 x2)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE x14 x9) (fp.neg x6))) (fp.add RNE (fp.sub RNE (fp.mul RNE x9 x6) (fp.add RNE x8 x9)) (fp.sub RNE (fp.mul RNE x13 x4) (fp.neg x1)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x15 x14) (fp.div RNE x15 x13)) (fp.div RNE (fp.sub RNE x7 x5) (fp.neg x16))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x17) (fp.add RNE x3 x17)) (fp.div RNE (fp.add RNE x1 x1) (fp.add RNE x0 x7)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x13 x15) (fp.mul RNE x7 x15)) (fp.mul RNE (fp.sub RNE x14 x5) (fp.mul RNE x0 x0))) (fp.add RNE (fp.sub RNE (fp.mul RNE x12 x1) (fp.neg x1)) (fp.neg (fp.add RNE x5 x7)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.mul RNE x12 x13) (fp.add RNE x10 x2)) (fp.mul RNE (fp.sub RNE x3 x8) (fp.sub RNE x11 x3))) (fp.mul RNE (fp.sub RNE (fp.neg x16) (fp.neg x5)) (fp.sub RNE (fp.sub RNE x11 x1) (fp.add RNE x6 x13)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.add RNE x12 x8) (fp.mul RNE x8 x7)) (fp.add RNE (fp.neg x11) (fp.div RNE x2 x12))) (fp.div RNE (fp.div RNE (fp.mul RNE x7 x14) (fp.neg x8)) (fp.neg (fp.div RNE x14 x4)))))
(check-sat)
