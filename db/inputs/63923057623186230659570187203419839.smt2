(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.add RNE x3 x9)) (fp.sub RNE (fp.div RNE x1 x4) (fp.sub RNE x5 x10))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x4 x9) (fp.mul RNE x7 x3)) (fp.sub RNE (fp.sub RNE x5 x5) (fp.mul RNE x0 x4)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x8 x7) (fp.mul RNE x0 x10))) (fp.neg (fp.div RNE (fp.mul RNE x6 x0) (fp.add RNE x7 x7)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.div RNE x1 x1) (fp.neg x4)) (fp.sub RNE (fp.add RNE x1 x4) (fp.div RNE x6 x9))) (fp.neg (fp.mul RNE (fp.neg x4) (fp.sub RNE x2 x3)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x0 x8) (fp.mul RNE x7 x5)) (fp.sub RNE (fp.div RNE x8 x8) (fp.sub RNE x0 x5))) (fp.neg (fp.add RNE (fp.div RNE x8 x7) (fp.mul RNE x5 x9)))))
(check-sat)
