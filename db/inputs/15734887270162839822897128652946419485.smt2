(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE x5 x12) (fp.add RNE x7 x7)) (fp.neg (fp.add RNE x9 x2))))
(assert (fp.leq (fp.sub RNE (fp.neg x9) (fp.div RNE x5 x9)) (fp.div RNE (fp.mul RNE x6 x5) (fp.div RNE x2 x11))))
(assert (fp.geq (fp.mul RNE (fp.neg x0) (fp.add RNE x8 x4)) (fp.mul RNE (fp.div RNE x4 x4) (fp.add RNE x10 x0))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x12 x14) (fp.neg x11)) (fp.div RNE (fp.neg x5) (fp.neg x2))))
(assert (fp.eq (fp.div RNE (fp.add RNE x9 x2) (fp.neg x5)) (fp.neg (fp.mul RNE x8 x7))))
(assert (fp.geq (fp.div RNE (fp.add RNE x8 x12) (fp.div RNE x7 x0)) (fp.div RNE (fp.add RNE x14 x9) (fp.neg x4))))
(assert (fp.geq (fp.div RNE (fp.div RNE x3 x9) (fp.neg x9)) (fp.sub RNE (fp.div RNE x9 x11) (fp.mul RNE x3 x7))))
(assert (fp.geq (fp.div RNE (fp.neg x6) (fp.mul RNE x10 x1)) (fp.mul RNE (fp.neg x2) (fp.mul RNE x0 x5))))
(assert (fp.leq (fp.div RNE (fp.div RNE x9 x1) (fp.mul RNE x6 x4)) (fp.mul RNE (fp.div RNE x10 x7) (fp.div RNE x8 x14))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x6 x13) (fp.sub RNE x13 x14)) (fp.add RNE (fp.mul RNE x13 x1) (fp.sub RNE x3 x14))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x13) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x3 x1) (fp.mul RNE x2 x9))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x11 x6) (fp.add RNE x5 x2)) (fp.mul RNE (fp.neg x11) (fp.mul RNE x0 x0))))
(assert (fp.eq (fp.neg (fp.add RNE x11 x13)) (fp.neg (fp.mul RNE x7 x11))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x3 x3) (fp.add RNE x11 x0)) (fp.mul RNE (fp.sub RNE x12 x6) (fp.mul RNE x12 x7))))
(assert (fp.lt (fp.neg (fp.neg x14)) (fp.add RNE (fp.neg x14) (fp.neg x14))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x1 x3) (fp.neg x4)) (fp.sub RNE (fp.neg x4) (fp.add RNE x9 x2))))
(check-sat)
