(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE x6 x7) (fp.mul RNE x3 x10)))
(assert (fp.geq (fp.mul RNE x3 x9) (fp.div RNE x10 x9)))
(assert (fp.eq (fp.neg x5) (fp.mul RNE x4 x0)))
(assert (fp.gt (fp.neg x7) (fp.sub RNE x9 x10)))
(assert (fp.gt (fp.mul RNE x6 x9) (fp.neg x6)))
(assert (fp.eq (fp.mul RNE x3 x7) (fp.add RNE x8 x9)))
(assert (fp.gt (fp.sub RNE x2 x1) (fp.sub RNE x7 x5)))
(assert (fp.gt (fp.mul RNE x7 x7) (fp.add RNE x9 x3)))
(assert (fp.gt (fp.neg x4) (fp.mul RNE x3 x1)))
(assert (fp.eq (fp.neg x4) (fp.neg x2)))
(assert (fp.eq (fp.neg x1) (fp.sub RNE x1 x6)))
(assert (fp.geq (fp.neg x7) (fp.sub RNE x6 x9)))
(assert (fp.gt (fp.mul RNE x7 x1) (fp.add RNE x3 x8)))
(assert (fp.leq (fp.sub RNE x10 x1) (fp.sub RNE x5 x1)))
(assert (fp.geq (fp.div RNE x1 x4) (fp.div RNE x1 x6)))
(assert (fp.geq (fp.add RNE x10 x0) (fp.div RNE x0 x8)))
(check-sat)
