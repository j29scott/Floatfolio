(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.sub RNE x11 x13) (fp.sub RNE x11 x8)) (fp.neg (fp.mul RNE x7 x11))))
(assert (fp.eq (fp.mul RNE (fp.neg x8) (fp.add RNE x6 x13)) (fp.div RNE (fp.sub RNE x12 x1) (fp.sub RNE x9 x2))))
(assert (fp.geq (fp.add RNE (fp.add RNE x14 x9) (fp.mul RNE x6 x4)) (fp.neg (fp.neg x4))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x11 x4) (fp.sub RNE x2 x11)) (fp.add RNE (fp.mul RNE x5 x12) (fp.neg x10))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x12 x14) (fp.mul RNE x12 x12)) (fp.sub RNE (fp.div RNE x0 x1) (fp.neg x14))))
(assert (fp.lt (fp.neg (fp.add RNE x10 x10)) (fp.div RNE (fp.sub RNE x9 x6) (fp.neg x13))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x3 x9) (fp.div RNE x11 x0)) (fp.neg (fp.neg x1))))
(check-sat)
