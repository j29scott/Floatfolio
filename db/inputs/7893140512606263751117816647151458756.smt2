(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x7) (fp.sub RNE x16 x10))) (fp.neg (fp.add RNE (fp.div RNE x5 x19) (fp.mul RNE x19 x9)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x10) (fp.mul RNE x3 x7)) (fp.sub RNE (fp.sub RNE x10 x0) (fp.mul RNE x3 x15))) (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.neg x13)) (fp.add RNE (fp.sub RNE x16 x13) (fp.sub RNE x0 x6)))))
(check-sat)
