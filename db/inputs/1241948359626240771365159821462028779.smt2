(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE x9 x6)) (fp.neg (fp.neg x8))))
(assert (fp.geq (fp.mul RNE (fp.neg x16) (fp.div RNE x9 x13)) (fp.add RNE (fp.mul RNE x6 x10) (fp.div RNE x14 x16))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x10 x2) (fp.div RNE x9 x11)) (fp.div RNE (fp.div RNE x2 x1) (fp.neg x5))))
(assert (fp.eq (fp.div RNE (fp.neg x0) (fp.add RNE x19 x14)) (fp.mul RNE (fp.mul RNE x0 x8) (fp.mul RNE x4 x16))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x1 x3) (fp.sub RNE x4 x11)) (fp.div RNE (fp.div RNE x1 x11) (fp.mul RNE x6 x11))))
(assert (fp.geq (fp.add RNE (fp.neg x5) (fp.neg x12)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.neg (fp.neg x8)) (fp.div RNE (fp.add RNE x9 x13) (fp.sub RNE x11 x1))))
(assert (fp.eq (fp.div RNE (fp.add RNE x18 x14) (fp.mul RNE x15 x0)) (fp.div RNE (fp.div RNE x14 x3) (fp.add RNE x14 x4))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x13 x3) (fp.neg x0)) (fp.sub RNE (fp.neg x10) (fp.add RNE x4 x9))))
(assert (fp.eq (fp.div RNE (fp.add RNE x4 x15) (fp.div RNE x15 x1)) (fp.mul RNE (fp.div RNE x8 x7) (fp.mul RNE x5 x5))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x16 x2) (fp.add RNE x6 x3)) (fp.add RNE (fp.neg x0) (fp.neg x15))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x13 x9) (fp.mul RNE x8 x13)) (fp.div RNE (fp.mul RNE x0 x18) (fp.mul RNE x1 x16))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x1 x18) (fp.sub RNE x1 x15)) (fp.sub RNE (fp.neg x14) (fp.div RNE x4 x17))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x19 x2) (fp.div RNE x15 x0)) (fp.sub RNE (fp.add RNE x1 x2) (fp.sub RNE x12 x5))))
(assert (fp.geq (fp.div RNE (fp.div RNE x15 x19) (fp.neg x18)) (fp.neg (fp.add RNE x6 x1))))
(assert (fp.eq (fp.div RNE (fp.add RNE x6 x2) (fp.neg x12)) (fp.sub RNE (fp.neg x7) (fp.add RNE x9 x1))))
(assert (fp.gt (fp.add RNE (fp.neg x3) (fp.neg x2)) (fp.sub RNE (fp.div RNE x0 x9) (fp.mul RNE x5 x1))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x3 x17) (fp.sub RNE x8 x6)) (fp.add RNE (fp.sub RNE x2 x17) (fp.add RNE x12 x16))))
(assert (fp.gt (fp.neg (fp.div RNE x4 x6)) (fp.mul RNE (fp.mul RNE x3 x1) (fp.neg x15))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x1 x14) (fp.mul RNE x2 x17)) (fp.neg (fp.add RNE x12 x13))))
(check-sat)
