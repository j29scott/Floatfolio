(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.mul RNE x3 x1)) (fp.sub RNE (fp.neg x7) (fp.sub RNE x13 x5))))
(assert (fp.gt (fp.div RNE (fp.div RNE x8 x6) (fp.div RNE x4 x16)) (fp.neg (fp.neg x11))))
(assert (fp.eq (fp.neg (fp.sub RNE x18 x8)) (fp.add RNE (fp.mul RNE x11 x0) (fp.sub RNE x18 x16))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x8 x13) (fp.sub RNE x6 x4)) (fp.sub RNE (fp.div RNE x14 x11) (fp.mul RNE x2 x7))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x0 x10) (fp.sub RNE x12 x2)) (fp.sub RNE (fp.div RNE x1 x6) (fp.add RNE x3 x10))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x16 x4) (fp.sub RNE x6 x7)) (fp.div RNE (fp.mul RNE x16 x14) (fp.mul RNE x9 x3))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x10 x6) (fp.add RNE x0 x10)) (fp.neg (fp.sub RNE x13 x9))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x3 x0) (fp.neg x12)) (fp.div RNE (fp.add RNE x15 x3) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.sub RNE x18 x0)) (fp.sub RNE (fp.mul RNE x10 x14) (fp.sub RNE x13 x13))))
(assert (fp.geq (fp.neg (fp.mul RNE x4 x16)) (fp.mul RNE (fp.mul RNE x10 x14) (fp.neg x1))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x5 x13) (fp.div RNE x0 x4)) (fp.div RNE (fp.neg x12) (fp.div RNE x7 x17))))
(check-sat)
