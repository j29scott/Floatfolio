(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.neg x4) (fp.div RNE x0 x10)) (fp.mul RNE (fp.neg x4) (fp.neg x9))))
(assert (fp.eq (fp.div RNE (fp.add RNE x0 x5) (fp.mul RNE x10 x6)) (fp.mul RNE (fp.neg x6) (fp.sub RNE x2 x1))))
(assert (fp.eq (fp.div RNE (fp.neg x7) (fp.sub RNE x9 x0)) (fp.add RNE (fp.sub RNE x1 x0) (fp.mul RNE x2 x9))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.neg x8)) (fp.mul RNE (fp.add RNE x2 x7) (fp.neg x7))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x7 x1) (fp.sub RNE x1 x1)) (fp.add RNE (fp.neg x9) (fp.div RNE x2 x4))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x3 x9) (fp.sub RNE x3 x2)) (fp.mul RNE (fp.div RNE x8 x4) (fp.add RNE x6 x10))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x8 x0) (fp.mul RNE x9 x2)) (fp.add RNE (fp.neg x1) (fp.mul RNE x6 x2))))
(check-sat)
