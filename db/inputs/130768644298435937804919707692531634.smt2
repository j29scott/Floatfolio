(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x17 x8) (fp.neg x14)) (fp.mul RNE (fp.mul RNE x11 x16) (fp.neg x8))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x14 x17) (fp.mul RNE x3 x9)) (fp.neg (fp.sub RNE x1 x2))))
(assert (fp.lt (fp.add RNE (fp.add RNE x4 x3) (fp.neg x2)) (fp.add RNE (fp.neg x5) (fp.sub RNE x10 x15))))
(assert (fp.lt (fp.add RNE (fp.div RNE x12 x14) (fp.sub RNE x14 x0)) (fp.div RNE (fp.neg x3) (fp.mul RNE x13 x9))))
(assert (fp.geq (fp.neg (fp.div RNE x15 x11)) (fp.mul RNE (fp.div RNE x13 x4) (fp.sub RNE x13 x11))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x2 x9) (fp.mul RNE x1 x8)) (fp.add RNE (fp.div RNE x1 x4) (fp.div RNE x13 x1))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x12 x3) (fp.sub RNE x3 x7)) (fp.sub RNE (fp.add RNE x15 x14) (fp.mul RNE x16 x10))))
(assert (fp.lt (fp.sub RNE (fp.neg x5) (fp.neg x4)) (fp.neg (fp.neg x11))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x17 x15) (fp.add RNE x12 x15)) (fp.sub RNE (fp.add RNE x9 x5) (fp.neg x15))))
(assert (fp.leq (fp.neg (fp.add RNE x7 x11)) (fp.mul RNE (fp.add RNE x7 x13) (fp.add RNE x1 x3))))
(check-sat)
