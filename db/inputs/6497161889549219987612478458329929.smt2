(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE x0 x3) (fp.neg x8)))
(assert (fp.lt (fp.mul RNE x10 x6) (fp.neg x7)))
(assert (fp.geq (fp.add RNE x7 x3) (fp.div RNE x1 x10)))
(assert (fp.geq (fp.mul RNE x1 x3) (fp.div RNE x9 x9)))
(assert (fp.lt (fp.mul RNE x3 x1) (fp.sub RNE x12 x9)))
(assert (fp.eq (fp.neg x2) (fp.add RNE x4 x6)))
(assert (fp.gt (fp.neg x4) (fp.neg x10)))
(assert (fp.leq (fp.add RNE x7 x1) (fp.neg x6)))
(assert (fp.geq (fp.mul RNE x7 x4) (fp.neg x8)))
(assert (fp.geq (fp.neg x5) (fp.div RNE x8 x1)))
(assert (fp.leq (fp.div RNE x4 x2) (fp.sub RNE x12 x6)))
(assert (fp.geq (fp.div RNE x7 x9) (fp.add RNE x10 x6)))
(assert (fp.eq (fp.mul RNE x6 x8) (fp.sub RNE x6 x10)))
(assert (fp.leq (fp.mul RNE x9 x0) (fp.sub RNE x3 x8)))
(assert (fp.gt (fp.sub RNE x4 x11) (fp.div RNE x3 x8)))
(check-sat)
