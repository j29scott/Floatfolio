(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.div RNE x3 x6) (fp.add RNE x1 x12)) (fp.sub RNE (fp.neg x10) (fp.add RNE x10 x9))))
(assert (fp.lt (fp.sub RNE (fp.neg x5) (fp.add RNE x7 x7)) (fp.sub RNE (fp.mul RNE x13 x1) (fp.mul RNE x7 x4))))
(assert (fp.eq (fp.neg (fp.neg x2)) (fp.neg (fp.sub RNE x13 x11))))
(assert (fp.leq (fp.mul RNE (fp.neg x8) (fp.div RNE x4 x3)) (fp.sub RNE (fp.div RNE x7 x7) (fp.div RNE x4 x0))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x9 x8) (fp.add RNE x3 x13)) (fp.add RNE (fp.mul RNE x1 x13) (fp.div RNE x7 x5))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x8 x0) (fp.sub RNE x2 x2)) (fp.div RNE (fp.neg x5) (fp.sub RNE x6 x5))))
(assert (fp.geq (fp.add RNE (fp.neg x8) (fp.sub RNE x1 x13)) (fp.div RNE (fp.add RNE x8 x11) (fp.add RNE x7 x13))))
(check-sat)
