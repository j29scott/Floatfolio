(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.sub RNE x9 x13) (fp.div RNE x16 x6)) (fp.neg (fp.mul RNE x3 x6))) (fp.neg (fp.sub RNE (fp.mul RNE x13 x6) (fp.sub RNE x20 x1)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x14 x16) (fp.sub RNE x22 x9)) (fp.sub RNE (fp.div RNE x17 x2) (fp.div RNE x21 x1))) (fp.add RNE (fp.sub RNE (fp.add RNE x0 x6) (fp.neg x4)) (fp.sub RNE (fp.add RNE x20 x11) (fp.div RNE x5 x20))))))
(check-sat)
