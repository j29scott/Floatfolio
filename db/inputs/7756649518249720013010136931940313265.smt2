(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE x8 x3) (fp.add RNE x3 x17)))
(assert (fp.lt (fp.add RNE x14 x12) (fp.add RNE x5 x21)))
(assert (fp.lt (fp.div RNE x16 x1) (fp.mul RNE x1 x21)))
(assert (fp.gt (fp.div RNE x1 x17) (fp.div RNE x19 x2)))
(assert (fp.leq (fp.sub RNE x0 x20) (fp.mul RNE x4 x2)))
(assert (fp.geq (fp.mul RNE x13 x5) (fp.div RNE x1 x20)))
(assert (fp.gt (fp.div RNE x14 x2) (fp.neg x16)))
(assert (fp.lt (fp.mul RNE x17 x5) (fp.mul RNE x4 x12)))
(assert (fp.geq (fp.mul RNE x13 x19) (fp.sub RNE x19 x19)))
(assert (fp.leq (fp.neg x12) (fp.sub RNE x10 x4)))
(check-sat)
