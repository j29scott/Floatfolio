(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x17) (fp.mul RNE x18 x11)) (fp.div RNE (fp.neg x0) (fp.div RNE x8 x9))) (fp.sub RNE (fp.div RNE (fp.div RNE x18 x7) (fp.add RNE x0 x14)) (fp.mul RNE (fp.mul RNE x6 x2) (fp.div RNE x17 x5)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x8 x19) (fp.div RNE x3 x16)) (fp.mul RNE (fp.neg x17) (fp.mul RNE x12 x18))) (fp.neg (fp.mul RNE (fp.sub RNE x18 x5) (fp.neg x16)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.add RNE x14 x17) (fp.neg x3)) (fp.add RNE (fp.div RNE x9 x10) (fp.sub RNE x5 x11))) (fp.div RNE (fp.neg (fp.mul RNE x19 x17)) (fp.add RNE (fp.mul RNE x3 x7) (fp.sub RNE x3 x2)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x18) (fp.add RNE x10 x19)) (fp.add RNE (fp.neg x10) (fp.mul RNE x13 x1))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.div RNE x8 x19)))))
(check-sat)
