(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x8 x21) (fp.add RNE x13 x1))) (fp.add RNE (fp.mul RNE (fp.div RNE x12 x21) (fp.mul RNE x3 x4)) (fp.mul RNE (fp.mul RNE x0 x5) (fp.sub RNE x7 x0)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg x6) (fp.mul RNE x15 x21)) (fp.add RNE (fp.sub RNE x18 x20) (fp.mul RNE x3 x9))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x14 x9) (fp.mul RNE x2 x12)) (fp.neg (fp.mul RNE x17 x22)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE x9 x16) (fp.div RNE x3 x17))) (fp.add RNE (fp.add RNE (fp.neg x5) (fp.mul RNE x18 x21)) (fp.add RNE (fp.mul RNE x9 x13) (fp.div RNE x13 x15)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x20 x14) (fp.sub RNE x6 x19)) (fp.mul RNE (fp.sub RNE x15 x6) (fp.add RNE x19 x21))) (fp.div RNE (fp.add RNE (fp.mul RNE x10 x0) (fp.neg x1)) (fp.div RNE (fp.add RNE x9 x14) (fp.neg x20)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE x17 x11) (fp.neg x2))) (fp.div RNE (fp.sub RNE (fp.sub RNE x8 x21) (fp.neg x17)) (fp.mul RNE (fp.add RNE x2 x9) (fp.mul RNE x15 x9)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x19) (fp.neg x14)) (fp.mul RNE (fp.add RNE x21 x21) (fp.neg x3))) (fp.mul RNE (fp.neg (fp.neg x6)) (fp.mul RNE (fp.sub RNE x6 x21) (fp.neg x5)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.add RNE x17 x20) (fp.div RNE x3 x14)) (fp.div RNE (fp.mul RNE x5 x13) (fp.add RNE x21 x22))) (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x6) (fp.mul RNE x2 x20)) (fp.neg (fp.add RNE x17 x2)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x20) (fp.div RNE x8 x17)) (fp.neg (fp.div RNE x20 x11))) (fp.mul RNE (fp.neg (fp.mul RNE x22 x2)) (fp.add RNE (fp.div RNE x19 x7) (fp.div RNE x17 x12)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.sub RNE x4 x0) (fp.div RNE x10 x16))) (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.add RNE x12 x7)) (fp.mul RNE (fp.mul RNE x13 x17) (fp.add RNE x2 x8)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE x1 x12) (fp.div RNE x10 x18)) (fp.div RNE (fp.sub RNE x0 x10) (fp.add RNE x5 x6))) (fp.add RNE (fp.neg (fp.add RNE x19 x22)) (fp.add RNE (fp.add RNE x1 x1) (fp.mul RNE x10 x2)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg x5) (fp.neg x22)) (fp.neg (fp.neg x16))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x21 x19) (fp.add RNE x10 x11)) (fp.sub RNE (fp.div RNE x14 x21) (fp.add RNE x17 x17)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.div RNE x21 x18) (fp.add RNE x1 x7)) (fp.sub RNE (fp.mul RNE x15 x16) (fp.mul RNE x15 x16))) (fp.sub RNE (fp.neg (fp.sub RNE x13 x13)) (fp.mul RNE (fp.div RNE x13 x8) (fp.div RNE x4 x5)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x14 x13)) (fp.add RNE (fp.div RNE x15 x15) (fp.mul RNE x21 x21))) (fp.neg (fp.mul RNE (fp.mul RNE x22 x16) (fp.neg x14)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg x13) (fp.add RNE x14 x17)) (fp.neg (fp.neg x17))) (fp.div RNE (fp.mul RNE (fp.mul RNE x7 x17) (fp.add RNE x5 x17)) (fp.neg (fp.add RNE x17 x20)))))
(check-sat)
