(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x2 x1) (fp.div RNE x11 x8)))
(assert (fp.eq (fp.sub RNE x2 x0) (fp.neg x15)))
(assert (fp.lt (fp.sub RNE x1 x5) (fp.div RNE x0 x11)))
(assert (fp.lt (fp.add RNE x5 x13) (fp.sub RNE x7 x5)))
(assert (fp.eq (fp.neg x10) (fp.add RNE x1 x3)))
(assert (fp.leq (fp.sub RNE x14 x0) (fp.mul RNE x15 x0)))
(assert (fp.eq (fp.div RNE x12 x11) (fp.sub RNE x12 x7)))
(assert (fp.geq (fp.div RNE x10 x14) (fp.mul RNE x12 x0)))
(assert (fp.lt (fp.add RNE x9 x3) (fp.mul RNE x12 x0)))
(assert (fp.eq (fp.sub RNE x14 x9) (fp.mul RNE x12 x12)))
(assert (fp.gt (fp.sub RNE x1 x9) (fp.mul RNE x15 x2)))
(assert (fp.gt (fp.neg x12) (fp.neg x6)))
(check-sat)
