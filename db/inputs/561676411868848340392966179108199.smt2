(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE x7 x8) (fp.sub RNE x7 x6)))
(assert (fp.geq (fp.add RNE x8 x8) (fp.neg x8)))
(assert (fp.geq (fp.sub RNE x5 x4) (fp.sub RNE x8 x8)))
(assert (fp.lt (fp.mul RNE x9 x0) (fp.sub RNE x8 x1)))
(assert (fp.geq (fp.add RNE x7 x2) (fp.neg x6)))
(assert (fp.gt (fp.add RNE x8 x0) (fp.add RNE x5 x1)))
(assert (fp.geq (fp.neg x0) (fp.div RNE x5 x6)))
(assert (fp.eq (fp.sub RNE x10 x6) (fp.neg x8)))
(assert (fp.geq (fp.neg x1) (fp.mul RNE x6 x10)))
(assert (fp.gt (fp.sub RNE x2 x9) (fp.mul RNE x2 x6)))
(assert (fp.lt (fp.div RNE x8 x6) (fp.div RNE x3 x2)))
(assert (fp.gt (fp.neg x7) (fp.add RNE x6 x5)))
(assert (fp.gt (fp.neg x7) (fp.neg x3)))
(assert (fp.eq (fp.sub RNE x0 x2) (fp.sub RNE x0 x8)))
(assert (fp.leq (fp.add RNE x3 x9) (fp.add RNE x4 x0)))
(assert (fp.lt (fp.add RNE x4 x8) (fp.div RNE x0 x8)))
(assert (fp.lt (fp.mul RNE x9 x7) (fp.neg x2)))
(check-sat)
