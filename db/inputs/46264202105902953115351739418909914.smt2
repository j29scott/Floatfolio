(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE x6 x9) (fp.mul RNE x9 x0)) (fp.sub RNE (fp.add RNE x1 x7) (fp.div RNE x21 x3))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x6 x22) (fp.neg x10)) (fp.neg (fp.mul RNE x13 x12))))
(assert (fp.lt (fp.neg (fp.neg x19)) (fp.div RNE (fp.mul RNE x14 x19) (fp.add RNE x4 x22))))
(assert (fp.lt (fp.add RNE (fp.neg x20) (fp.add RNE x14 x10)) (fp.neg (fp.sub RNE x14 x2))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x4 x6) (fp.add RNE x18 x5)) (fp.div RNE (fp.add RNE x22 x4) (fp.add RNE x8 x6))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x4 x6) (fp.add RNE x4 x12)) (fp.sub RNE (fp.sub RNE x10 x7) (fp.add RNE x13 x14))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x1 x5) (fp.neg x17)) (fp.sub RNE (fp.add RNE x17 x14) (fp.add RNE x10 x1))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x18 x10) (fp.div RNE x6 x21)) (fp.add RNE (fp.neg x10) (fp.sub RNE x3 x12))))
(assert (fp.gt (fp.neg (fp.sub RNE x0 x8)) (fp.add RNE (fp.add RNE x1 x17) (fp.sub RNE x14 x4))))
(assert (fp.geq (fp.sub RNE (fp.neg x13) (fp.mul RNE x21 x0)) (fp.sub RNE (fp.mul RNE x4 x9) (fp.sub RNE x6 x10))))
(check-sat)
