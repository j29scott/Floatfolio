(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x6) (fp.add RNE x11 x5)) (fp.sub RNE (fp.div RNE x6 x3) (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.div RNE x2 x9) (fp.sub RNE x8 x11)) (fp.mul RNE (fp.mul RNE x11 x8) (fp.add RNE x5 x3)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.add RNE x8 x2) (fp.sub RNE x1 x4)) (fp.mul RNE (fp.div RNE x3 x10) (fp.div RNE x3 x0))) (fp.div RNE (fp.sub RNE (fp.add RNE x7 x8) (fp.sub RNE x8 x1)) (fp.sub RNE (fp.neg x11) (fp.add RNE x11 x5)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE x1 x5) (fp.div RNE x11 x11))) (fp.add RNE (fp.sub RNE (fp.div RNE x0 x0) (fp.div RNE x6 x5)) (fp.sub RNE (fp.neg x7) (fp.add RNE x9 x2)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x6) (fp.mul RNE x10 x3)) (fp.add RNE (fp.div RNE x4 x11) (fp.sub RNE x5 x6))) (fp.add RNE (fp.sub RNE (fp.add RNE x4 x5) (fp.div RNE x3 x6)) (fp.neg (fp.add RNE x6 x8)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x0 x9) (fp.neg x5)) (fp.div RNE (fp.add RNE x8 x11) (fp.neg x7))) (fp.add RNE (fp.add RNE (fp.div RNE x1 x1) (fp.div RNE x6 x0)) (fp.add RNE (fp.sub RNE x4 x2) (fp.sub RNE x0 x8)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x10 x8) (fp.mul RNE x0 x2)) (fp.mul RNE (fp.sub RNE x5 x5) (fp.div RNE x8 x7))) (fp.div RNE (fp.neg (fp.add RNE x7 x8)) (fp.neg (fp.sub RNE x3 x9)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x7) (fp.add RNE x1 x4)) (fp.mul RNE (fp.add RNE x10 x7) (fp.add RNE x3 x6))) (fp.neg (fp.add RNE (fp.sub RNE x3 x8) (fp.sub RNE x5 x3)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE x8 x1) (fp.neg x3)) (fp.add RNE (fp.sub RNE x0 x5) (fp.div RNE x4 x0))) (fp.sub RNE (fp.neg (fp.div RNE x8 x11)) (fp.div RNE (fp.add RNE x9 x7) (fp.neg x9)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x6 x8)) (fp.mul RNE (fp.add RNE x9 x4) (fp.mul RNE x8 x10))) (fp.neg (fp.neg (fp.mul RNE x4 x11)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE x8 x3) (fp.neg x11)) (fp.sub RNE (fp.mul RNE x7 x3) (fp.neg x7))) (fp.add RNE (fp.div RNE (fp.div RNE x5 x0) (fp.neg x9)) (fp.mul RNE (fp.neg x11) (fp.div RNE x2 x2)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x7) (fp.div RNE x3 x3)) (fp.sub RNE (fp.add RNE x10 x3) (fp.div RNE x1 x3))) (fp.mul RNE (fp.add RNE (fp.div RNE x2 x5) (fp.mul RNE x8 x0)) (fp.mul RNE (fp.add RNE x1 x3) (fp.sub RNE x11 x6)))))
(check-sat)
