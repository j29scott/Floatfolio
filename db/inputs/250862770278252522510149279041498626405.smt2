(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x17) (fp.mul RNE x2 x16)) (fp.mul RNE (fp.neg x0) (fp.div RNE x1 x4))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x19) (fp.div RNE x13 x19)) (fp.add RNE (fp.sub RNE x14 x1) (fp.sub RNE x4 x7)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.mul RNE x14 x14)) (fp.neg (fp.add RNE x2 x2))) (fp.mul RNE (fp.neg (fp.mul RNE x9 x7)) (fp.div RNE (fp.mul RNE x1 x4) (fp.mul RNE x1 x9)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.neg x4) (fp.add RNE x16 x12))) (fp.add RNE (fp.add RNE (fp.add RNE x16 x10) (fp.mul RNE x16 x10)) (fp.mul RNE (fp.sub RNE x13 x0) (fp.neg x12)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.neg x19)) (fp.add RNE (fp.mul RNE x8 x4) (fp.div RNE x13 x12))) (fp.mul RNE (fp.neg (fp.div RNE x17 x4)) (fp.add RNE (fp.add RNE x18 x17) (fp.mul RNE x10 x3)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.mul RNE x19 x4) (fp.add RNE x19 x11)) (fp.add RNE (fp.mul RNE x10 x7) (fp.neg x19))) (fp.add RNE (fp.div RNE (fp.sub RNE x17 x18) (fp.sub RNE x1 x14)) (fp.div RNE (fp.mul RNE x12 x10) (fp.div RNE x10 x10)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x15 x0) (fp.div RNE x0 x15)) (fp.div RNE (fp.sub RNE x14 x11) (fp.neg x6))) (fp.div RNE (fp.neg (fp.neg x16)) (fp.mul RNE (fp.div RNE x16 x10) (fp.sub RNE x5 x17)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x6 x4) (fp.div RNE x9 x9)) (fp.mul RNE (fp.mul RNE x14 x14) (fp.add RNE x2 x1))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x13 x7) (fp.sub RNE x18 x17)) (fp.mul RNE (fp.sub RNE x0 x17) (fp.mul RNE x2 x7)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x1) (fp.neg x12)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x11 x2))) (fp.neg (fp.mul RNE (fp.add RNE x19 x19) (fp.mul RNE x15 x8)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x9 x5))) (fp.add RNE (fp.div RNE (fp.mul RNE x15 x17) (fp.sub RNE x7 x0)) (fp.neg (fp.sub RNE x18 x10)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE x13 x7) (fp.neg x11)) (fp.div RNE (fp.mul RNE x12 x2) (fp.add RNE x11 x17))) (fp.add RNE (fp.sub RNE (fp.sub RNE x19 x10) (fp.neg x3)) (fp.neg (fp.add RNE x19 x13)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.add RNE x15 x1)) (fp.neg (fp.mul RNE x5 x1))) (fp.div RNE (fp.neg (fp.neg x13)) (fp.mul RNE (fp.mul RNE x5 x15) (fp.neg x2)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.add RNE x9 x2) (fp.sub RNE x7 x11))) (fp.mul RNE (fp.neg (fp.div RNE x10 x11)) (fp.div RNE (fp.sub RNE x7 x3) (fp.neg x16)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg x19)) (fp.sub RNE (fp.div RNE x2 x10) (fp.add RNE x15 x8))) (fp.div RNE (fp.mul RNE (fp.sub RNE x5 x1) (fp.mul RNE x9 x2)) (fp.div RNE (fp.sub RNE x13 x14) (fp.div RNE x10 x11)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE x5 x13) (fp.div RNE x17 x3)) (fp.add RNE (fp.mul RNE x13 x2) (fp.add RNE x14 x1))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x15 x8) (fp.add RNE x7 x1)) (fp.neg (fp.neg x4)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x0 x7) (fp.add RNE x0 x19))) (fp.mul RNE (fp.div RNE (fp.neg x11) (fp.sub RNE x1 x3)) (fp.neg (fp.mul RNE x9 x3)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x15 x5) (fp.neg x18)) (fp.div RNE (fp.sub RNE x5 x11) (fp.sub RNE x2 x0))) (fp.div RNE (fp.mul RNE (fp.div RNE x8 x1) (fp.div RNE x3 x7)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x10 x11)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE x19 x0) (fp.add RNE x6 x19))) (fp.neg (fp.neg (fp.add RNE x0 x16)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.sub RNE x5 x9) (fp.add RNE x10 x16)) (fp.add RNE (fp.sub RNE x19 x12) (fp.sub RNE x2 x7))) (fp.add RNE (fp.add RNE (fp.sub RNE x15 x17) (fp.add RNE x15 x15)) (fp.neg (fp.add RNE x3 x14)))))
(check-sat)
