(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg x3) (fp.neg x0)) (fp.neg (fp.add RNE x1 x11))))
(assert (fp.leq (fp.div RNE (fp.neg x4) (fp.neg x6)) (fp.mul RNE (fp.sub RNE x3 x3) (fp.div RNE x6 x8))))
(assert (fp.eq (fp.sub RNE (fp.neg x1) (fp.add RNE x3 x1)) (fp.div RNE (fp.neg x0) (fp.div RNE x2 x5))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x0 x8) (fp.sub RNE x7 x8)) (fp.neg (fp.div RNE x0 x12))))
(assert (fp.leq (fp.div RNE (fp.neg x0) (fp.div RNE x3 x6)) (fp.sub RNE (fp.sub RNE x1 x8) (fp.div RNE x3 x12))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x6 x9) (fp.mul RNE x10 x1)) (fp.div RNE (fp.add RNE x11 x4) (fp.mul RNE x2 x8))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x11 x12) (fp.add RNE x1 x1)) (fp.div RNE (fp.div RNE x3 x1) (fp.div RNE x10 x2))))
(assert (fp.gt (fp.mul RNE (fp.neg x12) (fp.neg x11)) (fp.sub RNE (fp.mul RNE x7 x4) (fp.mul RNE x7 x11))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x1 x4) (fp.mul RNE x5 x2)) (fp.div RNE (fp.neg x2) (fp.sub RNE x4 x7))))
(assert (fp.leq (fp.neg (fp.add RNE x6 x0)) (fp.div RNE (fp.div RNE x7 x6) (fp.add RNE x0 x11))))
(assert (fp.leq (fp.sub RNE (fp.neg x2) (fp.div RNE x5 x12)) (fp.mul RNE (fp.div RNE x6 x2) (fp.neg x12))))
(check-sat)
