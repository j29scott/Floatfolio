(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE x12 x20) (fp.div RNE x20 x16)) (fp.div RNE (fp.mul RNE x14 x8) (fp.div RNE x18 x3))) (fp.mul RNE (fp.add RNE (fp.mul RNE x19 x14) (fp.add RNE x0 x3)) (fp.div RNE (fp.div RNE x5 x10) (fp.div RNE x2 x11)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.sub RNE x20 x14) (fp.add RNE x7 x8))) (fp.sub RNE (fp.neg (fp.sub RNE x18 x22)) (fp.sub RNE (fp.add RNE x17 x15) (fp.mul RNE x6 x9)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x2 x5)) (fp.mul RNE (fp.mul RNE x6 x19) (fp.add RNE x21 x8))) (fp.add RNE (fp.add RNE (fp.div RNE x8 x1) (fp.neg x3)) (fp.add RNE (fp.div RNE x2 x4) (fp.sub RNE x13 x21)))))
(check-sat)
