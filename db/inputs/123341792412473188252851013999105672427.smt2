(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.div RNE x3 x11) (fp.neg x11)) (fp.neg (fp.neg x7))))
(assert (fp.geq (fp.add RNE (fp.add RNE x4 x2) (fp.mul RNE x0 x8)) (fp.neg (fp.div RNE x6 x5))))
(assert (fp.leq (fp.neg (fp.neg x4)) (fp.sub RNE (fp.div RNE x13 x6) (fp.sub RNE x7 x1))))
(assert (fp.eq (fp.neg (fp.mul RNE x7 x1)) (fp.mul RNE (fp.sub RNE x11 x1) (fp.neg x8))))
(assert (fp.lt (fp.neg (fp.sub RNE x5 x12)) (fp.div RNE (fp.add RNE x1 x11) (fp.sub RNE x1 x1))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x9 x8) (fp.sub RNE x10 x3)) (fp.neg (fp.div RNE x11 x13))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x7 x11) (fp.neg x0)) (fp.sub RNE (fp.neg x13) (fp.neg x8))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x8 x7) (fp.neg x6)) (fp.add RNE (fp.add RNE x0 x4) (fp.div RNE x0 x12))))
(check-sat)
