(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.div RNE x4 x17) (fp.sub RNE x8 x8)) (fp.mul RNE (fp.mul RNE x7 x7) (fp.div RNE x17 x7))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x0 x17) (fp.neg x16)) (fp.mul RNE (fp.div RNE x13 x4) (fp.sub RNE x13 x6))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x17 x8) (fp.div RNE x2 x10)) (fp.add RNE (fp.mul RNE x3 x10) (fp.sub RNE x5 x2))))
(check-sat)
