(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE x0 x18) (fp.neg x20)))
(assert (fp.leq (fp.div RNE x11 x23) (fp.add RNE x20 x18)))
(assert (fp.geq (fp.div RNE x8 x5) (fp.sub RNE x22 x21)))
(assert (fp.eq (fp.add RNE x17 x0) (fp.add RNE x1 x22)))
(assert (fp.leq (fp.mul RNE x5 x1) (fp.add RNE x1 x23)))
(assert (fp.geq (fp.div RNE x5 x16) (fp.div RNE x0 x7)))
(assert (fp.leq (fp.mul RNE x11 x14) (fp.add RNE x20 x16)))
(assert (fp.lt (fp.sub RNE x9 x13) (fp.neg x19)))
(assert (fp.gt (fp.neg x2) (fp.neg x12)))
(assert (fp.eq (fp.sub RNE x9 x5) (fp.sub RNE x22 x11)))
(assert (fp.geq (fp.sub RNE x6 x22) (fp.mul RNE x12 x6)))
(assert (fp.leq (fp.neg x2) (fp.mul RNE x9 x4)))
(assert (fp.gt (fp.add RNE x5 x5) (fp.neg x3)))
(assert (fp.leq (fp.neg x1) (fp.neg x4)))
(assert (fp.lt (fp.add RNE x8 x22) (fp.neg x3)))
(assert (fp.eq (fp.add RNE x19 x3) (fp.add RNE x4 x15)))
(assert (fp.geq (fp.sub RNE x1 x15) (fp.add RNE x4 x0)))
(assert (fp.geq (fp.mul RNE x22 x19) (fp.add RNE x18 x3)))
(assert (fp.eq (fp.mul RNE x16 x13) (fp.add RNE x3 x9)))
(assert (fp.lt (fp.sub RNE x13 x21) (fp.add RNE x13 x15)))
(check-sat)
