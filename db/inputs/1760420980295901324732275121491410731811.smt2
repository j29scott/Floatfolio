(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x8 x1) (fp.div RNE x5 x1)) (fp.div RNE (fp.add RNE x0 x5) (fp.neg x1))) (fp.mul RNE (fp.add RNE (fp.mul RNE x9 x9) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x7 x3) (fp.neg x3)))) (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x11 x11) (fp.add RNE x8 x6))) (fp.mul RNE (fp.add RNE (fp.neg x11) (fp.div RNE x2 x5)) (fp.div RNE (fp.div RNE x2 x9) (fp.neg x0))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.div RNE x4 x4) (fp.sub RNE x7 x3)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.neg x6))) (fp.sub RNE (fp.neg (fp.neg x1)) (fp.add RNE (fp.add RNE x1 x8) (fp.sub RNE x2 x8)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.mul RNE x10 x9) (fp.mul RNE x4 x5)) (fp.sub RNE (fp.neg x11) (fp.add RNE x6 x9))) (fp.div RNE (fp.add RNE (fp.div RNE x4 x0) (fp.mul RNE x1 x2)) (fp.mul RNE (fp.div RNE x10 x6) (fp.neg x2))))))
(check-sat)
