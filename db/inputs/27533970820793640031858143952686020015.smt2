(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x0) (fp.sub RNE x4 x3)) (fp.mul RNE (fp.add RNE x12 x8) (fp.div RNE x4 x5))) (fp.add RNE (fp.neg (fp.add RNE x2 x3)) (fp.neg (fp.div RNE x6 x0)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg x7) (fp.neg x5))) (fp.div RNE (fp.neg (fp.neg x1)) (fp.sub RNE (fp.add RNE x12 x5) (fp.neg x1)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE x10 x0) (fp.neg x0)) (fp.add RNE (fp.add RNE x2 x8) (fp.mul RNE x7 x9))) (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x5) (fp.div RNE x7 x12)) (fp.sub RNE (fp.mul RNE x2 x11) (fp.neg x5)))))
(check-sat)
