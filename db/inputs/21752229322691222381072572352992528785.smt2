(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.neg x11) (fp.div RNE x1 x10)) (fp.div RNE (fp.sub RNE x7 x10) (fp.add RNE x6 x3))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x7 x8) (fp.add RNE x0 x7)) (fp.neg (fp.div RNE x5 x0))))
(assert (fp.eq (fp.sub RNE (fp.neg x11) (fp.div RNE x2 x5)) (fp.div RNE (fp.neg x9) (fp.neg x9))))
(assert (fp.leq (fp.div RNE (fp.neg x10) (fp.add RNE x6 x10)) (fp.div RNE (fp.mul RNE x10 x3) (fp.sub RNE x11 x11))))
(assert (fp.leq (fp.neg (fp.neg x9)) (fp.sub RNE (fp.mul RNE x1 x11) (fp.neg x6))))
(assert (fp.lt (fp.div RNE (fp.div RNE x3 x6) (fp.add RNE x11 x1)) (fp.add RNE (fp.sub RNE x10 x8) (fp.sub RNE x6 x1))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x0 x9) (fp.add RNE x4 x9)) (fp.sub RNE (fp.div RNE x10 x10) (fp.add RNE x11 x9))))
(assert (fp.leq (fp.neg (fp.add RNE x4 x8)) (fp.sub RNE (fp.sub RNE x9 x9) (fp.add RNE x6 x11))))
(check-sat)
