(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.neg x0) (fp.mul RNE x6 x2)) (fp.add RNE (fp.div RNE x3 x5) (fp.add RNE x3 x7))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x0 x0) (fp.div RNE x2 x7)) (fp.div RNE (fp.div RNE x0 x3) (fp.mul RNE x3 x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x0 x4) (fp.sub RNE x2 x0)) (fp.div RNE (fp.mul RNE x7 x2) (fp.sub RNE x0 x1))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x7 x8) (fp.neg x5)) (fp.sub RNE (fp.add RNE x1 x4) (fp.sub RNE x1 x2))))
(assert (fp.gt (fp.neg (fp.mul RNE x0 x2)) (fp.neg (fp.neg x6))))
(assert (fp.lt (fp.div RNE (fp.add RNE x3 x4) (fp.neg x8)) (fp.div RNE (fp.div RNE x7 x4) (fp.add RNE x0 x8))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x8 x1) (fp.mul RNE x7 x6)) (fp.add RNE (fp.sub RNE x4 x1) (fp.mul RNE x8 x6))))
(assert (fp.eq (fp.neg (fp.add RNE x6 x3)) (fp.add RNE (fp.div RNE x4 x7) (fp.neg x1))))
(assert (fp.geq (fp.div RNE (fp.neg x5) (fp.neg x0)) (fp.div RNE (fp.neg x5) (fp.div RNE x1 x0))))
(check-sat)
