(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.div RNE x10 x1) (fp.sub RNE x6 x2)) (fp.sub RNE (fp.div RNE x1 x16) (fp.div RNE x4 x3))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x15 x1) (fp.div RNE x0 x3)) (fp.sub RNE (fp.neg x9) (fp.neg x4))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x7 x13) (fp.sub RNE x13 x10)) (fp.div RNE (fp.sub RNE x16 x1) (fp.sub RNE x11 x12))))
(assert (fp.lt (fp.neg (fp.neg x16)) (fp.div RNE (fp.neg x4) (fp.div RNE x3 x13))))
(assert (fp.eq (fp.div RNE (fp.add RNE x5 x8) (fp.div RNE x11 x0)) (fp.mul RNE (fp.mul RNE x4 x10) (fp.div RNE x0 x16))))
(check-sat)
