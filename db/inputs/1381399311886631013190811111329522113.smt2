(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x19 x3) (fp.sub RNE x19 x19)) (fp.neg (fp.add RNE x4 x16))) (fp.sub RNE (fp.neg (fp.sub RNE x9 x7)) (fp.sub RNE (fp.div RNE x18 x6) (fp.neg x2)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x2 x12) (fp.neg x17)) (fp.add RNE (fp.neg x13) (fp.div RNE x16 x17))) (fp.add RNE (fp.add RNE (fp.neg x6) (fp.div RNE x8 x16)) (fp.neg (fp.add RNE x7 x13))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x3) (fp.div RNE x17 x18)) (fp.div RNE (fp.mul RNE x12 x4) (fp.neg x2))) (fp.neg (fp.mul RNE (fp.sub RNE x13 x9) (fp.sub RNE x17 x6)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.mul RNE x15 x1)) (fp.mul RNE (fp.mul RNE x3 x17) (fp.div RNE x4 x10))) (fp.div RNE (fp.div RNE (fp.mul RNE x17 x7) (fp.neg x2)) (fp.add RNE (fp.add RNE x18 x15) (fp.add RNE x13 x19))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x13 x1) (fp.neg x11))) (fp.add RNE (fp.neg (fp.neg x11)) (fp.div RNE (fp.sub RNE x5 x19) (fp.add RNE x0 x16)))) (fp.add RNE (fp.neg (fp.neg (fp.div RNE x8 x14))) (fp.sub RNE (fp.div RNE (fp.mul RNE x6 x7) (fp.neg x6)) (fp.sub RNE (fp.add RNE x2 x14) (fp.div RNE x3 x11))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x11 x13) (fp.neg x12)) (fp.neg (fp.mul RNE x16 x11))) (fp.neg (fp.div RNE (fp.add RNE x6 x11) (fp.sub RNE x10 x7)))) (fp.div RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x14 x18) (fp.mul RNE x5 x13)) (fp.sub RNE (fp.mul RNE x14 x0) (fp.neg x10))) (fp.sub RNE (fp.mul RNE (fp.div RNE x9 x1) (fp.div RNE x6 x9)) (fp.sub RNE (fp.mul RNE x12 x3) (fp.mul RNE x2 x18))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.mul RNE (fp.mul RNE x3 x10) (fp.mul RNE x15 x14))) (fp.mul RNE (fp.add RNE (fp.div RNE x8 x14) (fp.sub RNE x2 x0)) (fp.div RNE (fp.div RNE x8 x13) (fp.neg x3)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.div RNE x8 x19) (fp.sub RNE x5 x18)) (fp.sub RNE (fp.sub RNE x4 x3) (fp.sub RNE x1 x18))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.neg x8) (fp.neg x17)) (fp.add RNE (fp.sub RNE x2 x17) (fp.add RNE x14 x16))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x16 x5) (fp.neg x7)) (fp.sub RNE (fp.add RNE x11 x5) (fp.sub RNE x10 x13)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.add RNE x19 x0)) (fp.sub RNE (fp.sub RNE x17 x5) (fp.mul RNE x6 x14))) (fp.mul RNE (fp.div RNE (fp.mul RNE x17 x18) (fp.div RNE x2 x4)) (fp.neg (fp.neg x0))))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x13 x11)) (fp.sub RNE (fp.div RNE x3 x13) (fp.neg x1))) (fp.mul RNE (fp.neg (fp.div RNE x14 x13)) (fp.div RNE (fp.div RNE x4 x1) (fp.neg x7)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x19 x18) (fp.div RNE x4 x17)) (fp.mul RNE (fp.add RNE x9 x13) (fp.div RNE x19 x12))) (fp.sub RNE (fp.neg (fp.div RNE x15 x11)) (fp.mul RNE (fp.add RNE x9 x3) (fp.add RNE x11 x2))))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x1) (fp.mul RNE x11 x13)) (fp.mul RNE (fp.sub RNE x13 x19) (fp.add RNE x14 x16))) (fp.add RNE (fp.add RNE (fp.div RNE x10 x8) (fp.add RNE x15 x19)) (fp.add RNE (fp.mul RNE x17 x2) (fp.mul RNE x19 x16)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.div RNE x8 x19)) (fp.sub RNE (fp.mul RNE x2 x8) (fp.sub RNE x0 x10))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x17 x2) (fp.div RNE x11 x19)) (fp.sub RNE (fp.mul RNE x19 x17) (fp.mul RNE x8 x11))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.neg (fp.sub RNE x18 x14)) (fp.neg (fp.div RNE x0 x19)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.div RNE x15 x15) (fp.div RNE x14 x8)) (fp.add RNE (fp.div RNE x13 x1) (fp.sub RNE x11 x2))) (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.sub RNE x2 x8)) (fp.mul RNE (fp.add RNE x19 x11) (fp.add RNE x10 x10))))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x16) (fp.neg x18)) (fp.neg (fp.sub RNE x4 x2))) (fp.add RNE (fp.sub RNE (fp.div RNE x8 x2) (fp.neg x6)) (fp.neg (fp.div RNE x16 x3)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x2 x12) (fp.sub RNE x7 x17)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x7 x4))) (fp.add RNE (fp.div RNE (fp.div RNE x11 x16) (fp.div RNE x18 x5)) (fp.add RNE (fp.mul RNE x7 x18) (fp.mul RNE x15 x16))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE (fp.sub RNE x19 x6) (fp.sub RNE x9 x3)) (fp.mul RNE (fp.mul RNE x11 x9) (fp.neg x8))) (fp.div RNE (fp.neg (fp.mul RNE x15 x10)) (fp.add RNE (fp.neg x8) (fp.add RNE x7 x14)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x12 x1) (fp.sub RNE x5 x4)) (fp.add RNE (fp.neg x17) (fp.add RNE x19 x15))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x17) (fp.neg x2)) (fp.neg (fp.sub RNE x5 x11))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x3 x13) (fp.mul RNE x8 x4)) (fp.sub RNE (fp.neg x8) (fp.div RNE x6 x1)))) (fp.add RNE (fp.div RNE (fp.neg (fp.div RNE x1 x17)) (fp.mul RNE (fp.add RNE x7 x19) (fp.mul RNE x4 x2))) (fp.sub RNE (fp.div RNE (fp.mul RNE x3 x12) (fp.add RNE x0 x15)) (fp.mul RNE (fp.neg x13) (fp.div RNE x6 x10))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.div RNE x10 x7) (fp.div RNE x13 x6)) (fp.add RNE (fp.div RNE x17 x1) (fp.neg x18))) (fp.add RNE (fp.mul RNE (fp.mul RNE x19 x12) (fp.mul RNE x11 x7)) (fp.sub RNE (fp.add RNE x2 x3) (fp.neg x6)))) (fp.add RNE (fp.div RNE (fp.div RNE (fp.div RNE x2 x2) (fp.add RNE x4 x7)) (fp.add RNE (fp.add RNE x10 x16) (fp.add RNE x7 x15))) (fp.neg (fp.div RNE (fp.add RNE x14 x19) (fp.neg x8))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE (fp.sub RNE x0 x11) (fp.mul RNE x14 x14))) (fp.add RNE (fp.sub RNE (fp.mul RNE x5 x11) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x1 x6) (fp.neg x14)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x5 x2) (fp.sub RNE x19 x13)) (fp.sub RNE (fp.neg x10) (fp.sub RNE x14 x14))) (fp.neg (fp.neg (fp.sub RNE x14 x17))))))
(check-sat)
