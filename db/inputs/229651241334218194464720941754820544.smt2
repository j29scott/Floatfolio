(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x4 x12) (fp.neg x15))) (fp.div RNE (fp.add RNE (fp.add RNE x15 x14) (fp.mul RNE x6 x4)) (fp.add RNE (fp.div RNE x11 x13) (fp.sub RNE x12 x3)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x14 x0) (fp.add RNE x11 x6)) (fp.div RNE (fp.mul RNE x13 x7) (fp.neg x6))) (fp.add RNE (fp.mul RNE (fp.mul RNE x0 x10) (fp.neg x12)) (fp.add RNE (fp.div RNE x8 x13) (fp.sub RNE x14 x2)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.div RNE x9 x4)) (fp.mul RNE (fp.add RNE x2 x3) (fp.sub RNE x6 x1))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x7 x14) (fp.div RNE x5 x13)) (fp.div RNE (fp.mul RNE x15 x2) (fp.add RNE x0 x15)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE x0 x1) (fp.add RNE x15 x14)) (fp.div RNE (fp.div RNE x14 x8) (fp.add RNE x7 x9))) (fp.add RNE (fp.neg (fp.sub RNE x12 x0)) (fp.neg (fp.div RNE x12 x7)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x3 x4) (fp.sub RNE x2 x1)) (fp.neg (fp.div RNE x13 x12))) (fp.div RNE (fp.mul RNE (fp.mul RNE x0 x15) (fp.mul RNE x6 x5)) (fp.div RNE (fp.neg x3) (fp.div RNE x9 x3)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE x1 x5) (fp.mul RNE x5 x2))) (fp.neg (fp.sub RNE (fp.mul RNE x9 x1) (fp.sub RNE x10 x11)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE x10 x14) (fp.neg x3)) (fp.sub RNE (fp.neg x7) (fp.add RNE x9 x2))) (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.sub RNE x12 x3)) (fp.add RNE (fp.add RNE x4 x11) (fp.add RNE x11 x5)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.sub RNE x8 x7)) (fp.mul RNE (fp.add RNE x14 x6) (fp.add RNE x14 x13))) (fp.div RNE (fp.div RNE (fp.mul RNE x11 x9) (fp.mul RNE x12 x3)) (fp.neg (fp.add RNE x3 x2)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x6 x11) (fp.add RNE x0 x15)) (fp.neg (fp.sub RNE x11 x2))) (fp.div RNE (fp.div RNE (fp.mul RNE x11 x5) (fp.neg x12)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x11 x15)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.neg x2)) (fp.sub RNE (fp.neg x6) (fp.div RNE x7 x10))) (fp.mul RNE (fp.add RNE (fp.add RNE x15 x14) (fp.add RNE x0 x4)) (fp.add RNE (fp.add RNE x9 x0) (fp.add RNE x15 x14)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.add RNE x15 x9) (fp.add RNE x8 x12))) (fp.add RNE (fp.div RNE (fp.sub RNE x1 x4) (fp.mul RNE x2 x10)) (fp.add RNE (fp.mul RNE x4 x1) (fp.sub RNE x15 x12)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x15 x15) (fp.div RNE x10 x11)) (fp.mul RNE (fp.div RNE x6 x9) (fp.add RNE x1 x2))) (fp.div RNE (fp.add RNE (fp.sub RNE x11 x4) (fp.neg x7)) (fp.neg (fp.add RNE x3 x15)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE x2 x8) (fp.div RNE x3 x3)) (fp.add RNE (fp.div RNE x6 x1) (fp.sub RNE x10 x10))) (fp.add RNE (fp.div RNE (fp.sub RNE x13 x13) (fp.sub RNE x15 x13)) (fp.add RNE (fp.add RNE x1 x10) (fp.mul RNE x4 x12)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x11 x1)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x14 x1))) (fp.add RNE (fp.add RNE (fp.div RNE x5 x9) (fp.mul RNE x7 x9)) (fp.add RNE (fp.sub RNE x4 x3) (fp.mul RNE x15 x10)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x6 x14)) (fp.sub RNE (fp.mul RNE x5 x3) (fp.add RNE x3 x13))) (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x3) (fp.sub RNE x9 x9)) (fp.sub RNE (fp.sub RNE x3 x2) (fp.neg x10)))))
(check-sat)
