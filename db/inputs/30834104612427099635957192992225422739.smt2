(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x0) (fp.neg x11)))
(assert (fp.gt (fp.sub RNE x0 x3) (fp.div RNE x3 x6)))
(assert (fp.leq (fp.mul RNE x1 x8) (fp.sub RNE x5 x6)))
(assert (fp.gt (fp.neg x5) (fp.mul RNE x11 x9)))
(assert (fp.geq (fp.add RNE x1 x9) (fp.add RNE x9 x2)))
(assert (fp.gt (fp.sub RNE x11 x0) (fp.mul RNE x12 x7)))
(assert (fp.leq (fp.div RNE x3 x8) (fp.add RNE x8 x7)))
(assert (fp.eq (fp.mul RNE x9 x8) (fp.neg x0)))
(assert (fp.eq (fp.sub RNE x10 x2) (fp.mul RNE x5 x3)))
(assert (fp.leq (fp.add RNE x8 x1) (fp.sub RNE x5 x0)))
(assert (fp.gt (fp.div RNE x7 x7) (fp.neg x9)))
(assert (fp.leq (fp.add RNE x3 x11) (fp.div RNE x11 x7)))
(assert (fp.lt (fp.add RNE x0 x8) (fp.sub RNE x0 x11)))
(check-sat)
