(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg (fp.mul RNE x15 x8)) (fp.div RNE (fp.sub RNE x5 x10) (fp.add RNE x16 x10))) (fp.add RNE (fp.neg (fp.add RNE x5 x3)) (fp.add RNE (fp.neg x6) (fp.sub RNE x14 x5)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.div RNE x4 x17) (fp.sub RNE x15 x0))) (fp.sub RNE (fp.neg (fp.mul RNE x0 x15)) (fp.sub RNE (fp.add RNE x14 x9) (fp.div RNE x6 x4))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg (fp.mul RNE x4 x10)) (fp.div RNE (fp.sub RNE x1 x19) (fp.div RNE x13 x8))) (fp.mul RNE (fp.neg (fp.mul RNE x10 x16)) (fp.neg (fp.add RNE x8 x19)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.sub RNE x14 x13)) (fp.mul RNE (fp.add RNE x13 x14) (fp.add RNE x20 x8))) (fp.sub RNE (fp.add RNE (fp.div RNE x8 x15) (fp.sub RNE x18 x12)) (fp.mul RNE (fp.div RNE x5 x15) (fp.sub RNE x7 x0))))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.sub RNE (fp.mul RNE x5 x10) (fp.div RNE x9 x8))) (fp.mul RNE (fp.neg (fp.sub RNE x11 x2)) (fp.neg (fp.sub RNE x7 x19)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.add RNE x5 x19) (fp.neg x2)) (fp.sub RNE (fp.div RNE x2 x9) (fp.sub RNE x4 x14))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE (fp.add RNE x2 x0) (fp.neg x16)) (fp.neg (fp.neg x0)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x9 x16) (fp.div RNE x3 x7)) (fp.div RNE (fp.add RNE x19 x9) (fp.sub RNE x19 x5))) (fp.add RNE (fp.mul RNE (fp.neg x0) (fp.neg x11)) (fp.neg (fp.sub RNE x11 x14))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE (fp.add RNE x7 x8) (fp.sub RNE x14 x2))) (fp.mul RNE (fp.div RNE (fp.sub RNE x19 x7) (fp.add RNE x8 x0)) (fp.neg (fp.sub RNE x1 x8)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.div RNE x6 x7) (fp.sub RNE x6 x1)) (fp.div RNE (fp.neg x2) (fp.add RNE x1 x20))) (fp.neg (fp.mul RNE (fp.sub RNE x20 x13) (fp.neg x0))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.mul RNE (fp.mul RNE x13 x19) (fp.neg x4))) (fp.sub RNE (fp.neg (fp.sub RNE x5 x11)) (fp.mul RNE (fp.add RNE x10 x0) (fp.sub RNE x3 x15)))) (fp.neg (fp.mul RNE (fp.neg (fp.mul RNE x16 x11)) (fp.div RNE (fp.neg x16) (fp.sub RNE x19 x9))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg (fp.div RNE x9 x14)) (fp.sub RNE (fp.div RNE x13 x0) (fp.add RNE x11 x15))) (fp.neg (fp.mul RNE (fp.mul RNE x12 x2) (fp.div RNE x12 x8)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x19 x17) (fp.div RNE x19 x17)) (fp.sub RNE (fp.add RNE x12 x2) (fp.div RNE x5 x18))) (fp.div RNE (fp.mul RNE (fp.neg x15) (fp.add RNE x13 x19)) (fp.neg (fp.neg x12))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x16 x2) (fp.mul RNE x14 x11)) (fp.sub RNE (fp.sub RNE x15 x13) (fp.neg x10))) (fp.div RNE (fp.mul RNE (fp.div RNE x19 x13) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x1 x0) (fp.div RNE x14 x20)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.div RNE x15 x0)) (fp.sub RNE (fp.div RNE x10 x0) (fp.div RNE x0 x11))) (fp.div RNE (fp.add RNE (fp.div RNE x6 x9) (fp.neg x15)) (fp.mul RNE (fp.add RNE x1 x7) (fp.div RNE x6 x9))))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg (fp.neg x19))) (fp.mul RNE (fp.div RNE (fp.neg x12) (fp.add RNE x0 x10)) (fp.neg (fp.neg x18)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.sub RNE x20 x1) (fp.sub RNE x8 x7)) (fp.sub RNE (fp.sub RNE x0 x3) (fp.sub RNE x12 x6))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE (fp.add RNE x0 x18) (fp.add RNE x3 x20))) (fp.div RNE (fp.mul RNE (fp.mul RNE x14 x15) (fp.neg x14)) (fp.div RNE (fp.neg x2) (fp.mul RNE x4 x15)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x14 x1) (fp.neg x16)) (fp.div RNE (fp.sub RNE x0 x20) (fp.mul RNE x16 x3))) (fp.add RNE (fp.neg (fp.div RNE x17 x8)) (fp.sub RNE (fp.add RNE x16 x6) (fp.div RNE x5 x5))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE x20 x1) (fp.neg x1))) (fp.add RNE (fp.neg (fp.div RNE x2 x17)) (fp.sub RNE (fp.neg x19) (fp.sub RNE x15 x0)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x9 x5) (fp.mul RNE x18 x14)) (fp.sub RNE (fp.add RNE x6 x9) (fp.sub RNE x16 x7))) (fp.add RNE (fp.mul RNE (fp.mul RNE x1 x11) (fp.add RNE x8 x2)) (fp.mul RNE (fp.div RNE x4 x1) (fp.neg x16))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x13 x12)) (fp.neg (fp.mul RNE x15 x4))) (fp.add RNE (fp.div RNE (fp.neg x0) (fp.div RNE x7 x1)) (fp.sub RNE (fp.mul RNE x6 x17) (fp.add RNE x8 x10)))) (fp.add RNE (fp.neg (fp.add RNE (fp.div RNE x19 x7) (fp.mul RNE x8 x3))) (fp.sub RNE (fp.neg (fp.mul RNE x6 x17)) (fp.neg (fp.mul RNE x2 x3))))))
(check-sat)
