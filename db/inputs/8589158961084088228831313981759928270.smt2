(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x0 x10) (fp.neg x8)))
(assert (fp.lt (fp.mul RNE x6 x5) (fp.add RNE x12 x6)))
(assert (fp.geq (fp.sub RNE x7 x7) (fp.mul RNE x13 x6)))
(assert (fp.lt (fp.sub RNE x8 x10) (fp.mul RNE x3 x5)))
(assert (fp.leq (fp.add RNE x7 x4) (fp.div RNE x4 x13)))
(assert (fp.lt (fp.add RNE x0 x9) (fp.mul RNE x8 x0)))
(assert (fp.geq (fp.add RNE x13 x9) (fp.add RNE x4 x12)))
(assert (fp.leq (fp.div RNE x9 x11) (fp.sub RNE x11 x1)))
(assert (fp.leq (fp.mul RNE x3 x12) (fp.div RNE x14 x12)))
(assert (fp.gt (fp.neg x2) (fp.div RNE x0 x1)))
(check-sat)
