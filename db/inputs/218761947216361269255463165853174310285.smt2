(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.mul RNE x0 x8) (fp.div RNE x2 x5)) (fp.add RNE (fp.mul RNE x12 x5) (fp.neg x4))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x8 x5) (fp.mul RNE x4 x3)) (fp.mul RNE (fp.add RNE x1 x9) (fp.sub RNE x7 x10))))
(assert (fp.eq (fp.div RNE (fp.add RNE x11 x7) (fp.div RNE x4 x13)) (fp.add RNE (fp.mul RNE x3 x2) (fp.add RNE x12 x12))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x9) (fp.sub RNE x7 x8)) (fp.neg (fp.neg x2))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x3 x8) (fp.sub RNE x11 x12)) (fp.div RNE (fp.add RNE x8 x13) (fp.div RNE x11 x11))))
(assert (fp.gt (fp.add RNE (fp.neg x3) (fp.mul RNE x9 x3)) (fp.mul RNE (fp.add RNE x13 x3) (fp.add RNE x2 x5))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x9 x2) (fp.neg x9)) (fp.mul RNE (fp.add RNE x13 x9) (fp.div RNE x9 x11))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x1 x0) (fp.neg x0)) (fp.neg (fp.mul RNE x5 x4))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x12 x4) (fp.mul RNE x2 x4)) (fp.neg (fp.mul RNE x5 x12))))
(assert (fp.leq (fp.neg (fp.mul RNE x1 x0)) (fp.div RNE (fp.mul RNE x5 x6) (fp.mul RNE x11 x13))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x6 x4) (fp.sub RNE x10 x13)) (fp.add RNE (fp.mul RNE x10 x11) (fp.add RNE x1 x2))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x0 x4) (fp.add RNE x9 x9)) (fp.div RNE (fp.mul RNE x6 x0) (fp.add RNE x9 x13))))
(assert (fp.gt (fp.neg (fp.add RNE x2 x0)) (fp.neg (fp.add RNE x11 x3))))
(assert (fp.lt (fp.sub RNE (fp.neg x7) (fp.neg x7)) (fp.add RNE (fp.neg x8) (fp.sub RNE x11 x4))))
(check-sat)
