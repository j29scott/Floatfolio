(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE x4 x6) (fp.div RNE x8 x6))) (fp.neg (fp.sub RNE (fp.sub RNE x8 x2) (fp.sub RNE x3 x1)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.neg x9) (fp.div RNE x1 x5))) (fp.sub RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x1 x6)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x9 x2)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.sub RNE x0 x0) (fp.neg x10))) (fp.neg (fp.mul RNE (fp.add RNE x3 x8) (fp.sub RNE x0 x9)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x5 x6) (fp.neg x10)) (fp.sub RNE (fp.div RNE x1 x8) (fp.div RNE x9 x5))) (fp.div RNE (fp.div RNE (fp.neg x6) (fp.mul RNE x2 x3)) (fp.mul RNE (fp.div RNE x9 x10) (fp.sub RNE x6 x5)))))
(check-sat)
