(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x7 x8) (fp.add RNE x8 x2)))
(assert (fp.gt (fp.mul RNE x2 x8) (fp.div RNE x3 x4)))
(assert (fp.gt (fp.sub RNE x3 x7) (fp.sub RNE x7 x5)))
(assert (fp.geq (fp.add RNE x2 x4) (fp.mul RNE x1 x2)))
(assert (fp.gt (fp.mul RNE x1 x3) (fp.neg x8)))
(assert (fp.lt (fp.add RNE x3 x0) (fp.mul RNE x6 x6)))
(assert (fp.geq (fp.neg x6) (fp.add RNE x4 x8)))
(assert (fp.gt (fp.div RNE x3 x7) (fp.div RNE x6 x0)))
(assert (fp.eq (fp.mul RNE x0 x6) (fp.neg x5)))
(assert (fp.geq (fp.mul RNE x7 x3) (fp.neg x8)))
(assert (fp.eq (fp.add RNE x5 x2) (fp.sub RNE x7 x5)))
(assert (fp.eq (fp.div RNE x1 x7) (fp.sub RNE x0 x4)))
(assert (fp.geq (fp.neg x5) (fp.neg x4)))
(assert (fp.geq (fp.add RNE x6 x8) (fp.add RNE x3 x4)))
(assert (fp.leq (fp.div RNE x5 x7) (fp.div RNE x0 x2)))
(assert (fp.geq (fp.mul RNE x6 x4) (fp.sub RNE x6 x0)))
(assert (fp.geq (fp.neg x3) (fp.add RNE x6 x6)))
(check-sat)
