(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE x12 x10) (fp.sub RNE x6 x13)) (fp.mul RNE (fp.add RNE x15 x7) (fp.add RNE x8 x8))) (fp.neg (fp.sub RNE (fp.neg x5) (fp.mul RNE x11 x14)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.mul RNE x2 x14) (fp.mul RNE x6 x0)) (fp.div RNE (fp.add RNE x9 x8) (fp.neg x0))) (fp.add RNE (fp.div RNE (fp.mul RNE x13 x2) (fp.mul RNE x4 x7)) (fp.neg (fp.mul RNE x12 x5)))))
(check-sat)
