(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.mul RNE x9 x8) (fp.neg x15)) (fp.div RNE (fp.div RNE x7 x9) (fp.neg x7))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x5 x6) (fp.sub RNE x10 x6)) (fp.sub RNE (fp.sub RNE x14 x13) (fp.div RNE x13 x10)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.neg x13) (fp.add RNE x1 x8)) (fp.div RNE (fp.neg x13) (fp.mul RNE x9 x15))) (fp.neg (fp.neg (fp.neg x13)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x5 x0) (fp.div RNE x4 x13)) (fp.mul RNE (fp.div RNE x2 x10) (fp.mul RNE x8 x2))) (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x13) (fp.sub RNE x9 x0)) (fp.add RNE (fp.div RNE x13 x11) (fp.mul RNE x3 x9)))))
(check-sat)
