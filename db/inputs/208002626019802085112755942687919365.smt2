(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE (fp.neg x2) (fp.div RNE x8 x19))) (fp.sub RNE (fp.add RNE (fp.add RNE x19 x13) (fp.neg x9)) (fp.div RNE (fp.neg x15) (fp.mul RNE x5 x13)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.neg x11) (fp.div RNE x2 x16))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x3 x2) (fp.add RNE x18 x6)) (fp.div RNE (fp.div RNE x16 x0) (fp.sub RNE x1 x14)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE x19 x6) (fp.sub RNE x14 x18)) (fp.mul RNE (fp.add RNE x15 x15) (fp.mul RNE x8 x7))) (fp.div RNE (fp.mul RNE (fp.neg x19) (fp.sub RNE x10 x0)) (fp.neg (fp.sub RNE x0 x6)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x7 x4) (fp.sub RNE x3 x8)) (fp.mul RNE (fp.add RNE x9 x0) (fp.add RNE x11 x11))) (fp.neg (fp.mul RNE (fp.div RNE x14 x9) (fp.sub RNE x10 x16)))))
(check-sat)
