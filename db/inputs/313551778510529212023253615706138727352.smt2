(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x1) (fp.neg x5))) (fp.sub RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.add RNE x21 x10) (fp.sub RNE x9 x3)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x2 x11) (fp.mul RNE x20 x4)) (fp.sub RNE (fp.add RNE x20 x5) (fp.div RNE x4 x15))) (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x18) (fp.neg x4)) (fp.add RNE (fp.sub RNE x21 x11) (fp.add RNE x9 x19)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE x14 x7) (fp.sub RNE x8 x19)) (fp.div RNE (fp.sub RNE x15 x5) (fp.sub RNE x3 x21))) (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x17) (fp.sub RNE x14 x3)) (fp.sub RNE (fp.add RNE x12 x22) (fp.add RNE x21 x20)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.div RNE x20 x7) (fp.sub RNE x2 x14)) (fp.sub RNE (fp.add RNE x12 x0) (fp.add RNE x3 x10))) (fp.sub RNE (fp.neg (fp.add RNE x17 x18)) (fp.div RNE (fp.add RNE x10 x7) (fp.div RNE x11 x17)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x14 x9) (fp.sub RNE x9 x15)) (fp.neg (fp.div RNE x21 x22))) (fp.div RNE (fp.neg (fp.add RNE x4 x8)) (fp.add RNE (fp.add RNE x6 x11) (fp.mul RNE x11 x12)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x20) (fp.neg x21)) (fp.div RNE (fp.neg x1) (fp.neg x16))) (fp.add RNE (fp.add RNE (fp.add RNE x10 x20) (fp.div RNE x19 x4)) (fp.sub RNE (fp.mul RNE x6 x22) (fp.div RNE x18 x18)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg x8) (fp.div RNE x16 x11)) (fp.add RNE (fp.div RNE x14 x13) (fp.div RNE x9 x18))) (fp.add RNE (fp.sub RNE (fp.sub RNE x19 x20) (fp.add RNE x3 x8)) (fp.mul RNE (fp.add RNE x20 x1) (fp.sub RNE x19 x6)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.div RNE x18 x16) (fp.add RNE x20 x19)) (fp.sub RNE (fp.add RNE x22 x16) (fp.mul RNE x19 x18))) (fp.add RNE (fp.neg (fp.neg x14)) (fp.sub RNE (fp.div RNE x17 x15) (fp.add RNE x9 x1)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.add RNE x7 x1) (fp.sub RNE x15 x5))) (fp.neg (fp.add RNE (fp.sub RNE x21 x19) (fp.neg x7)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x5 x5) (fp.add RNE x11 x17))) (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x1) (fp.sub RNE x4 x7)) (fp.add RNE (fp.add RNE x1 x0) (fp.add RNE x10 x1)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x2 x10) (fp.sub RNE x8 x2))) (fp.sub RNE (fp.sub RNE (fp.div RNE x21 x6) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x18 x17) (fp.add RNE x0 x7)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x1) (fp.sub RNE x18 x7)) (fp.mul RNE (fp.add RNE x9 x17) (fp.neg x10))) (fp.div RNE (fp.add RNE (fp.neg x11) (fp.mul RNE x15 x19)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x9 x11)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.add RNE x9 x9) (fp.add RNE x6 x17))) (fp.neg (fp.mul RNE (fp.add RNE x6 x10) (fp.div RNE x8 x0)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE x19 x1) (fp.add RNE x14 x0)) (fp.neg (fp.add RNE x22 x15))) (fp.mul RNE (fp.neg (fp.div RNE x2 x19)) (fp.add RNE (fp.mul RNE x8 x13) (fp.div RNE x0 x16)))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x6 x20))) (fp.mul RNE (fp.sub RNE (fp.div RNE x9 x11) (fp.div RNE x12 x21)) (fp.mul RNE (fp.div RNE x1 x14) (fp.add RNE x15 x5)))))
(check-sat)
