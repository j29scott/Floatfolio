(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.neg x0) (fp.mul RNE x12 x1)) (fp.div RNE (fp.sub RNE x3 x6) (fp.add RNE x10 x14))))
(assert (fp.geq (fp.add RNE (fp.neg x7) (fp.div RNE x1 x4)) (fp.add RNE (fp.mul RNE x17 x6) (fp.neg x11))))
(assert (fp.gt (fp.sub RNE (fp.neg x13) (fp.neg x15)) (fp.neg (fp.mul RNE x16 x17))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x14 x15) (fp.neg x5)) (fp.neg (fp.div RNE x12 x4))))
(assert (fp.leq (fp.neg (fp.neg x1)) (fp.div RNE (fp.sub RNE x1 x9) (fp.div RNE x14 x11))))
(check-sat)
