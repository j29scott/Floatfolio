(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(declare-const x28 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x5 x24) (fp.add RNE x24 x23)) (fp.mul RNE (fp.sub RNE x23 x14) (fp.sub RNE x22 x24))) (fp.neg (fp.add RNE (fp.div RNE x5 x7) (fp.sub RNE x23 x5)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.div RNE x10 x5) (fp.div RNE x3 x26)) (fp.div RNE (fp.div RNE x3 x14) (fp.sub RNE x14 x23))) (fp.div RNE (fp.add RNE (fp.mul RNE x2 x10) (fp.div RNE x11 x0)) (fp.add RNE (fp.div RNE x23 x15) (fp.mul RNE x9 x24))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg (fp.div RNE x0 x25)) (fp.add RNE (fp.add RNE x11 x22) (fp.sub RNE x1 x6))) (fp.div RNE (fp.div RNE (fp.sub RNE x26 x3) (fp.add RNE x10 x25)) (fp.add RNE (fp.neg x21) (fp.div RNE x6 x9)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x26 x27) (fp.mul RNE x7 x0))) (fp.sub RNE (fp.div RNE (fp.neg x25) (fp.div RNE x2 x19)) (fp.sub RNE (fp.add RNE x5 x7) (fp.neg x27))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x1 x5) (fp.add RNE x11 x2)) (fp.sub RNE (fp.sub RNE x8 x8) (fp.sub RNE x14 x0))) (fp.neg (fp.sub RNE (fp.neg x15) (fp.neg x17)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.neg x4) (fp.neg x7)) (fp.add RNE (fp.add RNE x2 x13) (fp.mul RNE x24 x21))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x26 x21) (fp.mul RNE x3 x3))) (fp.add RNE (fp.mul RNE (fp.add RNE x4 x1) (fp.neg x10)) (fp.mul RNE (fp.sub RNE x25 x0) (fp.mul RNE x9 x16)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.div RNE x8 x24) (fp.div RNE x15 x28)) (fp.mul RNE (fp.sub RNE x8 x7) (fp.sub RNE x17 x18))) (fp.div RNE (fp.neg (fp.mul RNE x26 x19)) (fp.mul RNE (fp.add RNE x27 x0) (fp.div RNE x15 x16))))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.div RNE (fp.neg x16) (fp.add RNE x16 x5))) (fp.neg (fp.mul RNE (fp.sub RNE x28 x5) (fp.sub RNE x4 x9)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.neg x7) (fp.sub RNE x27 x19)) (fp.add RNE (fp.neg x7) (fp.neg x11))) (fp.neg (fp.mul RNE (fp.mul RNE x4 x8) (fp.sub RNE x28 x26))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x23 x18) (fp.neg x17)) (fp.mul RNE (fp.mul RNE x28 x8) (fp.add RNE x13 x1))) (fp.neg (fp.div RNE (fp.neg x3) (fp.div RNE x3 x28)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x0 x8) (fp.mul RNE x23 x27)) (fp.neg (fp.div RNE x18 x23))) (fp.mul RNE (fp.add RNE (fp.mul RNE x10 x1) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x14 x22) (fp.div RNE x15 x2))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE (fp.div RNE x18 x21) (fp.div RNE x8 x4)) (fp.add RNE (fp.add RNE x23 x5) (fp.mul RNE x6 x10))) (fp.neg (fp.mul RNE (fp.mul RNE x0 x12) (fp.sub RNE x21 x4)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.neg x11) (fp.sub RNE x14 x18))) (fp.div RNE (fp.div RNE (fp.neg x5) (fp.div RNE x23 x3)) (fp.sub RNE (fp.add RNE x16 x7) (fp.div RNE x20 x22))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x11) (fp.sub RNE x0 x12)) (fp.div RNE (fp.div RNE x19 x12) (fp.div RNE x7 x14))) (fp.div RNE (fp.div RNE (fp.div RNE x5 x22) (fp.div RNE x15 x12)) (fp.neg (fp.neg x25)))) (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x19 x2) (fp.div RNE x26 x11))) (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x15) (fp.mul RNE x6 x25)) (fp.sub RNE (fp.neg x14) (fp.mul RNE x14 x15))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.mul RNE x11 x5)) (fp.mul RNE (fp.add RNE x20 x11) (fp.sub RNE x9 x10)))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.neg x12) (fp.mul RNE x6 x19)) (fp.neg (fp.mul RNE x7 x22))) (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x11) (fp.div RNE x5 x16)) (fp.sub RNE (fp.mul RNE x14 x25) (fp.div RNE x12 x3))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x5 x6)) (fp.add RNE (fp.neg x12) (fp.neg x12))) (fp.mul RNE (fp.neg (fp.sub RNE x10 x12)) (fp.add RNE (fp.mul RNE x7 x3) (fp.neg x25)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x12 x17) (fp.sub RNE x26 x3)) (fp.add RNE (fp.sub RNE x0 x1) (fp.div RNE x7 x26))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x2 x22)) (fp.neg (fp.div RNE x3 x24))) (fp.add RNE (fp.div RNE (fp.mul RNE x19 x22) (fp.neg x23)) (fp.add RNE (fp.mul RNE x20 x12) (fp.mul RNE x19 x13)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x8 x0) (fp.sub RNE x26 x24)) (fp.sub RNE (fp.mul RNE x5 x0) (fp.neg x21))) (fp.div RNE (fp.neg (fp.mul RNE x14 x6)) (fp.neg (fp.neg x23))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg (fp.sub RNE x23 x22))) (fp.add RNE (fp.neg (fp.add RNE x28 x17)) (fp.sub RNE (fp.div RNE x15 x22) (fp.add RNE x13 x16)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.mul RNE x0 x28)) (fp.add RNE (fp.div RNE x12 x20) (fp.div RNE x10 x4))) (fp.sub RNE (fp.neg (fp.div RNE x0 x5)) (fp.neg (fp.neg x11))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE (fp.mul RNE x15 x7) (fp.mul RNE x26 x26))) (fp.neg (fp.neg (fp.add RNE x7 x20)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.add RNE x22 x18) (fp.sub RNE x22 x19)) (fp.mul RNE (fp.add RNE x27 x7) (fp.neg x9))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x12 x0) (fp.div RNE x17 x1)) (fp.div RNE (fp.mul RNE x19 x24) (fp.sub RNE x16 x22))))))
(check-sat)
