(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x10 x15) (fp.div RNE x1 x4)))
(assert (fp.gt (fp.add RNE x14 x0) (fp.div RNE x7 x1)))
(assert (fp.eq (fp.sub RNE x11 x8) (fp.add RNE x12 x1)))
(assert (fp.leq (fp.neg x10) (fp.add RNE x6 x4)))
(assert (fp.eq (fp.add RNE x13 x14) (fp.mul RNE x5 x15)))
(assert (fp.geq (fp.mul RNE x3 x4) (fp.mul RNE x8 x11)))
(assert (fp.gt (fp.neg x8) (fp.add RNE x8 x12)))
(assert (fp.gt (fp.neg x1) (fp.neg x15)))
(assert (fp.geq (fp.mul RNE x15 x2) (fp.neg x9)))
(assert (fp.eq (fp.mul RNE x9 x1) (fp.div RNE x3 x4)))
(assert (fp.eq (fp.div RNE x1 x11) (fp.sub RNE x3 x11)))
(assert (fp.eq (fp.sub RNE x13 x4) (fp.mul RNE x14 x13)))
(check-sat)
