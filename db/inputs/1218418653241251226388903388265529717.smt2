(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.add RNE x6 x15) (fp.mul RNE x15 x11)) (fp.div RNE (fp.div RNE x4 x19) (fp.div RNE x0 x10))) (fp.sub RNE (fp.neg (fp.sub RNE x4 x14)) (fp.add RNE (fp.neg x1) (fp.neg x13)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x20 x8) (fp.sub RNE x4 x8)) (fp.add RNE (fp.neg x19) (fp.sub RNE x18 x18))) (fp.add RNE (fp.sub RNE (fp.neg x15) (fp.add RNE x0 x20)) (fp.div RNE (fp.neg x4) (fp.neg x10))))))
(check-sat)
