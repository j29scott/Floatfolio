(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE x3 x8) (fp.neg x8)))
(assert (fp.gt (fp.div RNE x1 x7) (fp.mul RNE x8 x4)))
(assert (fp.leq (fp.add RNE x8 x8) (fp.div RNE x2 x0)))
(assert (fp.leq (fp.mul RNE x5 x2) (fp.mul RNE x9 x5)))
(assert (fp.leq (fp.sub RNE x11 x2) (fp.mul RNE x11 x9)))
(assert (fp.lt (fp.div RNE x9 x3) (fp.neg x6)))
(assert (fp.geq (fp.div RNE x3 x7) (fp.neg x3)))
(assert (fp.lt (fp.sub RNE x7 x3) (fp.sub RNE x6 x11)))
(assert (fp.gt (fp.mul RNE x1 x6) (fp.add RNE x0 x0)))
(assert (fp.geq (fp.div RNE x4 x3) (fp.sub RNE x3 x8)))
(assert (fp.gt (fp.sub RNE x10 x4) (fp.neg x9)))
(assert (fp.eq (fp.sub RNE x10 x7) (fp.add RNE x4 x2)))
(assert (fp.leq (fp.neg x5) (fp.div RNE x0 x9)))
(assert (fp.eq (fp.neg x7) (fp.sub RNE x5 x3)))
(assert (fp.eq (fp.sub RNE x11 x11) (fp.add RNE x11 x11)))
(assert (fp.leq (fp.sub RNE x6 x3) (fp.add RNE x6 x5)))
(assert (fp.geq (fp.mul RNE x7 x2) (fp.div RNE x1 x8)))
(check-sat)
