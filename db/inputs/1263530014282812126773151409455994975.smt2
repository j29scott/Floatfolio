(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x10) (fp.neg x2)))
(assert (fp.lt (fp.add RNE x5 x8) (fp.mul RNE x8 x6)))
(assert (fp.geq (fp.sub RNE x10 x5) (fp.mul RNE x0 x11)))
(assert (fp.leq (fp.div RNE x1 x9) (fp.sub RNE x0 x7)))
(assert (fp.leq (fp.neg x5) (fp.div RNE x6 x3)))
(assert (fp.eq (fp.neg x8) (fp.div RNE x3 x5)))
(assert (fp.eq (fp.div RNE x9 x4) (fp.mul RNE x7 x3)))
(assert (fp.leq (fp.add RNE x3 x4) (fp.sub RNE x6 x2)))
(assert (fp.lt (fp.add RNE x6 x7) (fp.sub RNE x9 x1)))
(assert (fp.eq (fp.sub RNE x1 x5) (fp.neg x5)))
(assert (fp.eq (fp.neg x9) (fp.neg x1)))
(check-sat)
