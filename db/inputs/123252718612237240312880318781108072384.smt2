(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.div RNE x14 x3) (fp.sub RNE x5 x7)) (fp.mul RNE (fp.mul RNE x12 x4) (fp.sub RNE x2 x5))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x5 x14) (fp.neg x4)) (fp.div RNE (fp.neg x13) (fp.div RNE x7 x5))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x2 x13) (fp.sub RNE x8 x1)) (fp.div RNE (fp.add RNE x11 x1) (fp.add RNE x7 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x14 x1)) (fp.add RNE (fp.sub RNE x8 x7) (fp.sub RNE x7 x14))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x1 x10) (fp.add RNE x3 x11)) (fp.mul RNE (fp.add RNE x8 x12) (fp.mul RNE x2 x5))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x10 x14) (fp.div RNE x9 x0)) (fp.mul RNE (fp.add RNE x7 x14) (fp.mul RNE x12 x0))))
(assert (fp.leq (fp.neg (fp.sub RNE x4 x13)) (fp.neg (fp.div RNE x0 x12))))
(assert (fp.geq (fp.add RNE (fp.add RNE x14 x10) (fp.sub RNE x4 x6)) (fp.div RNE (fp.mul RNE x14 x9) (fp.add RNE x9 x3))))
(assert (fp.gt (fp.neg (fp.div RNE x10 x13)) (fp.add RNE (fp.neg x4) (fp.sub RNE x6 x10))))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x7) (fp.mul RNE x2 x12)) (fp.add RNE (fp.mul RNE x10 x8) (fp.sub RNE x2 x3))))
(check-sat)
