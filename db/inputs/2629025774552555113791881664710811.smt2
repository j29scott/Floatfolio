(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x14 x1) (fp.mul RNE x3 x10)) (fp.add RNE (fp.div RNE x15 x17) (fp.add RNE x4 x9))) (fp.add RNE (fp.sub RNE (fp.sub RNE x3 x14) (fp.add RNE x9 x1)) (fp.add RNE (fp.sub RNE x11 x3) (fp.mul RNE x0 x17)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.sub RNE x4 x3)) (fp.div RNE (fp.add RNE x16 x15) (fp.sub RNE x14 x3))) (fp.neg (fp.add RNE (fp.add RNE x4 x8) (fp.mul RNE x5 x13)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.neg x4) (fp.add RNE x5 x1)) (fp.add RNE (fp.add RNE x8 x6) (fp.mul RNE x11 x9))) (fp.add RNE (fp.div RNE (fp.div RNE x0 x11) (fp.add RNE x2 x0)) (fp.neg (fp.mul RNE x17 x13)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x10 x5) (fp.mul RNE x9 x14)) (fp.neg (fp.div RNE x12 x8))) (fp.div RNE (fp.sub RNE (fp.add RNE x0 x16) (fp.add RNE x12 x6)) (fp.div RNE (fp.mul RNE x8 x15) (fp.sub RNE x8 x3)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.neg x10) (fp.neg x10)) (fp.add RNE (fp.sub RNE x0 x0) (fp.sub RNE x16 x14))) (fp.neg (fp.mul RNE (fp.neg x6) (fp.sub RNE x17 x9)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.neg x10) (fp.neg x14)) (fp.sub RNE (fp.sub RNE x15 x7) (fp.div RNE x5 x4))) (fp.mul RNE (fp.add RNE (fp.div RNE x13 x9) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x4 x12) (fp.div RNE x13 x0)))))
(check-sat)
