(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x8) (fp.sub RNE x22 x14)) (fp.div RNE (fp.neg x5) (fp.add RNE x5 x3))) (fp.neg (fp.neg (fp.mul RNE x16 x6)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE x17 x15) (fp.neg x2))) (fp.neg (fp.add RNE (fp.div RNE x16 x1) (fp.add RNE x17 x21)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x21) (fp.add RNE x22 x17)) (fp.neg (fp.mul RNE x14 x22))) (fp.neg (fp.sub RNE (fp.neg x16) (fp.div RNE x0 x5)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x8 x10) (fp.div RNE x13 x3))) (fp.mul RNE (fp.div RNE (fp.sub RNE x11 x0) (fp.sub RNE x5 x18)) (fp.div RNE (fp.mul RNE x10 x1) (fp.mul RNE x0 x15)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x7 x12) (fp.neg x2)) (fp.add RNE (fp.sub RNE x14 x18) (fp.add RNE x15 x0))) (fp.mul RNE (fp.add RNE (fp.div RNE x19 x13) (fp.sub RNE x4 x10)) (fp.neg (fp.div RNE x7 x0)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.sub RNE x13 x7) (fp.add RNE x13 x6)) (fp.neg (fp.div RNE x12 x5))) (fp.sub RNE (fp.mul RNE (fp.neg x6) (fp.div RNE x16 x5)) (fp.div RNE (fp.mul RNE x15 x22) (fp.add RNE x3 x4)))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg x9))) (fp.mul RNE (fp.neg (fp.div RNE x15 x13)) (fp.mul RNE (fp.sub RNE x2 x22) (fp.div RNE x3 x13)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x14 x11) (fp.mul RNE x14 x4)) (fp.neg (fp.neg x17))) (fp.mul RNE (fp.mul RNE (fp.div RNE x8 x10) (fp.sub RNE x8 x1)) (fp.mul RNE (fp.div RNE x20 x7) (fp.neg x17)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x11 x14) (fp.add RNE x10 x3)) (fp.sub RNE (fp.neg x9) (fp.neg x2))) (fp.div RNE (fp.sub RNE (fp.neg x13) (fp.sub RNE x8 x6)) (fp.mul RNE (fp.neg x2) (fp.div RNE x11 x10)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x15) (fp.div RNE x19 x8)) (fp.sub RNE (fp.neg x22) (fp.div RNE x7 x16))) (fp.sub RNE (fp.neg (fp.div RNE x8 x2)) (fp.mul RNE (fp.neg x11) (fp.neg x22)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.div RNE x6 x0) (fp.neg x12))) (fp.sub RNE (fp.add RNE (fp.div RNE x19 x17) (fp.add RNE x2 x22)) (fp.neg (fp.neg x10)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x12 x9) (fp.sub RNE x2 x14)) (fp.neg (fp.neg x21))) (fp.neg (fp.add RNE (fp.mul RNE x17 x14) (fp.div RNE x11 x14)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x22 x14) (fp.mul RNE x14 x13)) (fp.sub RNE (fp.add RNE x11 x9) (fp.neg x16))) (fp.neg (fp.add RNE (fp.mul RNE x5 x20) (fp.mul RNE x3 x20)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x9) (fp.add RNE x3 x4)) (fp.sub RNE (fp.add RNE x10 x1) (fp.add RNE x2 x11))) (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x18) (fp.div RNE x20 x19)) (fp.neg (fp.neg x16)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.mul RNE x3 x1)) (fp.div RNE (fp.mul RNE x2 x20) (fp.sub RNE x13 x15))) (fp.sub RNE (fp.neg (fp.sub RNE x19 x8)) (fp.sub RNE (fp.mul RNE x7 x3) (fp.sub RNE x19 x12)))))
(check-sat)
