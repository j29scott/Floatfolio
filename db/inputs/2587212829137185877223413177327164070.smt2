(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE x6 x23))) (fp.div RNE (fp.neg (fp.sub RNE x17 x21)) (fp.neg (fp.div RNE x5 x4)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x10 x20) (fp.mul RNE x20 x1)) (fp.add RNE (fp.mul RNE x14 x13) (fp.add RNE x17 x4))) (fp.sub RNE (fp.sub RNE (fp.div RNE x1 x12) (fp.sub RNE x23 x4)) (fp.div RNE (fp.div RNE x11 x1) (fp.div RNE x3 x22)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.div RNE x0 x5) (fp.add RNE x23 x13)) (fp.neg (fp.sub RNE x22 x2))) (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.sub RNE x5 x4)) (fp.mul RNE (fp.sub RNE x19 x21) (fp.add RNE x1 x11)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.mul RNE x4 x20) (fp.mul RNE x10 x1)) (fp.neg (fp.div RNE x1 x1))) (fp.add RNE (fp.mul RNE (fp.neg x11) (fp.mul RNE x2 x10)) (fp.sub RNE (fp.sub RNE x22 x0) (fp.sub RNE x11 x19)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE x0 x16)) (fp.div RNE (fp.sub RNE x8 x16) (fp.mul RNE x6 x15))) (fp.neg (fp.div RNE (fp.sub RNE x23 x22) (fp.neg x19)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x1 x7) (fp.div RNE x6 x0)) (fp.sub RNE (fp.sub RNE x18 x4) (fp.neg x11))) (fp.sub RNE (fp.add RNE (fp.add RNE x7 x19) (fp.neg x15)) (fp.mul RNE (fp.neg x3) (fp.sub RNE x14 x14)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x22 x6)) (fp.neg (fp.neg x8))) (fp.div RNE (fp.mul RNE (fp.div RNE x1 x23) (fp.sub RNE x18 x13)) (fp.mul RNE (fp.sub RNE x23 x22) (fp.sub RNE x5 x15)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x21 x9) (fp.neg x8)) (fp.neg (fp.div RNE x21 x12))) (fp.div RNE (fp.div RNE (fp.add RNE x22 x4) (fp.div RNE x10 x12)) (fp.sub RNE (fp.add RNE x23 x1) (fp.sub RNE x22 x21)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x15 x5)) (fp.sub RNE (fp.neg x11) (fp.mul RNE x1 x22))) (fp.add RNE (fp.div RNE (fp.mul RNE x16 x0) (fp.div RNE x11 x13)) (fp.add RNE (fp.neg x5) (fp.div RNE x18 x16)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE x2 x9) (fp.div RNE x20 x2)) (fp.div RNE (fp.neg x0) (fp.div RNE x23 x11))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x22 x19) (fp.div RNE x15 x4)) (fp.mul RNE (fp.sub RNE x0 x11) (fp.neg x21)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.mul RNE x0 x3) (fp.sub RNE x0 x1)) (fp.mul RNE (fp.neg x17) (fp.div RNE x4 x6))) (fp.div RNE (fp.div RNE (fp.neg x12) (fp.neg x4)) (fp.mul RNE (fp.div RNE x2 x4) (fp.sub RNE x17 x10)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x5) (fp.div RNE x22 x14)) (fp.sub RNE (fp.mul RNE x16 x17) (fp.div RNE x10 x10))) (fp.neg (fp.div RNE (fp.neg x9) (fp.neg x15)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x13 x19) (fp.mul RNE x22 x3))) (fp.add RNE (fp.neg (fp.add RNE x12 x18)) (fp.mul RNE (fp.sub RNE x10 x12) (fp.add RNE x20 x20)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.add RNE x10 x8)) (fp.neg (fp.sub RNE x16 x13))) (fp.sub RNE (fp.div RNE (fp.div RNE x4 x13) (fp.sub RNE x4 x19)) (fp.neg (fp.add RNE x5 x8)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x19) (fp.sub RNE x17 x6)) (fp.add RNE (fp.mul RNE x1 x3) (fp.div RNE x14 x0))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x10 x7) (fp.add RNE x16 x12)) (fp.neg (fp.sub RNE x11 x8)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x10) (fp.neg x18)) (fp.add RNE (fp.add RNE x3 x4) (fp.sub RNE x12 x1))) (fp.mul RNE (fp.add RNE (fp.mul RNE x16 x16) (fp.neg x10)) (fp.div RNE (fp.add RNE x23 x10) (fp.add RNE x22 x12)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x13) (fp.add RNE x22 x18)) (fp.div RNE (fp.add RNE x14 x3) (fp.neg x3))) (fp.sub RNE (fp.neg (fp.mul RNE x23 x7)) (fp.neg (fp.sub RNE x6 x17)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE x17 x20) (fp.add RNE x18 x0)) (fp.add RNE (fp.sub RNE x0 x2) (fp.div RNE x15 x6))) (fp.neg (fp.neg (fp.div RNE x19 x16)))))
(check-sat)
