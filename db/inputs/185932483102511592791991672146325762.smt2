(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.sub RNE x18 x4) (fp.div RNE x7 x21)) (fp.div RNE (fp.mul RNE x0 x4) (fp.div RNE x21 x19))) (fp.add RNE (fp.sub RNE (fp.div RNE x9 x20) (fp.div RNE x16 x15)) (fp.add RNE (fp.div RNE x16 x11) (fp.div RNE x16 x9)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.neg x14)) (fp.sub RNE (fp.add RNE x15 x5) (fp.div RNE x0 x11))) (fp.add RNE (fp.div RNE (fp.neg x9) (fp.sub RNE x3 x0)) (fp.div RNE (fp.div RNE x18 x13) (fp.div RNE x13 x13)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x13 x18) (fp.div RNE x21 x2)) (fp.sub RNE (fp.div RNE x17 x4) (fp.div RNE x21 x8))) (fp.sub RNE (fp.sub RNE (fp.neg x0) (fp.mul RNE x4 x1)) (fp.neg (fp.mul RNE x4 x4)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x9 x8) (fp.sub RNE x21 x13))) (fp.add RNE (fp.mul RNE (fp.div RNE x15 x2) (fp.add RNE x17 x11)) (fp.sub RNE (fp.sub RNE x20 x9) (fp.mul RNE x21 x20)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg x14) (fp.neg x11)) (fp.div RNE (fp.mul RNE x7 x9) (fp.mul RNE x9 x16))) (fp.mul RNE (fp.sub RNE (fp.add RNE x7 x17) (fp.mul RNE x5 x5)) (fp.neg (fp.add RNE x6 x19)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE x19 x11) (fp.div RNE x5 x8)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x21 x5))) (fp.add RNE (fp.sub RNE (fp.sub RNE x4 x20) (fp.div RNE x15 x0)) (fp.add RNE (fp.neg x13) (fp.mul RNE x19 x12)))))
(check-sat)
