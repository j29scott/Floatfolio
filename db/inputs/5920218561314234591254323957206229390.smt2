(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE x11 x4) (fp.div RNE x1 x12))) (fp.div RNE (fp.add RNE (fp.neg x10) (fp.mul RNE x10 x10)) (fp.add RNE (fp.neg x8) (fp.neg x3)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x4) (fp.div RNE x4 x5)) (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x7 x2))) (fp.sub RNE (fp.div RNE (fp.div RNE x5 x8) (fp.sub RNE x3 x8)) (fp.div RNE (fp.div RNE x6 x13) (fp.add RNE x13 x2)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.neg x10) (fp.add RNE x11 x0)) (fp.div RNE (fp.add RNE x4 x10) (fp.add RNE x1 x8))) (fp.div RNE (fp.sub RNE (fp.div RNE x13 x4) (fp.neg x4)) (fp.mul RNE (fp.add RNE x12 x13) (fp.neg x4)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x9 x10) (fp.add RNE x6 x13)) (fp.add RNE (fp.add RNE x5 x2) (fp.div RNE x12 x15))) (fp.mul RNE (fp.mul RNE (fp.neg x12) (fp.sub RNE x1 x2)) (fp.neg (fp.div RNE x2 x13)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x14 x10) (fp.mul RNE x3 x1)) (fp.add RNE (fp.div RNE x9 x4) (fp.add RNE x13 x14))) (fp.div RNE (fp.add RNE (fp.add RNE x0 x11) (fp.add RNE x13 x8)) (fp.div RNE (fp.add RNE x2 x4) (fp.sub RNE x11 x9)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x13) (fp.mul RNE x11 x5)) (fp.sub RNE (fp.add RNE x13 x14) (fp.div RNE x15 x4))) (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x7) (fp.neg x4)) (fp.mul RNE (fp.neg x7) (fp.div RNE x11 x8)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x2 x8) (fp.neg x7)) (fp.div RNE (fp.add RNE x5 x15) (fp.div RNE x0 x0))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x11) (fp.neg x2)) (fp.neg (fp.neg x5)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x14 x5) (fp.neg x0)) (fp.sub RNE (fp.mul RNE x0 x5) (fp.neg x13))) (fp.div RNE (fp.div RNE (fp.neg x10) (fp.mul RNE x10 x8)) (fp.neg (fp.mul RNE x0 x4)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x6 x0) (fp.sub RNE x5 x10)) (fp.neg (fp.neg x0))) (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.sub RNE x7 x2)) (fp.neg (fp.add RNE x7 x15)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x8) (fp.add RNE x11 x2)) (fp.neg (fp.div RNE x9 x7))) (fp.sub RNE (fp.neg (fp.div RNE x10 x11)) (fp.sub RNE (fp.add RNE x12 x0) (fp.sub RNE x12 x2)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x9 x11) (fp.sub RNE x5 x15)) (fp.neg (fp.neg x14))) (fp.mul RNE (fp.add RNE (fp.add RNE x1 x14) (fp.neg x3)) (fp.mul RNE (fp.div RNE x7 x1) (fp.mul RNE x7 x6)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.add RNE x9 x15)) (fp.mul RNE (fp.neg x7) (fp.div RNE x14 x13))) (fp.add RNE (fp.neg (fp.neg x3)) (fp.mul RNE (fp.div RNE x10 x4) (fp.add RNE x0 x4)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x14 x4) (fp.add RNE x14 x9)) (fp.div RNE (fp.sub RNE x3 x14) (fp.mul RNE x5 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x3 x3) (fp.div RNE x2 x10)) (fp.sub RNE (fp.mul RNE x11 x11) (fp.sub RNE x3 x13)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg x14) (fp.div RNE x4 x6))) (fp.sub RNE (fp.div RNE (fp.add RNE x4 x0) (fp.add RNE x5 x14)) (fp.div RNE (fp.sub RNE x6 x8) (fp.sub RNE x1 x12)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x5) (fp.neg x9)) (fp.add RNE (fp.div RNE x14 x8) (fp.neg x11))) (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x7) (fp.div RNE x13 x2)) (fp.add RNE (fp.div RNE x2 x3) (fp.add RNE x6 x15)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE x5 x11) (fp.sub RNE x12 x10)) (fp.neg (fp.add RNE x12 x4))) (fp.neg (fp.add RNE (fp.sub RNE x6 x15) (fp.neg x14)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE x11 x0) (fp.add RNE x1 x14)) (fp.neg (fp.mul RNE x11 x1))) (fp.div RNE (fp.add RNE (fp.sub RNE x6 x4) (fp.add RNE x2 x4)) (fp.neg (fp.add RNE x4 x12)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x7) (fp.mul RNE x10 x1)) (fp.mul RNE (fp.div RNE x3 x13) (fp.add RNE x9 x7))) (fp.neg (fp.mul RNE (fp.add RNE x9 x9) (fp.neg x9)))))
(check-sat)
