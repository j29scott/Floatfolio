(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x8 x14) (fp.add RNE x20 x1)) (fp.neg (fp.div RNE x15 x5))) (fp.mul RNE (fp.sub RNE (fp.neg x3) (fp.mul RNE x3 x9)) (fp.div RNE (fp.neg x16) (fp.neg x2)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.div RNE x17 x1) (fp.sub RNE x13 x7)) (fp.neg (fp.sub RNE x12 x6))) (fp.add RNE (fp.add RNE (fp.add RNE x13 x1) (fp.neg x19)) (fp.neg (fp.add RNE x1 x11)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.mul RNE x20 x0)) (fp.mul RNE (fp.sub RNE x2 x3) (fp.mul RNE x13 x17))) (fp.sub RNE (fp.add RNE (fp.div RNE x2 x15) (fp.sub RNE x8 x14)) (fp.mul RNE (fp.add RNE x12 x18) (fp.add RNE x3 x4)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE x11 x10) (fp.neg x20)) (fp.div RNE (fp.sub RNE x7 x20) (fp.sub RNE x14 x14))) (fp.add RNE (fp.mul RNE (fp.mul RNE x20 x10) (fp.div RNE x12 x8)) (fp.sub RNE (fp.mul RNE x18 x7) (fp.div RNE x2 x18)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x10 x15) (fp.div RNE x12 x10))) (fp.div RNE (fp.add RNE (fp.neg x5) (fp.div RNE x14 x15)) (fp.mul RNE (fp.div RNE x0 x12) (fp.div RNE x2 x12)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x7 x10)) (fp.div RNE (fp.mul RNE x14 x14) (fp.add RNE x3 x2))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x18 x6) (fp.div RNE x6 x14)) (fp.div RNE (fp.div RNE x12 x2) (fp.div RNE x10 x0)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x17 x4) (fp.sub RNE x14 x11)) (fp.sub RNE (fp.mul RNE x1 x10) (fp.div RNE x20 x8))) (fp.add RNE (fp.sub RNE (fp.mul RNE x15 x17) (fp.sub RNE x7 x10)) (fp.mul RNE (fp.sub RNE x12 x15) (fp.div RNE x11 x12)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.neg x15)) (fp.sub RNE (fp.add RNE x0 x11) (fp.div RNE x3 x20))) (fp.neg (fp.mul RNE (fp.neg x13) (fp.div RNE x15 x6)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x10 x5)) (fp.add RNE (fp.sub RNE x17 x8) (fp.sub RNE x0 x13))) (fp.mul RNE (fp.div RNE (fp.mul RNE x1 x3) (fp.mul RNE x16 x10)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x6 x10)))))
(check-sat)
