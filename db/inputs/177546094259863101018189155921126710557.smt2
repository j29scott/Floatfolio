(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg (fp.div RNE x18 x12)) (fp.neg (fp.mul RNE x6 x1))) (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x5) (fp.sub RNE x5 x2)) (fp.add RNE (fp.sub RNE x2 x8) (fp.neg x0)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x20) (fp.mul RNE x8 x2)) (fp.div RNE (fp.mul RNE x12 x3) (fp.div RNE x9 x4))) (fp.neg (fp.div RNE (fp.sub RNE x6 x15) (fp.mul RNE x3 x10)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x3 x5)) (fp.mul RNE (fp.mul RNE x6 x19) (fp.sub RNE x3 x8))) (fp.neg (fp.sub RNE (fp.add RNE x15 x15) (fp.sub RNE x0 x15)))))
(check-sat)
