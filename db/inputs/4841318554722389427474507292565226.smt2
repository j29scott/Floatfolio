(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x1 x8) (fp.add RNE x6 x6)))
(assert (fp.gt (fp.div RNE x7 x0) (fp.mul RNE x0 x6)))
(assert (fp.gt (fp.neg x2) (fp.neg x3)))
(assert (fp.gt (fp.neg x1) (fp.neg x5)))
(assert (fp.eq (fp.neg x2) (fp.div RNE x2 x4)))
(assert (fp.lt (fp.neg x7) (fp.neg x5)))
(assert (fp.leq (fp.neg x6) (fp.sub RNE x7 x6)))
(assert (fp.lt (fp.add RNE x8 x4) (fp.div RNE x8 x0)))
(assert (fp.geq (fp.div RNE x0 x1) (fp.sub RNE x0 x8)))
(assert (fp.eq (fp.mul RNE x1 x3) (fp.neg x4)))
(assert (fp.geq (fp.sub RNE x9 x7) (fp.add RNE x3 x0)))
(assert (fp.lt (fp.div RNE x6 x7) (fp.mul RNE x5 x1)))
(assert (fp.lt (fp.sub RNE x4 x8) (fp.mul RNE x7 x3)))
(check-sat)
