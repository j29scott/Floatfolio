(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x10 x15) (fp.add RNE x3 x6)))
(assert (fp.gt (fp.mul RNE x10 x9) (fp.add RNE x14 x9)))
(assert (fp.leq (fp.sub RNE x8 x1) (fp.sub RNE x14 x8)))
(assert (fp.leq (fp.sub RNE x2 x1) (fp.mul RNE x8 x0)))
(assert (fp.geq (fp.div RNE x5 x12) (fp.div RNE x2 x13)))
(assert (fp.gt (fp.neg x5) (fp.mul RNE x11 x2)))
(assert (fp.geq (fp.add RNE x7 x3) (fp.add RNE x4 x5)))
(assert (fp.eq (fp.sub RNE x1 x8) (fp.div RNE x0 x10)))
(assert (fp.geq (fp.mul RNE x12 x7) (fp.div RNE x9 x5)))
(assert (fp.lt (fp.add RNE x13 x14) (fp.neg x2)))
(assert (fp.eq (fp.neg x1) (fp.neg x1)))
(assert (fp.geq (fp.neg x3) (fp.neg x10)))
(assert (fp.gt (fp.neg x13) (fp.sub RNE x5 x12)))
(assert (fp.leq (fp.div RNE x4 x5) (fp.neg x3)))
(assert (fp.lt (fp.div RNE x6 x1) (fp.mul RNE x7 x7)))
(assert (fp.leq (fp.add RNE x10 x2) (fp.add RNE x15 x7)))
(assert (fp.gt (fp.add RNE x10 x12) (fp.neg x2)))
(check-sat)
