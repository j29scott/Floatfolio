(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg (fp.mul RNE x3 x11))) (fp.mul RNE (fp.add RNE (fp.add RNE x2 x4) (fp.sub RNE x2 x14)) (fp.div RNE (fp.div RNE x1 x9) (fp.neg x9)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.div RNE x15 x4)) (fp.mul RNE (fp.mul RNE x8 x1) (fp.neg x1))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x11) (fp.neg x13)) (fp.neg (fp.sub RNE x15 x14))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x12 x4) (fp.neg x7)) (fp.add RNE (fp.div RNE x13 x15) (fp.neg x10))) (fp.mul RNE (fp.add RNE (fp.add RNE x6 x2) (fp.mul RNE x11 x9)) (fp.add RNE (fp.mul RNE x12 x6) (fp.div RNE x9 x10)))) (fp.add RNE (fp.div RNE (fp.neg (fp.sub RNE x10 x3)) (fp.sub RNE (fp.sub RNE x6 x6) (fp.neg x4))) (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x15) (fp.div RNE x2 x13)) (fp.mul RNE (fp.sub RNE x11 x5) (fp.mul RNE x6 x6))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE (fp.sub RNE x12 x3) (fp.neg x10)) (fp.sub RNE (fp.sub RNE x7 x14) (fp.sub RNE x6 x3)))) (fp.neg (fp.neg (fp.add RNE (fp.div RNE x3 x2) (fp.add RNE x0 x3))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg (fp.neg x11)) (fp.div RNE (fp.add RNE x12 x6) (fp.add RNE x11 x0))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x13) (fp.sub RNE x7 x11)) (fp.sub RNE (fp.mul RNE x0 x13) (fp.mul RNE x6 x6)))) (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x6 x9)) (fp.sub RNE (fp.div RNE x0 x12) (fp.sub RNE x8 x12))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x1 x7) (fp.add RNE x12 x15)) (fp.neg (fp.mul RNE x0 x3))) (fp.add RNE (fp.add RNE (fp.mul RNE x13 x12) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x12 x5) (fp.mul RNE x5 x12)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.mul RNE x3 x15) (fp.neg x0)) (fp.sub RNE (fp.neg x13) (fp.neg x11))) (fp.neg (fp.mul RNE (fp.div RNE x9 x4) (fp.mul RNE x13 x13))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x6) (fp.neg x7)) (fp.div RNE (fp.add RNE x10 x1) (fp.add RNE x9 x13))) (fp.sub RNE (fp.div RNE (fp.div RNE x1 x8) (fp.div RNE x8 x3)) (fp.mul RNE (fp.add RNE x1 x7) (fp.neg x11)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.sub RNE x6 x8) (fp.sub RNE x13 x13)) (fp.sub RNE (fp.neg x12) (fp.div RNE x5 x11))) (fp.sub RNE (fp.sub RNE (fp.neg x9) (fp.mul RNE x2 x8)) (fp.sub RNE (fp.div RNE x3 x0) (fp.div RNE x4 x4))))))
(check-sat)
