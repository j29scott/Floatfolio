(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.add RNE x11 x4) (fp.neg x0)) (fp.div RNE (fp.sub RNE x9 x2) (fp.mul RNE x1 x8))))
(assert (fp.geq (fp.neg (fp.add RNE x1 x8)) (fp.div RNE (fp.neg x5) (fp.neg x0))))
(assert (fp.gt (fp.neg (fp.add RNE x0 x11)) (fp.add RNE (fp.sub RNE x6 x11) (fp.neg x8))))
(assert (fp.eq (fp.div RNE (fp.neg x12) (fp.add RNE x5 x7)) (fp.add RNE (fp.sub RNE x2 x6) (fp.sub RNE x4 x3))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x0 x7) (fp.div RNE x11 x6)) (fp.sub RNE (fp.mul RNE x11 x1) (fp.sub RNE x8 x0))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x2 x8) (fp.sub RNE x9 x3)) (fp.neg (fp.sub RNE x0 x11))))
(assert (fp.eq (fp.div RNE (fp.div RNE x3 x8) (fp.neg x9)) (fp.neg (fp.sub RNE x12 x10))))
(assert (fp.eq (fp.neg (fp.sub RNE x9 x11)) (fp.sub RNE (fp.add RNE x10 x11) (fp.div RNE x2 x12))))
(assert (fp.lt (fp.sub RNE (fp.neg x0) (fp.neg x10)) (fp.neg (fp.mul RNE x9 x5))))
(assert (fp.geq (fp.add RNE (fp.add RNE x2 x1) (fp.sub RNE x3 x9)) (fp.div RNE (fp.sub RNE x8 x9) (fp.add RNE x4 x0))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x10 x6) (fp.add RNE x3 x8)) (fp.neg (fp.add RNE x1 x3))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x2 x9) (fp.add RNE x6 x6)) (fp.add RNE (fp.neg x10) (fp.sub RNE x9 x9))))
(check-sat)
