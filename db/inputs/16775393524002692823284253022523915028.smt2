(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.sub RNE x3 x2) (fp.div RNE x2 x4)) (fp.sub RNE (fp.sub RNE x2 x13) (fp.div RNE x2 x3))) (fp.mul RNE (fp.neg (fp.neg x0)) (fp.sub RNE (fp.add RNE x9 x2) (fp.add RNE x5 x0)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x12) (fp.div RNE x7 x13)) (fp.neg (fp.mul RNE x0 x13))) (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x12) (fp.div RNE x10 x11)) (fp.div RNE (fp.add RNE x12 x10) (fp.sub RNE x8 x8)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE x11 x1) (fp.add RNE x8 x13)) (fp.div RNE (fp.sub RNE x3 x11) (fp.mul RNE x5 x7))) (fp.sub RNE (fp.div RNE (fp.neg x10) (fp.neg x5)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x10 x10)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x1 x13)) (fp.div RNE (fp.neg x6) (fp.add RNE x6 x13))) (fp.add RNE (fp.add RNE (fp.neg x2) (fp.add RNE x12 x6)) (fp.add RNE (fp.div RNE x13 x13) (fp.sub RNE x5 x6)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x6) (fp.add RNE x11 x2)) (fp.add RNE (fp.mul RNE x9 x6) (fp.add RNE x10 x4))) (fp.neg (fp.div RNE (fp.add RNE x11 x3) (fp.sub RNE x12 x12)))))
(check-sat)
