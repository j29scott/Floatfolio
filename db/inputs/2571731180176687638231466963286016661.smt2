(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x2 x6) (fp.add RNE x5 x7)))
(assert (fp.gt (fp.sub RNE x4 x2) (fp.mul RNE x6 x1)))
(assert (fp.lt (fp.div RNE x2 x1) (fp.mul RNE x0 x1)))
(assert (fp.eq (fp.sub RNE x4 x0) (fp.mul RNE x4 x0)))
(assert (fp.lt (fp.neg x6) (fp.neg x1)))
(assert (fp.eq (fp.sub RNE x5 x1) (fp.add RNE x7 x4)))
(assert (fp.gt (fp.div RNE x3 x7) (fp.add RNE x4 x6)))
(assert (fp.geq (fp.neg x6) (fp.add RNE x0 x3)))
(assert (fp.geq (fp.mul RNE x8 x7) (fp.add RNE x6 x6)))
(assert (fp.geq (fp.add RNE x2 x1) (fp.neg x6)))
(assert (fp.geq (fp.div RNE x2 x0) (fp.neg x2)))
(assert (fp.leq (fp.sub RNE x8 x8) (fp.add RNE x5 x3)))
(assert (fp.eq (fp.div RNE x3 x2) (fp.mul RNE x5 x0)))
(check-sat)
