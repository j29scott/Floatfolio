(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x11) (fp.neg x0)))
(assert (fp.gt (fp.mul RNE x4 x2) (fp.sub RNE x1 x2)))
(assert (fp.gt (fp.add RNE x10 x3) (fp.mul RNE x8 x3)))
(assert (fp.lt (fp.mul RNE x8 x0) (fp.neg x0)))
(assert (fp.geq (fp.neg x11) (fp.neg x11)))
(assert (fp.gt (fp.mul RNE x11 x9) (fp.mul RNE x1 x5)))
(assert (fp.lt (fp.sub RNE x9 x0) (fp.neg x11)))
(assert (fp.eq (fp.neg x3) (fp.div RNE x3 x5)))
(assert (fp.gt (fp.neg x0) (fp.neg x11)))
(assert (fp.gt (fp.neg x7) (fp.sub RNE x4 x4)))
(assert (fp.eq (fp.neg x7) (fp.sub RNE x8 x10)))
(assert (fp.eq (fp.neg x10) (fp.div RNE x5 x8)))
(assert (fp.gt (fp.add RNE x4 x2) (fp.div RNE x11 x6)))
(assert (fp.leq (fp.div RNE x8 x2) (fp.mul RNE x7 x1)))
(assert (fp.lt (fp.mul RNE x8 x10) (fp.mul RNE x9 x9)))
(assert (fp.gt (fp.neg x5) (fp.sub RNE x0 x10)))
(assert (fp.leq (fp.mul RNE x1 x8) (fp.neg x1)))
(assert (fp.leq (fp.div RNE x0 x1) (fp.mul RNE x0 x0)))
(assert (fp.gt (fp.add RNE x7 x3) (fp.sub RNE x2 x3)))
(assert (fp.eq (fp.mul RNE x1 x6) (fp.div RNE x4 x4)))
(check-sat)
