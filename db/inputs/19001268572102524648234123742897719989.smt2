(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x12) (fp.sub RNE x5 x8)) (fp.add RNE (fp.sub RNE x2 x1) (fp.neg x4))) (fp.neg (fp.neg (fp.mul RNE x11 x8)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x9) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x7 x7) (fp.div RNE x13 x5))) (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x10) (fp.add RNE x13 x4)) (fp.div RNE (fp.sub RNE x3 x7) (fp.add RNE x7 x10))))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.neg (fp.div RNE x9 x10)) (fp.add RNE (fp.mul RNE x1 x13) (fp.sub RNE x4 x12))) (fp.neg (fp.sub RNE (fp.div RNE x11 x3) (fp.mul RNE x10 x9)))) (fp.neg (fp.neg (fp.add RNE (fp.sub RNE x11 x3) (fp.sub RNE x14 x8))))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.neg (fp.mul RNE x9 x0))) (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x2) (fp.neg x7)) (fp.mul RNE (fp.sub RNE x10 x5) (fp.neg x14)))) (fp.neg (fp.neg (fp.add RNE (fp.neg x6) (fp.add RNE x11 x8))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.sub RNE (fp.mul RNE x0 x6) (fp.mul RNE x2 x12))) (fp.mul RNE (fp.mul RNE (fp.div RNE x8 x11) (fp.sub RNE x0 x3)) (fp.div RNE (fp.neg x14) (fp.div RNE x4 x7)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.mul RNE x12 x14) (fp.sub RNE x12 x14)) (fp.neg (fp.mul RNE x11 x2))) (fp.sub RNE (fp.add RNE (fp.sub RNE x10 x6) (fp.sub RNE x5 x11)) (fp.add RNE (fp.neg x10) (fp.neg x3))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE (fp.add RNE x1 x3) (fp.div RNE x3 x13)) (fp.div RNE (fp.neg x8) (fp.div RNE x11 x1)))) (fp.neg (fp.neg (fp.mul RNE (fp.add RNE x10 x4) (fp.neg x2))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE (fp.add RNE x11 x9) (fp.sub RNE x7 x0)) (fp.add RNE (fp.sub RNE x3 x1) (fp.div RNE x3 x8))) (fp.neg (fp.add RNE (fp.div RNE x12 x8) (fp.neg x3)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x6 x10) (fp.neg x9)) (fp.neg (fp.div RNE x1 x6))) (fp.sub RNE (fp.neg (fp.neg x4)) (fp.sub RNE (fp.div RNE x2 x2) (fp.neg x10))))))
(check-sat)
