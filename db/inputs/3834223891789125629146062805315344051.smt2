(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x8) (fp.sub RNE x1 x7)) (fp.add RNE (fp.neg x11) (fp.sub RNE x7 x5))) (fp.add RNE (fp.sub RNE (fp.mul RNE x4 x14) (fp.neg x11)) (fp.mul RNE (fp.div RNE x16 x11) (fp.div RNE x11 x4)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE x10 x0) (fp.div RNE x5 x1)) (fp.div RNE (fp.sub RNE x5 x5) (fp.mul RNE x16 x3))) (fp.add RNE (fp.mul RNE (fp.add RNE x8 x16) (fp.div RNE x1 x0)) (fp.div RNE (fp.neg x12) (fp.div RNE x2 x4)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x13) (fp.sub RNE x14 x5)) (fp.mul RNE (fp.add RNE x15 x13) (fp.add RNE x14 x10))) (fp.div RNE (fp.add RNE (fp.sub RNE x0 x1) (fp.sub RNE x5 x7)) (fp.mul RNE (fp.add RNE x7 x7) (fp.sub RNE x10 x5)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x3 x6) (fp.mul RNE x7 x8)) (fp.add RNE (fp.sub RNE x7 x8) (fp.sub RNE x6 x0))) (fp.div RNE (fp.neg (fp.neg x1)) (fp.sub RNE (fp.add RNE x16 x5) (fp.div RNE x13 x6)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg x11)) (fp.neg (fp.div RNE x0 x7))) (fp.div RNE (fp.add RNE (fp.mul RNE x7 x14) (fp.mul RNE x11 x1)) (fp.div RNE (fp.neg x10) (fp.sub RNE x7 x3)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x2 x16) (fp.sub RNE x14 x1))) (fp.add RNE (fp.mul RNE (fp.mul RNE x13 x5) (fp.div RNE x1 x16)) (fp.neg (fp.mul RNE x5 x3)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x13 x14)) (fp.sub RNE (fp.add RNE x9 x11) (fp.mul RNE x15 x9))) (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x3) (fp.add RNE x11 x8)) (fp.div RNE (fp.div RNE x9 x0) (fp.sub RNE x7 x2)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x15) (fp.add RNE x1 x11)) (fp.mul RNE (fp.neg x9) (fp.sub RNE x0 x6))) (fp.div RNE (fp.add RNE (fp.div RNE x3 x6) (fp.sub RNE x4 x13)) (fp.add RNE (fp.div RNE x15 x13) (fp.div RNE x6 x4)))))
(check-sat)
