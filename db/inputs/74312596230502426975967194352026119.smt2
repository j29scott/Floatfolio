(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE x16 x17) (fp.mul RNE x17 x4)) (fp.div RNE (fp.mul RNE x8 x18) (fp.sub RNE x10 x18))))
(assert (fp.geq (fp.add RNE (fp.neg x0) (fp.mul RNE x9 x3)) (fp.neg (fp.sub RNE x0 x6))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x12 x5) (fp.mul RNE x20 x2)) (fp.sub RNE (fp.sub RNE x14 x3) (fp.div RNE x5 x16))))
(assert (fp.gt (fp.neg (fp.div RNE x12 x14)) (fp.add RNE (fp.add RNE x1 x19) (fp.sub RNE x9 x17))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x20 x8) (fp.neg x19)) (fp.add RNE (fp.mul RNE x16 x1) (fp.add RNE x13 x11))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x19 x17) (fp.div RNE x12 x6)) (fp.neg (fp.div RNE x11 x15))))
(assert (fp.gt (fp.neg (fp.mul RNE x9 x20)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x18 x14))))
(assert (fp.lt (fp.div RNE (fp.div RNE x14 x7) (fp.div RNE x16 x8)) (fp.neg (fp.mul RNE x15 x9))))
(assert (fp.geq (fp.sub RNE (fp.neg x6) (fp.add RNE x19 x14)) (fp.sub RNE (fp.add RNE x5 x17) (fp.add RNE x15 x5))))
(assert (fp.leq (fp.neg (fp.neg x2)) (fp.neg (fp.mul RNE x2 x13))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x16 x7) (fp.sub RNE x14 x1)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x16 x16))))
(assert (fp.eq (fp.add RNE (fp.div RNE x17 x9) (fp.mul RNE x10 x11)) (fp.div RNE (fp.neg x18) (fp.neg x3))))
(assert (fp.geq (fp.neg (fp.add RNE x17 x13)) (fp.add RNE (fp.div RNE x7 x4) (fp.div RNE x3 x20))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x19 x14) (fp.div RNE x13 x12)) (fp.sub RNE (fp.neg x8) (fp.div RNE x5 x18))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x1)) (fp.add RNE (fp.add RNE x15 x20) (fp.add RNE x11 x2))))
(assert (fp.eq (fp.add RNE (fp.add RNE x4 x6) (fp.neg x13)) (fp.add RNE (fp.div RNE x8 x0) (fp.neg x13))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x17 x0) (fp.add RNE x1 x1)) (fp.mul RNE (fp.add RNE x1 x0) (fp.add RNE x18 x18))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x12 x8) (fp.add RNE x14 x10)) (fp.sub RNE (fp.div RNE x11 x4) (fp.mul RNE x14 x2))))
(check-sat)
