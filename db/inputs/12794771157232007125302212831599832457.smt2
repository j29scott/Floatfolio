(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE x6 x3) (fp.sub RNE x8 x0)) (fp.add RNE (fp.neg x1) (fp.add RNE x0 x3))) (fp.div RNE (fp.sub RNE (fp.sub RNE x7 x0) (fp.div RNE x7 x2)) (fp.mul RNE (fp.div RNE x1 x3) (fp.sub RNE x7 x3)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE x0 x0) (fp.neg x0)) (fp.div RNE (fp.mul RNE x4 x2) (fp.mul RNE x8 x0))) (fp.add RNE (fp.div RNE (fp.neg x0) (fp.neg x6)) (fp.sub RNE (fp.div RNE x0 x4) (fp.add RNE x3 x1)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x8 x0) (fp.mul RNE x1 x5)) (fp.sub RNE (fp.neg x8) (fp.add RNE x7 x8))) (fp.mul RNE (fp.div RNE (fp.div RNE x8 x6) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x5 x6) (fp.add RNE x0 x5)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.sub RNE x1 x3) (fp.div RNE x4 x8)) (fp.div RNE (fp.sub RNE x2 x0) (fp.add RNE x6 x3))) (fp.mul RNE (fp.neg (fp.mul RNE x6 x1)) (fp.neg (fp.mul RNE x1 x7)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.neg x1) (fp.div RNE x8 x0)) (fp.mul RNE (fp.sub RNE x3 x1) (fp.mul RNE x2 x7))) (fp.mul RNE (fp.div RNE (fp.sub RNE x4 x6) (fp.sub RNE x0 x6)) (fp.neg (fp.mul RNE x8 x7)))))
(check-sat)
