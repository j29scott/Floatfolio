(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.mul RNE x13 x17)) (fp.neg (fp.sub RNE x11 x18))))
(assert (fp.gt (fp.add RNE (fp.neg x4) (fp.add RNE x13 x6)) (fp.div RNE (fp.sub RNE x6 x1) (fp.add RNE x3 x8))))
(assert (fp.geq (fp.sub RNE (fp.neg x12) (fp.mul RNE x0 x7)) (fp.div RNE (fp.div RNE x12 x0) (fp.sub RNE x18 x12))))
(assert (fp.geq (fp.neg (fp.sub RNE x2 x15)) (fp.div RNE (fp.add RNE x0 x11) (fp.add RNE x10 x18))))
(assert (fp.gt (fp.neg (fp.div RNE x4 x11)) (fp.sub RNE (fp.add RNE x13 x3) (fp.sub RNE x11 x1))))
(assert (fp.eq (fp.neg (fp.div RNE x5 x18)) (fp.sub RNE (fp.neg x16) (fp.mul RNE x2 x12))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x12 x6) (fp.sub RNE x15 x8)) (fp.neg (fp.div RNE x15 x14))))
(assert (fp.gt (fp.neg (fp.neg x7)) (fp.sub RNE (fp.div RNE x7 x16) (fp.mul RNE x18 x0))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x12 x7) (fp.div RNE x12 x18)) (fp.sub RNE (fp.sub RNE x6 x3) (fp.neg x10))))
(assert (fp.leq (fp.div RNE (fp.neg x18) (fp.add RNE x11 x13)) (fp.neg (fp.mul RNE x8 x12))))
(assert (fp.leq (fp.div RNE (fp.neg x17) (fp.add RNE x1 x1)) (fp.sub RNE (fp.sub RNE x11 x13) (fp.sub RNE x1 x12))))
(assert (fp.leq (fp.neg (fp.add RNE x17 x11)) (fp.mul RNE (fp.add RNE x16 x18) (fp.div RNE x14 x1))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x17 x12) (fp.neg x7)) (fp.mul RNE (fp.mul RNE x6 x17) (fp.mul RNE x18 x6))))
(assert (fp.eq (fp.sub RNE (fp.neg x6) (fp.mul RNE x2 x13)) (fp.add RNE (fp.add RNE x6 x17) (fp.mul RNE x4 x8))))
(assert (fp.gt (fp.div RNE (fp.neg x18) (fp.mul RNE x12 x14)) (fp.add RNE (fp.sub RNE x10 x2) (fp.sub RNE x6 x18))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x14 x0) (fp.mul RNE x9 x12)) (fp.add RNE (fp.neg x2) (fp.add RNE x17 x2))))
(assert (fp.eq (fp.div RNE (fp.add RNE x16 x1) (fp.sub RNE x10 x13)) (fp.add RNE (fp.neg x13) (fp.div RNE x17 x18))))
(assert (fp.eq (fp.add RNE (fp.neg x6) (fp.sub RNE x15 x18)) (fp.sub RNE (fp.add RNE x17 x17) (fp.neg x2))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x4 x2) (fp.add RNE x14 x4)) (fp.add RNE (fp.div RNE x8 x4) (fp.div RNE x6 x3))))
(assert (fp.leq (fp.neg (fp.sub RNE x0 x1)) (fp.add RNE (fp.add RNE x6 x17) (fp.div RNE x16 x8))))
(check-sat)
