(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE (fp.neg x4) (fp.mul RNE x11 x15))) (fp.sub RNE (fp.add RNE (fp.add RNE x13 x8) (fp.div RNE x12 x5)) (fp.sub RNE (fp.neg x18) (fp.add RNE x20 x23)))) (fp.neg (fp.neg (fp.add RNE (fp.add RNE x16 x14) (fp.neg x21))))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x11) (fp.add RNE x24 x17)) (fp.div RNE (fp.sub RNE x24 x15) (fp.mul RNE x4 x12))) (fp.sub RNE (fp.mul RNE (fp.add RNE x21 x17) (fp.neg x0)) (fp.div RNE (fp.div RNE x24 x24) (fp.add RNE x17 x0)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.div RNE x12 x13) (fp.mul RNE x7 x7)) (fp.neg (fp.sub RNE x1 x15))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x14) (fp.add RNE x4 x21)) (fp.add RNE (fp.add RNE x20 x20) (fp.add RNE x4 x2))) (fp.add RNE (fp.neg (fp.neg x24)) (fp.sub RNE (fp.sub RNE x22 x24) (fp.add RNE x1 x2)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.div RNE x4 x17) (fp.sub RNE x20 x10)) (fp.add RNE (fp.sub RNE x2 x17) (fp.neg x0))) (fp.neg (fp.div RNE (fp.add RNE x19 x4) (fp.sub RNE x22 x9))))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg (fp.neg x24)) (fp.div RNE (fp.mul RNE x21 x8) (fp.mul RNE x16 x3))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x18 x20) (fp.div RNE x6 x7)) (fp.mul RNE (fp.add RNE x18 x17) (fp.add RNE x13 x0)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.div RNE x17 x2) (fp.div RNE x11 x23))) (fp.add RNE (fp.div RNE (fp.add RNE x12 x17) (fp.div RNE x15 x9)) (fp.sub RNE (fp.neg x14) (fp.div RNE x12 x5))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x11) (fp.div RNE x20 x13)) (fp.sub RNE (fp.div RNE x10 x2) (fp.neg x4)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.neg x18) (fp.div RNE x18 x13)) (fp.sub RNE (fp.add RNE x19 x7) (fp.mul RNE x19 x9))) (fp.neg (fp.sub RNE (fp.sub RNE x11 x22) (fp.sub RNE x12 x17))))))
(check-sat)
