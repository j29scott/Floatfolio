(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg (fp.add RNE x10 x0))) (fp.div RNE (fp.mul RNE (fp.add RNE x10 x8) (fp.add RNE x13 x6)) (fp.sub RNE (fp.sub RNE x0 x4) (fp.sub RNE x11 x11)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x6) (fp.div RNE x0 x6)) (fp.mul RNE (fp.add RNE x4 x13) (fp.div RNE x12 x6))) (fp.neg (fp.mul RNE (fp.neg x13) (fp.sub RNE x6 x4))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x7 x2) (fp.div RNE x14 x3)) (fp.mul RNE (fp.mul RNE x12 x1) (fp.neg x2))) (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.div RNE x11 x12)) (fp.sub RNE (fp.mul RNE x1 x0) (fp.neg x1)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x9 x10) (fp.sub RNE x6 x3)) (fp.sub RNE (fp.add RNE x4 x9) (fp.sub RNE x6 x4))) (fp.div RNE (fp.add RNE (fp.add RNE x3 x7) (fp.neg x8)) (fp.div RNE (fp.mul RNE x0 x0) (fp.add RNE x9 x6))))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x1 x8)) (fp.mul RNE (fp.div RNE x13 x2) (fp.mul RNE x9 x14))) (fp.div RNE (fp.add RNE (fp.sub RNE x9 x5) (fp.neg x12)) (fp.div RNE (fp.div RNE x10 x4) (fp.neg x12)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x5 x6)) (fp.div RNE (fp.div RNE x3 x7) (fp.mul RNE x1 x5))) (fp.div RNE (fp.add RNE (fp.neg x4) (fp.add RNE x4 x7)) (fp.neg (fp.mul RNE x5 x14))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE (fp.neg x3) (fp.div RNE x1 x6)) (fp.neg (fp.div RNE x14 x6)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE x1 x10) (fp.mul RNE x5 x2)) (fp.add RNE (fp.mul RNE x8 x10) (fp.add RNE x5 x9))) (fp.add RNE (fp.neg (fp.mul RNE x2 x9)) (fp.neg (fp.neg x10))))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x9 x3)) (fp.sub RNE (fp.sub RNE x0 x5) (fp.sub RNE x5 x2)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x3) (fp.neg x5)) (fp.neg (fp.div RNE x13 x10))) (fp.neg (fp.div RNE (fp.add RNE x9 x10) (fp.neg x8))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg (fp.add RNE x4 x0)) (fp.neg (fp.neg x6))) (fp.sub RNE (fp.neg (fp.add RNE x13 x12)) (fp.neg (fp.add RNE x3 x2)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.neg x13) (fp.neg x1)) (fp.neg (fp.sub RNE x5 x0))) (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x3) (fp.sub RNE x4 x13)) (fp.mul RNE (fp.div RNE x5 x5) (fp.add RNE x0 x0))))))
(check-sat)
