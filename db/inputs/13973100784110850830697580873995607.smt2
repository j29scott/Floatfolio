(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE x9 x22)) (fp.div RNE (fp.add RNE x7 x8) (fp.sub RNE x16 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x9) (fp.sub RNE x13 x19)) (fp.div RNE (fp.sub RNE x7 x17) (fp.sub RNE x13 x10)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.sub RNE x4 x7)) (fp.div RNE (fp.add RNE x15 x2) (fp.add RNE x9 x6))) (fp.div RNE (fp.neg (fp.add RNE x20 x14)) (fp.div RNE (fp.add RNE x13 x4) (fp.mul RNE x12 x19)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE x0 x12)) (fp.div RNE (fp.add RNE x9 x2) (fp.add RNE x14 x19))) (fp.div RNE (fp.neg (fp.sub RNE x7 x22)) (fp.sub RNE (fp.neg x17) (fp.div RNE x17 x13)))))
(check-sat)
