(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg x6) (fp.sub RNE x5 x1)))
(assert (fp.eq (fp.mul RNE x24 x11) (fp.div RNE x11 x7)))
(assert (fp.leq (fp.div RNE x9 x10) (fp.mul RNE x6 x20)))
(assert (fp.lt (fp.add RNE x0 x12) (fp.sub RNE x4 x13)))
(assert (fp.leq (fp.sub RNE x8 x23) (fp.neg x7)))
(assert (fp.gt (fp.div RNE x14 x24) (fp.div RNE x15 x5)))
(assert (fp.lt (fp.mul RNE x21 x14) (fp.add RNE x19 x17)))
(assert (fp.leq (fp.add RNE x0 x24) (fp.sub RNE x20 x12)))
(assert (fp.eq (fp.div RNE x7 x1) (fp.div RNE x8 x16)))
(check-sat)
