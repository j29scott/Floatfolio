(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg (fp.add RNE x2 x2)) (fp.div RNE (fp.add RNE x10 x12) (fp.add RNE x14 x7))) (fp.div RNE (fp.neg (fp.sub RNE x16 x2)) (fp.add RNE (fp.add RNE x9 x4) (fp.sub RNE x16 x11)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x3 x3) (fp.neg x3)) (fp.neg (fp.neg x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x15 x14) (fp.sub RNE x8 x12)) (fp.mul RNE (fp.add RNE x10 x18) (fp.mul RNE x4 x2))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg (fp.sub RNE x13 x2)) (fp.add RNE (fp.sub RNE x10 x11) (fp.neg x10))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x12 x1) (fp.add RNE x11 x15)) (fp.div RNE (fp.add RNE x4 x18) (fp.sub RNE x11 x18)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.add RNE x9 x8) (fp.add RNE x11 x3)) (fp.sub RNE (fp.sub RNE x17 x0) (fp.neg x5))))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.sub RNE (fp.div RNE x9 x4) (fp.add RNE x18 x2)) (fp.neg (fp.neg x16)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x14 x7) (fp.div RNE x4 x15)) (fp.neg (fp.div RNE x18 x2))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg (fp.mul RNE x12 x12)) (fp.add RNE (fp.sub RNE x10 x1) (fp.div RNE x5 x9))) (fp.div RNE (fp.sub RNE (fp.div RNE x15 x17) (fp.sub RNE x5 x2)) (fp.neg (fp.neg x17)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.div RNE x17 x6) (fp.sub RNE x8 x7)) (fp.neg (fp.neg x5))))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x1 x0) (fp.div RNE x3 x0))) (fp.div RNE (fp.mul RNE (fp.neg x18) (fp.add RNE x11 x13)) (fp.neg (fp.mul RNE x10 x9)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x0) (fp.add RNE x9 x14)) (fp.add RNE (fp.neg x5) (fp.mul RNE x15 x13))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x2 x7) (fp.sub RNE x16 x13)) (fp.add RNE (fp.neg x13) (fp.mul RNE x15 x11))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x8 x3) (fp.neg x11)) (fp.neg (fp.mul RNE x15 x17))) (fp.div RNE (fp.div RNE (fp.div RNE x4 x2) (fp.sub RNE x11 x3)) (fp.sub RNE (fp.neg x15) (fp.div RNE x7 x10)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x10 x13) (fp.div RNE x17 x13)) (fp.sub RNE (fp.add RNE x5 x16) (fp.mul RNE x0 x12))) (fp.div RNE (fp.div RNE (fp.div RNE x15 x10) (fp.mul RNE x17 x15)) (fp.neg (fp.mul RNE x5 x9))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg (fp.mul RNE x15 x13)) (fp.add RNE (fp.div RNE x1 x15) (fp.add RNE x15 x7))) (fp.neg (fp.div RNE (fp.sub RNE x15 x5) (fp.add RNE x10 x14)))) (fp.add RNE (fp.neg (fp.neg (fp.neg x14))) (fp.mul RNE (fp.neg (fp.mul RNE x6 x3)) (fp.mul RNE (fp.sub RNE x11 x12) (fp.sub RNE x9 x0))))))
(check-sat)
