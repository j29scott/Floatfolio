(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE x2 x1) (fp.add RNE x7 x2)))
(assert (fp.lt (fp.neg x4) (fp.mul RNE x3 x0)))
(assert (fp.lt (fp.div RNE x7 x3) (fp.sub RNE x7 x5)))
(assert (fp.lt (fp.neg x2) (fp.add RNE x2 x6)))
(assert (fp.eq (fp.add RNE x6 x3) (fp.div RNE x5 x1)))
(assert (fp.geq (fp.sub RNE x7 x7) (fp.neg x4)))
(assert (fp.geq (fp.add RNE x4 x4) (fp.add RNE x3 x6)))
(assert (fp.lt (fp.mul RNE x1 x4) (fp.sub RNE x6 x2)))
(assert (fp.leq (fp.sub RNE x5 x7) (fp.neg x5)))
(assert (fp.geq (fp.mul RNE x2 x0) (fp.div RNE x7 x0)))
(assert (fp.lt (fp.neg x3) (fp.sub RNE x6 x2)))
(assert (fp.eq (fp.neg x1) (fp.mul RNE x1 x5)))
(assert (fp.leq (fp.div RNE x1 x6) (fp.sub RNE x6 x7)))
(assert (fp.geq (fp.sub RNE x2 x2) (fp.sub RNE x1 x6)))
(assert (fp.gt (fp.neg x7) (fp.sub RNE x5 x5)))
(assert (fp.eq (fp.mul RNE x7 x6) (fp.mul RNE x5 x3)))
(assert (fp.gt (fp.div RNE x0 x1) (fp.div RNE x6 x6)))
(assert (fp.lt (fp.div RNE x1 x3) (fp.add RNE x1 x2)))
(check-sat)
