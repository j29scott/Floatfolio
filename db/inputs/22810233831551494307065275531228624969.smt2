(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE x12 x11) (fp.neg x9)) (fp.mul RNE (fp.mul RNE x5 x10) (fp.neg x1))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x2) (fp.div RNE x9 x9)) (fp.add RNE (fp.add RNE x11 x3) (fp.neg x7)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x2 x2) (fp.div RNE x5 x12)) (fp.add RNE (fp.div RNE x8 x10) (fp.mul RNE x7 x10))) (fp.add RNE (fp.mul RNE (fp.add RNE x7 x3) (fp.div RNE x8 x2)) (fp.div RNE (fp.neg x12) (fp.div RNE x0 x3)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x10 x3) (fp.neg x5)) (fp.div RNE (fp.neg x4) (fp.sub RNE x1 x4))) (fp.div RNE (fp.sub RNE (fp.add RNE x4 x2) (fp.add RNE x1 x6)) (fp.div RNE (fp.mul RNE x0 x11) (fp.mul RNE x3 x7)))))
(check-sat)
