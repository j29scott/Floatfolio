(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x0 x13) (fp.add RNE x9 x18)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x9 x10))) (fp.add RNE (fp.div RNE (fp.add RNE x18 x10) (fp.mul RNE x17 x16)) (fp.neg (fp.sub RNE x0 x5)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE x17 x10) (fp.div RNE x12 x19)) (fp.mul RNE (fp.mul RNE x15 x17) (fp.neg x9))) (fp.mul RNE (fp.div RNE (fp.add RNE x3 x10) (fp.mul RNE x5 x10)) (fp.sub RNE (fp.add RNE x2 x14) (fp.mul RNE x2 x7)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x19 x2) (fp.add RNE x19 x6)) (fp.div RNE (fp.sub RNE x14 x6) (fp.sub RNE x19 x17))) (fp.mul RNE (fp.sub RNE (fp.add RNE x6 x12) (fp.div RNE x2 x14)) (fp.add RNE (fp.add RNE x7 x0) (fp.neg x1)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x11 x18)) (fp.div RNE (fp.neg x17) (fp.neg x6))) (fp.mul RNE (fp.neg (fp.neg x18)) (fp.mul RNE (fp.div RNE x10 x17) (fp.neg x19)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x7 x19) (fp.mul RNE x0 x1)) (fp.add RNE (fp.sub RNE x14 x6) (fp.add RNE x12 x13))) (fp.add RNE (fp.sub RNE (fp.div RNE x14 x17) (fp.mul RNE x19 x6)) (fp.sub RNE (fp.div RNE x3 x0) (fp.add RNE x15 x0)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE x16 x1)) (fp.neg (fp.add RNE x6 x10))) (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x14) (fp.div RNE x17 x1)) (fp.div RNE (fp.div RNE x17 x3) (fp.neg x0)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x18) (fp.mul RNE x6 x12)) (fp.add RNE (fp.sub RNE x7 x12) (fp.neg x2))) (fp.add RNE (fp.div RNE (fp.div RNE x3 x9) (fp.add RNE x15 x3)) (fp.neg (fp.neg x11)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x19 x13) (fp.sub RNE x14 x17)) (fp.neg (fp.div RNE x14 x11))) (fp.div RNE (fp.neg (fp.add RNE x0 x13)) (fp.add RNE (fp.mul RNE x1 x0) (fp.mul RNE x9 x8)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x16 x16) (fp.sub RNE x10 x14)) (fp.neg (fp.div RNE x6 x10))) (fp.add RNE (fp.div RNE (fp.div RNE x3 x18) (fp.add RNE x19 x4)) (fp.sub RNE (fp.add RNE x5 x16) (fp.div RNE x12 x13)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.div RNE x16 x4) (fp.add RNE x2 x17))) (fp.sub RNE (fp.div RNE (fp.neg x0) (fp.neg x15)) (fp.neg (fp.sub RNE x4 x19)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.sub RNE x11 x17)) (fp.mul RNE (fp.mul RNE x9 x2) (fp.sub RNE x13 x6))) (fp.div RNE (fp.neg (fp.add RNE x2 x2)) (fp.div RNE (fp.div RNE x12 x0) (fp.add RNE x14 x10)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE x18 x16) (fp.div RNE x14 x3)) (fp.mul RNE (fp.mul RNE x1 x11) (fp.div RNE x1 x3))) (fp.mul RNE (fp.mul RNE (fp.add RNE x1 x0) (fp.neg x9)) (fp.div RNE (fp.sub RNE x14 x10) (fp.add RNE x7 x1)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x6 x10)) (fp.div RNE (fp.neg x7) (fp.add RNE x16 x15))) (fp.neg (fp.mul RNE (fp.div RNE x14 x6) (fp.add RNE x5 x9)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x15 x1))) (fp.neg (fp.div RNE (fp.mul RNE x4 x12) (fp.add RNE x4 x15)))))
(check-sat)
