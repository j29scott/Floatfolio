(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg (fp.div RNE x14 x4)) (fp.add RNE (fp.sub RNE x10 x5) (fp.add RNE x4 x3))) (fp.sub RNE (fp.add RNE (fp.mul RNE x10 x12) (fp.add RNE x3 x8)) (fp.div RNE (fp.add RNE x2 x5) (fp.sub RNE x7 x10)))) (fp.neg (fp.neg (fp.mul RNE (fp.add RNE x4 x1) (fp.sub RNE x9 x0))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x7) (fp.mul RNE x0 x9)) (fp.div RNE (fp.div RNE x9 x13) (fp.mul RNE x2 x5))) (fp.neg (fp.neg (fp.neg x12)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.div RNE x11 x5) (fp.neg x13)) (fp.div RNE (fp.sub RNE x4 x12) (fp.div RNE x13 x13))) (fp.add RNE (fp.add RNE (fp.sub RNE x13 x12) (fp.add RNE x2 x1)) (fp.mul RNE (fp.neg x6) (fp.div RNE x4 x5))))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg (fp.mul RNE x0 x13)) (fp.add RNE (fp.mul RNE x1 x14) (fp.add RNE x0 x2))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x7) (fp.mul RNE x14 x11)) (fp.sub RNE (fp.mul RNE x9 x7) (fp.neg x6)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x11 x12) (fp.div RNE x13 x3)) (fp.add RNE (fp.sub RNE x6 x2) (fp.neg x13))) (fp.div RNE (fp.sub RNE (fp.mul RNE x3 x1) (fp.add RNE x2 x7)) (fp.neg (fp.mul RNE x3 x11))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.add RNE (fp.mul RNE x13 x9) (fp.neg x7)) (fp.neg (fp.add RNE x3 x5))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x3 x14) (fp.mul RNE x6 x12)) (fp.sub RNE (fp.sub RNE x5 x2) (fp.sub RNE x10 x10)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.mul RNE x3 x10)) (fp.add RNE (fp.sub RNE x3 x8) (fp.sub RNE x6 x1))) (fp.sub RNE (fp.div RNE (fp.sub RNE x3 x1) (fp.div RNE x5 x9)) (fp.mul RNE (fp.add RNE x6 x3) (fp.add RNE x2 x14))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg (fp.mul RNE x8 x14)) (fp.mul RNE (fp.mul RNE x0 x6) (fp.sub RNE x14 x8)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.mul RNE x5 x2)) (fp.add RNE (fp.neg x1) (fp.add RNE x2 x13))) (fp.sub RNE (fp.mul RNE (fp.add RNE x4 x7) (fp.mul RNE x14 x3)) (fp.mul RNE (fp.div RNE x1 x3) (fp.div RNE x14 x14))))))
(check-sat)
