(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.add RNE x11 x12) (fp.div RNE x4 x3)) (fp.mul RNE (fp.neg x2) (fp.neg x0))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x2 x9) (fp.add RNE x10 x3)) (fp.sub RNE (fp.sub RNE x11 x8) (fp.div RNE x12 x1))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x13 x8) (fp.sub RNE x8 x13)) (fp.div RNE (fp.sub RNE x11 x1) (fp.mul RNE x6 x12))))
(assert (fp.gt (fp.add RNE (fp.div RNE x6 x14) (fp.mul RNE x4 x5)) (fp.mul RNE (fp.div RNE x9 x3) (fp.sub RNE x6 x10))))
(assert (fp.geq (fp.sub RNE (fp.neg x3) (fp.add RNE x14 x2)) (fp.sub RNE (fp.add RNE x4 x14) (fp.div RNE x0 x14))))
(assert (fp.geq (fp.neg (fp.add RNE x2 x14)) (fp.mul RNE (fp.sub RNE x14 x7) (fp.mul RNE x3 x4))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x4 x3) (fp.sub RNE x14 x2)) (fp.add RNE (fp.neg x11) (fp.sub RNE x7 x14))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x14 x12) (fp.neg x8)) (fp.add RNE (fp.add RNE x5 x10) (fp.neg x9))))
(check-sat)
