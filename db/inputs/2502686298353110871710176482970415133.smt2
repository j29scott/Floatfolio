(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x8 x11) (fp.neg x0)) (fp.sub RNE (fp.div RNE x8 x12) (fp.sub RNE x5 x13))) (fp.add RNE (fp.add RNE (fp.mul RNE x11 x12) (fp.add RNE x1 x6)) (fp.add RNE (fp.neg x6) (fp.neg x7)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.div RNE x1 x4) (fp.mul RNE x1 x0)) (fp.mul RNE (fp.sub RNE x5 x2) (fp.neg x13))) (fp.add RNE (fp.add RNE (fp.mul RNE x10 x13) (fp.add RNE x2 x5)) (fp.neg (fp.div RNE x0 x7)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x8) (fp.mul RNE x12 x12)) (fp.add RNE (fp.sub RNE x9 x9) (fp.sub RNE x10 x11))) (fp.mul RNE (fp.mul RNE (fp.div RNE x4 x3) (fp.neg x3)) (fp.neg (fp.div RNE x3 x9)))))
(check-sat)
