(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x8 x15)) (fp.add RNE (fp.mul RNE x14 x11) (fp.mul RNE x15 x15))) (fp.neg (fp.div RNE (fp.add RNE x6 x0) (fp.mul RNE x13 x3)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.sub RNE x7 x9) (fp.sub RNE x1 x12)) (fp.sub RNE (fp.div RNE x7 x1) (fp.add RNE x6 x4))) (fp.neg (fp.add RNE (fp.neg x10) (fp.div RNE x12 x3))))))
(check-sat)
