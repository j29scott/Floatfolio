(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x17) (fp.sub RNE x7 x5)) (fp.add RNE (fp.div RNE x18 x16) (fp.add RNE x19 x2))) (fp.sub RNE (fp.neg (fp.sub RNE x4 x17)) (fp.add RNE (fp.neg x17) (fp.div RNE x7 x9)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x12) (fp.div RNE x3 x17))) (fp.neg (fp.neg (fp.mul RNE x0 x19)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.neg x1) (fp.add RNE x5 x19)) (fp.mul RNE (fp.add RNE x5 x15) (fp.add RNE x1 x15))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.mul RNE x1 x1)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x6 x1) (fp.sub RNE x1 x15))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x17 x10) (fp.sub RNE x18 x10)) (fp.add RNE (fp.mul RNE x4 x8) (fp.sub RNE x16 x14)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x19 x0) (fp.sub RNE x22 x1)) (fp.neg (fp.add RNE x3 x17))) (fp.mul RNE (fp.neg (fp.neg x7)) (fp.neg (fp.mul RNE x15 x14)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x1 x17)) (fp.add RNE (fp.add RNE x8 x15) (fp.mul RNE x16 x4))) (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x0 x9)) (fp.add RNE (fp.sub RNE x9 x1) (fp.div RNE x17 x23)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE x9 x3) (fp.add RNE x7 x10)) (fp.neg (fp.mul RNE x21 x12))) (fp.div RNE (fp.div RNE (fp.neg x4) (fp.sub RNE x4 x12)) (fp.neg (fp.div RNE x10 x12)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg x4) (fp.neg x10)) (fp.add RNE (fp.sub RNE x13 x21) (fp.mul RNE x18 x12))) (fp.neg (fp.sub RNE (fp.neg x6) (fp.div RNE x5 x16)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.div RNE x15 x0) (fp.sub RNE x21 x20))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x1) (fp.div RNE x17 x22)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x23 x10)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x17 x3) (fp.neg x5)) (fp.add RNE (fp.add RNE x14 x13) (fp.neg x3))) (fp.mul RNE (fp.neg (fp.add RNE x13 x21)) (fp.neg (fp.div RNE x7 x11)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x13 x3) (fp.sub RNE x2 x3)) (fp.mul RNE (fp.mul RNE x19 x3) (fp.add RNE x16 x14))) (fp.div RNE (fp.add RNE (fp.neg x15) (fp.neg x8)) (fp.div RNE (fp.sub RNE x23 x20) (fp.sub RNE x23 x0)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE x16 x10)) (fp.mul RNE (fp.mul RNE x6 x17) (fp.add RNE x10 x8))) (fp.neg (fp.add RNE (fp.add RNE x6 x20) (fp.neg x17)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x0 x17) (fp.neg x11))) (fp.sub RNE (fp.sub RNE (fp.div RNE x14 x2) (fp.div RNE x11 x9)) (fp.add RNE (fp.sub RNE x15 x13) (fp.neg x4)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.mul RNE x8 x16) (fp.add RNE x0 x3)) (fp.div RNE (fp.neg x0) (fp.add RNE x1 x12))) (fp.neg (fp.sub RNE (fp.mul RNE x5 x17) (fp.div RNE x6 x13)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.div RNE x22 x15) (fp.mul RNE x11 x8))) (fp.neg (fp.add RNE (fp.div RNE x14 x12) (fp.add RNE x12 x7)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE x23 x3) (fp.mul RNE x7 x7)) (fp.mul RNE (fp.div RNE x17 x10) (fp.neg x6))) (fp.div RNE (fp.sub RNE (fp.add RNE x6 x12) (fp.add RNE x9 x0)) (fp.mul RNE (fp.sub RNE x12 x12) (fp.div RNE x15 x10)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x6 x15) (fp.sub RNE x12 x12)) (fp.sub RNE (fp.neg x9) (fp.div RNE x5 x19))) (fp.sub RNE (fp.neg (fp.add RNE x1 x23)) (fp.mul RNE (fp.div RNE x16 x7) (fp.add RNE x10 x18)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg x13) (fp.div RNE x0 x19)) (fp.neg (fp.add RNE x19 x7))) (fp.add RNE (fp.div RNE (fp.mul RNE x15 x11) (fp.div RNE x12 x22)) (fp.neg (fp.add RNE x6 x4)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x16 x22) (fp.div RNE x11 x3)) (fp.sub RNE (fp.div RNE x3 x17) (fp.div RNE x3 x21))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x12 x7) (fp.div RNE x20 x12)) (fp.div RNE (fp.div RNE x2 x7) (fp.add RNE x2 x7)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.add RNE x22 x17)) (fp.div RNE (fp.mul RNE x19 x17) (fp.neg x0))) (fp.mul RNE (fp.sub RNE (fp.neg x23) (fp.sub RNE x20 x19)) (fp.neg (fp.mul RNE x19 x15)))))
(check-sat)
