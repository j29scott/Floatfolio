(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x8 x4) (fp.mul RNE x2 x9)) (fp.mul RNE (fp.sub RNE x1 x4) (fp.mul RNE x10 x6))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x1 x6) (fp.add RNE x1 x5)) (fp.sub RNE (fp.mul RNE x4 x10) (fp.mul RNE x10 x9))))
(assert (fp.eq (fp.div RNE (fp.add RNE x11 x4) (fp.mul RNE x2 x2)) (fp.mul RNE (fp.neg x2) (fp.add RNE x0 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x11 x0)) (fp.div RNE (fp.add RNE x1 x5) (fp.sub RNE x2 x7))))
(assert (fp.gt (fp.add RNE (fp.div RNE x11 x0) (fp.add RNE x8 x4)) (fp.sub RNE (fp.neg x5) (fp.div RNE x3 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x3 x9)) (fp.div RNE (fp.mul RNE x8 x6) (fp.div RNE x2 x2))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x0 x6) (fp.add RNE x8 x9)) (fp.add RNE (fp.sub RNE x6 x6) (fp.sub RNE x6 x7))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x4 x10) (fp.add RNE x4 x6)) (fp.add RNE (fp.mul RNE x9 x11) (fp.sub RNE x2 x3))))
(assert (fp.leq (fp.div RNE (fp.add RNE x4 x8) (fp.div RNE x6 x5)) (fp.mul RNE (fp.add RNE x6 x9) (fp.sub RNE x9 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x10 x3) (fp.mul RNE x8 x10)) (fp.sub RNE (fp.neg x8) (fp.neg x0))))
(assert (fp.geq (fp.div RNE (fp.neg x5) (fp.add RNE x3 x11)) (fp.add RNE (fp.neg x9) (fp.mul RNE x7 x6))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x5 x4) (fp.sub RNE x7 x2)) (fp.sub RNE (fp.div RNE x0 x9) (fp.add RNE x6 x7))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x4 x4) (fp.mul RNE x9 x4)) (fp.sub RNE (fp.add RNE x8 x10) (fp.neg x2))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x1 x4) (fp.div RNE x2 x1)) (fp.mul RNE (fp.div RNE x7 x11) (fp.add RNE x8 x4))))
(assert (fp.lt (fp.sub RNE (fp.neg x9) (fp.add RNE x6 x10)) (fp.sub RNE (fp.add RNE x6 x6) (fp.add RNE x7 x4))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x9 x1) (fp.mul RNE x7 x11)) (fp.div RNE (fp.sub RNE x7 x9) (fp.div RNE x4 x5))))
(assert (fp.geq (fp.div RNE (fp.neg x8) (fp.mul RNE x2 x9)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x3 x2))))
(assert (fp.gt (fp.add RNE (fp.div RNE x7 x7) (fp.neg x2)) (fp.add RNE (fp.mul RNE x5 x10) (fp.div RNE x10 x0))))
(assert (fp.leq (fp.div RNE (fp.div RNE x0 x2) (fp.div RNE x3 x8)) (fp.add RNE (fp.mul RNE x8 x9) (fp.sub RNE x1 x8))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x6 x4) (fp.add RNE x9 x1)) (fp.div RNE (fp.neg x8) (fp.mul RNE x7 x5))))
(check-sat)
