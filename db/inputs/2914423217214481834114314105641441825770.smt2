(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg x8)) (fp.mul RNE (fp.div RNE x11 x15) (fp.div RNE x13 x18))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x6 x3) (fp.add RNE x13 x14)) (fp.sub RNE (fp.add RNE x10 x2) (fp.div RNE x16 x7))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x9 x17) (fp.add RNE x16 x7)) (fp.mul RNE (fp.div RNE x19 x14) (fp.div RNE x19 x16))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x9 x15) (fp.div RNE x7 x7)) (fp.mul RNE (fp.mul RNE x13 x0) (fp.add RNE x15 x4))))
(assert (fp.eq (fp.add RNE (fp.neg x5) (fp.neg x19)) (fp.add RNE (fp.mul RNE x0 x12) (fp.mul RNE x7 x3))))
(assert (fp.geq (fp.neg (fp.neg x6)) (fp.add RNE (fp.sub RNE x2 x3) (fp.sub RNE x17 x12))))
(assert (fp.gt (fp.neg (fp.add RNE x15 x19)) (fp.mul RNE (fp.sub RNE x10 x6) (fp.add RNE x18 x18))))
(assert (fp.eq (fp.div RNE (fp.add RNE x8 x13) (fp.neg x15)) (fp.add RNE (fp.sub RNE x12 x1) (fp.mul RNE x1 x15))))
(assert (fp.eq (fp.div RNE (fp.add RNE x0 x0) (fp.mul RNE x4 x17)) (fp.mul RNE (fp.add RNE x12 x11) (fp.add RNE x18 x7))))
(assert (fp.geq (fp.sub RNE (fp.neg x15) (fp.neg x19)) (fp.mul RNE (fp.neg x10) (fp.mul RNE x4 x5))))
(check-sat)
