(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE x5 x1) (fp.add RNE x2 x3)) (fp.div RNE (fp.div RNE x0 x1) (fp.add RNE x3 x6))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x0 x0) (fp.add RNE x4 x0)) (fp.sub RNE (fp.neg x4) (fp.div RNE x7 x7))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x4 x7) (fp.div RNE x1 x1)) (fp.div RNE (fp.add RNE x7 x8) (fp.add RNE x3 x0))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x0 x1) (fp.div RNE x5 x8)) (fp.mul RNE (fp.div RNE x1 x6) (fp.mul RNE x4 x1))))
(assert (fp.geq (fp.div RNE (fp.add RNE x2 x1) (fp.mul RNE x0 x8)) (fp.neg (fp.neg x1))))
(assert (fp.lt (fp.neg (fp.neg x7)) (fp.neg (fp.sub RNE x1 x6))))
(check-sat)
