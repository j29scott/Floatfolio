(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x7 x1) (fp.neg x18)) (fp.sub RNE (fp.neg x11) (fp.mul RNE x4 x24))) (fp.add RNE (fp.add RNE (fp.add RNE x27 x2) (fp.add RNE x2 x20)) (fp.mul RNE (fp.mul RNE x7 x2) (fp.mul RNE x5 x8)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE x15 x1) (fp.sub RNE x21 x21)) (fp.mul RNE (fp.div RNE x9 x11) (fp.neg x5))) (fp.div RNE (fp.sub RNE (fp.mul RNE x16 x5) (fp.div RNE x8 x17)) (fp.div RNE (fp.neg x5) (fp.mul RNE x3 x27)))))
(check-sat)
