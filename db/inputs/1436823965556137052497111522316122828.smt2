(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x7 x18) (fp.add RNE x3 x17)) (fp.sub RNE (fp.mul RNE x0 x19) (fp.div RNE x8 x3))))
(assert (fp.geq (fp.sub RNE (fp.neg x6) (fp.mul RNE x13 x13)) (fp.sub RNE (fp.add RNE x10 x0) (fp.neg x24))))
(assert (fp.eq (fp.neg (fp.sub RNE x16 x19)) (fp.sub RNE (fp.div RNE x19 x5) (fp.add RNE x1 x22))))
(assert (fp.leq (fp.mul RNE (fp.neg x7) (fp.add RNE x1 x4)) (fp.neg (fp.mul RNE x15 x17))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x2 x24) (fp.sub RNE x15 x10)) (fp.sub RNE (fp.add RNE x23 x11) (fp.div RNE x14 x22))))
(check-sat)
