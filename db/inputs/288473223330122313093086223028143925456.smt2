(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x1 x1) (fp.sub RNE x7 x5)))
(assert (fp.geq (fp.add RNE x10 x6) (fp.neg x6)))
(assert (fp.lt (fp.neg x4) (fp.sub RNE x6 x9)))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x8 x6)))
(assert (fp.geq (fp.neg x5) (fp.neg x3)))
(assert (fp.gt (fp.sub RNE x11 x5) (fp.mul RNE x0 x7)))
(assert (fp.gt (fp.neg x0) (fp.add RNE x11 x2)))
(assert (fp.lt (fp.div RNE x7 x6) (fp.add RNE x10 x10)))
(assert (fp.leq (fp.sub RNE x5 x11) (fp.sub RNE x5 x2)))
(assert (fp.lt (fp.mul RNE x9 x8) (fp.div RNE x1 x2)))
(assert (fp.eq (fp.neg x4) (fp.mul RNE x6 x3)))
(check-sat)
