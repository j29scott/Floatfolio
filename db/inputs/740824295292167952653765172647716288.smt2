(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE (fp.div RNE x10 x10) (fp.div RNE x7 x7))) (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x3) (fp.sub RNE x6 x4)) (fp.sub RNE (fp.sub RNE x12 x4) (fp.sub RNE x0 x7)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE x5 x11)) (fp.add RNE (fp.mul RNE x2 x5) (fp.mul RNE x10 x8))) (fp.sub RNE (fp.sub RNE (fp.div RNE x12 x1) (fp.div RNE x2 x6)) (fp.add RNE (fp.div RNE x5 x12) (fp.div RNE x10 x9)))))
(check-sat)
