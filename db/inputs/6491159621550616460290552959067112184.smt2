(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.mul RNE x13 x6) (fp.sub RNE x5 x2)) (fp.neg (fp.sub RNE x15 x2))))
(assert (fp.lt (fp.add RNE (fp.neg x5) (fp.mul RNE x6 x2)) (fp.mul RNE (fp.mul RNE x11 x7) (fp.add RNE x2 x10))))
(assert (fp.leq (fp.neg (fp.sub RNE x13 x0)) (fp.add RNE (fp.add RNE x8 x16) (fp.sub RNE x2 x4))))
(assert (fp.geq (fp.neg (fp.sub RNE x5 x15)) (fp.div RNE (fp.div RNE x2 x16) (fp.div RNE x15 x9))))
(assert (fp.lt (fp.neg (fp.sub RNE x7 x16)) (fp.neg (fp.div RNE x11 x9))))
(assert (fp.eq (fp.div RNE (fp.div RNE x10 x17) (fp.neg x15)) (fp.neg (fp.neg x3))))
(check-sat)
