(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x15 x11) (fp.mul RNE x0 x1)) (fp.div RNE (fp.sub RNE x12 x9) (fp.sub RNE x9 x6))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x11 x10) (fp.mul RNE x11 x15)) (fp.sub RNE (fp.add RNE x2 x6) (fp.mul RNE x15 x11))))
(assert (fp.gt (fp.sub RNE (fp.neg x15) (fp.mul RNE x10 x13)) (fp.div RNE (fp.add RNE x1 x7) (fp.mul RNE x15 x15))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x7 x2) (fp.add RNE x13 x12)) (fp.mul RNE (fp.sub RNE x10 x5) (fp.add RNE x13 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x13 x6) (fp.sub RNE x8 x9)) (fp.sub RNE (fp.add RNE x15 x12) (fp.add RNE x12 x10))))
(assert (fp.gt (fp.sub RNE (fp.neg x12) (fp.mul RNE x5 x2)) (fp.mul RNE (fp.mul RNE x11 x0) (fp.neg x11))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x12 x1) (fp.sub RNE x15 x2)) (fp.add RNE (fp.add RNE x0 x9) (fp.mul RNE x8 x4))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x14 x0) (fp.div RNE x8 x5)) (fp.add RNE (fp.add RNE x10 x16) (fp.add RNE x4 x15))))
(assert (fp.gt (fp.neg (fp.neg x10)) (fp.sub RNE (fp.mul RNE x15 x3) (fp.mul RNE x2 x12))))
(assert (fp.eq (fp.neg (fp.mul RNE x0 x6)) (fp.add RNE (fp.div RNE x10 x9) (fp.add RNE x0 x4))))
(assert (fp.lt (fp.div RNE (fp.add RNE x0 x11) (fp.mul RNE x8 x15)) (fp.neg (fp.sub RNE x15 x16))))
(assert (fp.eq (fp.sub RNE (fp.neg x14) (fp.div RNE x2 x6)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x0 x13))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x11 x6) (fp.mul RNE x14 x9)) (fp.sub RNE (fp.div RNE x16 x9) (fp.div RNE x13 x2))))
(assert (fp.geq (fp.neg (fp.neg x13)) (fp.div RNE (fp.add RNE x2 x10) (fp.mul RNE x12 x16))))
(assert (fp.geq (fp.div RNE (fp.neg x12) (fp.neg x2)) (fp.add RNE (fp.mul RNE x5 x13) (fp.add RNE x9 x7))))
(assert (fp.geq (fp.mul RNE (fp.neg x12) (fp.div RNE x11 x15)) (fp.neg (fp.div RNE x9 x7))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x1 x11) (fp.add RNE x7 x9)) (fp.sub RNE (fp.mul RNE x7 x1) (fp.add RNE x13 x15))))
(assert (fp.lt (fp.div RNE (fp.add RNE x9 x16) (fp.sub RNE x0 x2)) (fp.div RNE (fp.neg x6) (fp.neg x3))))
(check-sat)
