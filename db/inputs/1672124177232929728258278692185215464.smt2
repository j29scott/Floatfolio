(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.neg x8) (fp.add RNE x8 x1)) (fp.div RNE (fp.div RNE x0 x2) (fp.mul RNE x4 x10))))
(assert (fp.gt (fp.neg (fp.neg x11)) (fp.mul RNE (fp.div RNE x6 x13) (fp.neg x0))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x2 x13) (fp.sub RNE x1 x14)) (fp.neg (fp.sub RNE x14 x4))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x0 x2) (fp.div RNE x3 x11)) (fp.add RNE (fp.div RNE x1 x5) (fp.div RNE x3 x13))))
(assert (fp.lt (fp.neg (fp.mul RNE x12 x12)) (fp.sub RNE (fp.sub RNE x1 x2) (fp.neg x0))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x4 x2) (fp.sub RNE x2 x8)) (fp.div RNE (fp.mul RNE x7 x7) (fp.div RNE x1 x13))))
(assert (fp.geq (fp.add RNE (fp.add RNE x6 x10) (fp.add RNE x4 x5)) (fp.div RNE (fp.div RNE x1 x7) (fp.add RNE x13 x5))))
(assert (fp.gt (fp.add RNE (fp.div RNE x3 x11) (fp.div RNE x11 x3)) (fp.mul RNE (fp.add RNE x9 x13) (fp.mul RNE x12 x12))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x2 x7) (fp.div RNE x3 x10)) (fp.mul RNE (fp.mul RNE x3 x11) (fp.sub RNE x4 x2))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x12 x11) (fp.neg x7)) (fp.neg (fp.neg x10))))
(assert (fp.geq (fp.div RNE (fp.div RNE x0 x1) (fp.mul RNE x2 x14)) (fp.add RNE (fp.neg x9) (fp.neg x2))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x8 x0) (fp.div RNE x7 x7)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x4 x8))))
(assert (fp.lt (fp.neg (fp.add RNE x12 x10)) (fp.div RNE (fp.div RNE x0 x13) (fp.add RNE x11 x2))))
(assert (fp.lt (fp.div RNE (fp.add RNE x7 x13) (fp.div RNE x4 x13)) (fp.div RNE (fp.add RNE x11 x3) (fp.add RNE x11 x3))))
(assert (fp.gt (fp.sub RNE (fp.neg x2) (fp.div RNE x4 x11)) (fp.div RNE (fp.div RNE x1 x14) (fp.mul RNE x2 x2))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x3 x9) (fp.add RNE x13 x11)) (fp.div RNE (fp.add RNE x4 x0) (fp.sub RNE x2 x9))))
(assert (fp.leq (fp.neg (fp.mul RNE x2 x3)) (fp.sub RNE (fp.mul RNE x10 x3) (fp.sub RNE x11 x0))))
(assert (fp.geq (fp.neg (fp.neg x13)) (fp.neg (fp.sub RNE x1 x9))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x3 x14) (fp.neg x7)) (fp.mul RNE (fp.neg x10) (fp.add RNE x3 x13))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x9 x9) (fp.mul RNE x11 x14)) (fp.add RNE (fp.sub RNE x2 x0) (fp.sub RNE x5 x5))))
(check-sat)
