(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.div RNE x19 x11) (fp.add RNE x3 x12)) (fp.mul RNE (fp.sub RNE x7 x7) (fp.add RNE x14 x8))))
(assert (fp.geq (fp.neg (fp.add RNE x0 x14)) (fp.neg (fp.sub RNE x18 x5))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x0 x14) (fp.mul RNE x8 x19)) (fp.div RNE (fp.mul RNE x6 x19) (fp.div RNE x16 x12))))
(assert (fp.eq (fp.div RNE (fp.neg x16) (fp.div RNE x4 x1)) (fp.neg (fp.mul RNE x17 x8))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x6 x14) (fp.mul RNE x10 x12)) (fp.sub RNE (fp.add RNE x1 x0) (fp.sub RNE x3 x7))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x3 x0) (fp.mul RNE x10 x11)) (fp.mul RNE (fp.sub RNE x0 x8) (fp.sub RNE x8 x17))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x15 x5) (fp.mul RNE x4 x15)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x6 x15) (fp.neg x8)) (fp.div RNE (fp.div RNE x8 x2) (fp.add RNE x1 x12))))
(check-sat)
