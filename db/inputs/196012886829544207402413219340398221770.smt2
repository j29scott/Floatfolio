(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.div RNE x5 x12)) (fp.sub RNE (fp.add RNE x11 x5) (fp.sub RNE x1 x8))) (fp.sub RNE (fp.sub RNE (fp.add RNE x13 x9) (fp.sub RNE x8 x16)) (fp.mul RNE (fp.sub RNE x0 x4) (fp.neg x18)))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE x6 x8))) (fp.mul RNE (fp.div RNE (fp.sub RNE x8 x11) (fp.mul RNE x8 x7)) (fp.sub RNE (fp.sub RNE x15 x1) (fp.add RNE x0 x15)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.div RNE x14 x2) (fp.add RNE x13 x7)) (fp.mul RNE (fp.neg x11) (fp.div RNE x4 x18))) (fp.neg (fp.neg (fp.mul RNE x11 x0)))))
(check-sat)
