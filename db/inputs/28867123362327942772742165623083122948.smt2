(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x8 x11) (fp.neg x9)))
(assert (fp.lt (fp.mul RNE x5 x0) (fp.neg x4)))
(assert (fp.leq (fp.neg x10) (fp.add RNE x3 x7)))
(assert (fp.eq (fp.sub RNE x7 x3) (fp.neg x2)))
(assert (fp.gt (fp.sub RNE x2 x8) (fp.add RNE x1 x11)))
(assert (fp.lt (fp.add RNE x9 x3) (fp.add RNE x3 x5)))
(assert (fp.gt (fp.div RNE x2 x2) (fp.neg x2)))
(assert (fp.gt (fp.neg x3) (fp.div RNE x11 x2)))
(assert (fp.geq (fp.sub RNE x0 x5) (fp.sub RNE x10 x0)))
(assert (fp.eq (fp.mul RNE x2 x3) (fp.add RNE x6 x4)))
(assert (fp.leq (fp.sub RNE x10 x9) (fp.mul RNE x2 x3)))
(assert (fp.lt (fp.neg x0) (fp.sub RNE x0 x6)))
(assert (fp.lt (fp.sub RNE x8 x5) (fp.neg x7)))
(assert (fp.lt (fp.add RNE x2 x2) (fp.div RNE x10 x3)))
(assert (fp.leq (fp.sub RNE x5 x6) (fp.neg x8)))
(assert (fp.lt (fp.add RNE x7 x7) (fp.neg x4)))
(assert (fp.leq (fp.mul RNE x0 x11) (fp.add RNE x0 x8)))
(assert (fp.eq (fp.div RNE x0 x7) (fp.add RNE x7 x3)))
(check-sat)
