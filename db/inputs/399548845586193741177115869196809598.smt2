(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.div RNE x22 x20) (fp.div RNE x15 x16)) (fp.mul RNE (fp.sub RNE x2 x21) (fp.sub RNE x10 x12))) (fp.add RNE (fp.div RNE (fp.add RNE x2 x4) (fp.mul RNE x6 x13)) (fp.neg (fp.neg x11)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.neg x5) (fp.sub RNE x22 x1))) (fp.neg (fp.mul RNE (fp.sub RNE x9 x12) (fp.add RNE x5 x1))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x24 x9) (fp.add RNE x24 x20)) (fp.sub RNE (fp.neg x4) (fp.div RNE x18 x21))) (fp.sub RNE (fp.div RNE (fp.sub RNE x2 x10) (fp.div RNE x15 x13)) (fp.add RNE (fp.mul RNE x2 x5) (fp.add RNE x6 x9)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.mul RNE x14 x24)) (fp.sub RNE (fp.neg x11) (fp.neg x10))) (fp.mul RNE (fp.add RNE (fp.add RNE x12 x7) (fp.sub RNE x22 x21)) (fp.div RNE (fp.add RNE x12 x24) (fp.neg x17))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x4) (fp.div RNE x21 x16)) (fp.sub RNE (fp.add RNE x8 x3) (fp.neg x22))) (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x22) (fp.div RNE x2 x7)) (fp.sub RNE (fp.sub RNE x0 x15) (fp.div RNE x22 x7)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.div RNE x19 x6) (fp.neg x7)) (fp.neg (fp.sub RNE x12 x9))) (fp.neg (fp.sub RNE (fp.add RNE x23 x5) (fp.div RNE x16 x20))))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x10 x18) (fp.mul RNE x6 x14)) (fp.div RNE (fp.sub RNE x17 x8) (fp.add RNE x22 x5))) (fp.div RNE (fp.mul RNE (fp.div RNE x6 x10) (fp.add RNE x5 x7)) (fp.sub RNE (fp.add RNE x18 x14) (fp.add RNE x3 x12)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.neg x22) (fp.div RNE x10 x11)) (fp.mul RNE (fp.add RNE x21 x1) (fp.add RNE x22 x7))) (fp.add RNE (fp.add RNE (fp.mul RNE x17 x24) (fp.neg x12)) (fp.add RNE (fp.sub RNE x12 x7) (fp.sub RNE x2 x11))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x10 x4) (fp.mul RNE x16 x14))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x17) (fp.add RNE x20 x9)) (fp.sub RNE (fp.mul RNE x19 x13) (fp.mul RNE x14 x9)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x24 x18) (fp.sub RNE x13 x11)) (fp.sub RNE (fp.neg x22) (fp.neg x24))) (fp.neg (fp.neg (fp.div RNE x20 x23))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg (fp.add RNE x7 x10)) (fp.mul RNE (fp.sub RNE x21 x5) (fp.add RNE x22 x21))) (fp.div RNE (fp.div RNE (fp.sub RNE x21 x9) (fp.sub RNE x23 x21)) (fp.mul RNE (fp.mul RNE x10 x24) (fp.sub RNE x12 x23)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.neg x3) (fp.neg x1)) (fp.neg (fp.add RNE x17 x8))) (fp.div RNE (fp.neg (fp.sub RNE x14 x12)) (fp.div RNE (fp.mul RNE x24 x7) (fp.div RNE x13 x6))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x8 x21) (fp.add RNE x7 x3)) (fp.add RNE (fp.mul RNE x4 x17) (fp.sub RNE x13 x5))) (fp.mul RNE (fp.div RNE (fp.neg x17) (fp.div RNE x5 x15)) (fp.add RNE (fp.add RNE x3 x11) (fp.sub RNE x12 x8)))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x18 x21) (fp.sub RNE x14 x6)) (fp.div RNE (fp.neg x19) (fp.sub RNE x13 x1))) (fp.add RNE (fp.div RNE (fp.mul RNE x16 x19) (fp.neg x15)) (fp.sub RNE (fp.sub RNE x14 x22) (fp.sub RNE x1 x5))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg (fp.add RNE x6 x2)) (fp.neg (fp.mul RNE x4 x13))) (fp.sub RNE (fp.mul RNE (fp.add RNE x2 x9) (fp.div RNE x21 x15)) (fp.div RNE (fp.neg x8) (fp.sub RNE x24 x17)))) (fp.neg (fp.div RNE (fp.add RNE (fp.mul RNE x22 x15) (fp.sub RNE x9 x10)) (fp.add RNE (fp.sub RNE x3 x23) (fp.sub RNE x16 x14))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE (fp.sub RNE x24 x12) (fp.neg x17)) (fp.neg (fp.add RNE x4 x20)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.neg x22) (fp.neg x24)) (fp.add RNE (fp.sub RNE x0 x9) (fp.neg x10))) (fp.add RNE (fp.div RNE (fp.add RNE x12 x13) (fp.mul RNE x4 x22)) (fp.mul RNE (fp.mul RNE x13 x0) (fp.div RNE x7 x20))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE (fp.div RNE x5 x20) (fp.sub RNE x21 x24)) (fp.div RNE (fp.add RNE x4 x19) (fp.div RNE x21 x22)))) (fp.div RNE (fp.neg (fp.div RNE (fp.div RNE x9 x24) (fp.mul RNE x4 x7))) (fp.div RNE (fp.mul RNE (fp.add RNE x15 x8) (fp.neg x22)) (fp.neg (fp.neg x23))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE (fp.add RNE x15 x21) (fp.sub RNE x15 x23)) (fp.add RNE (fp.sub RNE x23 x19) (fp.div RNE x6 x17)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.sub RNE x22 x11) (fp.div RNE x15 x16))) (fp.mul RNE (fp.neg (fp.mul RNE x2 x17)) (fp.neg (fp.div RNE x17 x5))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x12) (fp.mul RNE x24 x2)) (fp.neg (fp.mul RNE x24 x8))) (fp.mul RNE (fp.neg (fp.div RNE x21 x24)) (fp.mul RNE (fp.mul RNE x3 x3) (fp.mul RNE x21 x1)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.div RNE x1 x17)) (fp.mul RNE (fp.div RNE x19 x6) (fp.sub RNE x16 x16))) (fp.neg (fp.sub RNE (fp.add RNE x22 x1) (fp.neg x16))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x19 x18) (fp.add RNE x18 x8)) (fp.neg (fp.sub RNE x10 x2)))) (fp.div RNE (fp.neg (fp.neg (fp.add RNE x3 x8))) (fp.neg (fp.div RNE (fp.add RNE x3 x8) (fp.div RNE x3 x1))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x5 x17) (fp.div RNE x8 x14)) (fp.mul RNE (fp.mul RNE x16 x22) (fp.sub RNE x21 x7))) (fp.div RNE (fp.add RNE (fp.add RNE x7 x23) (fp.neg x24)) (fp.div RNE (fp.div RNE x16 x6) (fp.mul RNE x7 x10)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.add RNE x16 x7) (fp.div RNE x19 x21)) (fp.neg (fp.add RNE x22 x16))) (fp.sub RNE (fp.add RNE (fp.div RNE x2 x14) (fp.div RNE x22 x24)) (fp.div RNE (fp.neg x17) (fp.div RNE x3 x22))))))
(check-sat)
