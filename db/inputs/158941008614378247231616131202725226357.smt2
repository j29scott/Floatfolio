(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.neg x12) (fp.add RNE x3 x9)) (fp.neg (fp.mul RNE x19 x14))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x6 x6) (fp.mul RNE x10 x19)) (fp.sub RNE (fp.sub RNE x12 x4) (fp.sub RNE x13 x18))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x1 x14) (fp.div RNE x13 x14)) (fp.mul RNE (fp.sub RNE x13 x14) (fp.neg x11))))
(check-sat)
