(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.add RNE x11 x13)) (fp.mul RNE (fp.mul RNE x5 x4) (fp.sub RNE x13 x1))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x14 x13) (fp.div RNE x12 x12)) (fp.add RNE (fp.mul RNE x4 x1) (fp.neg x4))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x6) (fp.add RNE x13 x14)) (fp.add RNE (fp.mul RNE x5 x13) (fp.mul RNE x12 x3))))
(assert (fp.leq (fp.add RNE (fp.neg x1) (fp.add RNE x7 x14)) (fp.div RNE (fp.sub RNE x8 x13) (fp.mul RNE x2 x14))))
(assert (fp.gt (fp.neg (fp.neg x1)) (fp.mul RNE (fp.add RNE x4 x13) (fp.mul RNE x12 x9))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x8 x7) (fp.neg x10)) (fp.sub RNE (fp.add RNE x8 x12) (fp.neg x3))))
(assert (fp.eq (fp.neg (fp.add RNE x8 x14)) (fp.sub RNE (fp.sub RNE x0 x6) (fp.neg x14))))
(assert (fp.leq (fp.neg (fp.div RNE x0 x2)) (fp.mul RNE (fp.neg x3) (fp.neg x8))))
(assert (fp.leq (fp.div RNE (fp.add RNE x6 x7) (fp.div RNE x5 x11)) (fp.mul RNE (fp.neg x4) (fp.add RNE x7 x10))))
(assert (fp.geq (fp.add RNE (fp.neg x13) (fp.neg x7)) (fp.div RNE (fp.mul RNE x1 x13) (fp.add RNE x12 x14))))
(check-sat)
