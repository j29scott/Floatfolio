(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.add RNE x4 x4) (fp.add RNE x7 x6)) (fp.mul RNE (fp.mul RNE x2 x4) (fp.sub RNE x3 x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x5) (fp.neg x3)) (fp.sub RNE (fp.sub RNE x1 x5) (fp.add RNE x6 x3))))
(assert (fp.geq (fp.neg (fp.div RNE x2 x3)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x5 x2) (fp.neg x2)) (fp.neg (fp.add RNE x2 x4))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x7 x1) (fp.div RNE x2 x2)) (fp.mul RNE (fp.div RNE x5 x4) (fp.neg x7))))
(assert (fp.leq (fp.div RNE (fp.neg x2) (fp.add RNE x2 x7)) (fp.neg (fp.div RNE x3 x3))))
(assert (fp.lt (fp.neg (fp.mul RNE x4 x1)) (fp.neg (fp.div RNE x7 x6))))
(check-sat)
