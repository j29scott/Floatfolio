(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x5) (fp.neg x3)) (fp.mul RNE (fp.neg x2) (fp.mul RNE x2 x4))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x7 x6) (fp.mul RNE x1 x8)) (fp.sub RNE (fp.div RNE x8 x4) (fp.div RNE x0 x8))))
(assert (fp.lt (fp.add RNE (fp.neg x1) (fp.sub RNE x2 x1)) (fp.sub RNE (fp.div RNE x0 x1) (fp.div RNE x8 x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x3 x11) (fp.sub RNE x10 x9)) (fp.add RNE (fp.sub RNE x4 x6) (fp.mul RNE x7 x0))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x5 x3) (fp.div RNE x4 x4)) (fp.mul RNE (fp.neg x3) (fp.add RNE x8 x8))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x11 x1) (fp.add RNE x5 x7)) (fp.mul RNE (fp.neg x4) (fp.neg x9))))
(check-sat)
