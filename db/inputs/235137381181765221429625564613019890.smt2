(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg x13) (fp.sub RNE x11 x9)) (fp.mul RNE (fp.div RNE x4 x0) (fp.mul RNE x2 x7))) (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x2) (fp.add RNE x13 x7)) (fp.neg (fp.div RNE x15 x7)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x15) (fp.div RNE x10 x15)) (fp.div RNE (fp.div RNE x12 x6) (fp.mul RNE x0 x7))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x12 x4) (fp.sub RNE x12 x10)) (fp.neg (fp.neg x5)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x6) (fp.sub RNE x6 x5)) (fp.sub RNE (fp.mul RNE x12 x1) (fp.sub RNE x9 x14))) (fp.mul RNE (fp.neg (fp.neg x3)) (fp.div RNE (fp.mul RNE x13 x0) (fp.add RNE x0 x15)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x12 x12) (fp.div RNE x11 x1)) (fp.div RNE (fp.add RNE x4 x12) (fp.mul RNE x6 x2))) (fp.mul RNE (fp.sub RNE (fp.add RNE x6 x4) (fp.div RNE x10 x15)) (fp.mul RNE (fp.div RNE x12 x0) (fp.sub RNE x13 x9)))))
(check-sat)
