(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x6 x5) (fp.div RNE x22 x12)))
(assert (fp.geq (fp.mul RNE x21 x26) (fp.div RNE x25 x12)))
(assert (fp.eq (fp.sub RNE x18 x26) (fp.add RNE x20 x16)))
(assert (fp.gt (fp.add RNE x19 x10) (fp.sub RNE x2 x22)))
(assert (fp.leq (fp.sub RNE x15 x24) (fp.neg x24)))
(assert (fp.gt (fp.div RNE x16 x15) (fp.neg x21)))
(assert (fp.geq (fp.add RNE x16 x8) (fp.mul RNE x10 x14)))
(assert (fp.leq (fp.sub RNE x6 x21) (fp.sub RNE x8 x11)))
(assert (fp.lt (fp.mul RNE x16 x7) (fp.mul RNE x14 x0)))
(assert (fp.leq (fp.mul RNE x15 x5) (fp.div RNE x10 x5)))
(assert (fp.eq (fp.neg x24) (fp.neg x26)))
(assert (fp.lt (fp.mul RNE x18 x15) (fp.div RNE x24 x6)))
(assert (fp.lt (fp.sub RNE x13 x2) (fp.add RNE x4 x4)))
(assert (fp.eq (fp.neg x8) (fp.add RNE x6 x23)))
(assert (fp.lt (fp.add RNE x6 x26) (fp.div RNE x20 x23)))
(assert (fp.geq (fp.add RNE x10 x25) (fp.neg x9)))
(check-sat)
