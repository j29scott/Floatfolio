(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x3 x2) (fp.add RNE x6 x8)))
(assert (fp.gt (fp.add RNE x1 x7) (fp.sub RNE x7 x6)))
(assert (fp.leq (fp.add RNE x3 x2) (fp.add RNE x4 x1)))
(assert (fp.lt (fp.div RNE x3 x1) (fp.div RNE x2 x4)))
(assert (fp.eq (fp.neg x5) (fp.add RNE x1 x3)))
(assert (fp.leq (fp.sub RNE x3 x0) (fp.neg x0)))
(assert (fp.leq (fp.div RNE x10 x1) (fp.mul RNE x8 x6)))
(assert (fp.eq (fp.sub RNE x7 x10) (fp.add RNE x7 x0)))
(assert (fp.lt (fp.sub RNE x5 x0) (fp.neg x10)))
(assert (fp.geq (fp.div RNE x9 x9) (fp.mul RNE x9 x8)))
(assert (fp.eq (fp.mul RNE x4 x7) (fp.div RNE x3 x0)))
(assert (fp.gt (fp.add RNE x1 x7) (fp.add RNE x1 x4)))
(assert (fp.gt (fp.add RNE x0 x2) (fp.add RNE x5 x7)))
(assert (fp.eq (fp.neg x7) (fp.div RNE x4 x8)))
(check-sat)
