(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE x3 x3) (fp.neg x19)) (fp.neg (fp.add RNE x0 x22))))
(assert (fp.gt (fp.add RNE (fp.neg x17) (fp.mul RNE x19 x2)) (fp.sub RNE (fp.mul RNE x16 x21) (fp.add RNE x12 x17))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x14 x3) (fp.div RNE x14 x0)) (fp.sub RNE (fp.sub RNE x14 x2) (fp.neg x3))))
(assert (fp.gt (fp.neg (fp.neg x12)) (fp.add RNE (fp.neg x22) (fp.add RNE x4 x18))))
(assert (fp.leq (fp.neg (fp.mul RNE x10 x5)) (fp.neg (fp.sub RNE x22 x14))))
(assert (fp.leq (fp.neg (fp.div RNE x21 x7)) (fp.neg (fp.add RNE x19 x14))))
(assert (fp.leq (fp.div RNE (fp.neg x13) (fp.sub RNE x7 x11)) (fp.add RNE (fp.sub RNE x15 x8) (fp.div RNE x8 x13))))
(assert (fp.leq (fp.sub RNE (fp.neg x1) (fp.div RNE x5 x21)) (fp.sub RNE (fp.neg x2) (fp.add RNE x19 x13))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x8 x10) (fp.div RNE x14 x2)) (fp.div RNE (fp.div RNE x15 x10) (fp.mul RNE x17 x8))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x14 x11) (fp.add RNE x6 x19)) (fp.add RNE (fp.mul RNE x9 x4) (fp.div RNE x7 x8))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x4 x0) (fp.div RNE x12 x17)) (fp.mul RNE (fp.div RNE x22 x0) (fp.neg x15))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x9 x2) (fp.mul RNE x12 x0)) (fp.sub RNE (fp.sub RNE x19 x11) (fp.mul RNE x1 x0))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x5 x6) (fp.add RNE x14 x18)) (fp.sub RNE (fp.div RNE x15 x17) (fp.sub RNE x5 x22))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x0 x19) (fp.mul RNE x21 x20)) (fp.add RNE (fp.mul RNE x11 x5) (fp.add RNE x21 x2))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x20 x2) (fp.sub RNE x5 x14)) (fp.div RNE (fp.div RNE x12 x17) (fp.mul RNE x19 x9))))
(assert (fp.eq (fp.neg (fp.mul RNE x12 x2)) (fp.add RNE (fp.sub RNE x14 x6) (fp.div RNE x9 x11))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x6 x6) (fp.mul RNE x21 x14)) (fp.div RNE (fp.div RNE x12 x7) (fp.div RNE x18 x11))))
(check-sat)
