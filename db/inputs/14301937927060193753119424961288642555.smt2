(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.sub RNE x8 x7) (fp.mul RNE x8 x8)) (fp.neg (fp.mul RNE x6 x4))) (fp.neg (fp.neg (fp.div RNE x0 x1)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.sub RNE x9 x8) (fp.neg x9)) (fp.mul RNE (fp.sub RNE x5 x5) (fp.add RNE x8 x6))) (fp.add RNE (fp.mul RNE (fp.mul RNE x6 x1) (fp.neg x7)) (fp.sub RNE (fp.div RNE x3 x0) (fp.sub RNE x5 x6)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x8 x4) (fp.sub RNE x0 x6)) (fp.div RNE (fp.div RNE x1 x0) (fp.neg x1))) (fp.div RNE (fp.sub RNE (fp.add RNE x5 x8) (fp.neg x1)) (fp.div RNE (fp.sub RNE x1 x6) (fp.add RNE x6 x4)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x8 x6) (fp.mul RNE x7 x1))) (fp.div RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x2 x7)) (fp.mul RNE (fp.div RNE x4 x7) (fp.sub RNE x3 x3)))))
(check-sat)
