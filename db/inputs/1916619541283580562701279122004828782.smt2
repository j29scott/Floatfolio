(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.div RNE x14 x7) (fp.div RNE x5 x17)) (fp.sub RNE (fp.mul RNE x8 x12) (fp.neg x7))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x15 x0) (fp.neg x23)) (fp.add RNE (fp.neg x10) (fp.mul RNE x19 x0))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x0 x9) (fp.mul RNE x20 x14)) (fp.mul RNE (fp.add RNE x2 x5) (fp.div RNE x21 x21))))
(assert (fp.geq (fp.div RNE (fp.add RNE x13 x22) (fp.sub RNE x3 x5)) (fp.add RNE (fp.add RNE x1 x18) (fp.sub RNE x3 x10))))
(assert (fp.eq (fp.add RNE (fp.div RNE x18 x21) (fp.sub RNE x16 x17)) (fp.add RNE (fp.neg x22) (fp.neg x0))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x11 x15) (fp.neg x18)) (fp.neg (fp.neg x22))))
(assert (fp.lt (fp.neg (fp.mul RNE x8 x23)) (fp.sub RNE (fp.div RNE x13 x11) (fp.mul RNE x17 x4))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x24 x6) (fp.add RNE x17 x21)) (fp.add RNE (fp.mul RNE x1 x3) (fp.sub RNE x1 x9))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x2 x16) (fp.neg x2)) (fp.sub RNE (fp.neg x24) (fp.sub RNE x7 x17))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x11 x11) (fp.add RNE x0 x21)) (fp.sub RNE (fp.sub RNE x25 x15) (fp.sub RNE x17 x14))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x20 x4) (fp.mul RNE x25 x12)) (fp.neg (fp.neg x15))))
(assert (fp.leq (fp.div RNE (fp.div RNE x10 x3) (fp.mul RNE x6 x3)) (fp.neg (fp.neg x10))))
(assert (fp.eq (fp.add RNE (fp.div RNE x6 x22) (fp.neg x11)) (fp.sub RNE (fp.add RNE x0 x9) (fp.sub RNE x6 x16))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x13 x12) (fp.sub RNE x19 x24)) (fp.neg (fp.sub RNE x11 x20))))
(assert (fp.leq (fp.add RNE (fp.add RNE x25 x0) (fp.mul RNE x24 x12)) (fp.add RNE (fp.mul RNE x0 x24) (fp.add RNE x9 x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x3 x1) (fp.mul RNE x15 x3)) (fp.mul RNE (fp.neg x25) (fp.neg x9))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x3 x20) (fp.div RNE x10 x16)) (fp.mul RNE (fp.sub RNE x21 x1) (fp.add RNE x17 x9))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x14 x5) (fp.div RNE x19 x24)) (fp.sub RNE (fp.div RNE x23 x19) (fp.mul RNE x8 x13))))
(assert (fp.geq (fp.add RNE (fp.add RNE x7 x11) (fp.mul RNE x21 x14)) (fp.div RNE (fp.add RNE x24 x2) (fp.add RNE x12 x5))))
(assert (fp.lt (fp.add RNE (fp.div RNE x6 x18) (fp.mul RNE x21 x1)) (fp.mul RNE (fp.div RNE x1 x19) (fp.sub RNE x7 x5))))
(check-sat)
