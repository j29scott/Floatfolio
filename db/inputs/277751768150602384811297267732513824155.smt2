(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.add RNE x15 x5) (fp.div RNE x12 x5))) (fp.div RNE (fp.neg (fp.mul RNE x10 x1)) (fp.mul RNE (fp.neg x15) (fp.neg x7)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.div RNE x5 x8) (fp.div RNE x4 x7)) (fp.div RNE (fp.add RNE x10 x12) (fp.sub RNE x9 x10))) (fp.add RNE (fp.neg (fp.neg x14)) (fp.div RNE (fp.add RNE x13 x0) (fp.sub RNE x6 x13)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x5 x6) (fp.add RNE x11 x2)) (fp.neg (fp.div RNE x2 x3))) (fp.add RNE (fp.neg (fp.div RNE x7 x10)) (fp.div RNE (fp.add RNE x10 x2) (fp.neg x14)))))
(check-sat)
