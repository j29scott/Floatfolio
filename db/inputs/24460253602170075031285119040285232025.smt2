(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.mul RNE x3 x4) (fp.neg x2)) (fp.div RNE (fp.mul RNE x1 x2) (fp.mul RNE x3 x2))))
(assert (fp.geq (fp.neg (fp.add RNE x0 x2)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x3 x1))))
(assert (fp.geq (fp.neg (fp.sub RNE x3 x3)) (fp.add RNE (fp.div RNE x4 x3) (fp.neg x2))))
(assert (fp.eq (fp.add RNE (fp.neg x3) (fp.mul RNE x2 x0)) (fp.add RNE (fp.sub RNE x1 x2) (fp.sub RNE x2 x1))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x0) (fp.sub RNE x0 x0)) (fp.sub RNE (fp.div RNE x1 x0) (fp.neg x2))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x4 x4) (fp.mul RNE x2 x1)) (fp.div RNE (fp.mul RNE x1 x4) (fp.mul RNE x2 x1))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x3 x3) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x0 x1) (fp.add RNE x0 x3))))
(assert (fp.gt (fp.neg (fp.div RNE x2 x1)) (fp.div RNE (fp.add RNE x2 x3) (fp.neg x4))))
(assert (fp.lt (fp.sub RNE (fp.neg x1) (fp.div RNE x3 x4)) (fp.mul RNE (fp.div RNE x2 x3) (fp.neg x4))))
(check-sat)
