(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.add RNE x8 x2)) (fp.mul RNE (fp.sub RNE x1 x7) (fp.mul RNE x8 x7))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x6 x5) (fp.add RNE x1 x4)) (fp.div RNE (fp.sub RNE x3 x6) (fp.neg x3))))
(assert (fp.gt (fp.neg (fp.mul RNE x5 x2)) (fp.sub RNE (fp.div RNE x1 x5) (fp.neg x2))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x0 x10) (fp.mul RNE x4 x9)) (fp.neg (fp.add RNE x4 x8))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x10) (fp.div RNE x8 x6)) (fp.mul RNE (fp.sub RNE x0 x6) (fp.neg x10))))
(assert (fp.leq (fp.neg (fp.div RNE x2 x8)) (fp.sub RNE (fp.sub RNE x1 x10) (fp.neg x2))))
(assert (fp.eq (fp.add RNE (fp.div RNE x0 x2) (fp.neg x6)) (fp.neg (fp.neg x9))))
(assert (fp.lt (fp.add RNE (fp.add RNE x0 x5) (fp.mul RNE x0 x3)) (fp.div RNE (fp.div RNE x5 x4) (fp.add RNE x5 x7))))
(assert (fp.leq (fp.div RNE (fp.div RNE x9 x3) (fp.neg x2)) (fp.mul RNE (fp.div RNE x5 x2) (fp.neg x1))))
(check-sat)
