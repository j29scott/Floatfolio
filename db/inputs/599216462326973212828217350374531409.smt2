(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.div RNE x13 x6) (fp.mul RNE x8 x9)) (fp.add RNE (fp.add RNE x18 x3) (fp.add RNE x0 x2))))
(assert (fp.gt (fp.sub RNE (fp.neg x5) (fp.add RNE x10 x6)) (fp.sub RNE (fp.add RNE x5 x7) (fp.mul RNE x8 x12))))
(assert (fp.gt (fp.div RNE (fp.neg x12) (fp.sub RNE x14 x5)) (fp.neg (fp.sub RNE x16 x19))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x4 x9) (fp.add RNE x7 x0)) (fp.neg (fp.sub RNE x8 x15))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x6 x16) (fp.div RNE x20 x11)) (fp.neg (fp.sub RNE x5 x5))))
(assert (fp.leq (fp.div RNE (fp.div RNE x9 x4) (fp.mul RNE x17 x10)) (fp.div RNE (fp.div RNE x3 x13) (fp.add RNE x13 x10))))
(assert (fp.lt (fp.add RNE (fp.neg x0) (fp.sub RNE x10 x0)) (fp.div RNE (fp.div RNE x2 x10) (fp.sub RNE x12 x11))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x5 x0) (fp.div RNE x6 x0)) (fp.neg (fp.add RNE x11 x4))))
(check-sat)
