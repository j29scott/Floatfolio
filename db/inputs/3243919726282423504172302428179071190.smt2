(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x5 x12) (fp.add RNE x9 x21)) (fp.add RNE (fp.neg x10) (fp.sub RNE x9 x15))))
(assert (fp.eq (fp.mul RNE (fp.neg x17) (fp.add RNE x12 x0)) (fp.sub RNE (fp.div RNE x1 x21) (fp.div RNE x3 x1))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x4 x12) (fp.sub RNE x19 x2)) (fp.mul RNE (fp.add RNE x4 x19) (fp.add RNE x2 x7))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x9 x7) (fp.add RNE x8 x6)) (fp.sub RNE (fp.div RNE x13 x10) (fp.mul RNE x17 x11))))
(check-sat)
