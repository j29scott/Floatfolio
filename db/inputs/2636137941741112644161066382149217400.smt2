(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.neg x15) (fp.mul RNE x6 x10)) (fp.mul RNE (fp.neg x11) (fp.sub RNE x1 x13))) (fp.neg (fp.div RNE (fp.sub RNE x12 x4) (fp.neg x18)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x9 x18) (fp.add RNE x13 x3)) (fp.mul RNE (fp.add RNE x17 x16) (fp.div RNE x13 x10))) (fp.neg (fp.add RNE (fp.neg x6) (fp.div RNE x2 x10)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.mul RNE x6 x9) (fp.mul RNE x2 x2)) (fp.div RNE (fp.mul RNE x5 x10) (fp.neg x11))) (fp.sub RNE (fp.mul RNE (fp.neg x7) (fp.sub RNE x7 x16)) (fp.mul RNE (fp.div RNE x10 x14) (fp.neg x3)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x0 x10) (fp.div RNE x9 x7))) (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x1) (fp.div RNE x5 x1)) (fp.sub RNE (fp.add RNE x13 x5) (fp.mul RNE x1 x2)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x15) (fp.div RNE x0 x5)) (fp.add RNE (fp.add RNE x0 x2) (fp.sub RNE x9 x2))) (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.add RNE x15 x18)) (fp.neg (fp.mul RNE x16 x10)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x12 x11)) (fp.add RNE (fp.neg x5) (fp.sub RNE x16 x4))) (fp.mul RNE (fp.add RNE (fp.sub RNE x15 x3) (fp.neg x0)) (fp.add RNE (fp.sub RNE x5 x4) (fp.div RNE x11 x12)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE x10 x15)) (fp.add RNE (fp.add RNE x3 x2) (fp.mul RNE x13 x9))) (fp.div RNE (fp.sub RNE (fp.div RNE x11 x5) (fp.add RNE x17 x5)) (fp.sub RNE (fp.add RNE x15 x0) (fp.sub RNE x9 x16)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE x18 x18) (fp.mul RNE x4 x10)) (fp.div RNE (fp.neg x18) (fp.mul RNE x11 x3))) (fp.div RNE (fp.neg (fp.div RNE x2 x14)) (fp.add RNE (fp.sub RNE x10 x11) (fp.neg x16)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x14) (fp.sub RNE x7 x11)) (fp.neg (fp.add RNE x12 x10))) (fp.div RNE (fp.neg (fp.sub RNE x3 x15)) (fp.neg (fp.sub RNE x8 x5)))))
(assert (fp.geq (fp.neg (fp.neg (fp.sub RNE x9 x3))) (fp.neg (fp.sub RNE (fp.mul RNE x12 x15) (fp.div RNE x16 x17)))))
(check-sat)
