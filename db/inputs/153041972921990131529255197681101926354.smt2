(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.neg x4)) (fp.add RNE (fp.neg x1) (fp.add RNE x8 x2))))
(assert (fp.gt (fp.div RNE (fp.add RNE x7 x1) (fp.sub RNE x2 x11)) (fp.div RNE (fp.neg x9) (fp.neg x8))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x5 x9) (fp.neg x3)) (fp.mul RNE (fp.add RNE x5 x0) (fp.neg x10))))
(assert (fp.lt (fp.neg (fp.sub RNE x2 x7)) (fp.sub RNE (fp.neg x0) (fp.div RNE x5 x2))))
(assert (fp.eq (fp.neg (fp.div RNE x4 x3)) (fp.add RNE (fp.mul RNE x1 x4) (fp.sub RNE x4 x1))))
(assert (fp.geq (fp.mul RNE (fp.neg x10) (fp.neg x3)) (fp.mul RNE (fp.mul RNE x5 x0) (fp.sub RNE x8 x7))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x8 x3) (fp.neg x1)) (fp.add RNE (fp.sub RNE x0 x3) (fp.sub RNE x3 x3))))
(check-sat)
