(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE x20 x14) (fp.neg x18)) (fp.mul RNE (fp.add RNE x0 x1) (fp.neg x17))) (fp.neg (fp.neg (fp.add RNE x2 x5)))) (fp.sub RNE (fp.neg (fp.sub RNE (fp.neg x5) (fp.div RNE x24 x0))) (fp.sub RNE (fp.div RNE (fp.neg x16) (fp.add RNE x17 x10)) (fp.sub RNE (fp.div RNE x20 x20) (fp.add RNE x8 x25))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x26) (fp.mul RNE x4 x9)) (fp.neg (fp.mul RNE x14 x5))) (fp.sub RNE (fp.neg (fp.sub RNE x6 x10)) (fp.neg (fp.mul RNE x9 x14)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.div RNE x18 x12)) (fp.sub RNE (fp.add RNE x10 x19) (fp.mul RNE x24 x20))) (fp.mul RNE (fp.neg (fp.add RNE x17 x11)) (fp.sub RNE (fp.mul RNE x8 x25) (fp.div RNE x14 x25))))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.add RNE (fp.neg x15) (fp.sub RNE x16 x7)) (fp.mul RNE (fp.mul RNE x11 x17) (fp.div RNE x20 x8)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.neg x24) (fp.mul RNE x15 x13)) (fp.div RNE (fp.add RNE x5 x20) (fp.sub RNE x6 x2))) (fp.add RNE (fp.sub RNE (fp.div RNE x0 x2) (fp.sub RNE x15 x24)) (fp.sub RNE (fp.neg x20) (fp.div RNE x25 x2))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x19 x3)) (fp.sub RNE (fp.neg x18) (fp.neg x5))) (fp.sub RNE (fp.div RNE (fp.sub RNE x21 x2) (fp.div RNE x14 x25)) (fp.div RNE (fp.sub RNE x22 x5) (fp.sub RNE x6 x26)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.add RNE x19 x17) (fp.add RNE x16 x17)) (fp.add RNE (fp.neg x24) (fp.add RNE x23 x16))) (fp.add RNE (fp.sub RNE (fp.div RNE x2 x2) (fp.sub RNE x3 x5)) (fp.neg (fp.sub RNE x26 x8))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.div RNE x21 x11) (fp.div RNE x8 x16)) (fp.mul RNE (fp.neg x13) (fp.div RNE x16 x24))) (fp.add RNE (fp.sub RNE (fp.div RNE x14 x24) (fp.neg x20)) (fp.mul RNE (fp.sub RNE x14 x0) (fp.sub RNE x7 x18)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE x20 x21) (fp.div RNE x3 x12)) (fp.div RNE (fp.sub RNE x23 x4) (fp.div RNE x7 x1))) (fp.neg (fp.mul RNE (fp.sub RNE x26 x21) (fp.sub RNE x9 x22))))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE (fp.mul RNE x12 x13) (fp.sub RNE x17 x1)) (fp.add RNE (fp.mul RNE x3 x25) (fp.add RNE x10 x7))) (fp.add RNE (fp.mul RNE (fp.add RNE x7 x26) (fp.sub RNE x3 x18)) (fp.mul RNE (fp.div RNE x25 x21) (fp.mul RNE x13 x21)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x19 x5) (fp.mul RNE x16 x20)) (fp.sub RNE (fp.mul RNE x8 x5) (fp.mul RNE x25 x19))) (fp.div RNE (fp.div RNE (fp.div RNE x22 x14) (fp.div RNE x21 x21)) (fp.neg (fp.add RNE x13 x5))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg (fp.mul RNE x5 x20)) (fp.sub RNE (fp.neg x3) (fp.div RNE x20 x13))) (fp.neg (fp.add RNE (fp.mul RNE x7 x16) (fp.mul RNE x11 x10)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.neg x24) (fp.neg x20)) (fp.sub RNE (fp.neg x2) (fp.add RNE x12 x9))) (fp.mul RNE (fp.mul RNE (fp.div RNE x22 x25) (fp.div RNE x5 x23)) (fp.neg (fp.neg x15))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x1) (fp.mul RNE x10 x26)) (fp.add RNE (fp.div RNE x26 x6) (fp.div RNE x4 x1))) (fp.mul RNE (fp.add RNE (fp.sub RNE x16 x18) (fp.add RNE x16 x0)) (fp.mul RNE (fp.mul RNE x22 x14) (fp.div RNE x3 x6)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x7 x24) (fp.neg x23)) (fp.neg (fp.neg x6))) (fp.div RNE (fp.div RNE (fp.add RNE x10 x21) (fp.div RNE x3 x19)) (fp.div RNE (fp.sub RNE x0 x11) (fp.mul RNE x6 x7))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.neg x11)) (fp.div RNE (fp.div RNE x25 x16) (fp.div RNE x15 x5))) (fp.neg (fp.neg (fp.add RNE x25 x15)))) (fp.neg (fp.mul RNE (fp.neg (fp.mul RNE x4 x23)) (fp.sub RNE (fp.add RNE x4 x21) (fp.neg x15))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x4)) (fp.mul RNE (fp.div RNE x12 x9) (fp.mul RNE x18 x11))) (fp.add RNE (fp.add RNE (fp.add RNE x21 x16) (fp.mul RNE x25 x7)) (fp.neg (fp.div RNE x4 x22)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.neg x21) (fp.mul RNE x7 x16)) (fp.div RNE (fp.neg x14) (fp.add RNE x13 x15))) (fp.add RNE (fp.div RNE (fp.mul RNE x18 x21) (fp.sub RNE x3 x25)) (fp.sub RNE (fp.div RNE x5 x11) (fp.add RNE x7 x2))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x18)) (fp.add RNE (fp.sub RNE x14 x26) (fp.sub RNE x22 x12))) (fp.sub RNE (fp.neg (fp.add RNE x18 x4)) (fp.add RNE (fp.sub RNE x5 x4) (fp.mul RNE x23 x25)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x22 x20) (fp.neg x13)) (fp.neg (fp.add RNE x12 x10))) (fp.div RNE (fp.neg (fp.mul RNE x25 x18)) (fp.div RNE (fp.sub RNE x20 x7) (fp.mul RNE x13 x10))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.mul RNE (fp.add RNE x18 x14) (fp.div RNE x22 x22)) (fp.div RNE (fp.add RNE x20 x9) (fp.mul RNE x25 x25))) (fp.add RNE (fp.add RNE (fp.div RNE x5 x10) (fp.add RNE x16 x26)) (fp.sub RNE (fp.add RNE x26 x5) (fp.add RNE x5 x8)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.add RNE x15 x21) (fp.mul RNE x13 x5)) (fp.neg (fp.sub RNE x4 x25))))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg (fp.mul RNE x5 x10)))) (fp.neg (fp.div RNE (fp.neg (fp.neg x12)) (fp.sub RNE (fp.div RNE x11 x25) (fp.sub RNE x18 x23))))))
(check-sat)
