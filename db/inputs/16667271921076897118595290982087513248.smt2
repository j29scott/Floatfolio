(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.neg x2) (fp.add RNE x0 x5)) (fp.mul RNE (fp.div RNE x11 x2) (fp.add RNE x5 x7))))
(assert (fp.gt (fp.div RNE (fp.div RNE x3 x11) (fp.mul RNE x10 x4)) (fp.sub RNE (fp.sub RNE x9 x0) (fp.mul RNE x2 x2))))
(assert (fp.lt (fp.neg (fp.neg x3)) (fp.div RNE (fp.mul RNE x7 x7) (fp.div RNE x12 x7))))
(assert (fp.eq (fp.div RNE (fp.neg x11) (fp.neg x12)) (fp.add RNE (fp.div RNE x8 x11) (fp.add RNE x11 x1))))
(assert (fp.lt (fp.sub RNE (fp.neg x6) (fp.div RNE x5 x6)) (fp.neg (fp.sub RNE x8 x2))))
(assert (fp.eq (fp.div RNE (fp.div RNE x13 x11) (fp.sub RNE x4 x7)) (fp.add RNE (fp.add RNE x3 x11) (fp.sub RNE x8 x13))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x1 x13) (fp.div RNE x7 x1)) (fp.mul RNE (fp.mul RNE x7 x7) (fp.div RNE x13 x1))))
(assert (fp.geq (fp.add RNE (fp.add RNE x9 x11) (fp.sub RNE x7 x9)) (fp.neg (fp.neg x6))))
(assert (fp.geq (fp.sub RNE (fp.neg x11) (fp.sub RNE x11 x7)) (fp.mul RNE (fp.mul RNE x4 x12) (fp.div RNE x9 x7))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x7 x12) (fp.sub RNE x12 x9)) (fp.div RNE (fp.neg x2) (fp.add RNE x13 x7))))
(assert (fp.eq (fp.add RNE (fp.add RNE x9 x6) (fp.sub RNE x0 x6)) (fp.neg (fp.div RNE x4 x6))))
(assert (fp.gt (fp.mul RNE (fp.neg x6) (fp.sub RNE x3 x2)) (fp.neg (fp.div RNE x11 x8))))
(assert (fp.leq (fp.add RNE (fp.div RNE x13 x12) (fp.neg x13)) (fp.sub RNE (fp.add RNE x0 x2) (fp.neg x1))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x3 x11) (fp.mul RNE x10 x5)) (fp.mul RNE (fp.add RNE x4 x3) (fp.mul RNE x8 x11))))
(check-sat)
