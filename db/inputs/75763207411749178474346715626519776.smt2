(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x18) (fp.div RNE x14 x19)) (fp.div RNE (fp.sub RNE x5 x12) (fp.neg x16))) (fp.mul RNE (fp.mul RNE (fp.neg x20) (fp.neg x7)) (fp.sub RNE (fp.neg x20) (fp.sub RNE x20 x1)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg x9) (fp.mul RNE x7 x5)) (fp.add RNE (fp.mul RNE x4 x16) (fp.div RNE x1 x18))) (fp.add RNE (fp.sub RNE (fp.add RNE x1 x6) (fp.sub RNE x3 x4)) (fp.add RNE (fp.sub RNE x17 x0) (fp.neg x8)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE x6 x13)) (fp.add RNE (fp.add RNE x12 x13) (fp.div RNE x1 x10))) (fp.add RNE (fp.sub RNE (fp.neg x11) (fp.add RNE x2 x8)) (fp.mul RNE (fp.div RNE x3 x11) (fp.add RNE x13 x20)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x17 x8) (fp.add RNE x0 x18)) (fp.div RNE (fp.sub RNE x10 x20) (fp.mul RNE x20 x2))) (fp.add RNE (fp.div RNE (fp.div RNE x5 x13) (fp.mul RNE x14 x18)) (fp.add RNE (fp.sub RNE x1 x6) (fp.add RNE x19 x8)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x12) (fp.add RNE x1 x14)) (fp.div RNE (fp.neg x1) (fp.mul RNE x15 x0))) (fp.sub RNE (fp.neg (fp.add RNE x10 x8)) (fp.mul RNE (fp.neg x12) (fp.sub RNE x9 x18)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x9) (fp.add RNE x16 x7)) (fp.add RNE (fp.div RNE x15 x1) (fp.neg x10))) (fp.add RNE (fp.add RNE (fp.add RNE x9 x4) (fp.add RNE x16 x3)) (fp.mul RNE (fp.sub RNE x5 x11) (fp.add RNE x1 x12)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE x1 x6) (fp.sub RNE x11 x11)) (fp.div RNE (fp.div RNE x20 x0) (fp.neg x16))) (fp.div RNE (fp.mul RNE (fp.neg x20) (fp.mul RNE x5 x10)) (fp.add RNE (fp.div RNE x20 x7) (fp.mul RNE x7 x15)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.neg x4) (fp.div RNE x16 x3)) (fp.div RNE (fp.neg x19) (fp.div RNE x3 x5))) (fp.mul RNE (fp.div RNE (fp.mul RNE x2 x0) (fp.div RNE x0 x19)) (fp.sub RNE (fp.add RNE x20 x1) (fp.mul RNE x5 x14)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x17) (fp.neg x3)) (fp.neg (fp.add RNE x0 x16))) (fp.sub RNE (fp.neg (fp.mul RNE x14 x5)) (fp.neg (fp.sub RNE x13 x20)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE x4 x0)) (fp.neg (fp.add RNE x14 x18))) (fp.neg (fp.div RNE (fp.div RNE x2 x20) (fp.add RNE x5 x11)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE x20 x4) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x1 x17) (fp.add RNE x6 x19))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.neg x13)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x15 x5) (fp.div RNE x17 x6)) (fp.sub RNE (fp.neg x19) (fp.mul RNE x14 x15))) (fp.sub RNE (fp.div RNE (fp.mul RNE x19 x6) (fp.add RNE x18 x4)) (fp.div RNE (fp.sub RNE x9 x17) (fp.mul RNE x12 x16)))))
(check-sat)
