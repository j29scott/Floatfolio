(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE x1 x3)) (fp.add RNE (fp.div RNE x0 x3) (fp.sub RNE x5 x6))))
(assert (fp.gt (fp.add RNE (fp.add RNE x0 x2) (fp.neg x0)) (fp.div RNE (fp.mul RNE x6 x7) (fp.add RNE x5 x10))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x7 x4) (fp.add RNE x1 x1)) (fp.add RNE (fp.add RNE x2 x8) (fp.neg x10))))
(assert (fp.leq (fp.add RNE (fp.neg x4) (fp.mul RNE x3 x3)) (fp.div RNE (fp.add RNE x8 x3) (fp.sub RNE x9 x4))))
(assert (fp.eq (fp.neg (fp.mul RNE x3 x5)) (fp.add RNE (fp.sub RNE x2 x10) (fp.add RNE x8 x8))))
(assert (fp.eq (fp.mul RNE (fp.neg x8) (fp.sub RNE x6 x7)) (fp.neg (fp.neg x1))))
(assert (fp.gt (fp.mul RNE (fp.neg x2) (fp.add RNE x9 x5)) (fp.div RNE (fp.mul RNE x5 x11) (fp.mul RNE x3 x1))))
(assert (fp.leq (fp.sub RNE (fp.neg x11) (fp.mul RNE x10 x7)) (fp.neg (fp.sub RNE x0 x7))))
(assert (fp.gt (fp.add RNE (fp.neg x5) (fp.div RNE x11 x7)) (fp.neg (fp.neg x5))))
(check-sat)
