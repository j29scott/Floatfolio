(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.div RNE x20 x20) (fp.mul RNE x11 x11)) (fp.div RNE (fp.neg x16) (fp.add RNE x3 x14))))
(assert (fp.eq (fp.neg (fp.sub RNE x22 x7)) (fp.sub RNE (fp.div RNE x2 x5) (fp.add RNE x13 x16))))
(assert (fp.geq (fp.add RNE (fp.div RNE x22 x2) (fp.mul RNE x8 x14)) (fp.neg (fp.mul RNE x6 x1))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x21 x21) (fp.mul RNE x9 x13)) (fp.add RNE (fp.div RNE x16 x9) (fp.add RNE x16 x0))))
(assert (fp.geq (fp.mul RNE (fp.neg x16) (fp.mul RNE x16 x22)) (fp.mul RNE (fp.mul RNE x5 x15) (fp.div RNE x8 x0))))
(assert (fp.gt (fp.neg (fp.neg x11)) (fp.add RNE (fp.div RNE x9 x2) (fp.sub RNE x19 x10))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x12 x12) (fp.mul RNE x4 x8)) (fp.sub RNE (fp.sub RNE x21 x8) (fp.add RNE x11 x2))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x9 x7) (fp.add RNE x17 x7)) (fp.mul RNE (fp.sub RNE x14 x21) (fp.add RNE x6 x9))))
(assert (fp.eq (fp.neg (fp.add RNE x20 x17)) (fp.add RNE (fp.sub RNE x2 x17) (fp.mul RNE x14 x3))))
(assert (fp.gt (fp.neg (fp.sub RNE x18 x6)) (fp.sub RNE (fp.add RNE x1 x21) (fp.div RNE x14 x15))))
(check-sat)
