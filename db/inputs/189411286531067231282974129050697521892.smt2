(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.sub RNE x3 x21) (fp.mul RNE x4 x18)) (fp.sub RNE (fp.neg x8) (fp.add RNE x16 x6))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x17 x15) (fp.div RNE x0 x1)) (fp.neg (fp.div RNE x7 x11))))
(assert (fp.lt (fp.add RNE (fp.neg x13) (fp.add RNE x21 x12)) (fp.div RNE (fp.mul RNE x17 x18) (fp.sub RNE x19 x23))))
(assert (fp.gt (fp.neg (fp.add RNE x15 x23)) (fp.add RNE (fp.mul RNE x16 x6) (fp.sub RNE x15 x1))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x3 x1) (fp.mul RNE x15 x10)) (fp.neg (fp.sub RNE x18 x4))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x7 x10) (fp.sub RNE x23 x8)) (fp.sub RNE (fp.add RNE x3 x21) (fp.div RNE x14 x9))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x9 x4) (fp.neg x19)) (fp.sub RNE (fp.add RNE x22 x2) (fp.mul RNE x23 x21))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x8 x13) (fp.sub RNE x18 x11)) (fp.div RNE (fp.mul RNE x5 x20) (fp.mul RNE x11 x12))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x1 x15) (fp.add RNE x6 x18)) (fp.sub RNE (fp.div RNE x8 x15) (fp.mul RNE x8 x4))))
(assert (fp.leq (fp.neg (fp.sub RNE x8 x9)) (fp.div RNE (fp.div RNE x19 x4) (fp.mul RNE x21 x18))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x23 x5) (fp.sub RNE x13 x19)) (fp.mul RNE (fp.add RNE x12 x17) (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x2 x15) (fp.sub RNE x8 x22)) (fp.mul RNE (fp.div RNE x5 x10) (fp.mul RNE x2 x20))))
(assert (fp.eq (fp.mul RNE (fp.neg x2) (fp.neg x18)) (fp.sub RNE (fp.div RNE x3 x10) (fp.mul RNE x12 x18))))
(assert (fp.eq (fp.add RNE (fp.neg x11) (fp.sub RNE x18 x4)) (fp.neg (fp.add RNE x5 x6))))
(assert (fp.lt (fp.neg (fp.mul RNE x10 x20)) (fp.neg (fp.mul RNE x2 x23))))
(check-sat)
