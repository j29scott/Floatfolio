(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x1 x8) (fp.sub RNE x17 x9)))
(assert (fp.gt (fp.neg x10) (fp.neg x0)))
(assert (fp.leq (fp.sub RNE x0 x14) (fp.add RNE x3 x18)))
(assert (fp.gt (fp.div RNE x14 x16) (fp.add RNE x12 x12)))
(assert (fp.gt (fp.neg x2) (fp.add RNE x9 x8)))
(assert (fp.leq (fp.mul RNE x13 x13) (fp.div RNE x6 x16)))
(assert (fp.eq (fp.div RNE x11 x8) (fp.neg x9)))
(assert (fp.leq (fp.sub RNE x14 x9) (fp.sub RNE x3 x4)))
(assert (fp.gt (fp.div RNE x14 x10) (fp.sub RNE x12 x4)))
(assert (fp.leq (fp.add RNE x3 x5) (fp.div RNE x6 x14)))
(assert (fp.lt (fp.add RNE x7 x9) (fp.sub RNE x18 x11)))
(assert (fp.eq (fp.mul RNE x3 x12) (fp.mul RNE x11 x7)))
(check-sat)
