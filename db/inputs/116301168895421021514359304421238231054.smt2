(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.div RNE x3 x6) (fp.div RNE x11 x6)) (fp.div RNE (fp.neg x1) (fp.mul RNE x8 x7))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x9 x9) (fp.add RNE x11 x2)) (fp.mul RNE (fp.sub RNE x6 x5) (fp.neg x9))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x0 x6) (fp.add RNE x4 x2)) (fp.mul RNE (fp.mul RNE x4 x7) (fp.neg x1))))
(assert (fp.lt (fp.add RNE (fp.div RNE x3 x3) (fp.mul RNE x8 x9)) (fp.mul RNE (fp.neg x2) (fp.div RNE x8 x10))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x3 x2) (fp.div RNE x2 x11)) (fp.mul RNE (fp.mul RNE x1 x6) (fp.add RNE x3 x7))))
(assert (fp.geq (fp.add RNE (fp.neg x8) (fp.neg x8)) (fp.sub RNE (fp.neg x11) (fp.mul RNE x1 x5))))
(assert (fp.leq (fp.sub RNE (fp.neg x5) (fp.neg x9)) (fp.add RNE (fp.add RNE x1 x5) (fp.sub RNE x3 x8))))
(assert (fp.eq (fp.neg (fp.sub RNE x2 x9)) (fp.add RNE (fp.add RNE x8 x4) (fp.div RNE x10 x1))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x11 x7) (fp.sub RNE x7 x8)) (fp.div RNE (fp.mul RNE x0 x3) (fp.div RNE x7 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x4 x10) (fp.div RNE x0 x4)) (fp.add RNE (fp.div RNE x1 x11) (fp.mul RNE x5 x0))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x9) (fp.div RNE x2 x10)) (fp.sub RNE (fp.add RNE x8 x0) (fp.div RNE x7 x1))))
(assert (fp.lt (fp.div RNE (fp.add RNE x0 x8) (fp.neg x0)) (fp.sub RNE (fp.mul RNE x4 x7) (fp.div RNE x0 x9))))
(check-sat)
