(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.neg x13) (fp.add RNE x7 x1)) (fp.mul RNE (fp.sub RNE x8 x2) (fp.mul RNE x2 x9))))
(assert (fp.eq (fp.sub RNE (fp.neg x1) (fp.sub RNE x0 x2)) (fp.sub RNE (fp.neg x8) (fp.neg x8))))
(assert (fp.geq (fp.sub RNE (fp.neg x18) (fp.add RNE x4 x4)) (fp.neg (fp.sub RNE x12 x0))))
(assert (fp.lt (fp.neg (fp.neg x13)) (fp.add RNE (fp.div RNE x5 x10) (fp.neg x4))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x13 x4) (fp.sub RNE x8 x13)) (fp.neg (fp.add RNE x9 x9))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x12 x15) (fp.mul RNE x10 x16)) (fp.add RNE (fp.sub RNE x18 x16) (fp.div RNE x11 x1))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x5 x5) (fp.add RNE x13 x4)) (fp.mul RNE (fp.add RNE x9 x15) (fp.mul RNE x15 x7))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x2 x5) (fp.add RNE x4 x8)) (fp.mul RNE (fp.mul RNE x8 x12) (fp.mul RNE x18 x18))))
(assert (fp.lt (fp.div RNE (fp.add RNE x14 x12) (fp.div RNE x13 x8)) (fp.add RNE (fp.sub RNE x16 x17) (fp.add RNE x0 x16))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x7 x12) (fp.sub RNE x16 x14)) (fp.sub RNE (fp.div RNE x9 x15) (fp.div RNE x2 x18))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x8 x18) (fp.mul RNE x3 x4)) (fp.add RNE (fp.neg x10) (fp.div RNE x10 x11))))
(assert (fp.leq (fp.div RNE (fp.div RNE x10 x8) (fp.div RNE x14 x8)) (fp.sub RNE (fp.sub RNE x4 x18) (fp.neg x3))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x0 x11) (fp.div RNE x11 x12)) (fp.neg (fp.add RNE x14 x6))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x4 x7) (fp.div RNE x17 x10)) (fp.add RNE (fp.div RNE x3 x3) (fp.mul RNE x1 x13))))
(check-sat)
