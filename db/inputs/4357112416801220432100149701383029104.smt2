(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x16 x5) (fp.neg x0)) (fp.neg (fp.div RNE x19 x0))) (fp.add RNE (fp.div RNE (fp.mul RNE x7 x14) (fp.sub RNE x8 x0)) (fp.sub RNE (fp.neg x19) (fp.mul RNE x4 x24)))) (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x11 x7) (fp.mul RNE x10 x23))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.div RNE (fp.mul RNE x11 x2) (fp.add RNE x18 x1)) (fp.div RNE (fp.neg x1) (fp.mul RNE x4 x22))) (fp.neg (fp.neg (fp.neg x1)))) (fp.neg (fp.div RNE (fp.div RNE (fp.sub RNE x5 x22) (fp.div RNE x21 x21)) (fp.div RNE (fp.sub RNE x24 x9) (fp.neg x18))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE (fp.div RNE x17 x17) (fp.sub RNE x1 x12)) (fp.sub RNE (fp.neg x8) (fp.sub RNE x0 x3))) (fp.add RNE (fp.mul RNE (fp.neg x7) (fp.neg x10)) (fp.div RNE (fp.div RNE x15 x8) (fp.neg x21)))) (fp.neg (fp.neg (fp.mul RNE (fp.neg x4) (fp.mul RNE x8 x24))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE (fp.sub RNE x5 x15) (fp.neg x9)) (fp.mul RNE (fp.div RNE x1 x14) (fp.neg x17)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x23) (fp.sub RNE x21 x12)) (fp.add RNE (fp.sub RNE x0 x1) (fp.neg x4))) (fp.neg (fp.sub RNE (fp.neg x7) (fp.div RNE x20 x19))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x11 x10) (fp.neg x3)) (fp.add RNE (fp.neg x22) (fp.add RNE x1 x11))) (fp.sub RNE (fp.sub RNE (fp.add RNE x22 x24) (fp.sub RNE x21 x14)) (fp.add RNE (fp.add RNE x1 x2) (fp.sub RNE x19 x19)))) (fp.neg (fp.sub RNE (fp.neg (fp.neg x14)) (fp.div RNE (fp.mul RNE x10 x9) (fp.mul RNE x19 x17))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.neg (fp.add RNE x8 x16)) (fp.div RNE (fp.neg x10) (fp.div RNE x9 x24))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x23 x20) (fp.mul RNE x11 x15)) (fp.mul RNE (fp.add RNE x2 x22) (fp.div RNE x6 x16)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.add RNE x1 x8) (fp.neg x2))) (fp.add RNE (fp.add RNE (fp.div RNE x21 x5) (fp.mul RNE x13 x6)) (fp.add RNE (fp.mul RNE x23 x0) (fp.neg x13))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE (fp.add RNE x9 x14) (fp.div RNE x9 x14)) (fp.add RNE (fp.add RNE x18 x13) (fp.mul RNE x6 x18)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.add RNE x6 x5) (fp.sub RNE x14 x11)) (fp.add RNE (fp.mul RNE x7 x3) (fp.mul RNE x9 x9))) (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x5) (fp.mul RNE x8 x19)) (fp.div RNE (fp.neg x7) (fp.neg x13))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.mul RNE x17 x8) (fp.neg x20)) (fp.mul RNE (fp.add RNE x24 x14) (fp.mul RNE x12 x21))) (fp.neg (fp.neg (fp.add RNE x12 x6)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.div RNE x21 x0) (fp.neg x12))) (fp.add RNE (fp.add RNE (fp.sub RNE x23 x1) (fp.mul RNE x6 x3)) (fp.neg (fp.mul RNE x19 x1))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x10) (fp.mul RNE x17 x9)) (fp.mul RNE (fp.add RNE x20 x10) (fp.mul RNE x5 x6))) (fp.add RNE (fp.sub RNE (fp.div RNE x6 x0) (fp.sub RNE x0 x13)) (fp.mul RNE (fp.add RNE x21 x1) (fp.add RNE x1 x22)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x0) (fp.add RNE x19 x10)) (fp.mul RNE (fp.add RNE x19 x23) (fp.mul RNE x8 x11))) (fp.sub RNE (fp.div RNE (fp.sub RNE x17 x8) (fp.mul RNE x0 x7)) (fp.sub RNE (fp.div RNE x1 x2) (fp.neg x1))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg (fp.mul RNE x8 x11)) (fp.sub RNE (fp.mul RNE x5 x8) (fp.sub RNE x23 x18))) (fp.div RNE (fp.mul RNE (fp.neg x13) (fp.add RNE x0 x9)) (fp.neg (fp.sub RNE x14 x12)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x22 x8) (fp.add RNE x12 x18)) (fp.div RNE (fp.add RNE x18 x5) (fp.sub RNE x15 x17))) (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x9) (fp.sub RNE x15 x10)) (fp.add RNE (fp.neg x6) (fp.sub RNE x23 x9))))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x0 x15)) (fp.add RNE (fp.div RNE x16 x10) (fp.neg x2))) (fp.mul RNE (fp.neg (fp.sub RNE x1 x8)) (fp.div RNE (fp.sub RNE x11 x19) (fp.mul RNE x15 x13)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.neg x17) (fp.add RNE x10 x19)) (fp.sub RNE (fp.div RNE x22 x5) (fp.mul RNE x17 x9))) (fp.neg (fp.add RNE (fp.div RNE x2 x9) (fp.add RNE x18 x20))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE x0 x22) (fp.sub RNE x11 x1)) (fp.div RNE (fp.neg x7) (fp.div RNE x24 x4))) (fp.add RNE (fp.add RNE (fp.mul RNE x3 x16) (fp.neg x23)) (fp.sub RNE (fp.sub RNE x16 x12) (fp.sub RNE x18 x20)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x7 x11) (fp.mul RNE x6 x18)) (fp.sub RNE (fp.sub RNE x0 x4) (fp.div RNE x5 x14))) (fp.div RNE (fp.mul RNE (fp.neg x20) (fp.neg x13)) (fp.div RNE (fp.mul RNE x6 x15) (fp.add RNE x12 x23))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.add RNE x1 x15) (fp.neg x20)) (fp.sub RNE (fp.neg x11) (fp.div RNE x3 x0))) (fp.sub RNE (fp.div RNE (fp.div RNE x15 x2) (fp.sub RNE x13 x5)) (fp.mul RNE (fp.sub RNE x13 x23) (fp.mul RNE x18 x10)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.add RNE x23 x15) (fp.add RNE x10 x20))) (fp.add RNE (fp.div RNE (fp.add RNE x17 x13) (fp.div RNE x18 x16)) (fp.div RNE (fp.div RNE x1 x13) (fp.div RNE x17 x24))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.neg x18) (fp.add RNE x5 x3)) (fp.sub RNE (fp.add RNE x3 x21) (fp.neg x3))) (fp.sub RNE (fp.neg (fp.add RNE x8 x14)) (fp.add RNE (fp.neg x15) (fp.add RNE x5 x23)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.neg x23) (fp.sub RNE x4 x16)) (fp.neg (fp.add RNE x4 x23))) (fp.neg (fp.div RNE (fp.add RNE x5 x20) (fp.mul RNE x3 x15))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg (fp.sub RNE x15 x18)) (fp.sub RNE (fp.neg x22) (fp.sub RNE x20 x23)))) (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.add RNE x10 x20)) (fp.neg (fp.add RNE x22 x12))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.sub RNE x9 x11) (fp.div RNE x14 x4)) (fp.mul RNE (fp.add RNE x8 x10) (fp.neg x3))) (fp.add RNE (fp.neg (fp.mul RNE x1 x24)) (fp.sub RNE (fp.mul RNE x3 x23) (fp.div RNE x19 x23)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.mul RNE x8 x5) (fp.neg x1)) (fp.mul RNE (fp.sub RNE x3 x18) (fp.sub RNE x18 x4))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE (fp.mul RNE x21 x18) (fp.div RNE x24 x1)) (fp.sub RNE (fp.mul RNE x9 x14) (fp.mul RNE x1 x13))) (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x2) (fp.div RNE x20 x24)) (fp.add RNE (fp.neg x12) (fp.add RNE x6 x11)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x0 x22) (fp.neg x19)) (fp.div RNE (fp.sub RNE x0 x0) (fp.mul RNE x2 x5))) (fp.add RNE (fp.div RNE (fp.add RNE x16 x5) (fp.div RNE x6 x19)) (fp.add RNE (fp.add RNE x11 x21) (fp.mul RNE x10 x9))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg (fp.add RNE x23 x3)) (fp.add RNE (fp.add RNE x17 x17) (fp.neg x19))) (fp.sub RNE (fp.add RNE (fp.sub RNE x21 x15) (fp.mul RNE x23 x21)) (fp.mul RNE (fp.mul RNE x13 x2) (fp.div RNE x24 x14)))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x23) (fp.add RNE x9 x23)) (fp.mul RNE (fp.add RNE x24 x22) (fp.mul RNE x24 x22))) (fp.add RNE (fp.neg (fp.div RNE x6 x16)) (fp.mul RNE (fp.mul RNE x4 x14) (fp.sub RNE x22 x17))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.div RNE (fp.neg x7) (fp.div RNE x4 x16))) (fp.div RNE (fp.sub RNE (fp.neg x20) (fp.add RNE x7 x12)) (fp.neg (fp.mul RNE x1 x11)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.mul RNE x13 x11) (fp.neg x5))) (fp.add RNE (fp.mul RNE (fp.sub RNE x5 x5) (fp.mul RNE x22 x4)) (fp.neg (fp.sub RNE x10 x1))))))
(check-sat)
