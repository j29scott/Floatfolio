(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.add RNE x4 x11)) (fp.add RNE (fp.mul RNE x8 x4) (fp.div RNE x8 x14))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x8) (fp.neg x10)) (fp.sub RNE (fp.sub RNE x14 x7) (fp.div RNE x10 x8))))
(assert (fp.geq (fp.sub RNE (fp.neg x1) (fp.div RNE x8 x13)) (fp.mul RNE (fp.neg x6) (fp.mul RNE x7 x8))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x1 x13) (fp.div RNE x4 x10)) (fp.mul RNE (fp.neg x2) (fp.add RNE x11 x9))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x6) (fp.sub RNE x10 x6)) (fp.mul RNE (fp.mul RNE x3 x14) (fp.div RNE x4 x13))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x3) (fp.add RNE x11 x15)) (fp.neg (fp.mul RNE x5 x9))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x4) (fp.neg x8)) (fp.div RNE (fp.div RNE x0 x10) (fp.div RNE x10 x11))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x1 x15) (fp.neg x14)) (fp.div RNE (fp.sub RNE x2 x9) (fp.div RNE x10 x15))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x13 x4) (fp.add RNE x5 x10)) (fp.sub RNE (fp.neg x9) (fp.div RNE x4 x0))))
(assert (fp.geq (fp.div RNE (fp.add RNE x14 x1) (fp.mul RNE x1 x14)) (fp.neg (fp.div RNE x12 x5))))
(assert (fp.eq (fp.sub RNE (fp.neg x13) (fp.mul RNE x1 x13)) (fp.div RNE (fp.sub RNE x7 x2) (fp.add RNE x2 x9))))
(check-sat)
