(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE x18 x13) (fp.mul RNE x10 x15)) (fp.sub RNE (fp.add RNE x7 x4) (fp.mul RNE x7 x22))) (fp.neg (fp.div RNE (fp.sub RNE x6 x11) (fp.mul RNE x2 x6)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg x0) (fp.sub RNE x15 x21)) (fp.mul RNE (fp.neg x3) (fp.sub RNE x0 x2))) (fp.div RNE (fp.mul RNE (fp.add RNE x4 x5) (fp.sub RNE x10 x15)) (fp.add RNE (fp.neg x2) (fp.add RNE x0 x7)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x0 x21) (fp.add RNE x12 x20)) (fp.div RNE (fp.neg x15) (fp.sub RNE x19 x21))) (fp.sub RNE (fp.div RNE (fp.div RNE x6 x8) (fp.mul RNE x18 x16)) (fp.add RNE (fp.sub RNE x5 x2) (fp.mul RNE x15 x23)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x13 x16) (fp.sub RNE x3 x11)) (fp.mul RNE (fp.mul RNE x14 x23) (fp.mul RNE x7 x13))) (fp.neg (fp.div RNE (fp.mul RNE x2 x21) (fp.add RNE x6 x23)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.neg x2)) (fp.neg (fp.sub RNE x8 x17))) (fp.sub RNE (fp.neg (fp.sub RNE x0 x13)) (fp.sub RNE (fp.sub RNE x18 x15) (fp.sub RNE x15 x8)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x16 x16) (fp.sub RNE x1 x4)) (fp.add RNE (fp.add RNE x2 x9) (fp.div RNE x9 x4))) (fp.mul RNE (fp.neg (fp.sub RNE x11 x16)) (fp.sub RNE (fp.mul RNE x16 x13) (fp.add RNE x19 x3)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.sub RNE x20 x9) (fp.mul RNE x14 x22)) (fp.add RNE (fp.add RNE x20 x6) (fp.mul RNE x18 x10))) (fp.add RNE (fp.div RNE (fp.add RNE x21 x16) (fp.mul RNE x15 x23)) (fp.neg (fp.add RNE x4 x16)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.div RNE x0 x6) (fp.add RNE x23 x12))) (fp.sub RNE (fp.add RNE (fp.mul RNE x23 x3) (fp.add RNE x14 x21)) (fp.sub RNE (fp.mul RNE x9 x13) (fp.sub RNE x8 x4)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE x14 x22) (fp.mul RNE x5 x1)) (fp.div RNE (fp.mul RNE x23 x10) (fp.neg x3))) (fp.add RNE (fp.neg (fp.div RNE x19 x1)) (fp.neg (fp.neg x4)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.add RNE x17 x2)) (fp.mul RNE (fp.sub RNE x7 x3) (fp.div RNE x3 x0))) (fp.div RNE (fp.mul RNE (fp.mul RNE x15 x22) (fp.add RNE x1 x0)) (fp.mul RNE (fp.add RNE x16 x23) (fp.sub RNE x22 x18)))))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE x22 x0))) (fp.mul RNE (fp.sub RNE (fp.add RNE x20 x22) (fp.add RNE x15 x18)) (fp.sub RNE (fp.sub RNE x16 x14) (fp.neg x16)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE x11 x2)) (fp.neg (fp.sub RNE x22 x20))) (fp.neg (fp.neg (fp.neg x13)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE x18 x15) (fp.add RNE x13 x7)) (fp.mul RNE (fp.neg x11) (fp.add RNE x16 x21))) (fp.add RNE (fp.mul RNE (fp.add RNE x8 x23) (fp.div RNE x9 x18)) (fp.sub RNE (fp.mul RNE x2 x8) (fp.mul RNE x15 x18)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.div RNE x7 x13) (fp.mul RNE x0 x6))) (fp.neg (fp.sub RNE (fp.sub RNE x15 x17) (fp.mul RNE x17 x1)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE x6 x20) (fp.add RNE x8 x13)) (fp.sub RNE (fp.neg x22) (fp.mul RNE x16 x17))) (fp.neg (fp.div RNE (fp.mul RNE x13 x0) (fp.sub RNE x0 x22)))))
(check-sat)
