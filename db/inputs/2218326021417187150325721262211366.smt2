(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.mul RNE x10 x1) (fp.mul RNE x4 x1)) (fp.neg (fp.sub RNE x8 x4))) (fp.add RNE (fp.div RNE (fp.add RNE x13 x10) (fp.neg x10)) (fp.div RNE (fp.neg x8) (fp.neg x2)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.mul RNE x3 x9)) (fp.mul RNE (fp.sub RNE x13 x3) (fp.add RNE x11 x12))) (fp.mul RNE (fp.mul RNE (fp.div RNE x1 x6) (fp.sub RNE x11 x0)) (fp.div RNE (fp.add RNE x7 x0) (fp.neg x9)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x5) (fp.div RNE x0 x6)) (fp.add RNE (fp.neg x12) (fp.mul RNE x10 x8))) (fp.add RNE (fp.mul RNE (fp.mul RNE x5 x12) (fp.mul RNE x13 x9)) (fp.mul RNE (fp.div RNE x5 x0) (fp.add RNE x3 x5)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg x12) (fp.mul RNE x9 x3)) (fp.div RNE (fp.div RNE x3 x6) (fp.sub RNE x11 x7))) (fp.add RNE (fp.neg (fp.sub RNE x3 x0)) (fp.sub RNE (fp.add RNE x4 x11) (fp.neg x8)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x10 x10) (fp.div RNE x3 x1))) (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x9) (fp.div RNE x11 x1)) (fp.sub RNE (fp.div RNE x6 x9) (fp.add RNE x11 x2)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x2 x9) (fp.div RNE x8 x6)) (fp.add RNE (fp.div RNE x0 x13) (fp.sub RNE x11 x5))) (fp.neg (fp.add RNE (fp.add RNE x13 x9) (fp.add RNE x1 x11)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg x13)) (fp.sub RNE (fp.mul RNE x0 x3) (fp.div RNE x9 x4))) (fp.neg (fp.div RNE (fp.sub RNE x11 x2) (fp.add RNE x10 x7)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.neg x10) (fp.neg x11)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x2 x9))) (fp.sub RNE (fp.neg (fp.add RNE x1 x7)) (fp.mul RNE (fp.add RNE x1 x1) (fp.add RNE x3 x6)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x2 x10) (fp.add RNE x0 x9))) (fp.div RNE (fp.neg (fp.add RNE x2 x10)) (fp.add RNE (fp.add RNE x8 x3) (fp.neg x4)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE x12 x12) (fp.neg x1))) (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x5) (fp.div RNE x8 x13)) (fp.div RNE (fp.sub RNE x7 x4) (fp.add RNE x10 x9)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x1) (fp.mul RNE x6 x1)) (fp.sub RNE (fp.div RNE x1 x13) (fp.add RNE x2 x1))) (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x1) (fp.mul RNE x1 x5)) (fp.div RNE (fp.div RNE x6 x5) (fp.div RNE x10 x6)))))
(check-sat)
