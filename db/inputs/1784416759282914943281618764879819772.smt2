(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.div RNE x10 x6) (fp.add RNE x8 x6)) (fp.neg (fp.add RNE x16 x15))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x8 x8) (fp.add RNE x14 x2)) (fp.neg (fp.sub RNE x13 x0))))
(assert (fp.lt (fp.neg (fp.mul RNE x13 x8)) (fp.mul RNE (fp.add RNE x0 x0) (fp.sub RNE x14 x12))))
(assert (fp.leq (fp.neg (fp.mul RNE x12 x15)) (fp.div RNE (fp.neg x9) (fp.neg x1))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x12 x16) (fp.neg x5)) (fp.sub RNE (fp.add RNE x11 x10) (fp.div RNE x7 x7))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x11 x1) (fp.neg x16)) (fp.div RNE (fp.sub RNE x1 x0) (fp.div RNE x7 x7))))
(assert (fp.leq (fp.add RNE (fp.div RNE x9 x6) (fp.sub RNE x11 x6)) (fp.div RNE (fp.sub RNE x3 x2) (fp.neg x2))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x9 x7) (fp.add RNE x15 x4)) (fp.add RNE (fp.neg x3) (fp.sub RNE x3 x7))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x11 x0) (fp.sub RNE x10 x4)) (fp.add RNE (fp.mul RNE x6 x12) (fp.sub RNE x15 x15))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x6 x1) (fp.sub RNE x0 x11)) (fp.neg (fp.mul RNE x4 x16))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x16 x3) (fp.add RNE x10 x6)) (fp.neg (fp.mul RNE x1 x11))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x11 x8) (fp.sub RNE x11 x16)) (fp.sub RNE (fp.neg x5) (fp.neg x9))))
(assert (fp.lt (fp.add RNE (fp.div RNE x15 x4) (fp.mul RNE x2 x11)) (fp.sub RNE (fp.neg x12) (fp.add RNE x1 x6))))
(assert (fp.gt (fp.neg (fp.div RNE x1 x8)) (fp.mul RNE (fp.div RNE x10 x4) (fp.add RNE x14 x14))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x8 x8) (fp.sub RNE x14 x10)) (fp.add RNE (fp.sub RNE x13 x5) (fp.mul RNE x0 x4))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x6 x3) (fp.div RNE x12 x7)) (fp.sub RNE (fp.mul RNE x6 x14) (fp.neg x11))))
(assert (fp.leq (fp.div RNE (fp.add RNE x8 x1) (fp.neg x0)) (fp.add RNE (fp.neg x2) (fp.sub RNE x2 x4))))
(assert (fp.lt (fp.neg (fp.sub RNE x12 x4)) (fp.add RNE (fp.neg x3) (fp.sub RNE x14 x12))))
(assert (fp.geq (fp.neg (fp.div RNE x9 x16)) (fp.div RNE (fp.sub RNE x15 x3) (fp.mul RNE x16 x6))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x3 x3) (fp.mul RNE x2 x8)) (fp.neg (fp.sub RNE x16 x9))))
(check-sat)
