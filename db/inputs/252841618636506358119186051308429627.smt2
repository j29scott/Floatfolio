(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE x10 x10) (fp.mul RNE x5 x7))) (fp.sub RNE (fp.div RNE (fp.neg x2) (fp.add RNE x10 x4)) (fp.sub RNE (fp.div RNE x3 x11) (fp.mul RNE x4 x3)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.mul RNE x10 x6) (fp.neg x11)) (fp.add RNE (fp.add RNE x8 x4) (fp.mul RNE x8 x1))) (fp.sub RNE (fp.neg (fp.add RNE x11 x6)) (fp.sub RNE (fp.mul RNE x4 x9) (fp.add RNE x6 x7)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x10) (fp.add RNE x6 x9)) (fp.sub RNE (fp.mul RNE x0 x7) (fp.add RNE x11 x8))) (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x10) (fp.div RNE x10 x7)) (fp.sub RNE (fp.mul RNE x1 x11) (fp.mul RNE x1 x6)))))
(check-sat)
