(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.neg (fp.neg x1)) (fp.neg (fp.add RNE x4 x3))) (fp.neg (fp.neg (fp.mul RNE x3 x10)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x0 x7) (fp.mul RNE x5 x6)) (fp.div RNE (fp.div RNE x9 x9) (fp.div RNE x3 x1))) (fp.div RNE (fp.mul RNE (fp.add RNE x7 x1) (fp.neg x0)) (fp.neg (fp.add RNE x8 x2)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE x3 x0) (fp.mul RNE x6 x7)) (fp.mul RNE (fp.add RNE x9 x9) (fp.neg x4))) (fp.mul RNE (fp.neg (fp.sub RNE x2 x10)) (fp.add RNE (fp.div RNE x8 x5) (fp.neg x7)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x5 x10) (fp.mul RNE x3 x2))) (fp.div RNE (fp.mul RNE (fp.mul RNE x0 x8) (fp.add RNE x1 x5)) (fp.neg (fp.add RNE x1 x4)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.sub RNE x7 x5) (fp.add RNE x10 x2)) (fp.neg (fp.add RNE x0 x7))) (fp.sub RNE (fp.mul RNE (fp.add RNE x10 x6) (fp.mul RNE x5 x4)) (fp.div RNE (fp.sub RNE x1 x1) (fp.sub RNE x5 x1)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg x7) (fp.neg x0)) (fp.div RNE (fp.div RNE x5 x7) (fp.neg x10))) (fp.sub RNE (fp.div RNE (fp.mul RNE x9 x4) (fp.add RNE x3 x0)) (fp.sub RNE (fp.sub RNE x7 x4) (fp.sub RNE x4 x1)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x6 x3) (fp.mul RNE x8 x6)) (fp.mul RNE (fp.mul RNE x4 x9) (fp.sub RNE x8 x3))) (fp.div RNE (fp.sub RNE (fp.mul RNE x5 x4) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x6 x0) (fp.neg x0)))))
(check-sat)
