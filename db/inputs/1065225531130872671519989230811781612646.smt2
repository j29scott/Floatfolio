(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg x9) (fp.mul RNE x0 x5)))
(assert (fp.eq (fp.mul RNE x15 x10) (fp.neg x17)))
(assert (fp.geq (fp.sub RNE x12 x10) (fp.add RNE x14 x0)))
(assert (fp.leq (fp.div RNE x8 x3) (fp.mul RNE x12 x20)))
(assert (fp.leq (fp.neg x19) (fp.mul RNE x0 x16)))
(assert (fp.eq (fp.div RNE x13 x0) (fp.mul RNE x11 x5)))
(assert (fp.geq (fp.sub RNE x17 x4) (fp.mul RNE x11 x18)))
(assert (fp.lt (fp.sub RNE x9 x19) (fp.div RNE x0 x20)))
(assert (fp.leq (fp.div RNE x5 x14) (fp.sub RNE x18 x16)))
(assert (fp.leq (fp.add RNE x13 x9) (fp.add RNE x6 x9)))
(assert (fp.geq (fp.add RNE x16 x7) (fp.neg x13)))
(assert (fp.eq (fp.sub RNE x6 x5) (fp.sub RNE x18 x5)))
(check-sat)
