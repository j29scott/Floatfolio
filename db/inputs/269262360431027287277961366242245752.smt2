(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE (fp.sub RNE x15 x4) (fp.mul RNE x14 x3))) (fp.mul RNE (fp.div RNE (fp.div RNE x13 x12) (fp.add RNE x9 x1)) (fp.sub RNE (fp.neg x2) (fp.sub RNE x14 x3)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x15 x10) (fp.neg x0)) (fp.mul RNE (fp.neg x1) (fp.div RNE x6 x9))) (fp.div RNE (fp.mul RNE (fp.sub RNE x7 x2) (fp.div RNE x11 x14)) (fp.neg (fp.add RNE x3 x6))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.neg (fp.mul RNE x7 x15))) (fp.neg (fp.mul RNE (fp.neg x7) (fp.neg x8)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.div RNE x7 x10) (fp.div RNE x14 x8)) (fp.add RNE (fp.sub RNE x10 x9) (fp.neg x9))) (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x13) (fp.neg x10)) (fp.neg (fp.div RNE x11 x14))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE (fp.sub RNE x14 x5) (fp.neg x7)) (fp.add RNE (fp.sub RNE x11 x5) (fp.neg x0))) (fp.div RNE (fp.add RNE (fp.div RNE x8 x15) (fp.sub RNE x6 x4)) (fp.mul RNE (fp.div RNE x1 x10) (fp.add RNE x10 x9)))) (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x0 x0) (fp.div RNE x8 x3)) (fp.div RNE (fp.mul RNE x2 x6) (fp.div RNE x2 x1))))))
(check-sat)
