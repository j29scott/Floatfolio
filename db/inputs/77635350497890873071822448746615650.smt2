(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x0 x6) (fp.mul RNE x4 x3)))
(assert (fp.geq (fp.add RNE x0 x9) (fp.div RNE x2 x6)))
(assert (fp.leq (fp.add RNE x7 x3) (fp.mul RNE x9 x6)))
(assert (fp.eq (fp.neg x1) (fp.mul RNE x2 x6)))
(assert (fp.geq (fp.div RNE x3 x3) (fp.mul RNE x2 x6)))
(assert (fp.geq (fp.div RNE x6 x9) (fp.neg x8)))
(assert (fp.geq (fp.add RNE x8 x9) (fp.div RNE x7 x3)))
(assert (fp.lt (fp.sub RNE x7 x1) (fp.mul RNE x4 x6)))
(assert (fp.eq (fp.mul RNE x5 x7) (fp.mul RNE x3 x3)))
(assert (fp.geq (fp.mul RNE x8 x3) (fp.mul RNE x7 x2)))
(assert (fp.eq (fp.sub RNE x8 x6) (fp.neg x0)))
(assert (fp.geq (fp.sub RNE x9 x8) (fp.add RNE x7 x2)))
(assert (fp.leq (fp.div RNE x3 x9) (fp.div RNE x1 x6)))
(assert (fp.leq (fp.div RNE x5 x2) (fp.mul RNE x5 x6)))
(assert (fp.lt (fp.neg x6) (fp.mul RNE x7 x6)))
(assert (fp.eq (fp.add RNE x3 x4) (fp.sub RNE x7 x5)))
(assert (fp.geq (fp.sub RNE x8 x4) (fp.div RNE x8 x0)))
(check-sat)
