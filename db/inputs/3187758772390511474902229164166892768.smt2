(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x5 x10) (fp.sub RNE x13 x15)) (fp.neg (fp.div RNE x3 x14))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x4 x16) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x16 x17) (fp.neg x18)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x4))) (fp.add RNE (fp.sub RNE (fp.mul RNE x6 x1) (fp.sub RNE x8 x5)) (fp.add RNE (fp.add RNE x14 x12) (fp.mul RNE x8 x14)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE x18 x2) (fp.neg x1))) (fp.mul RNE (fp.div RNE (fp.add RNE x6 x0) (fp.mul RNE x11 x13)) (fp.add RNE (fp.mul RNE x0 x8) (fp.div RNE x15 x15)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg x16) (fp.sub RNE x11 x3)) (fp.neg (fp.div RNE x11 x18))) (fp.add RNE (fp.div RNE (fp.neg x15) (fp.div RNE x7 x17)) (fp.add RNE (fp.add RNE x12 x13) (fp.div RNE x11 x8)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE x8 x12) (fp.div RNE x2 x0)) (fp.add RNE (fp.sub RNE x3 x4) (fp.neg x5))) (fp.sub RNE (fp.div RNE (fp.neg x3) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x2 x0) (fp.add RNE x11 x11)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.neg x1) (fp.add RNE x0 x9))) (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x10) (fp.div RNE x16 x1)) (fp.add RNE (fp.div RNE x2 x3) (fp.mul RNE x1 x3)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE x13 x18) (fp.neg x8))) (fp.mul RNE (fp.neg (fp.div RNE x1 x17)) (fp.mul RNE (fp.add RNE x10 x8) (fp.sub RNE x15 x7)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x10 x1) (fp.neg x7)) (fp.div RNE (fp.add RNE x10 x19) (fp.add RNE x3 x1))) (fp.div RNE (fp.mul RNE (fp.sub RNE x15 x13) (fp.mul RNE x7 x5)) (fp.sub RNE (fp.div RNE x19 x12) (fp.neg x11)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE x1 x5) (fp.div RNE x4 x16)) (fp.add RNE (fp.add RNE x8 x16) (fp.sub RNE x3 x13))) (fp.add RNE (fp.sub RNE (fp.div RNE x6 x15) (fp.add RNE x11 x9)) (fp.mul RNE (fp.add RNE x15 x1) (fp.div RNE x7 x19)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.neg x2)) (fp.sub RNE (fp.add RNE x8 x5) (fp.div RNE x4 x5))) (fp.add RNE (fp.div RNE (fp.mul RNE x14 x4) (fp.mul RNE x13 x12)) (fp.mul RNE (fp.neg x3) (fp.add RNE x9 x7)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE x12 x4) (fp.neg x13)) (fp.sub RNE (fp.neg x16) (fp.div RNE x10 x19))) (fp.neg (fp.add RNE (fp.add RNE x13 x18) (fp.sub RNE x19 x6)))))
(check-sat)
