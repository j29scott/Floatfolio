(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.neg x7) (fp.sub RNE x1 x14)) (fp.add RNE (fp.mul RNE x12 x1) (fp.div RNE x10 x14))))
(assert (fp.geq (fp.mul RNE (fp.neg x8) (fp.mul RNE x13 x12)) (fp.div RNE (fp.add RNE x10 x0) (fp.add RNE x1 x9))))
(assert (fp.geq (fp.neg (fp.add RNE x13 x2)) (fp.neg (fp.sub RNE x7 x12))))
(assert (fp.gt (fp.mul RNE (fp.neg x7) (fp.div RNE x11 x8)) (fp.sub RNE (fp.sub RNE x13 x2) (fp.mul RNE x5 x11))))
(assert (fp.leq (fp.add RNE (fp.add RNE x4 x10) (fp.sub RNE x5 x10)) (fp.mul RNE (fp.add RNE x0 x2) (fp.add RNE x14 x3))))
(assert (fp.lt (fp.neg (fp.div RNE x5 x6)) (fp.add RNE (fp.mul RNE x6 x0) (fp.sub RNE x5 x4))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x1 x2) (fp.div RNE x8 x7)) (fp.neg (fp.add RNE x14 x0))))
(assert (fp.lt (fp.div RNE (fp.neg x5) (fp.add RNE x13 x2)) (fp.neg (fp.neg x11))))
(check-sat)
