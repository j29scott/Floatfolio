(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x10 x10) (fp.div RNE x8 x8)) (fp.div RNE (fp.mul RNE x6 x10) (fp.add RNE x11 x3))) (fp.neg (fp.div RNE (fp.neg x9) (fp.add RNE x5 x7)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.div RNE x9 x7) (fp.add RNE x1 x0)) (fp.neg (fp.add RNE x2 x2))) (fp.mul RNE (fp.div RNE (fp.add RNE x5 x5) (fp.mul RNE x12 x2)) (fp.div RNE (fp.mul RNE x0 x4) (fp.add RNE x0 x7)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.sub RNE x8 x9) (fp.mul RNE x12 x6)) (fp.neg (fp.div RNE x8 x5))) (fp.add RNE (fp.neg (fp.sub RNE x5 x9)) (fp.mul RNE (fp.mul RNE x4 x2) (fp.div RNE x6 x5)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg x3) (fp.sub RNE x3 x11)) (fp.sub RNE (fp.mul RNE x1 x7) (fp.div RNE x0 x10))) (fp.add RNE (fp.mul RNE (fp.neg x4) (fp.mul RNE x7 x7)) (fp.mul RNE (fp.mul RNE x5 x2) (fp.sub RNE x6 x11)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x5 x9) (fp.sub RNE x6 x2)) (fp.neg (fp.add RNE x5 x6))) (fp.sub RNE (fp.div RNE (fp.div RNE x6 x4) (fp.sub RNE x5 x0)) (fp.neg (fp.div RNE x0 x6)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.sub RNE x5 x9)) (fp.mul RNE (fp.add RNE x9 x3) (fp.sub RNE x4 x8))) (fp.neg (fp.add RNE (fp.sub RNE x3 x10) (fp.mul RNE x2 x4)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE x3 x3)) (fp.sub RNE (fp.div RNE x2 x5) (fp.div RNE x12 x12))) (fp.neg (fp.sub RNE (fp.add RNE x4 x2) (fp.div RNE x10 x6)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x9) (fp.add RNE x5 x11)) (fp.div RNE (fp.sub RNE x7 x8) (fp.add RNE x7 x10))) (fp.sub RNE (fp.neg (fp.div RNE x10 x3)) (fp.add RNE (fp.sub RNE x10 x8) (fp.neg x7)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x4 x4) (fp.mul RNE x9 x1)) (fp.add RNE (fp.mul RNE x10 x5) (fp.sub RNE x0 x1))) (fp.sub RNE (fp.add RNE (fp.mul RNE x9 x7) (fp.div RNE x5 x10)) (fp.div RNE (fp.sub RNE x12 x8) (fp.div RNE x8 x5)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.add RNE x4 x2) (fp.div RNE x4 x6)) (fp.add RNE (fp.neg x10) (fp.mul RNE x12 x7))) (fp.neg (fp.mul RNE (fp.sub RNE x6 x4) (fp.neg x8)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.mul RNE x2 x10) (fp.add RNE x10 x0)) (fp.sub RNE (fp.div RNE x7 x4) (fp.sub RNE x12 x1))) (fp.sub RNE (fp.sub RNE (fp.div RNE x0 x11) (fp.div RNE x0 x7)) (fp.sub RNE (fp.mul RNE x4 x2) (fp.sub RNE x10 x5)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.sub RNE x2 x3) (fp.sub RNE x4 x12))) (fp.div RNE (fp.mul RNE (fp.neg x10) (fp.neg x7)) (fp.neg (fp.add RNE x0 x12)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x12) (fp.sub RNE x4 x2)) (fp.sub RNE (fp.sub RNE x6 x10) (fp.div RNE x0 x11))) (fp.sub RNE (fp.div RNE (fp.add RNE x0 x6) (fp.mul RNE x12 x10)) (fp.neg (fp.add RNE x3 x9)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.div RNE x0 x9) (fp.mul RNE x3 x2)) (fp.div RNE (fp.div RNE x3 x10) (fp.neg x9))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x10 x0)) (fp.sub RNE (fp.add RNE x2 x1) (fp.add RNE x4 x6)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.add RNE x6 x8) (fp.sub RNE x2 x5))) (fp.add RNE (fp.neg (fp.mul RNE x11 x9)) (fp.neg (fp.add RNE x5 x7)))))
(check-sat)
