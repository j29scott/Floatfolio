(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE x2 x4) (fp.div RNE x15 x13)) (fp.div RNE (fp.add RNE x2 x5) (fp.mul RNE x13 x6))))
(assert (fp.gt (fp.neg (fp.sub RNE x5 x10)) (fp.mul RNE (fp.neg x5) (fp.neg x10))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x13 x7) (fp.sub RNE x6 x13)) (fp.mul RNE (fp.add RNE x8 x5) (fp.mul RNE x7 x13))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x2 x0) (fp.div RNE x2 x13)) (fp.neg (fp.neg x7))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x1 x11) (fp.neg x8)) (fp.mul RNE (fp.div RNE x14 x15) (fp.div RNE x6 x10))))
(assert (fp.eq (fp.add RNE (fp.neg x10) (fp.sub RNE x2 x1)) (fp.neg (fp.mul RNE x13 x11))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x5 x6) (fp.sub RNE x10 x12)) (fp.neg (fp.add RNE x4 x12))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x15 x14) (fp.div RNE x11 x9)) (fp.div RNE (fp.sub RNE x2 x14) (fp.mul RNE x6 x0))))
(assert (fp.leq (fp.div RNE (fp.neg x11) (fp.add RNE x7 x13)) (fp.div RNE (fp.sub RNE x13 x7) (fp.div RNE x0 x6))))
(assert (fp.geq (fp.sub RNE (fp.neg x3) (fp.sub RNE x13 x3)) (fp.add RNE (fp.add RNE x11 x9) (fp.sub RNE x12 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x5 x2) (fp.mul RNE x0 x15)) (fp.add RNE (fp.neg x5) (fp.neg x9))))
(assert (fp.eq (fp.div RNE (fp.add RNE x2 x2) (fp.add RNE x6 x11)) (fp.neg (fp.div RNE x7 x2))))
(assert (fp.lt (fp.div RNE (fp.add RNE x7 x5) (fp.div RNE x11 x14)) (fp.div RNE (fp.mul RNE x10 x0) (fp.add RNE x5 x10))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x10 x3) (fp.sub RNE x2 x12)) (fp.mul RNE (fp.add RNE x10 x12) (fp.div RNE x6 x15))))
(assert (fp.lt (fp.neg (fp.neg x2)) (fp.add RNE (fp.sub RNE x15 x12) (fp.mul RNE x4 x7))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x10 x3) (fp.div RNE x1 x11)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x10 x1))))
(assert (fp.leq (fp.sub RNE (fp.neg x0) (fp.add RNE x13 x11)) (fp.div RNE (fp.add RNE x12 x2) (fp.sub RNE x15 x13))))
(assert (fp.eq (fp.neg (fp.sub RNE x4 x1)) (fp.neg (fp.add RNE x2 x12))))
(check-sat)
