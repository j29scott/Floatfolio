(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE (fp.mul RNE x8 x6) (fp.div RNE x3 x10)) (fp.neg (fp.add RNE x2 x0)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x4 x2) (fp.neg x6))) (fp.div RNE (fp.sub RNE (fp.add RNE x7 x7) (fp.mul RNE x6 x1)) (fp.div RNE (fp.add RNE x10 x7) (fp.mul RNE x1 x5))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x7) (fp.mul RNE x7 x9)) (fp.sub RNE (fp.mul RNE x7 x7) (fp.sub RNE x3 x1))) (fp.neg (fp.mul RNE (fp.sub RNE x2 x0) (fp.sub RNE x7 x9)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x0 x0) (fp.mul RNE x0 x10)) (fp.add RNE (fp.neg x7) (fp.add RNE x9 x1))) (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.add RNE x2 x6)) (fp.neg (fp.neg x1))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x9 x8) (fp.neg x3)) (fp.mul RNE (fp.div RNE x3 x2) (fp.mul RNE x10 x2))) (fp.sub RNE (fp.add RNE (fp.neg x4) (fp.sub RNE x0 x2)) (fp.sub RNE (fp.add RNE x9 x4) (fp.sub RNE x5 x9)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x8 x3) (fp.neg x1)) (fp.neg (fp.add RNE x10 x7))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE x6 x8) (fp.neg x9))) (fp.sub RNE (fp.add RNE (fp.add RNE x2 x5) (fp.sub RNE x4 x0)) (fp.mul RNE (fp.neg x6) (fp.neg x9)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x8 x6) (fp.add RNE x4 x0)) (fp.sub RNE (fp.neg x1) (fp.add RNE x1 x10))) (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.sub RNE x8 x3)) (fp.add RNE (fp.div RNE x4 x1) (fp.neg x9))))))
(check-sat)
