(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.sub RNE x0 x7)) (fp.mul RNE (fp.neg x6) (fp.div RNE x9 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x9 x8)) (fp.add RNE (fp.sub RNE x0 x8) (fp.add RNE x9 x0))))
(assert (fp.leq (fp.neg (fp.mul RNE x7 x3)) (fp.div RNE (fp.neg x8) (fp.neg x2))))
(assert (fp.gt (fp.div RNE (fp.add RNE x2 x4) (fp.mul RNE x3 x8)) (fp.div RNE (fp.mul RNE x3 x8) (fp.add RNE x4 x2))))
(assert (fp.eq (fp.neg (fp.mul RNE x2 x3)) (fp.sub RNE (fp.div RNE x7 x2) (fp.add RNE x7 x5))))
(assert (fp.leq (fp.div RNE (fp.neg x9) (fp.mul RNE x0 x3)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x0 x5))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x7 x9) (fp.div RNE x5 x9)) (fp.div RNE (fp.add RNE x4 x1) (fp.div RNE x5 x6))))
(check-sat)
