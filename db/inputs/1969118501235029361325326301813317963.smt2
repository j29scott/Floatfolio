(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE x0 x13) (fp.sub RNE x13 x13)))
(assert (fp.geq (fp.add RNE x0 x12) (fp.div RNE x15 x12)))
(assert (fp.geq (fp.add RNE x11 x15) (fp.add RNE x13 x0)))
(assert (fp.lt (fp.mul RNE x4 x13) (fp.neg x2)))
(assert (fp.eq (fp.neg x9) (fp.div RNE x10 x8)))
(assert (fp.gt (fp.sub RNE x11 x11) (fp.sub RNE x2 x11)))
(assert (fp.eq (fp.div RNE x15 x13) (fp.sub RNE x6 x0)))
(assert (fp.lt (fp.add RNE x1 x9) (fp.sub RNE x4 x3)))
(assert (fp.lt (fp.sub RNE x7 x2) (fp.sub RNE x0 x6)))
(assert (fp.eq (fp.add RNE x7 x0) (fp.neg x5)))
(assert (fp.geq (fp.neg x11) (fp.sub RNE x5 x7)))
(assert (fp.leq (fp.sub RNE x7 x7) (fp.div RNE x13 x4)))
(assert (fp.gt (fp.sub RNE x4 x6) (fp.add RNE x8 x2)))
(assert (fp.lt (fp.div RNE x7 x1) (fp.neg x15)))
(assert (fp.gt (fp.div RNE x3 x13) (fp.neg x9)))
(check-sat)
