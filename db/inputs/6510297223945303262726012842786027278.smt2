(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.neg x8) (fp.add RNE x9 x0)) (fp.sub RNE (fp.div RNE x14 x2) (fp.mul RNE x12 x4))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x5 x1) (fp.sub RNE x2 x10)) (fp.add RNE (fp.add RNE x7 x5) (fp.add RNE x16 x17))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x19 x20) (fp.div RNE x16 x4)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x16 x11))))
(assert (fp.gt (fp.neg (fp.neg x9)) (fp.mul RNE (fp.neg x7) (fp.mul RNE x10 x10))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x6 x10) (fp.div RNE x17 x3)) (fp.div RNE (fp.mul RNE x20 x15) (fp.add RNE x6 x1))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x15 x9) (fp.div RNE x2 x10)) (fp.add RNE (fp.sub RNE x15 x15) (fp.sub RNE x19 x19))))
(check-sat)
