(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x4 x2) (fp.mul RNE x4 x9)))
(assert (fp.leq (fp.add RNE x6 x6) (fp.div RNE x10 x10)))
(assert (fp.geq (fp.neg x0) (fp.sub RNE x2 x3)))
(assert (fp.gt (fp.neg x5) (fp.div RNE x1 x4)))
(assert (fp.leq (fp.sub RNE x10 x4) (fp.mul RNE x3 x10)))
(assert (fp.eq (fp.add RNE x10 x2) (fp.neg x4)))
(assert (fp.eq (fp.mul RNE x10 x10) (fp.neg x1)))
(assert (fp.geq (fp.sub RNE x10 x8) (fp.sub RNE x4 x3)))
(assert (fp.gt (fp.neg x10) (fp.add RNE x2 x4)))
(assert (fp.eq (fp.mul RNE x4 x1) (fp.neg x5)))
(assert (fp.geq (fp.sub RNE x9 x1) (fp.div RNE x6 x1)))
(assert (fp.geq (fp.div RNE x3 x3) (fp.add RNE x7 x2)))
(assert (fp.geq (fp.neg x3) (fp.div RNE x9 x5)))
(assert (fp.geq (fp.sub RNE x2 x2) (fp.div RNE x2 x5)))
(assert (fp.eq (fp.sub RNE x1 x1) (fp.mul RNE x7 x9)))
(check-sat)
