(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x9 x3) (fp.div RNE x7 x5)) (fp.mul RNE (fp.sub RNE x9 x9) (fp.mul RNE x1 x8))))
(assert (fp.geq (fp.div RNE (fp.neg x1) (fp.add RNE x7 x5)) (fp.sub RNE (fp.mul RNE x3 x9) (fp.div RNE x9 x9))))
(assert (fp.gt (fp.mul RNE (fp.neg x7) (fp.div RNE x5 x0)) (fp.div RNE (fp.add RNE x9 x9) (fp.mul RNE x6 x6))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x2 x2) (fp.neg x10)) (fp.add RNE (fp.add RNE x2 x9) (fp.mul RNE x3 x1))))
(assert (fp.gt (fp.div RNE (fp.div RNE x6 x8) (fp.mul RNE x10 x10)) (fp.sub RNE (fp.div RNE x7 x3) (fp.neg x5))))
(assert (fp.leq (fp.mul RNE (fp.neg x8) (fp.add RNE x1 x6)) (fp.div RNE (fp.mul RNE x2 x2) (fp.div RNE x10 x8))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x5 x8) (fp.sub RNE x7 x8)) (fp.neg (fp.mul RNE x1 x1))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x2 x4) (fp.neg x0)) (fp.div RNE (fp.div RNE x10 x4) (fp.sub RNE x6 x8))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x9 x0) (fp.add RNE x10 x2)) (fp.div RNE (fp.add RNE x6 x7) (fp.div RNE x1 x3))))
(assert (fp.leq (fp.sub RNE (fp.neg x1) (fp.sub RNE x5 x8)) (fp.add RNE (fp.div RNE x6 x8) (fp.mul RNE x0 x4))))
(assert (fp.geq (fp.div RNE (fp.div RNE x8 x4) (fp.neg x7)) (fp.mul RNE (fp.div RNE x1 x3) (fp.add RNE x7 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x9 x5) (fp.add RNE x4 x7)) (fp.neg (fp.div RNE x2 x3))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x8 x0) (fp.mul RNE x0 x8)) (fp.mul RNE (fp.div RNE x10 x0) (fp.add RNE x6 x7))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x8 x2) (fp.div RNE x3 x7)) (fp.neg (fp.div RNE x7 x8))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x10 x10) (fp.sub RNE x8 x3)) (fp.neg (fp.add RNE x4 x10))))
(assert (fp.lt (fp.neg (fp.add RNE x5 x6)) (fp.mul RNE (fp.neg x10) (fp.mul RNE x9 x7))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x1 x4) (fp.div RNE x7 x9)) (fp.sub RNE (fp.add RNE x6 x4) (fp.add RNE x5 x3))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x2 x1) (fp.div RNE x8 x9)) (fp.neg (fp.add RNE x1 x3))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x0 x0) (fp.mul RNE x2 x5)) (fp.neg (fp.mul RNE x6 x8))))
(assert (fp.leq (fp.div RNE (fp.neg x2) (fp.div RNE x7 x1)) (fp.neg (fp.div RNE x1 x8))))
(check-sat)
