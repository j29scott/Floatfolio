(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.add RNE x9 x7) (fp.div RNE x5 x9)) (fp.div RNE (fp.sub RNE x11 x3) (fp.mul RNE x12 x10))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x7 x3) (fp.div RNE x2 x11)) (fp.mul RNE (fp.sub RNE x13 x10) (fp.mul RNE x6 x4))))
(assert (fp.lt (fp.add RNE (fp.neg x6) (fp.mul RNE x3 x2)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x9 x8))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x12 x12) (fp.sub RNE x12 x6)) (fp.neg (fp.add RNE x6 x10))))
(assert (fp.geq (fp.add RNE (fp.neg x12) (fp.div RNE x4 x2)) (fp.div RNE (fp.mul RNE x9 x8) (fp.mul RNE x11 x3))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x5 x12) (fp.add RNE x2 x11)) (fp.mul RNE (fp.sub RNE x10 x7) (fp.add RNE x3 x8))))
(assert (fp.gt (fp.mul RNE (fp.neg x11) (fp.div RNE x0 x9)) (fp.mul RNE (fp.mul RNE x3 x2) (fp.add RNE x10 x5))))
(assert (fp.geq (fp.div RNE (fp.div RNE x10 x1) (fp.add RNE x11 x9)) (fp.add RNE (fp.mul RNE x9 x11) (fp.sub RNE x2 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x3 x11) (fp.neg x6)) (fp.mul RNE (fp.add RNE x11 x9) (fp.add RNE x9 x7))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x6 x2) (fp.sub RNE x12 x4)) (fp.neg (fp.neg x7))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x11 x10) (fp.mul RNE x4 x11)) (fp.sub RNE (fp.add RNE x13 x6) (fp.add RNE x9 x6))))
(assert (fp.geq (fp.mul RNE (fp.neg x2) (fp.div RNE x4 x12)) (fp.add RNE (fp.neg x5) (fp.add RNE x9 x7))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x11 x8) (fp.div RNE x8 x4)) (fp.div RNE (fp.add RNE x13 x7) (fp.div RNE x1 x13))))
(assert (fp.lt (fp.add RNE (fp.add RNE x13 x10) (fp.sub RNE x1 x11)) (fp.neg (fp.mul RNE x5 x9))))
(assert (fp.geq (fp.mul RNE (fp.neg x12) (fp.sub RNE x8 x13)) (fp.sub RNE (fp.div RNE x2 x11) (fp.neg x9))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x13) (fp.neg x13)) (fp.sub RNE (fp.neg x5) (fp.neg x12))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x6 x12) (fp.mul RNE x6 x11)) (fp.mul RNE (fp.mul RNE x11 x1) (fp.sub RNE x8 x13))))
(check-sat)
