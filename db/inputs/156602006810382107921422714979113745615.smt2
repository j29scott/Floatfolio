(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x7 x3)) (fp.sub RNE (fp.add RNE x6 x1) (fp.sub RNE x6 x8))) (fp.div RNE (fp.mul RNE (fp.sub RNE x9 x6) (fp.div RNE x2 x0)) (fp.div RNE (fp.neg x9) (fp.add RNE x2 x6)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x10 x0)) (fp.div RNE (fp.add RNE x5 x4) (fp.mul RNE x5 x2))) (fp.add RNE (fp.mul RNE (fp.div RNE x10 x3) (fp.div RNE x5 x2)) (fp.neg (fp.mul RNE x9 x3)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x4 x4)) (fp.sub RNE (fp.mul RNE x10 x2) (fp.neg x8))) (fp.div RNE (fp.div RNE (fp.sub RNE x10 x3) (fp.neg x8)) (fp.sub RNE (fp.div RNE x7 x3) (fp.mul RNE x9 x7)))))
(check-sat)
