(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE (fp.add RNE x10 x16) (fp.sub RNE x0 x4)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x2 x12) (fp.add RNE x4 x11)) (fp.sub RNE (fp.neg x10) (fp.sub RNE x2 x2))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x12 x5)) (fp.sub RNE (fp.div RNE x9 x12) (fp.mul RNE x16 x1))) (fp.add RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x12 x4)) (fp.neg (fp.add RNE x8 x13)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x11) (fp.div RNE x2 x12)) (fp.div RNE (fp.div RNE x6 x11) (fp.add RNE x10 x5))) (fp.neg (fp.sub RNE (fp.mul RNE x0 x10) (fp.add RNE x4 x0))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE (fp.add RNE x6 x11) (fp.div RNE x17 x13))) (fp.div RNE (fp.div RNE (fp.add RNE x14 x15) (fp.neg x16)) (fp.neg (fp.sub RNE x0 x9)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.neg x1) (fp.mul RNE x7 x10)) (fp.sub RNE (fp.sub RNE x9 x0) (fp.add RNE x10 x14))) (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x4) (fp.neg x9)) (fp.div RNE (fp.sub RNE x5 x11) (fp.mul RNE x15 x5))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.neg (fp.div RNE x2 x1)) (fp.sub RNE (fp.div RNE x9 x6) (fp.sub RNE x5 x2))) (fp.add RNE (fp.div RNE (fp.add RNE x14 x16) (fp.add RNE x15 x12)) (fp.mul RNE (fp.mul RNE x12 x3) (fp.div RNE x6 x11)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.add RNE x15 x10) (fp.mul RNE x5 x11))) (fp.neg (fp.sub RNE (fp.sub RNE x5 x11) (fp.mul RNE x8 x9))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.neg (fp.div RNE x10 x8)) (fp.neg (fp.add RNE x1 x12))) (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x14) (fp.mul RNE x7 x0)) (fp.mul RNE (fp.div RNE x17 x9) (fp.mul RNE x6 x3)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.sub RNE x10 x9)) (fp.div RNE (fp.mul RNE x8 x3) (fp.mul RNE x13 x15))) (fp.div RNE (fp.div RNE (fp.add RNE x8 x3) (fp.mul RNE x5 x4)) (fp.div RNE (fp.mul RNE x7 x17) (fp.neg x1))))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x8) (fp.sub RNE x0 x15)) (fp.sub RNE (fp.mul RNE x0 x7) (fp.sub RNE x12 x13))) (fp.neg (fp.sub RNE (fp.neg x16) (fp.neg x4)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x0) (fp.sub RNE x14 x13)) (fp.mul RNE (fp.neg x1) (fp.sub RNE x3 x10))) (fp.div RNE (fp.neg (fp.add RNE x1 x7)) (fp.sub RNE (fp.add RNE x0 x6) (fp.sub RNE x17 x5))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x13 x7) (fp.div RNE x8 x4))) (fp.div RNE (fp.add RNE (fp.mul RNE x2 x12) (fp.mul RNE x16 x12)) (fp.add RNE (fp.sub RNE x12 x0) (fp.add RNE x5 x3)))) (fp.neg (fp.neg (fp.sub RNE (fp.sub RNE x0 x7) (fp.sub RNE x6 x15))))))
(check-sat)
