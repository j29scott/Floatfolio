(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.mul RNE x0 x4) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x5 x7) (fp.neg x14))) (fp.add RNE (fp.neg (fp.mul RNE x0 x12)) (fp.add RNE (fp.sub RNE x4 x2) (fp.div RNE x15 x6)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x9 x9) (fp.add RNE x6 x3)) (fp.div RNE (fp.neg x2) (fp.sub RNE x1 x9))) (fp.div RNE (fp.mul RNE (fp.add RNE x12 x11) (fp.div RNE x9 x3)) (fp.mul RNE (fp.neg x6) (fp.mul RNE x8 x10)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg x9) (fp.sub RNE x8 x8)) (fp.div RNE (fp.sub RNE x4 x4) (fp.div RNE x14 x12))) (fp.add RNE (fp.add RNE (fp.sub RNE x10 x1) (fp.sub RNE x2 x15)) (fp.sub RNE (fp.neg x1) (fp.neg x10)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x9 x13) (fp.sub RNE x5 x9))) (fp.mul RNE (fp.add RNE (fp.div RNE x10 x5) (fp.mul RNE x8 x6)) (fp.mul RNE (fp.div RNE x8 x12) (fp.div RNE x13 x2)))))
(check-sat)
