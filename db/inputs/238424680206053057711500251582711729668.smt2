(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x21) (fp.sub RNE x0 x21)) (fp.add RNE (fp.div RNE x2 x22) (fp.mul RNE x20 x19))) (fp.div RNE (fp.mul RNE (fp.mul RNE x20 x19) (fp.neg x9)) (fp.add RNE (fp.div RNE x3 x15) (fp.mul RNE x7 x5)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x11 x14) (fp.div RNE x19 x21))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x9) (fp.div RNE x3 x8)) (fp.sub RNE (fp.neg x3) (fp.add RNE x15 x11)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x5 x20)) (fp.div RNE (fp.div RNE x6 x20) (fp.add RNE x9 x8))) (fp.div RNE (fp.mul RNE (fp.sub RNE x5 x13) (fp.add RNE x2 x20)) (fp.mul RNE (fp.sub RNE x10 x19) (fp.div RNE x15 x9)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x1) (fp.sub RNE x13 x21)) (fp.sub RNE (fp.neg x17) (fp.add RNE x0 x1))) (fp.neg (fp.mul RNE (fp.neg x5) (fp.sub RNE x10 x4)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x18 x2) (fp.neg x6)) (fp.div RNE (fp.neg x19) (fp.neg x13))) (fp.neg (fp.sub RNE (fp.mul RNE x20 x6) (fp.div RNE x14 x13)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x19) (fp.div RNE x21 x11)) (fp.neg (fp.sub RNE x1 x22))) (fp.add RNE (fp.div RNE (fp.mul RNE x6 x6) (fp.add RNE x18 x5)) (fp.neg (fp.sub RNE x6 x2)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.neg x0) (fp.neg x22)) (fp.sub RNE (fp.neg x16) (fp.mul RNE x6 x22))) (fp.add RNE (fp.mul RNE (fp.add RNE x4 x11) (fp.add RNE x14 x2)) (fp.sub RNE (fp.neg x11) (fp.neg x19)))))
(check-sat)
