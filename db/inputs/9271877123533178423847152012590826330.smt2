(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.div RNE x12 x3) (fp.sub RNE x15 x13)) (fp.sub RNE (fp.add RNE x13 x17) (fp.div RNE x26 x18))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x9 x15) (fp.add RNE x19 x5)) (fp.mul RNE (fp.neg x19) (fp.div RNE x16 x19))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x7 x0) (fp.div RNE x7 x18)) (fp.mul RNE (fp.mul RNE x24 x17) (fp.neg x23))))
(assert (fp.gt (fp.div RNE (fp.neg x27) (fp.sub RNE x18 x9)) (fp.sub RNE (fp.sub RNE x1 x6) (fp.mul RNE x22 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x15 x18) (fp.sub RNE x19 x5)) (fp.add RNE (fp.sub RNE x14 x8) (fp.sub RNE x26 x6))))
(assert (fp.lt (fp.neg (fp.sub RNE x26 x8)) (fp.sub RNE (fp.neg x1) (fp.neg x12))))
(assert (fp.gt (fp.neg (fp.add RNE x13 x7)) (fp.add RNE (fp.sub RNE x6 x6) (fp.mul RNE x25 x10))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x7) (fp.sub RNE x22 x0)) (fp.add RNE (fp.mul RNE x12 x26) (fp.div RNE x22 x26))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x11 x9) (fp.div RNE x8 x11)) (fp.neg (fp.neg x16))))
(assert (fp.lt (fp.div RNE (fp.neg x16) (fp.add RNE x23 x7)) (fp.neg (fp.neg x10))))
(assert (fp.eq (fp.mul RNE (fp.neg x25) (fp.add RNE x27 x9)) (fp.div RNE (fp.sub RNE x17 x1) (fp.sub RNE x20 x22))))
(assert (fp.lt (fp.mul RNE (fp.neg x14) (fp.div RNE x21 x13)) (fp.mul RNE (fp.mul RNE x1 x21) (fp.mul RNE x0 x26))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x7 x26) (fp.div RNE x26 x17)) (fp.div RNE (fp.sub RNE x8 x17) (fp.mul RNE x13 x8))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x23 x22) (fp.neg x20)) (fp.div RNE (fp.mul RNE x14 x24) (fp.div RNE x13 x25))))
(check-sat)
