(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.div RNE x9 x14) (fp.neg x5)) (fp.mul RNE (fp.div RNE x10 x17) (fp.div RNE x2 x19))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x21 x15) (fp.div RNE x0 x17)) (fp.add RNE (fp.neg x6) (fp.sub RNE x5 x21))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x1 x12) (fp.div RNE x11 x13)) (fp.sub RNE (fp.mul RNE x15 x8) (fp.add RNE x0 x9))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x2 x0) (fp.div RNE x14 x6)) (fp.neg (fp.mul RNE x20 x9))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x20 x2) (fp.sub RNE x15 x0)) (fp.div RNE (fp.neg x22) (fp.add RNE x22 x12))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x15 x18) (fp.neg x18)) (fp.mul RNE (fp.add RNE x19 x20) (fp.mul RNE x18 x1))))
(assert (fp.lt (fp.neg (fp.mul RNE x15 x21)) (fp.div RNE (fp.sub RNE x12 x15) (fp.sub RNE x4 x15))))
(assert (fp.eq (fp.neg (fp.sub RNE x17 x8)) (fp.div RNE (fp.mul RNE x1 x7) (fp.sub RNE x3 x10))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x11 x22) (fp.mul RNE x11 x0)) (fp.div RNE (fp.add RNE x13 x5) (fp.div RNE x9 x13))))
(assert (fp.leq (fp.div RNE (fp.add RNE x11 x13) (fp.add RNE x3 x3)) (fp.div RNE (fp.div RNE x19 x9) (fp.div RNE x6 x21))))
(assert (fp.lt (fp.div RNE (fp.add RNE x2 x11) (fp.neg x8)) (fp.sub RNE (fp.mul RNE x17 x20) (fp.div RNE x16 x1))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x11 x18) (fp.neg x10)) (fp.div RNE (fp.neg x9) (fp.neg x7))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x11 x3) (fp.sub RNE x19 x12)) (fp.neg (fp.add RNE x3 x18))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x19 x16) (fp.neg x9)) (fp.sub RNE (fp.add RNE x15 x5) (fp.div RNE x21 x12))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x20 x11) (fp.add RNE x10 x2)) (fp.neg (fp.mul RNE x1 x12))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x13 x12) (fp.div RNE x10 x5)) (fp.neg (fp.div RNE x4 x18))))
(assert (fp.eq (fp.neg (fp.mul RNE x0 x20)) (fp.add RNE (fp.div RNE x4 x7) (fp.div RNE x7 x22))))
(check-sat)
