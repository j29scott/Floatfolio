(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE (fp.sub RNE x14 x4) (fp.mul RNE x21 x16)) (fp.mul RNE (fp.add RNE x13 x20) (fp.mul RNE x0 x10))) (fp.neg (fp.mul RNE (fp.mul RNE x2 x9) (fp.mul RNE x15 x22)))) (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x9 x12)) (fp.div RNE (fp.neg x0) (fp.div RNE x14 x3))))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE (fp.neg x12) (fp.mul RNE x12 x9)) (fp.mul RNE (fp.add RNE x18 x4) (fp.div RNE x21 x5))) (fp.sub RNE (fp.mul RNE (fp.div RNE x14 x16) (fp.add RNE x17 x16)) (fp.neg (fp.neg x22)))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x12 x19) (fp.div RNE x13 x19)) (fp.sub RNE (fp.sub RNE x16 x11) (fp.neg x17))) (fp.div RNE (fp.neg (fp.div RNE x1 x16)) (fp.neg (fp.add RNE x18 x13))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x14 x10)) (fp.add RNE (fp.mul RNE x22 x3) (fp.add RNE x21 x0))) (fp.div RNE (fp.div RNE (fp.neg x4) (fp.neg x22)) (fp.div RNE (fp.div RNE x9 x20) (fp.sub RNE x22 x16)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.sub RNE x6 x4)) (fp.div RNE (fp.add RNE x22 x20) (fp.add RNE x7 x21))) (fp.div RNE (fp.sub RNE (fp.neg x9) (fp.add RNE x13 x11)) (fp.add RNE (fp.div RNE x15 x1) (fp.add RNE x18 x21))))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x0 x12) (fp.div RNE x15 x4)) (fp.sub RNE (fp.sub RNE x16 x19) (fp.add RNE x14 x18))) (fp.mul RNE (fp.div RNE (fp.neg x9) (fp.mul RNE x21 x6)) (fp.neg (fp.mul RNE x2 x12)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.div RNE x21 x11) (fp.add RNE x11 x2)) (fp.mul RNE (fp.add RNE x10 x5) (fp.add RNE x7 x5))) (fp.add RNE (fp.add RNE (fp.div RNE x5 x5) (fp.add RNE x7 x21)) (fp.neg (fp.div RNE x12 x16))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x2) (fp.neg x20)) (fp.sub RNE (fp.neg x14) (fp.div RNE x21 x19))) (fp.mul RNE (fp.mul RNE (fp.add RNE x7 x6) (fp.div RNE x10 x15)) (fp.div RNE (fp.div RNE x17 x18) (fp.mul RNE x14 x15)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.sub RNE x21 x11) (fp.add RNE x19 x22))) (fp.mul RNE (fp.mul RNE (fp.add RNE x13 x7) (fp.neg x16)) (fp.div RNE (fp.div RNE x6 x12) (fp.div RNE x19 x13))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg (fp.neg x9)) (fp.div RNE (fp.mul RNE x2 x13) (fp.neg x7))) (fp.add RNE (fp.sub RNE (fp.mul RNE x19 x21) (fp.div RNE x18 x5)) (fp.div RNE (fp.div RNE x19 x16) (fp.mul RNE x17 x17)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x19 x12) (fp.neg x1)) (fp.mul RNE (fp.add RNE x20 x4) (fp.neg x21))) (fp.add RNE (fp.sub RNE (fp.div RNE x10 x4) (fp.mul RNE x17 x9)) (fp.mul RNE (fp.add RNE x11 x3) (fp.neg x21))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.mul RNE x5 x4) (fp.sub RNE x7 x11)) (fp.neg (fp.neg x15))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x22) (fp.mul RNE x15 x0)) (fp.sub RNE (fp.add RNE x14 x11) (fp.sub RNE x6 x0)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.neg x22) (fp.neg x0)) (fp.div RNE (fp.neg x14) (fp.mul RNE x1 x4))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x0) (fp.sub RNE x21 x18)) (fp.add RNE (fp.add RNE x6 x10) (fp.div RNE x14 x0)))) (fp.neg (fp.neg (fp.div RNE (fp.neg x20) (fp.mul RNE x7 x14))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.add RNE x14 x2) (fp.div RNE x0 x20)) (fp.neg (fp.div RNE x18 x22))) (fp.div RNE (fp.neg (fp.neg x9)) (fp.neg (fp.div RNE x18 x0)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE x5 x14) (fp.neg x16))) (fp.mul RNE (fp.add RNE (fp.neg x12) (fp.sub RNE x19 x1)) (fp.neg (fp.add RNE x13 x4))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE (fp.neg x8) (fp.mul RNE x18 x9)) (fp.div RNE (fp.neg x7) (fp.add RNE x8 x1))) (fp.neg (fp.add RNE (fp.div RNE x5 x22) (fp.neg x14)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.sub RNE x15 x14)) (fp.neg (fp.mul RNE x14 x19))) (fp.neg (fp.neg (fp.div RNE x18 x17))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x14 x13) (fp.add RNE x21 x2)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x17 x14))) (fp.add RNE (fp.sub RNE (fp.mul RNE x4 x17) (fp.add RNE x2 x7)) (fp.div RNE (fp.neg x12) (fp.add RNE x18 x2)))) (fp.div RNE (fp.neg (fp.div RNE (fp.mul RNE x7 x15) (fp.mul RNE x7 x22))) (fp.add RNE (fp.div RNE (fp.neg x0) (fp.div RNE x5 x8)) (fp.div RNE (fp.mul RNE x6 x17) (fp.add RNE x16 x11))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE (fp.neg x0) (fp.div RNE x22 x0))) (fp.sub RNE (fp.neg (fp.mul RNE x7 x1)) (fp.add RNE (fp.mul RNE x0 x14) (fp.div RNE x0 x2)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.mul RNE x19 x3) (fp.sub RNE x16 x2)) (fp.add RNE (fp.mul RNE x19 x17) (fp.mul RNE x18 x21))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE (fp.neg x3) (fp.div RNE x2 x22)) (fp.mul RNE (fp.mul RNE x18 x11) (fp.div RNE x2 x16)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x15 x13) (fp.mul RNE x8 x18)) (fp.mul RNE (fp.mul RNE x17 x17) (fp.mul RNE x17 x18))))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE (fp.mul RNE x1 x21) (fp.add RNE x22 x10)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x6 x20) (fp.sub RNE x0 x8)) (fp.div RNE (fp.add RNE x12 x10) (fp.add RNE x2 x11))) (fp.div RNE (fp.mul RNE (fp.div RNE x13 x16) (fp.add RNE x2 x18)) (fp.mul RNE (fp.neg x3) (fp.neg x15))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x22 x22) (fp.sub RNE x2 x5)) (fp.neg (fp.neg x1))) (fp.add RNE (fp.mul RNE (fp.mul RNE x2 x15) (fp.mul RNE x2 x17)) (fp.sub RNE (fp.neg x3) (fp.mul RNE x1 x15)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x5 x22)) (fp.sub RNE (fp.add RNE x21 x9) (fp.mul RNE x7 x12))) (fp.add RNE (fp.div RNE (fp.div RNE x1 x18) (fp.div RNE x6 x2)) (fp.mul RNE (fp.neg x2) (fp.mul RNE x9 x2))))))
(check-sat)
