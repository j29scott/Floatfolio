(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x5 x4) (fp.sub RNE x18 x14)))
(assert (fp.gt (fp.sub RNE x7 x0) (fp.div RNE x7 x12)))
(assert (fp.geq (fp.mul RNE x10 x1) (fp.add RNE x9 x8)))
(assert (fp.lt (fp.div RNE x9 x3) (fp.add RNE x8 x17)))
(assert (fp.leq (fp.neg x6) (fp.mul RNE x0 x18)))
(assert (fp.leq (fp.div RNE x14 x18) (fp.div RNE x17 x9)))
(assert (fp.eq (fp.add RNE x2 x5) (fp.add RNE x5 x2)))
(assert (fp.geq (fp.mul RNE x9 x19) (fp.div RNE x13 x9)))
(assert (fp.gt (fp.add RNE x16 x2) (fp.sub RNE x9 x2)))
(assert (fp.lt (fp.neg x0) (fp.add RNE x7 x3)))
(assert (fp.geq (fp.mul RNE x4 x21) (fp.neg x4)))
(assert (fp.lt (fp.div RNE x1 x12) (fp.mul RNE x13 x9)))
(assert (fp.geq (fp.div RNE x9 x2) (fp.div RNE x10 x6)))
(assert (fp.leq (fp.mul RNE x0 x21) (fp.div RNE x9 x14)))
(assert (fp.geq (fp.div RNE x10 x3) (fp.mul RNE x14 x0)))
(assert (fp.geq (fp.sub RNE x11 x20) (fp.sub RNE x10 x16)))
(assert (fp.lt (fp.neg x5) (fp.mul RNE x21 x18)))
(assert (fp.gt (fp.sub RNE x3 x13) (fp.mul RNE x6 x19)))
(assert (fp.leq (fp.mul RNE x11 x21) (fp.add RNE x1 x12)))
(check-sat)
