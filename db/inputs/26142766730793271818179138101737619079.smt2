(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.add RNE (fp.sub RNE (fp.add RNE x7 x7) (fp.neg x1)) (fp.div RNE (fp.sub RNE x4 x8) (fp.div RNE x2 x8)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.add RNE x4 x5) (fp.div RNE x4 x1)) (fp.add RNE (fp.div RNE x4 x6) (fp.div RNE x1 x4))) (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.add RNE x8 x1)) (fp.mul RNE (fp.sub RNE x0 x4) (fp.add RNE x0 x7))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE (fp.sub RNE x6 x3) (fp.mul RNE x0 x6)) (fp.neg (fp.add RNE x6 x5)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.div RNE x5 x6) (fp.mul RNE x1 x6)) (fp.div RNE (fp.mul RNE x5 x1) (fp.div RNE x5 x3))) (fp.sub RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x8 x5)) (fp.mul RNE (fp.neg x3) (fp.sub RNE x7 x4))))))
(check-sat)
