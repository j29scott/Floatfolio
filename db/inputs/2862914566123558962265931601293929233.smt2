(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE x8 x4) (fp.neg x0)))
(assert (fp.geq (fp.add RNE x6 x8) (fp.div RNE x6 x6)))
(assert (fp.lt (fp.mul RNE x6 x4) (fp.neg x7)))
(assert (fp.geq (fp.sub RNE x7 x1) (fp.mul RNE x7 x1)))
(assert (fp.lt (fp.mul RNE x7 x0) (fp.mul RNE x8 x7)))
(assert (fp.gt (fp.div RNE x9 x6) (fp.add RNE x9 x4)))
(assert (fp.gt (fp.div RNE x4 x8) (fp.mul RNE x2 x7)))
(assert (fp.geq (fp.neg x8) (fp.mul RNE x1 x8)))
(assert (fp.gt (fp.neg x6) (fp.neg x7)))
(assert (fp.leq (fp.neg x8) (fp.neg x8)))
(assert (fp.lt (fp.div RNE x9 x3) (fp.neg x6)))
(assert (fp.geq (fp.sub RNE x0 x7) (fp.neg x5)))
(assert (fp.eq (fp.div RNE x3 x3) (fp.sub RNE x1 x3)))
(assert (fp.gt (fp.sub RNE x3 x4) (fp.add RNE x3 x6)))
(assert (fp.geq (fp.sub RNE x8 x0) (fp.add RNE x4 x9)))
(assert (fp.gt (fp.neg x7) (fp.mul RNE x3 x7)))
(assert (fp.geq (fp.mul RNE x6 x1) (fp.add RNE x1 x6)))
(check-sat)
