(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.neg x5) (fp.sub RNE x7 x5)) (fp.sub RNE (fp.sub RNE x7 x6) (fp.sub RNE x9 x2))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x6 x2) (fp.div RNE x0 x2)) (fp.mul RNE (fp.neg x3) (fp.neg x10))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x4 x10) (fp.add RNE x2 x10)) (fp.neg (fp.sub RNE x0 x9))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x10 x1) (fp.sub RNE x7 x5)) (fp.div RNE (fp.neg x6) (fp.neg x1))))
(assert (fp.eq (fp.add RNE (fp.div RNE x0 x3) (fp.div RNE x10 x6)) (fp.sub RNE (fp.div RNE x0 x5) (fp.add RNE x8 x10))))
(assert (fp.eq (fp.neg (fp.neg x3)) (fp.sub RNE (fp.sub RNE x8 x10) (fp.neg x1))))
(assert (fp.geq (fp.neg (fp.neg x3)) (fp.add RNE (fp.add RNE x9 x0) (fp.sub RNE x8 x4))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x5 x4) (fp.sub RNE x7 x2)) (fp.div RNE (fp.div RNE x7 x2) (fp.neg x6))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x7 x7) (fp.neg x2)) (fp.mul RNE (fp.neg x10) (fp.mul RNE x4 x7))))
(assert (fp.lt (fp.neg (fp.div RNE x7 x1)) (fp.add RNE (fp.neg x5) (fp.neg x0))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x9) (fp.add RNE x10 x7)) (fp.sub RNE (fp.mul RNE x8 x0) (fp.mul RNE x8 x10))))
(check-sat)
