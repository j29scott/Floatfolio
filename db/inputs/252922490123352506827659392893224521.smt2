(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE (fp.add RNE x3 x1) (fp.neg x15)) (fp.div RNE (fp.add RNE x4 x0) (fp.add RNE x14 x8))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x16 x10) (fp.add RNE x5 x8)) (fp.neg (fp.sub RNE x7 x4)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x16 x18) (fp.add RNE x16 x14)) (fp.add RNE (fp.sub RNE x2 x11) (fp.neg x7))) (fp.neg (fp.div RNE (fp.div RNE x8 x7) (fp.div RNE x19 x1))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x11 x18) (fp.div RNE x13 x5)) (fp.add RNE (fp.div RNE x10 x9) (fp.div RNE x17 x4))) (fp.div RNE (fp.mul RNE (fp.sub RNE x0 x18) (fp.div RNE x1 x2)) (fp.mul RNE (fp.neg x19) (fp.sub RNE x5 x17)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.neg x10) (fp.div RNE x15 x12)) (fp.sub RNE (fp.sub RNE x15 x11) (fp.neg x7))) (fp.mul RNE (fp.div RNE (fp.neg x4) (fp.add RNE x20 x6)) (fp.sub RNE (fp.neg x20) (fp.mul RNE x9 x20))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x11 x4) (fp.sub RNE x16 x4)) (fp.div RNE (fp.sub RNE x9 x17) (fp.neg x13))) (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x15) (fp.sub RNE x2 x14)) (fp.div RNE (fp.neg x4) (fp.add RNE x12 x16)))) (fp.add RNE (fp.div RNE (fp.neg (fp.add RNE x16 x4)) (fp.mul RNE (fp.sub RNE x17 x17) (fp.div RNE x8 x16))) (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x8) (fp.mul RNE x7 x1)) (fp.add RNE (fp.neg x12) (fp.div RNE x20 x18))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.mul RNE x7 x2)) (fp.neg (fp.add RNE x1 x5))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.neg x10)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.sub RNE x2 x9)) (fp.add RNE (fp.div RNE x0 x9) (fp.neg x11))) (fp.add RNE (fp.neg (fp.neg x10)) (fp.sub RNE (fp.add RNE x9 x1) (fp.add RNE x0 x17))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE (fp.add RNE x1 x6) (fp.neg x3))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x4) (fp.neg x8)) (fp.add RNE (fp.add RNE x7 x17) (fp.div RNE x1 x14)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x8 x5)) (fp.sub RNE (fp.sub RNE x6 x13) (fp.add RNE x7 x9))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg (fp.sub RNE x0 x1)) (fp.mul RNE (fp.neg x18) (fp.neg x13))) (fp.add RNE (fp.sub RNE (fp.neg x7) (fp.mul RNE x15 x12)) (fp.add RNE (fp.mul RNE x18 x17) (fp.neg x2)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.neg x11) (fp.div RNE x15 x1)) (fp.neg (fp.neg x8))))))
(check-sat)
