(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x3 x3) (fp.neg x8)))
(assert (fp.gt (fp.add RNE x6 x6) (fp.mul RNE x3 x7)))
(assert (fp.lt (fp.sub RNE x1 x0) (fp.add RNE x3 x8)))
(assert (fp.lt (fp.sub RNE x5 x0) (fp.mul RNE x5 x1)))
(assert (fp.leq (fp.mul RNE x5 x1) (fp.mul RNE x2 x1)))
(assert (fp.lt (fp.add RNE x6 x8) (fp.sub RNE x6 x0)))
(assert (fp.lt (fp.sub RNE x0 x3) (fp.mul RNE x3 x0)))
(assert (fp.eq (fp.neg x0) (fp.mul RNE x1 x4)))
(assert (fp.lt (fp.mul RNE x0 x8) (fp.sub RNE x6 x7)))
(assert (fp.leq (fp.div RNE x4 x2) (fp.sub RNE x3 x4)))
(assert (fp.gt (fp.sub RNE x5 x4) (fp.sub RNE x7 x1)))
(assert (fp.gt (fp.mul RNE x1 x4) (fp.add RNE x8 x1)))
(check-sat)
