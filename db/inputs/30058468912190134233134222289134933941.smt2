(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x12 x8) (fp.add RNE x4 x3)) (fp.div RNE (fp.div RNE x6 x9) (fp.add RNE x12 x11))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x12 x12) (fp.div RNE x11 x13)) (fp.sub RNE (fp.neg x13) (fp.add RNE x12 x2)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.sub RNE x14 x2) (fp.sub RNE x1 x2)) (fp.add RNE (fp.neg x4) (fp.mul RNE x5 x0))) (fp.sub RNE (fp.div RNE (fp.sub RNE x0 x14) (fp.sub RNE x7 x6)) (fp.neg (fp.neg x2)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x8 x6) (fp.neg x8))) (fp.mul RNE (fp.div RNE (fp.mul RNE x12 x2) (fp.neg x4)) (fp.sub RNE (fp.div RNE x0 x7) (fp.sub RNE x5 x0)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.add RNE x11 x7) (fp.neg x2)) (fp.sub RNE (fp.neg x11) (fp.add RNE x10 x13))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x11 x7) (fp.add RNE x3 x9)) (fp.neg (fp.div RNE x5 x8)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x2) (fp.div RNE x10 x14)) (fp.div RNE (fp.neg x12) (fp.div RNE x5 x14))) (fp.sub RNE (fp.div RNE (fp.neg x9) (fp.add RNE x12 x0)) (fp.neg (fp.sub RNE x3 x10)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.neg x11)) (fp.sub RNE (fp.add RNE x10 x10) (fp.div RNE x1 x11))) (fp.add RNE (fp.div RNE (fp.mul RNE x6 x0) (fp.neg x2)) (fp.mul RNE (fp.add RNE x0 x7) (fp.add RNE x2 x0)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.mul RNE x6 x3) (fp.add RNE x3 x10))) (fp.mul RNE (fp.div RNE (fp.add RNE x10 x11) (fp.add RNE x0 x4)) (fp.div RNE (fp.sub RNE x4 x2) (fp.div RNE x3 x8)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg x2)) (fp.neg (fp.sub RNE x13 x4))) (fp.sub RNE (fp.div RNE (fp.neg x3) (fp.mul RNE x4 x3)) (fp.add RNE (fp.add RNE x10 x7) (fp.mul RNE x4 x0)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x7 x12) (fp.mul RNE x12 x2)) (fp.mul RNE (fp.add RNE x4 x13) (fp.neg x1))) (fp.neg (fp.sub RNE (fp.div RNE x10 x1) (fp.mul RNE x3 x4)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.neg x12) (fp.neg x10)) (fp.neg (fp.sub RNE x9 x7))) (fp.neg (fp.add RNE (fp.mul RNE x9 x3) (fp.mul RNE x2 x3)))))
(check-sat)
