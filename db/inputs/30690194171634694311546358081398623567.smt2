(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x9 x3) (fp.sub RNE x12 x3)) (fp.add RNE (fp.sub RNE x12 x14) (fp.add RNE x16 x14))))
(assert (fp.lt (fp.add RNE (fp.add RNE x13 x5) (fp.div RNE x9 x2)) (fp.add RNE (fp.neg x15) (fp.div RNE x2 x4))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x17 x0) (fp.div RNE x12 x1)) (fp.mul RNE (fp.sub RNE x0 x11) (fp.neg x15))))
(assert (fp.gt (fp.neg (fp.add RNE x10 x12)) (fp.sub RNE (fp.mul RNE x13 x9) (fp.neg x0))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x5 x2) (fp.div RNE x1 x14)) (fp.sub RNE (fp.neg x9) (fp.add RNE x17 x14))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x2 x14) (fp.neg x14)) (fp.sub RNE (fp.add RNE x3 x5) (fp.add RNE x2 x7))))
(assert (fp.lt (fp.neg (fp.neg x18)) (fp.neg (fp.sub RNE x16 x3))))
(assert (fp.eq (fp.div RNE (fp.neg x17) (fp.mul RNE x10 x14)) (fp.sub RNE (fp.mul RNE x5 x6) (fp.mul RNE x7 x6))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x13 x16) (fp.div RNE x11 x15)) (fp.sub RNE (fp.div RNE x12 x0) (fp.div RNE x3 x1))))
(check-sat)
