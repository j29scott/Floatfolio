(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.neg x8) (fp.neg x2)) (fp.sub RNE (fp.sub RNE x5 x12) (fp.mul RNE x14 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x10 x20) (fp.mul RNE x3 x5)) (fp.div RNE (fp.neg x13) (fp.sub RNE x23 x19))))
(assert (fp.gt (fp.add RNE (fp.add RNE x7 x23) (fp.add RNE x14 x17)) (fp.add RNE (fp.mul RNE x22 x1) (fp.neg x0))))
(assert (fp.lt (fp.neg (fp.div RNE x19 x12)) (fp.mul RNE (fp.neg x21) (fp.add RNE x9 x20))))
(assert (fp.geq (fp.neg (fp.mul RNE x12 x14)) (fp.div RNE (fp.div RNE x24 x12) (fp.neg x20))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x16 x23) (fp.mul RNE x5 x14)) (fp.sub RNE (fp.mul RNE x16 x24) (fp.mul RNE x14 x18))))
(assert (fp.geq (fp.mul RNE (fp.neg x10) (fp.neg x0)) (fp.div RNE (fp.div RNE x17 x22) (fp.add RNE x22 x17))))
(assert (fp.eq (fp.neg (fp.div RNE x2 x6)) (fp.mul RNE (fp.neg x13) (fp.neg x0))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x2 x22) (fp.div RNE x18 x18)) (fp.add RNE (fp.add RNE x23 x15) (fp.add RNE x17 x6))))
(assert (fp.eq (fp.add RNE (fp.neg x14) (fp.sub RNE x7 x1)) (fp.mul RNE (fp.mul RNE x24 x7) (fp.sub RNE x10 x21))))
(check-sat)
