(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.sub RNE x0 x5) (fp.add RNE x7 x9)) (fp.neg (fp.div RNE x12 x5))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x4 x7) (fp.add RNE x4 x12)) (fp.div RNE (fp.div RNE x11 x2) (fp.neg x8))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x3 x1) (fp.div RNE x9 x10)) (fp.mul RNE (fp.neg x9) (fp.mul RNE x1 x7))))
(assert (fp.lt (fp.add RNE (fp.div RNE x5 x7) (fp.mul RNE x1 x8)) (fp.neg (fp.add RNE x4 x7))))
(assert (fp.gt (fp.neg (fp.sub RNE x10 x8)) (fp.neg (fp.sub RNE x4 x0))))
(assert (fp.eq (fp.neg (fp.mul RNE x0 x10)) (fp.div RNE (fp.mul RNE x2 x4) (fp.div RNE x10 x7))))
(assert (fp.eq (fp.neg (fp.div RNE x2 x4)) (fp.mul RNE (fp.sub RNE x6 x7) (fp.neg x6))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x10 x3) (fp.neg x5)) (fp.div RNE (fp.neg x8) (fp.mul RNE x6 x4))))
(check-sat)
