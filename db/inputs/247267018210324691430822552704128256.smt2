(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x9 x12) (fp.add RNE x11 x10)) (fp.sub RNE (fp.neg x3) (fp.mul RNE x3 x10))) (fp.mul RNE (fp.div RNE (fp.add RNE x4 x1) (fp.mul RNE x12 x12)) (fp.sub RNE (fp.mul RNE x5 x3) (fp.add RNE x0 x12)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x1 x9) (fp.neg x0)) (fp.neg (fp.sub RNE x6 x7))) (fp.add RNE (fp.div RNE (fp.mul RNE x4 x10) (fp.div RNE x12 x5)) (fp.sub RNE (fp.add RNE x2 x3) (fp.neg x6)))))
(check-sat)
