(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x4 x7) (fp.neg x3)) (fp.neg (fp.add RNE x8 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x3) (fp.div RNE x2 x6)) (fp.div RNE (fp.mul RNE x1 x1) (fp.add RNE x0 x1)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x10) (fp.mul RNE x5 x4))) (fp.add RNE (fp.neg (fp.sub RNE x7 x10)) (fp.mul RNE (fp.add RNE x6 x4) (fp.neg x6)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x11) (fp.sub RNE x13 x9)) (fp.neg (fp.div RNE x4 x0))) (fp.neg (fp.div RNE (fp.sub RNE x0 x8) (fp.add RNE x3 x12)))))
(check-sat)
