(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.neg (fp.mul RNE x6 x5)) (fp.neg (fp.add RNE x11 x12))) (fp.sub RNE (fp.neg (fp.neg x0)) (fp.add RNE (fp.neg x2) (fp.div RNE x12 x6)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x9) (fp.mul RNE x14 x6)) (fp.add RNE (fp.add RNE x2 x9) (fp.add RNE x3 x5))) (fp.sub RNE (fp.sub RNE (fp.add RNE x3 x6) (fp.sub RNE x6 x7)) (fp.neg (fp.sub RNE x10 x11)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg x8) (fp.add RNE x7 x12))) (fp.neg (fp.mul RNE (fp.mul RNE x1 x2) (fp.neg x2)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE x1 x2) (fp.add RNE x8 x1))) (fp.div RNE (fp.neg (fp.add RNE x10 x4)) (fp.sub RNE (fp.div RNE x13 x14) (fp.div RNE x4 x9)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x9 x3) (fp.div RNE x5 x6))) (fp.neg (fp.neg (fp.sub RNE x8 x11)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x14 x3)) (fp.sub RNE (fp.sub RNE x10 x11) (fp.add RNE x3 x0))) (fp.mul RNE (fp.div RNE (fp.add RNE x10 x0) (fp.neg x0)) (fp.neg (fp.sub RNE x5 x2)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x4 x3) (fp.div RNE x14 x10)) (fp.neg (fp.mul RNE x7 x11))) (fp.neg (fp.neg (fp.neg x12)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x4 x1)) (fp.add RNE (fp.add RNE x6 x0) (fp.div RNE x11 x14))) (fp.sub RNE (fp.neg (fp.sub RNE x5 x9)) (fp.sub RNE (fp.neg x11) (fp.neg x12)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x3) (fp.div RNE x0 x12)) (fp.neg (fp.neg x8))) (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x13) (fp.neg x11)) (fp.add RNE (fp.neg x7) (fp.sub RNE x11 x8)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x10 x7) (fp.add RNE x0 x9)) (fp.sub RNE (fp.neg x2) (fp.add RNE x6 x13))) (fp.div RNE (fp.add RNE (fp.add RNE x9 x9) (fp.sub RNE x9 x3)) (fp.neg (fp.neg x8)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE x2 x8) (fp.add RNE x2 x11)) (fp.sub RNE (fp.sub RNE x11 x2) (fp.mul RNE x3 x10))) (fp.neg (fp.div RNE (fp.div RNE x14 x6) (fp.add RNE x7 x1)))))
(check-sat)
