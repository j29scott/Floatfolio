(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg x12)) (fp.div RNE (fp.add RNE x11 x4) (fp.div RNE x4 x6))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x10 x3) (fp.add RNE x3 x8)) (fp.div RNE (fp.mul RNE x9 x0) (fp.sub RNE x0 x7)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.neg x12)) (fp.mul RNE (fp.mul RNE x2 x14) (fp.div RNE x10 x9))) (fp.div RNE (fp.mul RNE (fp.add RNE x11 x3) (fp.div RNE x3 x7)) (fp.add RNE (fp.sub RNE x0 x1) (fp.neg x6)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE x11 x2) (fp.sub RNE x3 x8)) (fp.neg (fp.sub RNE x8 x11))) (fp.mul RNE (fp.mul RNE (fp.div RNE x13 x7) (fp.div RNE x10 x10)) (fp.mul RNE (fp.sub RNE x6 x5) (fp.sub RNE x12 x6)))))
(check-sat)
