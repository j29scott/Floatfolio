(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x15 x0) (fp.div RNE x16 x19)) (fp.neg (fp.add RNE x7 x0))) (fp.mul RNE (fp.add RNE (fp.mul RNE x19 x14) (fp.div RNE x19 x7)) (fp.sub RNE (fp.sub RNE x0 x5) (fp.mul RNE x7 x11)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x1 x13) (fp.add RNE x18 x5)) (fp.sub RNE (fp.mul RNE x12 x3) (fp.add RNE x0 x1))) (fp.mul RNE (fp.add RNE (fp.mul RNE x18 x6) (fp.sub RNE x15 x7)) (fp.mul RNE (fp.mul RNE x16 x2) (fp.div RNE x16 x17))))))
(check-sat)
