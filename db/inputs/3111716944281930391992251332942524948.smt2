(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x18 x18) (fp.neg x18)) (fp.neg (fp.neg x17))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x9 x13) (fp.add RNE x16 x19)) (fp.add RNE (fp.mul RNE x17 x11) (fp.add RNE x13 x1))))
(assert (fp.eq (fp.neg (fp.div RNE x18 x12)) (fp.sub RNE (fp.mul RNE x14 x18) (fp.neg x8))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x14 x3) (fp.mul RNE x10 x1)) (fp.sub RNE (fp.add RNE x3 x7) (fp.neg x19))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x4 x1) (fp.div RNE x15 x6)) (fp.div RNE (fp.neg x12) (fp.mul RNE x19 x1))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x13 x10) (fp.div RNE x2 x15)) (fp.add RNE (fp.sub RNE x10 x12) (fp.neg x11))))
(assert (fp.eq (fp.div RNE (fp.div RNE x5 x0) (fp.sub RNE x11 x3)) (fp.add RNE (fp.add RNE x12 x19) (fp.sub RNE x1 x6))))
(assert (fp.lt (fp.sub RNE (fp.neg x16) (fp.sub RNE x6 x1)) (fp.div RNE (fp.neg x1) (fp.add RNE x18 x1))))
(assert (fp.eq (fp.div RNE (fp.div RNE x2 x6) (fp.neg x6)) (fp.add RNE (fp.sub RNE x8 x9) (fp.div RNE x8 x10))))
(check-sat)
