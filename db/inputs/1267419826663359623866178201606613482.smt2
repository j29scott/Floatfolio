(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE x8 x5) (fp.sub RNE x4 x8)))
(assert (fp.leq (fp.sub RNE x3 x4) (fp.neg x3)))
(assert (fp.leq (fp.neg x6) (fp.neg x3)))
(assert (fp.leq (fp.div RNE x10 x3) (fp.neg x0)))
(assert (fp.lt (fp.mul RNE x5 x1) (fp.neg x9)))
(assert (fp.leq (fp.sub RNE x0 x1) (fp.add RNE x1 x1)))
(assert (fp.lt (fp.mul RNE x1 x10) (fp.sub RNE x8 x2)))
(assert (fp.lt (fp.sub RNE x2 x4) (fp.div RNE x1 x9)))
(assert (fp.leq (fp.mul RNE x0 x9) (fp.sub RNE x8 x8)))
(assert (fp.geq (fp.mul RNE x5 x1) (fp.neg x4)))
(assert (fp.gt (fp.mul RNE x10 x10) (fp.neg x7)))
(assert (fp.lt (fp.add RNE x7 x3) (fp.div RNE x8 x2)))
(assert (fp.leq (fp.mul RNE x6 x5) (fp.div RNE x7 x0)))
(assert (fp.lt (fp.sub RNE x3 x4) (fp.neg x10)))
(check-sat)
