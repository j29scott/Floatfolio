(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x0 x10) (fp.neg x14)) (fp.neg (fp.add RNE x3 x12))) (fp.add RNE (fp.sub RNE (fp.add RNE x9 x3) (fp.sub RNE x8 x16)) (fp.div RNE (fp.div RNE x13 x3) (fp.neg x15)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x16 x7) (fp.div RNE x9 x16)) (fp.neg (fp.mul RNE x6 x10))) (fp.div RNE (fp.sub RNE (fp.div RNE x11 x15) (fp.sub RNE x7 x3)) (fp.add RNE (fp.mul RNE x11 x2) (fp.neg x4))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.neg (fp.div RNE x14 x10))) (fp.div RNE (fp.add RNE (fp.add RNE x13 x5) (fp.neg x6)) (fp.mul RNE (fp.sub RNE x9 x14) (fp.neg x5)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.mul RNE x14 x3)) (fp.div RNE (fp.add RNE x4 x6) (fp.neg x9))) (fp.neg (fp.neg (fp.mul RNE x6 x16))))))
(check-sat)
