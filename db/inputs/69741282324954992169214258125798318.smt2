(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE x15 x20) (fp.mul RNE x2 x10)) (fp.add RNE (fp.sub RNE x22 x0) (fp.sub RNE x11 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x16 x12) (fp.add RNE x4 x18)) (fp.sub RNE (fp.add RNE x25 x23) (fp.mul RNE x1 x12))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x10 x1) (fp.add RNE x15 x23)) (fp.div RNE (fp.neg x20) (fp.mul RNE x20 x17))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x7 x10) (fp.mul RNE x18 x21)) (fp.sub RNE (fp.add RNE x5 x7) (fp.mul RNE x14 x18))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x13 x0) (fp.neg x1)) (fp.add RNE (fp.div RNE x11 x14) (fp.add RNE x17 x26))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x18 x8) (fp.div RNE x13 x9)) (fp.sub RNE (fp.div RNE x24 x11) (fp.div RNE x15 x21))))
(assert (fp.gt (fp.div RNE (fp.div RNE x1 x11) (fp.div RNE x16 x26)) (fp.mul RNE (fp.div RNE x4 x20) (fp.neg x7))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x15 x6) (fp.div RNE x2 x13)) (fp.add RNE (fp.add RNE x17 x4) (fp.sub RNE x4 x0))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x24 x7) (fp.sub RNE x6 x21)) (fp.mul RNE (fp.add RNE x26 x9) (fp.sub RNE x17 x26))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x26 x16) (fp.div RNE x19 x1)) (fp.mul RNE (fp.div RNE x9 x17) (fp.sub RNE x16 x17))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x15 x17) (fp.neg x22)) (fp.mul RNE (fp.mul RNE x7 x11) (fp.neg x16))))
(assert (fp.leq (fp.neg (fp.add RNE x3 x13)) (fp.sub RNE (fp.neg x26) (fp.neg x4))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x25 x17) (fp.mul RNE x20 x22)) (fp.add RNE (fp.sub RNE x4 x20) (fp.sub RNE x23 x7))))
(assert (fp.lt (fp.add RNE (fp.neg x26) (fp.mul RNE x24 x3)) (fp.mul RNE (fp.mul RNE x14 x3) (fp.neg x21))))
(assert (fp.geq (fp.div RNE (fp.neg x13) (fp.add RNE x9 x5)) (fp.mul RNE (fp.mul RNE x18 x7) (fp.div RNE x13 x14))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x26 x26) (fp.div RNE x9 x20)) (fp.mul RNE (fp.div RNE x4 x0) (fp.add RNE x17 x22))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x24 x17) (fp.div RNE x5 x24)) (fp.neg (fp.sub RNE x9 x11))))
(check-sat)
