(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x15) (fp.sub RNE x9 x12)) (fp.add RNE (fp.sub RNE x9 x8) (fp.div RNE x11 x12))) (fp.mul RNE (fp.neg (fp.div RNE x8 x15)) (fp.add RNE (fp.add RNE x5 x5) (fp.sub RNE x11 x3)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE x7 x3) (fp.sub RNE x14 x1)) (fp.sub RNE (fp.mul RNE x6 x14) (fp.div RNE x4 x14))) (fp.sub RNE (fp.sub RNE (fp.div RNE x6 x4) (fp.mul RNE x0 x4)) (fp.neg (fp.mul RNE x9 x1)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x1 x7) (fp.mul RNE x0 x9)) (fp.neg (fp.neg x5))) (fp.sub RNE (fp.neg (fp.add RNE x11 x3)) (fp.sub RNE (fp.add RNE x8 x3) (fp.neg x12)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x2 x7)) (fp.neg (fp.neg x3))) (fp.add RNE (fp.neg (fp.div RNE x8 x13)) (fp.add RNE (fp.mul RNE x0 x6) (fp.neg x10)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE x6 x10) (fp.mul RNE x0 x12)) (fp.sub RNE (fp.mul RNE x1 x14) (fp.add RNE x13 x15))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x3)) (fp.add RNE (fp.sub RNE x0 x11) (fp.add RNE x9 x5)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x4 x8) (fp.div RNE x0 x14)) (fp.neg (fp.div RNE x4 x2))) (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.sub RNE x11 x4)) (fp.mul RNE (fp.div RNE x3 x2) (fp.mul RNE x7 x10)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.div RNE x13 x14) (fp.add RNE x0 x6)) (fp.div RNE (fp.add RNE x1 x3) (fp.neg x3))) (fp.mul RNE (fp.neg (fp.mul RNE x8 x5)) (fp.neg (fp.mul RNE x13 x0)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.sub RNE x11 x6)) (fp.add RNE (fp.add RNE x10 x14) (fp.add RNE x7 x8))) (fp.add RNE (fp.add RNE (fp.add RNE x12 x14) (fp.sub RNE x13 x13)) (fp.div RNE (fp.sub RNE x14 x15) (fp.div RNE x10 x9)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x14 x11) (fp.sub RNE x2 x3)) (fp.neg (fp.neg x11))) (fp.div RNE (fp.sub RNE (fp.div RNE x15 x4) (fp.add RNE x6 x9)) (fp.neg (fp.neg x12)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x14 x3)) (fp.sub RNE (fp.div RNE x12 x9) (fp.div RNE x9 x4))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x12) (fp.mul RNE x0 x10)) (fp.sub RNE (fp.mul RNE x0 x5) (fp.sub RNE x1 x8)))))
(check-sat)
