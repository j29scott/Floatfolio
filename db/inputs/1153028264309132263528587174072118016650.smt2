(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.div RNE x9 x1)) (fp.div RNE (fp.sub RNE x8 x8) (fp.div RNE x6 x9))) (fp.add RNE (fp.neg (fp.div RNE x4 x14)) (fp.div RNE (fp.sub RNE x7 x13) (fp.div RNE x7 x0)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.div RNE x13 x16) (fp.div RNE x9 x0))) (fp.mul RNE (fp.neg (fp.neg x10)) (fp.div RNE (fp.neg x3) (fp.neg x1)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.sub RNE x11 x14) (fp.sub RNE x16 x1)) (fp.div RNE (fp.neg x1) (fp.add RNE x0 x13))) (fp.neg (fp.div RNE (fp.add RNE x10 x14) (fp.neg x1)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x7 x3)) (fp.sub RNE (fp.neg x5) (fp.neg x15))) (fp.neg (fp.add RNE (fp.add RNE x10 x10) (fp.add RNE x10 x15)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.sub RNE x15 x1) (fp.sub RNE x11 x13))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x0) (fp.neg x12)) (fp.neg (fp.mul RNE x12 x11)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE x10 x4) (fp.mul RNE x7 x12)) (fp.neg (fp.neg x15))) (fp.div RNE (fp.add RNE (fp.mul RNE x7 x4) (fp.div RNE x12 x2)) (fp.div RNE (fp.div RNE x15 x5) (fp.neg x6)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x14 x4)) (fp.mul RNE (fp.mul RNE x1 x2) (fp.mul RNE x9 x0))) (fp.div RNE (fp.sub RNE (fp.mul RNE x1 x11) (fp.div RNE x6 x11)) (fp.add RNE (fp.div RNE x7 x12) (fp.mul RNE x8 x12)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg x4)) (fp.sub RNE (fp.div RNE x13 x16) (fp.mul RNE x11 x5))) (fp.neg (fp.div RNE (fp.neg x11) (fp.add RNE x12 x3)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x6) (fp.div RNE x13 x5)) (fp.neg (fp.mul RNE x14 x8))) (fp.div RNE (fp.sub RNE (fp.div RNE x15 x1) (fp.add RNE x1 x8)) (fp.sub RNE (fp.add RNE x5 x2) (fp.neg x16)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE x13 x14)) (fp.div RNE (fp.add RNE x1 x15) (fp.add RNE x4 x7))) (fp.neg (fp.div RNE (fp.add RNE x10 x0) (fp.div RNE x9 x4)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.div RNE x11 x8) (fp.div RNE x5 x2)) (fp.sub RNE (fp.mul RNE x6 x7) (fp.add RNE x0 x9))) (fp.mul RNE (fp.neg (fp.mul RNE x15 x7)) (fp.div RNE (fp.div RNE x14 x4) (fp.div RNE x4 x10)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x6 x12) (fp.add RNE x15 x13)) (fp.add RNE (fp.neg x7) (fp.mul RNE x16 x8))) (fp.add RNE (fp.neg (fp.div RNE x5 x16)) (fp.add RNE (fp.mul RNE x11 x8) (fp.div RNE x1 x16)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.div RNE x0 x3) (fp.mul RNE x12 x14)) (fp.sub RNE (fp.div RNE x2 x0) (fp.neg x6))) (fp.neg (fp.add RNE (fp.neg x12) (fp.mul RNE x16 x4)))))
(check-sat)
