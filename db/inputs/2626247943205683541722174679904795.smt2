(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.add RNE x1 x5) (fp.sub RNE x19 x6)) (fp.neg (fp.sub RNE x20 x16))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x20 x7) (fp.add RNE x7 x5)) (fp.sub RNE (fp.mul RNE x13 x6) (fp.add RNE x14 x15))))
(assert (fp.geq (fp.neg (fp.mul RNE x19 x6)) (fp.div RNE (fp.add RNE x6 x13) (fp.add RNE x14 x10))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x18 x10) (fp.div RNE x19 x6)) (fp.neg (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x11 x6) (fp.neg x8)) (fp.sub RNE (fp.add RNE x18 x16) (fp.mul RNE x13 x1))))
(assert (fp.leq (fp.neg (fp.add RNE x13 x11)) (fp.div RNE (fp.sub RNE x0 x7) (fp.neg x11))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x5 x15) (fp.neg x19)) (fp.div RNE (fp.div RNE x0 x5) (fp.sub RNE x17 x14))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x19 x13) (fp.mul RNE x14 x18)) (fp.neg (fp.mul RNE x17 x2))))
(assert (fp.geq (fp.add RNE (fp.neg x19) (fp.neg x11)) (fp.sub RNE (fp.div RNE x19 x8) (fp.add RNE x12 x13))))
(assert (fp.geq (fp.sub RNE (fp.neg x11) (fp.div RNE x4 x1)) (fp.neg (fp.add RNE x5 x10))))
(assert (fp.eq (fp.neg (fp.add RNE x6 x2)) (fp.div RNE (fp.mul RNE x5 x4) (fp.mul RNE x13 x7))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x20 x11) (fp.add RNE x1 x0)) (fp.sub RNE (fp.div RNE x12 x8) (fp.neg x3))))
(assert (fp.leq (fp.div RNE (fp.add RNE x18 x8) (fp.neg x15)) (fp.sub RNE (fp.mul RNE x20 x16) (fp.mul RNE x13 x5))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x11 x18) (fp.mul RNE x5 x13)) (fp.div RNE (fp.sub RNE x1 x18) (fp.div RNE x8 x17))))
(check-sat)
