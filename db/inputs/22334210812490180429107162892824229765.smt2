(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.div RNE x6 x11) (fp.div RNE x15 x10)) (fp.mul RNE (fp.div RNE x2 x10) (fp.mul RNE x13 x8))) (fp.neg (fp.mul RNE (fp.add RNE x0 x7) (fp.neg x7)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x15 x7) (fp.mul RNE x3 x16))) (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x12) (fp.sub RNE x4 x9)) (fp.neg (fp.div RNE x3 x3)))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x14 x5))) (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x5) (fp.add RNE x2 x2)) (fp.div RNE (fp.sub RNE x12 x11) (fp.mul RNE x3 x6)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x4) (fp.sub RNE x0 x6)) (fp.div RNE (fp.add RNE x11 x15) (fp.div RNE x4 x13))) (fp.div RNE (fp.neg (fp.mul RNE x11 x0)) (fp.sub RNE (fp.add RNE x12 x6) (fp.add RNE x3 x15)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x16)) (fp.div RNE (fp.div RNE x5 x6) (fp.div RNE x4 x11))) (fp.div RNE (fp.mul RNE (fp.sub RNE x2 x8) (fp.neg x6)) (fp.div RNE (fp.add RNE x5 x5) (fp.neg x12)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE x6 x5) (fp.add RNE x3 x0)) (fp.mul RNE (fp.add RNE x10 x8) (fp.sub RNE x13 x0))) (fp.add RNE (fp.neg (fp.div RNE x14 x8)) (fp.div RNE (fp.div RNE x11 x16) (fp.div RNE x7 x7)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE x11 x13) (fp.neg x2)) (fp.div RNE (fp.sub RNE x9 x1) (fp.sub RNE x5 x1))) (fp.add RNE (fp.sub RNE (fp.div RNE x8 x15) (fp.add RNE x6 x11)) (fp.div RNE (fp.sub RNE x1 x1) (fp.mul RNE x12 x10)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x0 x12) (fp.add RNE x9 x12)) (fp.sub RNE (fp.div RNE x5 x8) (fp.sub RNE x14 x6))) (fp.sub RNE (fp.add RNE (fp.div RNE x2 x9) (fp.mul RNE x3 x12)) (fp.sub RNE (fp.add RNE x10 x3) (fp.add RNE x11 x16)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE x15 x1) (fp.sub RNE x2 x4)) (fp.neg (fp.div RNE x14 x5))) (fp.div RNE (fp.div RNE (fp.div RNE x2 x14) (fp.add RNE x4 x0)) (fp.mul RNE (fp.add RNE x2 x2) (fp.div RNE x15 x2)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x0 x11) (fp.div RNE x10 x8))) (fp.add RNE (fp.sub RNE (fp.div RNE x4 x9) (fp.add RNE x13 x1)) (fp.mul RNE (fp.div RNE x13 x4) (fp.neg x16)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x5 x8) (fp.div RNE x15 x8)) (fp.sub RNE (fp.sub RNE x2 x2) (fp.add RNE x1 x14))) (fp.sub RNE (fp.div RNE (fp.div RNE x4 x15) (fp.add RNE x0 x0)) (fp.div RNE (fp.sub RNE x0 x12) (fp.div RNE x16 x16)))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x4 x12))) (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.add RNE x13 x16)) (fp.mul RNE (fp.add RNE x11 x16) (fp.neg x6)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x0 x10) (fp.sub RNE x9 x9)) (fp.neg (fp.mul RNE x12 x7))) (fp.div RNE (fp.neg (fp.div RNE x8 x9)) (fp.mul RNE (fp.add RNE x14 x13) (fp.sub RNE x5 x16)))))
(check-sat)
