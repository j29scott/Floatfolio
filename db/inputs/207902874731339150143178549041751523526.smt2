(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE x4 x5)) (fp.neg (fp.add RNE x20 x13))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x14 x12) (fp.neg x2)) (fp.sub RNE (fp.div RNE x5 x0) (fp.sub RNE x3 x5))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x1 x19) (fp.mul RNE x19 x19)) (fp.neg (fp.sub RNE x13 x21))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x21 x9) (fp.add RNE x18 x13)) (fp.add RNE (fp.add RNE x8 x13) (fp.neg x4))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x19 x18) (fp.neg x12)) (fp.div RNE (fp.neg x5) (fp.div RNE x10 x7))))
(assert (fp.lt (fp.sub RNE (fp.neg x0) (fp.add RNE x2 x1)) (fp.div RNE (fp.sub RNE x9 x1) (fp.neg x16))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x16 x1) (fp.add RNE x3 x21)) (fp.neg (fp.add RNE x3 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x20 x7) (fp.add RNE x18 x21)) (fp.neg (fp.sub RNE x0 x8))))
(assert (fp.lt (fp.mul RNE (fp.neg x2) (fp.div RNE x1 x7)) (fp.sub RNE (fp.mul RNE x13 x5) (fp.add RNE x8 x15))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x19 x15) (fp.add RNE x3 x2)) (fp.div RNE (fp.sub RNE x14 x10) (fp.mul RNE x8 x16))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x5 x16) (fp.neg x15)) (fp.add RNE (fp.neg x8) (fp.div RNE x14 x11))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x20 x9) (fp.div RNE x3 x12)) (fp.div RNE (fp.sub RNE x20 x16) (fp.neg x2))))
(assert (fp.gt (fp.neg (fp.neg x6)) (fp.add RNE (fp.add RNE x11 x10) (fp.sub RNE x12 x8))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x13 x3) (fp.mul RNE x12 x12)) (fp.sub RNE (fp.div RNE x20 x18) (fp.neg x4))))
(assert (fp.eq (fp.neg (fp.neg x8)) (fp.sub RNE (fp.div RNE x6 x20) (fp.neg x21))))
(check-sat)
