(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE x1 x11) (fp.div RNE x1 x7)) (fp.sub RNE (fp.div RNE x4 x6) (fp.add RNE x11 x10))) (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.neg x2)) (fp.div RNE (fp.sub RNE x6 x0) (fp.mul RNE x4 x8)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x6 x2) (fp.add RNE x2 x11)) (fp.mul RNE (fp.mul RNE x1 x6) (fp.sub RNE x7 x6))) (fp.sub RNE (fp.div RNE (fp.div RNE x10 x2) (fp.neg x3)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.mul RNE x9 x1)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x3) (fp.sub RNE x8 x7)) (fp.div RNE (fp.sub RNE x1 x6) (fp.div RNE x3 x4))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x3) (fp.neg x6)) (fp.div RNE (fp.add RNE x2 x2) (fp.sub RNE x5 x1)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.sub RNE x7 x5) (fp.sub RNE x11 x5)) (fp.mul RNE (fp.neg x4) (fp.add RNE x5 x7))) (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x1) (fp.neg x1)) (fp.add RNE (fp.div RNE x1 x6) (fp.add RNE x1 x11)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x9 x8)) (fp.mul RNE (fp.sub RNE x8 x8) (fp.sub RNE x8 x0))) (fp.neg (fp.neg (fp.neg x4)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x6 x2) (fp.sub RNE x10 x4)) (fp.mul RNE (fp.mul RNE x4 x2) (fp.add RNE x4 x7))) (fp.add RNE (fp.sub RNE (fp.add RNE x10 x4) (fp.add RNE x6 x3)) (fp.neg (fp.sub RNE x9 x0)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x5) (fp.mul RNE x11 x5))) (fp.neg (fp.mul RNE (fp.neg x4) (fp.add RNE x8 x1)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.add RNE x7 x7)) (fp.add RNE (fp.mul RNE x10 x6) (fp.sub RNE x4 x9))) (fp.div RNE (fp.sub RNE (fp.mul RNE x6 x11) (fp.add RNE x9 x5)) (fp.sub RNE (fp.neg x4) (fp.add RNE x8 x0)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x10 x9)) (fp.add RNE (fp.sub RNE x7 x4) (fp.sub RNE x6 x1))) (fp.add RNE (fp.mul RNE (fp.add RNE x3 x7) (fp.sub RNE x1 x1)) (fp.mul RNE (fp.sub RNE x11 x3) (fp.div RNE x0 x11)))))
(check-sat)
