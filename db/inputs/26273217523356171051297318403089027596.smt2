(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x12 x2) (fp.sub RNE x11 x11)))
(assert (fp.geq (fp.mul RNE x13 x0) (fp.neg x1)))
(assert (fp.gt (fp.mul RNE x8 x8) (fp.mul RNE x6 x9)))
(assert (fp.gt (fp.div RNE x9 x5) (fp.mul RNE x1 x4)))
(assert (fp.leq (fp.mul RNE x4 x10) (fp.mul RNE x6 x10)))
(assert (fp.gt (fp.neg x7) (fp.add RNE x8 x0)))
(assert (fp.leq (fp.neg x12) (fp.mul RNE x12 x13)))
(assert (fp.lt (fp.mul RNE x5 x9) (fp.sub RNE x5 x8)))
(assert (fp.leq (fp.sub RNE x0 x7) (fp.neg x11)))
(assert (fp.eq (fp.neg x13) (fp.mul RNE x2 x13)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x6 x13)))
(check-sat)
