(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.neg x15) (fp.div RNE x6 x4)) (fp.neg (fp.add RNE x2 x20))) (fp.add RNE (fp.neg (fp.neg x16)) (fp.mul RNE (fp.neg x13) (fp.sub RNE x22 x1)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x8 x9) (fp.sub RNE x23 x11)) (fp.mul RNE (fp.div RNE x8 x10) (fp.div RNE x10 x7))) (fp.add RNE (fp.neg (fp.neg x5)) (fp.sub RNE (fp.neg x8) (fp.neg x9)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x20) (fp.sub RNE x6 x22)) (fp.mul RNE (fp.div RNE x18 x22) (fp.neg x11))) (fp.sub RNE (fp.div RNE (fp.add RNE x23 x12) (fp.mul RNE x9 x10)) (fp.div RNE (fp.add RNE x10 x14) (fp.neg x15)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.sub RNE x5 x13) (fp.mul RNE x18 x18)) (fp.add RNE (fp.div RNE x6 x18) (fp.div RNE x12 x17))) (fp.neg (fp.neg (fp.mul RNE x1 x1)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x1 x19) (fp.add RNE x15 x18))) (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x6) (fp.div RNE x11 x13)) (fp.neg (fp.add RNE x21 x22)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x2 x20) (fp.sub RNE x16 x18)) (fp.sub RNE (fp.mul RNE x22 x13) (fp.neg x1))) (fp.add RNE (fp.neg (fp.div RNE x16 x0)) (fp.div RNE (fp.mul RNE x16 x20) (fp.div RNE x22 x12)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.mul RNE x12 x23) (fp.mul RNE x21 x3)) (fp.mul RNE (fp.div RNE x1 x14) (fp.sub RNE x18 x13))) (fp.sub RNE (fp.div RNE (fp.neg x15) (fp.div RNE x15 x7)) (fp.add RNE (fp.neg x11) (fp.sub RNE x15 x10)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.sub RNE x1 x16)) (fp.mul RNE (fp.div RNE x6 x1) (fp.add RNE x6 x4))) (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.div RNE x19 x10)) (fp.div RNE (fp.neg x21) (fp.add RNE x20 x23)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.add RNE x12 x23)) (fp.neg (fp.mul RNE x6 x17))) (fp.add RNE (fp.mul RNE (fp.div RNE x6 x18) (fp.neg x9)) (fp.neg (fp.div RNE x19 x10)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE x2 x19)) (fp.div RNE (fp.neg x6) (fp.neg x18))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x1 x23) (fp.sub RNE x9 x2)) (fp.add RNE (fp.mul RNE x6 x23) (fp.neg x20)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.mul RNE x12 x13)) (fp.mul RNE (fp.div RNE x8 x22) (fp.add RNE x18 x15))) (fp.sub RNE (fp.add RNE (fp.neg x6) (fp.add RNE x20 x15)) (fp.add RNE (fp.sub RNE x3 x17) (fp.div RNE x11 x4)))))
(check-sat)
