(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE x11 x9) (fp.div RNE x12 x5)))
(assert (fp.geq (fp.div RNE x6 x6) (fp.div RNE x12 x4)))
(assert (fp.geq (fp.neg x7) (fp.sub RNE x1 x8)))
(assert (fp.geq (fp.neg x0) (fp.mul RNE x5 x11)))
(assert (fp.geq (fp.add RNE x12 x8) (fp.mul RNE x4 x2)))
(assert (fp.eq (fp.sub RNE x6 x7) (fp.add RNE x4 x4)))
(assert (fp.lt (fp.neg x11) (fp.add RNE x2 x12)))
(assert (fp.geq (fp.mul RNE x0 x0) (fp.add RNE x6 x11)))
(assert (fp.gt (fp.mul RNE x2 x1) (fp.mul RNE x5 x5)))
(assert (fp.eq (fp.mul RNE x9 x4) (fp.neg x2)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.neg x2)))
(assert (fp.leq (fp.div RNE x0 x11) (fp.add RNE x4 x12)))
(check-sat)
