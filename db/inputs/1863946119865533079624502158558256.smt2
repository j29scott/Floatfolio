(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x2 x7) (fp.neg x10))) (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.add RNE x10 x12)) (fp.add RNE (fp.mul RNE x6 x5) (fp.div RNE x7 x10)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x8 x5) (fp.div RNE x9 x2)) (fp.neg (fp.sub RNE x1 x2))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x5 x5) (fp.div RNE x8 x6)) (fp.div RNE (fp.sub RNE x5 x0) (fp.sub RNE x7 x0)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x4 x3) (fp.mul RNE x4 x0))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x5) (fp.sub RNE x2 x3)) (fp.neg (fp.neg x3)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE x12 x2)) (fp.neg (fp.mul RNE x3 x11))) (fp.add RNE (fp.mul RNE (fp.div RNE x8 x2) (fp.sub RNE x12 x10)) (fp.add RNE (fp.sub RNE x0 x11) (fp.mul RNE x9 x5)))))
(check-sat)
