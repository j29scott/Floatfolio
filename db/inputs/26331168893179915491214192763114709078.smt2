(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x3 x4) (fp.div RNE x2 x7))) (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.sub RNE x2 x3)) (fp.div RNE (fp.neg x8) (fp.add RNE x1 x0)))))
(assert (fp.leq (fp.neg (fp.neg (fp.sub RNE x5 x0))) (fp.add RNE (fp.mul RNE (fp.neg x1) (fp.mul RNE x3 x0)) (fp.neg (fp.mul RNE x8 x6)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE x8 x8) (fp.neg x2)) (fp.div RNE (fp.mul RNE x3 x4) (fp.neg x6))) (fp.div RNE (fp.sub RNE (fp.sub RNE x1 x8) (fp.sub RNE x5 x3)) (fp.mul RNE (fp.add RNE x6 x3) (fp.neg x0)))))
(check-sat)
