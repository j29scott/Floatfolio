(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x11 x11) (fp.sub RNE x3 x5)) (fp.add RNE (fp.add RNE x6 x12) (fp.mul RNE x5 x1))))
(assert (fp.lt (fp.neg (fp.div RNE x1 x14)) (fp.sub RNE (fp.neg x3) (fp.neg x15))))
(assert (fp.gt (fp.div RNE (fp.div RNE x0 x5) (fp.mul RNE x7 x16)) (fp.sub RNE (fp.add RNE x4 x15) (fp.add RNE x11 x2))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x12 x6) (fp.sub RNE x15 x11)) (fp.div RNE (fp.neg x16) (fp.mul RNE x9 x14))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x16 x8) (fp.neg x5)) (fp.div RNE (fp.neg x15) (fp.sub RNE x12 x5))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x12 x6) (fp.sub RNE x8 x17)) (fp.sub RNE (fp.div RNE x17 x14) (fp.mul RNE x4 x4))))
(assert (fp.lt (fp.sub RNE (fp.neg x8) (fp.neg x14)) (fp.neg (fp.sub RNE x14 x8))))
(assert (fp.gt (fp.neg (fp.add RNE x5 x11)) (fp.neg (fp.add RNE x8 x6))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x0 x16) (fp.mul RNE x9 x14)) (fp.sub RNE (fp.neg x16) (fp.sub RNE x15 x3))))
(check-sat)
