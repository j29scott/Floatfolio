(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x4 x10) (fp.neg x1)) (fp.div RNE (fp.mul RNE x1 x10) (fp.mul RNE x15 x15))) (fp.sub RNE (fp.sub RNE (fp.add RNE x10 x6) (fp.add RNE x2 x8)) (fp.mul RNE (fp.mul RNE x8 x4) (fp.sub RNE x12 x4)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.add RNE x9 x1)) (fp.sub RNE (fp.div RNE x9 x12) (fp.mul RNE x14 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x4 x1) (fp.mul RNE x15 x14)) (fp.div RNE (fp.add RNE x7 x15) (fp.neg x10))))))
(check-sat)
