(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.mul RNE x5 x3)) (fp.mul RNE (fp.mul RNE x2 x2) (fp.neg x2))))
(assert (fp.gt (fp.neg (fp.add RNE x6 x4)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x3 x4))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x2 x3) (fp.neg x0)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x4 x5) (fp.neg x1)) (fp.add RNE (fp.neg x6) (fp.sub RNE x5 x1))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x2 x0) (fp.sub RNE x5 x2)) (fp.sub RNE (fp.div RNE x2 x3) (fp.sub RNE x2 x5))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.div RNE x1 x5)) (fp.sub RNE (fp.mul RNE x0 x6) (fp.add RNE x1 x0))))
(assert (fp.geq (fp.div RNE (fp.add RNE x2 x6) (fp.sub RNE x2 x5)) (fp.add RNE (fp.mul RNE x5 x3) (fp.neg x4))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x2 x0) (fp.sub RNE x0 x2)) (fp.neg (fp.mul RNE x2 x3))))
(check-sat)
