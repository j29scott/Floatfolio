(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x2 x1) (fp.div RNE x13 x8)) (fp.add RNE (fp.mul RNE x10 x9) (fp.add RNE x6 x11))) (fp.div RNE (fp.sub RNE (fp.div RNE x3 x2) (fp.add RNE x1 x16)) (fp.div RNE (fp.neg x15) (fp.add RNE x7 x3)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x17 x7)) (fp.sub RNE (fp.neg x0) (fp.add RNE x0 x1))) (fp.neg (fp.div RNE (fp.sub RNE x14 x7) (fp.div RNE x7 x19))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.add RNE (fp.div RNE x3 x8) (fp.neg x14))) (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x11) (fp.add RNE x7 x7)) (fp.neg (fp.neg x0)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x19 x1) (fp.neg x16)) (fp.mul RNE (fp.sub RNE x0 x11) (fp.neg x10))) (fp.div RNE (fp.neg (fp.neg x12)) (fp.sub RNE (fp.mul RNE x18 x14) (fp.neg x15))))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.add RNE (fp.mul RNE x2 x4) (fp.mul RNE x0 x0))) (fp.neg (fp.mul RNE (fp.add RNE x18 x2) (fp.sub RNE x2 x0)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.add RNE x0 x2) (fp.neg x1))) (fp.add RNE (fp.add RNE (fp.div RNE x17 x2) (fp.sub RNE x18 x9)) (fp.add RNE (fp.sub RNE x6 x12) (fp.add RNE x18 x10))))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.neg x16) (fp.mul RNE x0 x16)) (fp.add RNE (fp.neg x5) (fp.div RNE x10 x19))) (fp.div RNE (fp.neg (fp.mul RNE x4 x19)) (fp.add RNE (fp.add RNE x1 x3) (fp.sub RNE x0 x13)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.div RNE x13 x18) (fp.mul RNE x14 x19)) (fp.div RNE (fp.add RNE x19 x0) (fp.div RNE x9 x6))) (fp.sub RNE (fp.div RNE (fp.add RNE x15 x17) (fp.div RNE x9 x4)) (fp.div RNE (fp.sub RNE x14 x18) (fp.mul RNE x3 x12))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x13 x3) (fp.neg x12)) (fp.div RNE (fp.div RNE x9 x6) (fp.add RNE x15 x8))) (fp.sub RNE (fp.neg (fp.sub RNE x14 x11)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x18 x6)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.neg x6) (fp.div RNE x18 x11))) (fp.sub RNE (fp.sub RNE (fp.div RNE x8 x1) (fp.mul RNE x14 x2)) (fp.add RNE (fp.div RNE x19 x19) (fp.mul RNE x16 x3))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x13 x6) (fp.div RNE x5 x1)) (fp.sub RNE (fp.mul RNE x11 x10) (fp.div RNE x19 x19))) (fp.add RNE (fp.add RNE (fp.add RNE x7 x9) (fp.sub RNE x4 x6)) (fp.neg (fp.neg x4)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.mul RNE x5 x5) (fp.sub RNE x12 x18)) (fp.neg (fp.mul RNE x13 x16))) (fp.neg (fp.neg (fp.add RNE x4 x4))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.neg (fp.neg x4)) (fp.neg (fp.neg x3))) (fp.sub RNE (fp.add RNE (fp.add RNE x1 x0) (fp.sub RNE x10 x18)) (fp.neg (fp.div RNE x12 x19)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x4 x13) (fp.mul RNE x14 x3)) (fp.add RNE (fp.mul RNE x14 x4) (fp.div RNE x3 x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x7 x13) (fp.div RNE x18 x16)) (fp.neg (fp.div RNE x2 x2))))))
(check-sat)
