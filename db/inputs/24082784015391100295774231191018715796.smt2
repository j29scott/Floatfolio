(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE x4 x0) (fp.div RNE x4 x1)) (fp.add RNE (fp.neg x4) (fp.div RNE x2 x3))))
(assert (fp.eq (fp.sub RNE (fp.neg x5) (fp.sub RNE x3 x5)) (fp.div RNE (fp.neg x4) (fp.neg x2))))
(assert (fp.lt (fp.neg (fp.sub RNE x6 x2)) (fp.neg (fp.mul RNE x3 x2))))
(assert (fp.leq (fp.div RNE (fp.add RNE x6 x5) (fp.add RNE x0 x3)) (fp.mul RNE (fp.add RNE x3 x5) (fp.div RNE x3 x1))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x2 x5) (fp.div RNE x1 x0)) (fp.sub RNE (fp.add RNE x0 x2) (fp.neg x0))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x6 x2) (fp.mul RNE x5 x1)) (fp.add RNE (fp.neg x4) (fp.neg x3))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x2 x6) (fp.div RNE x2 x0)) (fp.add RNE (fp.neg x1) (fp.div RNE x6 x2))))
(assert (fp.leq (fp.neg (fp.div RNE x3 x6)) (fp.div RNE (fp.div RNE x2 x0) (fp.neg x6))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x2 x1) (fp.div RNE x0 x6)) (fp.add RNE (fp.div RNE x5 x2) (fp.sub RNE x3 x5))))
(check-sat)
