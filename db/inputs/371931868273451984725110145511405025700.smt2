(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x6 x12) (fp.mul RNE x17 x7)) (fp.add RNE (fp.neg x11) (fp.div RNE x1 x16))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x3 x15) (fp.div RNE x1 x16)) (fp.sub RNE (fp.sub RNE x15 x9) (fp.add RNE x13 x7))))
(assert (fp.lt (fp.div RNE (fp.neg x12) (fp.div RNE x2 x3)) (fp.add RNE (fp.neg x15) (fp.sub RNE x0 x15))))
(assert (fp.geq (fp.add RNE (fp.div RNE x16 x1) (fp.add RNE x0 x12)) (fp.neg (fp.add RNE x4 x3))))
(assert (fp.leq (fp.add RNE (fp.add RNE x7 x16) (fp.mul RNE x14 x17)) (fp.div RNE (fp.add RNE x3 x13) (fp.div RNE x0 x4))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x3 x8) (fp.sub RNE x8 x13)) (fp.add RNE (fp.sub RNE x10 x7) (fp.div RNE x3 x14))))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x0) (fp.mul RNE x2 x1)) (fp.sub RNE (fp.add RNE x8 x2) (fp.mul RNE x3 x8))))
(assert (fp.gt (fp.neg (fp.mul RNE x10 x4)) (fp.add RNE (fp.neg x13) (fp.div RNE x5 x13))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x16 x11) (fp.mul RNE x4 x11)) (fp.mul RNE (fp.div RNE x0 x7) (fp.sub RNE x0 x1))))
(assert (fp.eq (fp.div RNE (fp.div RNE x8 x17) (fp.mul RNE x1 x5)) (fp.sub RNE (fp.div RNE x1 x5) (fp.mul RNE x8 x3))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x8 x9) (fp.mul RNE x17 x12)) (fp.div RNE (fp.sub RNE x11 x14) (fp.add RNE x13 x3))))
(assert (fp.leq (fp.neg (fp.mul RNE x10 x6)) (fp.mul RNE (fp.sub RNE x12 x12) (fp.add RNE x2 x2))))
(assert (fp.leq (fp.mul RNE (fp.neg x15) (fp.mul RNE x7 x0)) (fp.mul RNE (fp.mul RNE x6 x5) (fp.sub RNE x0 x2))))
(assert (fp.eq (fp.neg (fp.sub RNE x10 x13)) (fp.div RNE (fp.add RNE x9 x6) (fp.sub RNE x14 x5))))
(check-sat)
