(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x9) (fp.mul RNE x1 x11)) (fp.div RNE (fp.neg x13) (fp.sub RNE x17 x21))) (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x21) (fp.div RNE x15 x9)) (fp.neg (fp.mul RNE x14 x17)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x11 x4) (fp.add RNE x13 x4)) (fp.neg (fp.sub RNE x9 x8))) (fp.add RNE (fp.neg (fp.sub RNE x13 x18)) (fp.neg (fp.add RNE x7 x20))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE (fp.add RNE x13 x23) (fp.add RNE x2 x18)) (fp.div RNE (fp.add RNE x12 x2) (fp.sub RNE x14 x11)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x15 x7) (fp.neg x22)) (fp.add RNE (fp.mul RNE x3 x12) (fp.add RNE x12 x16))) (fp.sub RNE (fp.neg (fp.mul RNE x18 x19)) (fp.neg (fp.mul RNE x12 x22))))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.mul RNE (fp.neg x18) (fp.sub RNE x16 x11)) (fp.neg (fp.mul RNE x21 x6)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x8 x12) (fp.div RNE x6 x18)) (fp.div RNE (fp.mul RNE x8 x21) (fp.sub RNE x22 x13))) (fp.add RNE (fp.mul RNE (fp.add RNE x4 x20) (fp.div RNE x7 x7)) (fp.sub RNE (fp.sub RNE x8 x20) (fp.sub RNE x20 x20))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x7 x1) (fp.div RNE x20 x4)) (fp.add RNE (fp.mul RNE x2 x9) (fp.add RNE x0 x9))) (fp.div RNE (fp.mul RNE (fp.div RNE x14 x12) (fp.sub RNE x18 x7)) (fp.neg (fp.div RNE x4 x16)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.sub RNE x15 x8) (fp.neg x6)) (fp.sub RNE (fp.mul RNE x17 x14) (fp.div RNE x17 x2))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE (fp.add RNE x5 x16) (fp.mul RNE x12 x8)) (fp.add RNE (fp.mul RNE x3 x14) (fp.add RNE x3 x8)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.div RNE x18 x22) (fp.add RNE x4 x19)) (fp.add RNE (fp.mul RNE x18 x19) (fp.div RNE x5 x17))) (fp.div RNE (fp.div RNE (fp.neg x23) (fp.sub RNE x9 x6)) (fp.sub RNE (fp.neg x19) (fp.sub RNE x15 x12))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE (fp.add RNE x1 x5) (fp.mul RNE x6 x20)) (fp.neg (fp.neg x17)))) (fp.neg (fp.neg (fp.neg (fp.add RNE x5 x6))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x6 x23) (fp.neg x6)) (fp.div RNE (fp.neg x19) (fp.sub RNE x0 x22))) (fp.div RNE (fp.div RNE (fp.sub RNE x22 x20) (fp.sub RNE x1 x21)) (fp.div RNE (fp.sub RNE x7 x11) (fp.neg x14)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.neg x18) (fp.div RNE x1 x12)) (fp.add RNE (fp.div RNE x19 x3) (fp.mul RNE x3 x11))) (fp.add RNE (fp.sub RNE (fp.div RNE x20 x13) (fp.mul RNE x1 x2)) (fp.add RNE (fp.mul RNE x11 x1) (fp.sub RNE x16 x0))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x11 x5) (fp.add RNE x12 x0)) (fp.div RNE (fp.neg x17) (fp.add RNE x11 x14))) (fp.div RNE (fp.sub RNE (fp.neg x4) (fp.add RNE x21 x0)) (fp.sub RNE (fp.div RNE x20 x5) (fp.neg x23)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.sub RNE x23 x15)) (fp.mul RNE (fp.div RNE x1 x2) (fp.mul RNE x23 x17))) (fp.div RNE (fp.sub RNE (fp.mul RNE x3 x16) (fp.neg x12)) (fp.div RNE (fp.sub RNE x23 x2) (fp.div RNE x20 x3))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.neg (fp.add RNE x1 x2)) (fp.add RNE (fp.mul RNE x20 x1) (fp.add RNE x21 x19))) (fp.neg (fp.sub RNE (fp.add RNE x18 x22) (fp.add RNE x6 x13)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.mul RNE x11 x12) (fp.div RNE x8 x21))) (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x18) (fp.mul RNE x14 x8)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x20 x9))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x15 x9) (fp.neg x11)) (fp.sub RNE (fp.mul RNE x0 x3) (fp.add RNE x12 x21))) (fp.add RNE (fp.neg (fp.add RNE x2 x14)) (fp.mul RNE (fp.add RNE x16 x2) (fp.div RNE x23 x4)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.div RNE x5 x8) (fp.mul RNE x19 x0))) (fp.add RNE (fp.add RNE (fp.sub RNE x22 x14) (fp.sub RNE x19 x13)) (fp.add RNE (fp.div RNE x10 x10) (fp.div RNE x12 x8))))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x14) (fp.neg x15)) (fp.add RNE (fp.div RNE x21 x18) (fp.add RNE x22 x15)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.div RNE x14 x14) (fp.neg x4)) (fp.neg (fp.neg x3))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x12 x16) (fp.neg x18)) (fp.div RNE (fp.sub RNE x16 x23) (fp.sub RNE x0 x15))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE (fp.div RNE x0 x2) (fp.add RNE x9 x8)) (fp.sub RNE (fp.sub RNE x7 x23) (fp.mul RNE x0 x0)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.div RNE x6 x1) (fp.div RNE x18 x9)) (fp.mul RNE (fp.mul RNE x14 x9) (fp.sub RNE x23 x17))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE (fp.sub RNE x0 x5) (fp.add RNE x10 x21)) (fp.add RNE (fp.mul RNE x4 x2) (fp.sub RNE x22 x23))) (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.div RNE x5 x18)) (fp.add RNE (fp.sub RNE x3 x19) (fp.div RNE x8 x23)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.add RNE x18 x16) (fp.sub RNE x1 x4)) (fp.neg (fp.neg x4))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg (fp.mul RNE x22 x11))) (fp.sub RNE (fp.neg (fp.neg x22)) (fp.add RNE (fp.add RNE x22 x0) (fp.sub RNE x20 x12)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.sub RNE x0 x6) (fp.neg x14)) (fp.neg (fp.mul RNE x10 x21))) (fp.mul RNE (fp.div RNE (fp.div RNE x15 x21) (fp.neg x0)) (fp.div RNE (fp.sub RNE x22 x14) (fp.mul RNE x15 x2))))))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE (fp.sub RNE x10 x19) (fp.neg x14)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.sub RNE x14 x5) (fp.neg x17)) (fp.add RNE (fp.add RNE x19 x5) (fp.add RNE x21 x8))))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x3) (fp.neg x7)) (fp.neg (fp.neg x9))) (fp.neg (fp.add RNE (fp.mul RNE x9 x6) (fp.sub RNE x23 x10)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.neg x9) (fp.mul RNE x12 x19)) (fp.neg (fp.neg x6))) (fp.add RNE (fp.mul RNE (fp.div RNE x20 x12) (fp.mul RNE x11 x13)) (fp.sub RNE (fp.neg x11) (fp.mul RNE x7 x8))))))
(check-sat)
