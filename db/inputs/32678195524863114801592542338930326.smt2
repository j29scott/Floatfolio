(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.sub RNE x3 x10)) (fp.mul RNE (fp.mul RNE x14 x5) (fp.add RNE x11 x4))))
(assert (fp.leq (fp.add RNE (fp.div RNE x12 x8) (fp.div RNE x16 x6)) (fp.sub RNE (fp.neg x3) (fp.add RNE x0 x14))))
(assert (fp.geq (fp.neg (fp.div RNE x4 x1)) (fp.neg (fp.mul RNE x8 x14))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x2 x10) (fp.mul RNE x3 x7)) (fp.sub RNE (fp.mul RNE x3 x14) (fp.mul RNE x10 x16))))
(assert (fp.leq (fp.add RNE (fp.div RNE x6 x6) (fp.neg x0)) (fp.neg (fp.neg x5))))
(check-sat)
