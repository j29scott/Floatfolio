(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x5) (fp.neg x8)))
(assert (fp.lt (fp.sub RNE x2 x2) (fp.div RNE x1 x1)))
(assert (fp.eq (fp.neg x6) (fp.mul RNE x2 x8)))
(assert (fp.leq (fp.mul RNE x2 x5) (fp.div RNE x5 x0)))
(assert (fp.leq (fp.div RNE x4 x2) (fp.div RNE x1 x7)))
(assert (fp.leq (fp.neg x1) (fp.div RNE x1 x0)))
(assert (fp.geq (fp.mul RNE x7 x3) (fp.add RNE x1 x3)))
(assert (fp.eq (fp.neg x1) (fp.sub RNE x7 x5)))
(assert (fp.lt (fp.sub RNE x2 x5) (fp.div RNE x6 x2)))
(assert (fp.eq (fp.mul RNE x7 x8) (fp.mul RNE x3 x3)))
(assert (fp.gt (fp.neg x0) (fp.sub RNE x2 x2)))
(assert (fp.geq (fp.add RNE x6 x6) (fp.sub RNE x8 x0)))
(assert (fp.lt (fp.div RNE x5 x6) (fp.sub RNE x3 x6)))
(assert (fp.gt (fp.sub RNE x3 x8) (fp.sub RNE x1 x4)))
(assert (fp.leq (fp.mul RNE x1 x5) (fp.div RNE x4 x8)))
(assert (fp.leq (fp.add RNE x0 x6) (fp.neg x1)))
(assert (fp.eq (fp.mul RNE x5 x6) (fp.sub RNE x0 x3)))
(assert (fp.lt (fp.sub RNE x7 x6) (fp.mul RNE x3 x1)))
(check-sat)
