(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE (fp.neg x22) (fp.mul RNE x7 x21)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x10 x12)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.mul RNE x21 x0) (fp.mul RNE x13 x6)) (fp.sub RNE (fp.mul RNE x8 x22) (fp.neg x2))) (fp.sub RNE (fp.add RNE (fp.sub RNE x13 x3) (fp.sub RNE x9 x5)) (fp.div RNE (fp.mul RNE x18 x22) (fp.div RNE x21 x0))))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.add RNE (fp.neg x17) (fp.neg x16))) (fp.div RNE (fp.div RNE (fp.neg x11) (fp.mul RNE x21 x19)) (fp.div RNE (fp.add RNE x0 x20) (fp.div RNE x13 x12)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.add RNE x9 x18) (fp.mul RNE x1 x10)) (fp.neg (fp.add RNE x14 x22))) (fp.mul RNE (fp.add RNE (fp.mul RNE x17 x2) (fp.neg x1)) (fp.mul RNE (fp.div RNE x12 x7) (fp.neg x15))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x7 x15) (fp.neg x0)) (fp.div RNE (fp.neg x15) (fp.neg x9))) (fp.neg (fp.div RNE (fp.add RNE x11 x21) (fp.neg x10)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.add RNE x3 x15) (fp.mul RNE x17 x4)) (fp.mul RNE (fp.div RNE x12 x10) (fp.neg x0))) (fp.neg (fp.add RNE (fp.mul RNE x14 x17) (fp.div RNE x0 x11))))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg (fp.div RNE x2 x12)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x1 x1) (fp.add RNE x22 x1)) (fp.neg (fp.div RNE x20 x18))) (fp.sub RNE (fp.add RNE (fp.sub RNE x20 x2) (fp.add RNE x22 x1)) (fp.add RNE (fp.add RNE x1 x19) (fp.mul RNE x6 x16))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x21 x16) (fp.neg x20)) (fp.mul RNE (fp.div RNE x5 x4) (fp.add RNE x14 x22))) (fp.add RNE (fp.add RNE (fp.neg x10) (fp.div RNE x14 x18)) (fp.neg (fp.div RNE x13 x1)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.sub RNE x6 x22) (fp.add RNE x20 x18))) (fp.add RNE (fp.div RNE (fp.add RNE x6 x1) (fp.mul RNE x6 x14)) (fp.add RNE (fp.div RNE x22 x12) (fp.neg x21))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x18) (fp.mul RNE x17 x3)) (fp.mul RNE (fp.mul RNE x14 x5) (fp.sub RNE x21 x16))) (fp.neg (fp.neg (fp.mul RNE x18 x21)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x16) (fp.div RNE x1 x14)) (fp.mul RNE (fp.mul RNE x18 x10) (fp.mul RNE x9 x10))) (fp.sub RNE (fp.neg (fp.div RNE x22 x7)) (fp.mul RNE (fp.mul RNE x22 x5) (fp.div RNE x22 x20))))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.div RNE x16 x8) (fp.add RNE x10 x6)) (fp.add RNE (fp.sub RNE x18 x6) (fp.sub RNE x21 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x17 x21) (fp.add RNE x14 x10)) (fp.neg (fp.div RNE x3 x20)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x20 x3)) (fp.mul RNE (fp.div RNE x13 x17) (fp.sub RNE x15 x8))) (fp.div RNE (fp.add RNE (fp.mul RNE x2 x2) (fp.div RNE x20 x9)) (fp.div RNE (fp.div RNE x19 x5) (fp.sub RNE x3 x18))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE (fp.add RNE x17 x21) (fp.sub RNE x17 x8)) (fp.div RNE (fp.add RNE x16 x8) (fp.sub RNE x11 x19)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x19) (fp.add RNE x15 x14)) (fp.sub RNE (fp.sub RNE x15 x22) (fp.div RNE x2 x14))) (fp.div RNE (fp.mul RNE (fp.sub RNE x16 x20) (fp.mul RNE x4 x22)) (fp.div RNE (fp.sub RNE x17 x11) (fp.mul RNE x15 x13))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.add RNE (fp.neg x13) (fp.neg x11)) (fp.div RNE (fp.sub RNE x4 x2) (fp.div RNE x0 x2))) (fp.add RNE (fp.sub RNE (fp.add RNE x18 x21) (fp.neg x12)) (fp.mul RNE (fp.mul RNE x1 x22) (fp.mul RNE x20 x17)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.neg x21) (fp.neg x0)) (fp.sub RNE (fp.neg x6) (fp.neg x17))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x9 x12) (fp.add RNE x15 x2)) (fp.mul RNE (fp.add RNE x7 x6) (fp.add RNE x19 x2))) (fp.add RNE (fp.add RNE (fp.sub RNE x11 x10) (fp.neg x10)) (fp.add RNE (fp.sub RNE x12 x15) (fp.mul RNE x0 x18)))) (fp.mul RNE (fp.neg (fp.neg (fp.add RNE x6 x20))) (fp.add RNE (fp.div RNE (fp.div RNE x2 x20) (fp.add RNE x0 x10)) (fp.add RNE (fp.div RNE x10 x18) (fp.neg x15))))))
(check-sat)
