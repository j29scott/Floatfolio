(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.neg x7) (fp.sub RNE x0 x11)) (fp.neg (fp.neg x5))) (fp.neg (fp.mul RNE (fp.mul RNE x10 x12) (fp.sub RNE x2 x2)))) (fp.neg (fp.div RNE (fp.div RNE (fp.neg x12) (fp.sub RNE x5 x5)) (fp.mul RNE (fp.neg x13) (fp.add RNE x4 x6))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x3 x1) (fp.mul RNE x7 x13)) (fp.mul RNE (fp.div RNE x0 x12) (fp.neg x6))) (fp.neg (fp.neg (fp.neg x5)))) (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x3 x13)) (fp.sub RNE (fp.neg x9) (fp.mul RNE x10 x0))))))
(check-sat)
