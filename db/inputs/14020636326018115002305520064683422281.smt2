(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE (fp.sub RNE x5 x7) (fp.mul RNE x14 x7))) (fp.div RNE (fp.div RNE (fp.sub RNE x8 x8) (fp.mul RNE x2 x12)) (fp.neg (fp.add RNE x11 x13)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x1 x4) (fp.add RNE x14 x15))) (fp.div RNE (fp.add RNE (fp.sub RNE x2 x14) (fp.div RNE x20 x8)) (fp.mul RNE (fp.sub RNE x5 x9) (fp.div RNE x7 x9))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE (fp.div RNE x0 x12) (fp.sub RNE x11 x12)) (fp.neg (fp.sub RNE x1 x11))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x20 x12) (fp.div RNE x16 x15)) (fp.neg (fp.add RNE x1 x6)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.mul RNE x15 x16) (fp.neg x3)) (fp.sub RNE (fp.neg x11) (fp.add RNE x18 x12))) (fp.neg (fp.neg (fp.neg x14))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x15) (fp.sub RNE x9 x7)) (fp.mul RNE (fp.sub RNE x13 x8) (fp.mul RNE x5 x7))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x20) (fp.sub RNE x10 x2)))) (fp.neg (fp.neg (fp.div RNE (fp.neg x8) (fp.div RNE x2 x8))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x17 x13) (fp.div RNE x7 x15)) (fp.div RNE (fp.neg x9) (fp.neg x19))) (fp.add RNE (fp.div RNE (fp.mul RNE x11 x3) (fp.sub RNE x9 x6)) (fp.div RNE (fp.neg x19) (fp.neg x19)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.div RNE x14 x16) (fp.mul RNE x20 x8)) (fp.neg (fp.mul RNE x3 x8))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x6 x18) (fp.div RNE x18 x1)) (fp.div RNE (fp.add RNE x14 x1) (fp.mul RNE x15 x11))) (fp.neg (fp.sub RNE (fp.mul RNE x4 x4) (fp.div RNE x4 x14)))) (fp.neg (fp.mul RNE (fp.neg (fp.add RNE x0 x0)) (fp.sub RNE (fp.div RNE x9 x0) (fp.sub RNE x2 x9))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x6) (fp.mul RNE x5 x7)) (fp.mul RNE (fp.add RNE x4 x18) (fp.mul RNE x4 x15)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x0 x3) (fp.add RNE x3 x0)) (fp.div RNE (fp.mul RNE x7 x5) (fp.add RNE x0 x17))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x8) (fp.div RNE x0 x14)) (fp.sub RNE (fp.sub RNE x0 x10) (fp.sub RNE x7 x14))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.add RNE x17 x19) (fp.sub RNE x6 x16)) (fp.add RNE (fp.div RNE x12 x12) (fp.sub RNE x13 x3))) (fp.div RNE (fp.add RNE (fp.add RNE x1 x13) (fp.div RNE x17 x9)) (fp.sub RNE (fp.mul RNE x2 x14) (fp.div RNE x8 x12)))) (fp.neg (fp.mul RNE (fp.neg (fp.mul RNE x7 x9)) (fp.sub RNE (fp.div RNE x0 x8) (fp.neg x14))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x4) (fp.neg x3)) (fp.add RNE (fp.add RNE x7 x2) (fp.div RNE x16 x17))) (fp.add RNE (fp.div RNE (fp.sub RNE x15 x5) (fp.add RNE x2 x11)) (fp.div RNE (fp.div RNE x1 x19) (fp.mul RNE x8 x12)))) (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x19 x4)) (fp.neg (fp.mul RNE x17 x18))) (fp.mul RNE (fp.div RNE (fp.add RNE x9 x7) (fp.add RNE x6 x8)) (fp.add RNE (fp.mul RNE x9 x17) (fp.mul RNE x16 x10))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.neg (fp.div RNE x12 x10))) (fp.div RNE (fp.neg (fp.add RNE x15 x18)) (fp.mul RNE (fp.div RNE x4 x7) (fp.neg x11)))) (fp.add RNE (fp.neg (fp.neg (fp.div RNE x12 x19))) (fp.add RNE (fp.div RNE (fp.add RNE x8 x12) (fp.mul RNE x13 x17)) (fp.sub RNE (fp.neg x9) (fp.div RNE x7 x0))))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE (fp.neg x4) (fp.div RNE x20 x15)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.add RNE x11 x7) (fp.mul RNE x12 x2))) (fp.neg (fp.div RNE (fp.div RNE x12 x0) (fp.sub RNE x12 x18))))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg (fp.neg x13)) (fp.div RNE (fp.sub RNE x2 x12) (fp.add RNE x9 x9))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x8 x13) (fp.add RNE x15 x13)) (fp.add RNE (fp.div RNE x3 x13) (fp.mul RNE x1 x3)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x5 x0) (fp.mul RNE x4 x7)) (fp.div RNE (fp.div RNE x19 x17) (fp.add RNE x2 x3))) (fp.mul RNE (fp.neg (fp.mul RNE x9 x10)) (fp.sub RNE (fp.mul RNE x16 x19) (fp.neg x5))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE (fp.sub RNE x20 x6) (fp.mul RNE x14 x19)) (fp.add RNE (fp.div RNE x14 x1) (fp.div RNE x0 x8)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x9 x8) (fp.mul RNE x1 x16)) (fp.sub RNE (fp.mul RNE x4 x8) (fp.div RNE x2 x17))) (fp.div RNE (fp.add RNE (fp.neg x16) (fp.neg x14)) (fp.add RNE (fp.neg x18) (fp.mul RNE x8 x20))))))
(check-sat)
