(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.div RNE x6 x10) (fp.add RNE x6 x0)) (fp.add RNE (fp.sub RNE x9 x11) (fp.div RNE x3 x0))))
(assert (fp.lt (fp.add RNE (fp.add RNE x14 x0) (fp.add RNE x0 x9)) (fp.add RNE (fp.div RNE x8 x9) (fp.div RNE x3 x0))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x8 x11) (fp.sub RNE x0 x7)) (fp.sub RNE (fp.div RNE x2 x11) (fp.add RNE x11 x2))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x4 x14) (fp.neg x11)) (fp.mul RNE (fp.add RNE x0 x11) (fp.neg x10))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x13 x2) (fp.sub RNE x3 x14)) (fp.neg (fp.div RNE x7 x5))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x11 x0) (fp.sub RNE x14 x0)) (fp.mul RNE (fp.mul RNE x9 x7) (fp.add RNE x10 x0))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x6 x12) (fp.sub RNE x11 x13)) (fp.mul RNE (fp.mul RNE x1 x10) (fp.sub RNE x8 x3))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x13 x1) (fp.neg x11)) (fp.mul RNE (fp.neg x11) (fp.neg x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x6 x2) (fp.div RNE x13 x5)) (fp.mul RNE (fp.div RNE x5 x11) (fp.neg x0))))
(assert (fp.gt (fp.div RNE (fp.div RNE x10 x10) (fp.add RNE x6 x6)) (fp.div RNE (fp.mul RNE x9 x7) (fp.div RNE x12 x5))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x11 x7) (fp.sub RNE x14 x11)) (fp.add RNE (fp.sub RNE x5 x8) (fp.mul RNE x12 x4))))
(assert (fp.lt (fp.div RNE (fp.add RNE x8 x4) (fp.neg x7)) (fp.div RNE (fp.sub RNE x8 x3) (fp.neg x14))))
(assert (fp.lt (fp.div RNE (fp.add RNE x10 x7) (fp.div RNE x8 x7)) (fp.neg (fp.add RNE x14 x0))))
(check-sat)
