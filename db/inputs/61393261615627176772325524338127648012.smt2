(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x5) (fp.sub RNE x4 x4)) (fp.neg (fp.sub RNE x9 x3))) (fp.neg (fp.mul RNE (fp.sub RNE x5 x4) (fp.sub RNE x9 x1)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.div RNE x6 x7) (fp.div RNE x9 x3)) (fp.sub RNE (fp.sub RNE x4 x2) (fp.add RNE x0 x6))) (fp.div RNE (fp.mul RNE (fp.div RNE x9 x8) (fp.neg x7)) (fp.mul RNE (fp.neg x9) (fp.add RNE x3 x6)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE x3 x3) (fp.div RNE x3 x3)) (fp.add RNE (fp.sub RNE x4 x3) (fp.add RNE x3 x0))) (fp.mul RNE (fp.div RNE (fp.add RNE x5 x8) (fp.sub RNE x7 x1)) (fp.sub RNE (fp.neg x8) (fp.sub RNE x8 x7)))))
(check-sat)
