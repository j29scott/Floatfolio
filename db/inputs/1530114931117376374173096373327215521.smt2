(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.add RNE x11 x1) (fp.mul RNE x11 x8)) (fp.div RNE (fp.neg x7) (fp.div RNE x14 x2))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x8 x6) (fp.div RNE x5 x3)) (fp.add RNE (fp.div RNE x11 x0) (fp.neg x2))))
(assert (fp.eq (fp.add RNE (fp.div RNE x2 x9) (fp.mul RNE x3 x7)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.neg x2) (fp.div RNE x13 x8)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x14 x7))))
(check-sat)
