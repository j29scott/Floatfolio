(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.neg x20)) (fp.sub RNE (fp.sub RNE x12 x7) (fp.div RNE x4 x0))) (fp.add RNE (fp.sub RNE (fp.neg x3) (fp.mul RNE x23 x24)) (fp.add RNE (fp.div RNE x5 x24) (fp.sub RNE x2 x2)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE x7 x9) (fp.mul RNE x0 x13)) (fp.neg (fp.add RNE x17 x18))) (fp.div RNE (fp.mul RNE (fp.mul RNE x23 x16) (fp.sub RNE x12 x23)) (fp.mul RNE (fp.sub RNE x7 x22) (fp.mul RNE x10 x3)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x11 x22) (fp.div RNE x17 x14)) (fp.add RNE (fp.neg x4) (fp.div RNE x23 x18))) (fp.div RNE (fp.add RNE (fp.mul RNE x13 x17) (fp.sub RNE x20 x10)) (fp.div RNE (fp.add RNE x1 x21) (fp.mul RNE x7 x12)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x12) (fp.add RNE x16 x0)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x8 x18))) (fp.neg (fp.add RNE (fp.mul RNE x14 x2) (fp.div RNE x23 x8)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.sub RNE x18 x13) (fp.mul RNE x19 x12)) (fp.div RNE (fp.add RNE x22 x9) (fp.div RNE x0 x17))) (fp.mul RNE (fp.add RNE (fp.neg x23) (fp.sub RNE x2 x9)) (fp.sub RNE (fp.sub RNE x17 x10) (fp.mul RNE x17 x21)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.add RNE x14 x19)) (fp.neg (fp.mul RNE x22 x24))) (fp.sub RNE (fp.div RNE (fp.add RNE x7 x9) (fp.mul RNE x15 x9)) (fp.neg (fp.div RNE x13 x9)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.mul RNE x16 x22) (fp.sub RNE x21 x23)) (fp.div RNE (fp.neg x4) (fp.sub RNE x17 x4))) (fp.neg (fp.mul RNE (fp.sub RNE x20 x13) (fp.add RNE x8 x6)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x11) (fp.div RNE x23 x16)) (fp.div RNE (fp.mul RNE x5 x9) (fp.add RNE x1 x7))) (fp.neg (fp.mul RNE (fp.neg x23) (fp.mul RNE x12 x13)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE x4 x23) (fp.add RNE x12 x21))) (fp.add RNE (fp.mul RNE (fp.div RNE x6 x12) (fp.div RNE x16 x10)) (fp.mul RNE (fp.neg x12) (fp.sub RNE x8 x1)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE x10 x5) (fp.add RNE x15 x14))) (fp.add RNE (fp.add RNE (fp.neg x20) (fp.div RNE x8 x4)) (fp.add RNE (fp.sub RNE x8 x15) (fp.div RNE x16 x6)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.div RNE x18 x23)) (fp.sub RNE (fp.neg x13) (fp.mul RNE x14 x8))) (fp.sub RNE (fp.sub RNE (fp.neg x21) (fp.add RNE x13 x3)) (fp.div RNE (fp.mul RNE x16 x21) (fp.sub RNE x3 x19)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE x6 x1) (fp.sub RNE x1 x5))) (fp.mul RNE (fp.neg (fp.mul RNE x17 x12)) (fp.div RNE (fp.add RNE x15 x21) (fp.add RNE x3 x8)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg x24)) (fp.div RNE (fp.div RNE x24 x2) (fp.sub RNE x17 x14))) (fp.div RNE (fp.sub RNE (fp.sub RNE x13 x20) (fp.add RNE x16 x24)) (fp.add RNE (fp.div RNE x17 x13) (fp.div RNE x7 x3)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x22 x19) (fp.add RNE x22 x24)) (fp.sub RNE (fp.div RNE x10 x21) (fp.add RNE x23 x9))) (fp.mul RNE (fp.mul RNE (fp.div RNE x0 x18) (fp.add RNE x13 x6)) (fp.mul RNE (fp.mul RNE x6 x8) (fp.neg x13)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE x7 x3) (fp.div RNE x18 x20)) (fp.sub RNE (fp.mul RNE x16 x3) (fp.sub RNE x24 x13))) (fp.mul RNE (fp.sub RNE (fp.neg x5) (fp.sub RNE x5 x23)) (fp.neg (fp.sub RNE x8 x24)))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE x20 x24))) (fp.mul RNE (fp.div RNE (fp.neg x16) (fp.div RNE x10 x9)) (fp.add RNE (fp.div RNE x7 x20) (fp.add RNE x12 x24)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x4) (fp.mul RNE x13 x18)) (fp.add RNE (fp.sub RNE x16 x21) (fp.div RNE x23 x22))) (fp.neg (fp.sub RNE (fp.add RNE x3 x21) (fp.sub RNE x16 x7)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE x24 x14) (fp.sub RNE x18 x5)) (fp.mul RNE (fp.add RNE x1 x11) (fp.neg x20))) (fp.div RNE (fp.mul RNE (fp.mul RNE x21 x15) (fp.sub RNE x18 x6)) (fp.mul RNE (fp.neg x22) (fp.add RNE x8 x3)))))
(check-sat)
