(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.sub RNE x3 x0)) (fp.add RNE (fp.mul RNE x12 x0) (fp.sub RNE x5 x10))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x1 x10) (fp.mul RNE x9 x6)) (fp.mul RNE (fp.mul RNE x8 x12) (fp.div RNE x2 x4))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x3 x12) (fp.neg x9)) (fp.add RNE (fp.sub RNE x10 x1) (fp.mul RNE x11 x9))))
(assert (fp.gt (fp.div RNE (fp.div RNE x0 x6) (fp.mul RNE x2 x9)) (fp.mul RNE (fp.sub RNE x7 x11) (fp.div RNE x3 x12))))
(assert (fp.leq (fp.neg (fp.neg x11)) (fp.mul RNE (fp.neg x1) (fp.div RNE x1 x5))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x4 x6) (fp.mul RNE x11 x8)) (fp.mul RNE (fp.div RNE x5 x3) (fp.add RNE x12 x7))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x8 x4) (fp.neg x3)) (fp.div RNE (fp.sub RNE x1 x12) (fp.div RNE x6 x7))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x10 x0) (fp.add RNE x11 x2)) (fp.neg (fp.neg x3))))
(assert (fp.geq (fp.div RNE (fp.neg x9) (fp.mul RNE x2 x7)) (fp.sub RNE (fp.mul RNE x2 x3) (fp.div RNE x1 x6))))
(assert (fp.geq (fp.add RNE (fp.neg x11) (fp.neg x7)) (fp.div RNE (fp.mul RNE x12 x0) (fp.sub RNE x3 x9))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x11 x2) (fp.sub RNE x8 x2)) (fp.add RNE (fp.div RNE x10 x1) (fp.sub RNE x8 x6))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x6 x3) (fp.add RNE x12 x4)) (fp.neg (fp.div RNE x10 x3))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x9 x6) (fp.neg x7)) (fp.div RNE (fp.div RNE x9 x3) (fp.sub RNE x1 x12))))
(check-sat)
