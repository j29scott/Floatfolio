(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.neg x15) (fp.add RNE x17 x13)) (fp.neg (fp.div RNE x17 x10))))
(assert (fp.lt (fp.div RNE (fp.add RNE x7 x12) (fp.mul RNE x9 x0)) (fp.div RNE (fp.mul RNE x9 x8) (fp.div RNE x15 x15))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x5 x3) (fp.div RNE x7 x10)) (fp.div RNE (fp.add RNE x16 x4) (fp.sub RNE x1 x20))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x16 x4) (fp.sub RNE x20 x4)) (fp.mul RNE (fp.mul RNE x18 x18) (fp.div RNE x8 x18))))
(assert (fp.geq (fp.sub RNE (fp.neg x14) (fp.neg x14)) (fp.div RNE (fp.mul RNE x17 x6) (fp.neg x13))))
(assert (fp.geq (fp.add RNE (fp.div RNE x18 x15) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x7 x18) (fp.div RNE x18 x11))))
(assert (fp.leq (fp.neg (fp.neg x3)) (fp.neg (fp.neg x20))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x3 x2) (fp.sub RNE x20 x14)) (fp.neg (fp.div RNE x1 x14))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x8 x10) (fp.mul RNE x13 x8)) (fp.div RNE (fp.add RNE x17 x2) (fp.sub RNE x15 x3))))
(assert (fp.geq (fp.neg (fp.neg x13)) (fp.mul RNE (fp.mul RNE x8 x6) (fp.mul RNE x8 x7))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x5 x15) (fp.neg x13)) (fp.mul RNE (fp.add RNE x15 x8) (fp.sub RNE x13 x14))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x17 x6) (fp.sub RNE x0 x8)) (fp.add RNE (fp.neg x7) (fp.sub RNE x8 x16))))
(assert (fp.gt (fp.add RNE (fp.neg x10) (fp.add RNE x14 x0)) (fp.sub RNE (fp.mul RNE x6 x5) (fp.neg x17))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x18 x20) (fp.div RNE x7 x2)) (fp.div RNE (fp.sub RNE x12 x12) (fp.sub RNE x0 x20))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x13 x18) (fp.add RNE x10 x7)) (fp.sub RNE (fp.neg x8) (fp.sub RNE x11 x0))))
(assert (fp.geq (fp.neg (fp.div RNE x0 x5)) (fp.sub RNE (fp.sub RNE x1 x3) (fp.sub RNE x17 x1))))
(assert (fp.gt (fp.neg (fp.neg x19)) (fp.neg (fp.mul RNE x7 x16))))
(check-sat)
