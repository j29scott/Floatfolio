(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x16 x24) (fp.div RNE x16 x18)) (fp.sub RNE (fp.div RNE x5 x25) (fp.sub RNE x24 x24))) (fp.neg (fp.sub RNE (fp.sub RNE x10 x25) (fp.add RNE x5 x16)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x5 x20) (fp.sub RNE x20 x9))) (fp.add RNE (fp.div RNE (fp.div RNE x23 x21) (fp.sub RNE x13 x5)) (fp.mul RNE (fp.sub RNE x26 x11) (fp.sub RNE x8 x12)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE x20 x9) (fp.mul RNE x7 x23)) (fp.div RNE (fp.sub RNE x26 x7) (fp.neg x14))) (fp.add RNE (fp.div RNE (fp.mul RNE x27 x20) (fp.neg x9)) (fp.mul RNE (fp.neg x27) (fp.sub RNE x0 x1)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.neg x10) (fp.add RNE x25 x12)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x19 x10))) (fp.sub RNE (fp.add RNE (fp.div RNE x12 x20) (fp.div RNE x10 x10)) (fp.mul RNE (fp.mul RNE x21 x27) (fp.neg x2)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x7 x7) (fp.add RNE x0 x16)) (fp.add RNE (fp.neg x11) (fp.neg x10))) (fp.mul RNE (fp.neg (fp.sub RNE x20 x16)) (fp.mul RNE (fp.div RNE x0 x18) (fp.sub RNE x18 x21)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE x22 x2) (fp.neg x19)) (fp.neg (fp.mul RNE x13 x10))) (fp.add RNE (fp.neg (fp.neg x13)) (fp.sub RNE (fp.add RNE x26 x17) (fp.div RNE x10 x0)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.add RNE x0 x23) (fp.sub RNE x1 x18)) (fp.sub RNE (fp.neg x2) (fp.div RNE x0 x25))) (fp.mul RNE (fp.neg (fp.neg x14)) (fp.neg (fp.sub RNE x11 x14)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.mul RNE x13 x15) (fp.neg x1))) (fp.mul RNE (fp.sub RNE (fp.div RNE x8 x0) (fp.sub RNE x18 x8)) (fp.sub RNE (fp.div RNE x2 x21) (fp.mul RNE x6 x8)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.mul RNE x22 x9)) (fp.mul RNE (fp.sub RNE x26 x0) (fp.sub RNE x26 x14))) (fp.mul RNE (fp.add RNE (fp.div RNE x17 x8) (fp.neg x4)) (fp.add RNE (fp.mul RNE x26 x18) (fp.sub RNE x25 x14)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x5 x17)) (fp.add RNE (fp.neg x9) (fp.add RNE x14 x21))) (fp.neg (fp.div RNE (fp.neg x20) (fp.div RNE x1 x1)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x7 x23) (fp.sub RNE x26 x26)) (fp.sub RNE (fp.mul RNE x27 x10) (fp.add RNE x3 x12))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x25 x7) (fp.mul RNE x11 x1)) (fp.sub RNE (fp.sub RNE x21 x19) (fp.div RNE x5 x23)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.sub RNE x12 x5) (fp.neg x11)) (fp.add RNE (fp.div RNE x3 x13) (fp.neg x24))) (fp.mul RNE (fp.div RNE (fp.mul RNE x15 x17) (fp.div RNE x23 x20)) (fp.add RNE (fp.add RNE x21 x17) (fp.neg x17)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.div RNE x18 x21) (fp.neg x14)) (fp.sub RNE (fp.sub RNE x21 x16) (fp.div RNE x8 x7))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x14 x25) (fp.div RNE x8 x19)) (fp.sub RNE (fp.div RNE x15 x19) (fp.neg x22)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE x5 x19) (fp.neg x23)) (fp.div RNE (fp.add RNE x23 x14) (fp.add RNE x0 x10))) (fp.neg (fp.mul RNE (fp.sub RNE x17 x0) (fp.mul RNE x11 x4)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x22 x0) (fp.neg x0)) (fp.neg (fp.neg x8))) (fp.add RNE (fp.neg (fp.neg x18)) (fp.mul RNE (fp.div RNE x21 x20) (fp.mul RNE x19 x21)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE x22 x18) (fp.add RNE x19 x6))) (fp.div RNE (fp.add RNE (fp.mul RNE x9 x4) (fp.add RNE x17 x13)) (fp.mul RNE (fp.neg x13) (fp.neg x5)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.mul RNE x8 x24) (fp.sub RNE x20 x4)) (fp.add RNE (fp.neg x8) (fp.sub RNE x17 x11))) (fp.add RNE (fp.mul RNE (fp.div RNE x19 x21) (fp.mul RNE x2 x1)) (fp.neg (fp.sub RNE x9 x25)))))
(check-sat)
