(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x10) (fp.neg x3)) (fp.sub RNE (fp.neg x2) (fp.add RNE x6 x3))))
(assert (fp.gt (fp.neg (fp.add RNE x2 x16)) (fp.neg (fp.div RNE x15 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x11 x5) (fp.div RNE x3 x9)) (fp.div RNE (fp.neg x17) (fp.sub RNE x14 x14))))
(assert (fp.geq (fp.neg (fp.div RNE x13 x14)) (fp.div RNE (fp.mul RNE x18 x12) (fp.add RNE x18 x2))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x13 x3) (fp.neg x13)) (fp.mul RNE (fp.add RNE x18 x16) (fp.div RNE x16 x7))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x13 x13) (fp.div RNE x12 x10)) (fp.sub RNE (fp.div RNE x13 x7) (fp.sub RNE x15 x1))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x9 x8) (fp.add RNE x3 x15)) (fp.add RNE (fp.mul RNE x14 x15) (fp.div RNE x7 x6))))
(assert (fp.lt (fp.neg (fp.mul RNE x15 x1)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x4 x0) (fp.neg x10)) (fp.mul RNE (fp.add RNE x15 x18) (fp.div RNE x15 x2))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x13 x15) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x5 x8) (fp.neg x11))))
(assert (fp.eq (fp.add RNE (fp.div RNE x7 x3) (fp.neg x0)) (fp.sub RNE (fp.neg x10) (fp.div RNE x11 x11))))
(assert (fp.eq (fp.div RNE (fp.neg x3) (fp.div RNE x11 x2)) (fp.add RNE (fp.div RNE x11 x5) (fp.mul RNE x18 x2))))
(assert (fp.leq (fp.add RNE (fp.div RNE x0 x4) (fp.add RNE x2 x6)) (fp.add RNE (fp.neg x15) (fp.mul RNE x7 x9))))
(assert (fp.lt (fp.add RNE (fp.div RNE x11 x11) (fp.add RNE x7 x6)) (fp.sub RNE (fp.add RNE x8 x0) (fp.mul RNE x12 x14))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x7 x17) (fp.add RNE x10 x8)) (fp.mul RNE (fp.div RNE x5 x18) (fp.add RNE x3 x2))))
(assert (fp.eq (fp.sub RNE (fp.neg x11) (fp.neg x3)) (fp.neg (fp.add RNE x2 x10))))
(check-sat)
