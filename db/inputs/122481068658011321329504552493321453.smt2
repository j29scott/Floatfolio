(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg x5) (fp.sub RNE x11 x7)) (fp.mul RNE (fp.sub RNE x10 x8) (fp.sub RNE x11 x3))) (fp.sub RNE (fp.sub RNE (fp.neg x8) (fp.add RNE x7 x5)) (fp.div RNE (fp.add RNE x12 x0) (fp.mul RNE x0 x9)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.div RNE x8 x3) (fp.mul RNE x6 x5)) (fp.mul RNE (fp.div RNE x4 x1) (fp.div RNE x4 x12))) (fp.sub RNE (fp.add RNE (fp.add RNE x2 x11) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x6 x4) (fp.div RNE x9 x1)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x8 x11) (fp.add RNE x0 x9)) (fp.neg (fp.sub RNE x1 x9))) (fp.mul RNE (fp.neg (fp.mul RNE x2 x9)) (fp.div RNE (fp.add RNE x9 x5) (fp.div RNE x1 x7)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg x11) (fp.mul RNE x2 x6))) (fp.neg (fp.sub RNE (fp.div RNE x3 x5) (fp.sub RNE x2 x1)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.add RNE x2 x10)) (fp.add RNE (fp.add RNE x8 x9) (fp.add RNE x12 x2))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x0) (fp.neg x1)) (fp.neg (fp.div RNE x5 x8)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x10 x1)) (fp.neg (fp.neg x2))) (fp.neg (fp.mul RNE (fp.add RNE x1 x4) (fp.sub RNE x7 x5)))))
(check-sat)
