(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x3 x5) (fp.mul RNE x2 x0)))
(assert (fp.geq (fp.sub RNE x5 x6) (fp.mul RNE x8 x7)))
(assert (fp.gt (fp.sub RNE x0 x8) (fp.mul RNE x0 x8)))
(assert (fp.geq (fp.add RNE x7 x1) (fp.mul RNE x3 x0)))
(assert (fp.geq (fp.neg x4) (fp.neg x5)))
(assert (fp.gt (fp.neg x2) (fp.add RNE x4 x0)))
(assert (fp.gt (fp.add RNE x1 x8) (fp.sub RNE x7 x2)))
(assert (fp.lt (fp.mul RNE x1 x4) (fp.sub RNE x7 x0)))
(assert (fp.leq (fp.mul RNE x1 x0) (fp.sub RNE x2 x3)))
(assert (fp.gt (fp.sub RNE x7 x4) (fp.sub RNE x7 x2)))
(assert (fp.lt (fp.add RNE x2 x0) (fp.div RNE x7 x7)))
(assert (fp.gt (fp.sub RNE x6 x4) (fp.neg x3)))
(assert (fp.geq (fp.mul RNE x0 x8) (fp.div RNE x7 x3)))
(assert (fp.geq (fp.add RNE x8 x0) (fp.sub RNE x8 x1)))
(assert (fp.lt (fp.div RNE x1 x7) (fp.neg x2)))
(assert (fp.geq (fp.div RNE x7 x8) (fp.neg x4)))
(assert (fp.gt (fp.add RNE x2 x2) (fp.div RNE x3 x8)))
(assert (fp.eq (fp.neg x2) (fp.sub RNE x7 x6)))
(assert (fp.lt (fp.mul RNE x7 x8) (fp.neg x3)))
(check-sat)
