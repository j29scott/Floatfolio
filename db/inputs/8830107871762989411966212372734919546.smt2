(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x7 x9) (fp.div RNE x0 x7)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x3 x6) (fp.mul RNE x7 x10)) (fp.neg (fp.neg x2))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x4 x3) (fp.add RNE x7 x10)) (fp.add RNE (fp.mul RNE x6 x6) (fp.div RNE x6 x10))))
(assert (fp.leq (fp.add RNE (fp.div RNE x5 x0) (fp.mul RNE x8 x2)) (fp.mul RNE (fp.neg x7) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x9)) (fp.neg (fp.add RNE x8 x5))))
(assert (fp.leq (fp.div RNE (fp.neg x1) (fp.neg x0)) (fp.sub RNE (fp.div RNE x3 x4) (fp.neg x9))))
(assert (fp.geq (fp.mul RNE (fp.neg x6) (fp.neg x10)) (fp.div RNE (fp.mul RNE x6 x3) (fp.mul RNE x1 x9))))
(check-sat)
