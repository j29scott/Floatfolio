(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.mul RNE x14 x0) (fp.add RNE x17 x1)) (fp.neg (fp.div RNE x17 x16))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x7 x0) (fp.mul RNE x19 x6)) (fp.mul RNE (fp.neg x0) (fp.neg x15))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x11 x12) (fp.sub RNE x8 x10)) (fp.mul RNE (fp.neg x7) (fp.div RNE x10 x9))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x12 x0) (fp.neg x17)) (fp.mul RNE (fp.mul RNE x3 x3) (fp.add RNE x11 x5))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x13 x16) (fp.mul RNE x17 x18)) (fp.neg (fp.sub RNE x3 x15))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x15 x4) (fp.neg x13)) (fp.neg (fp.div RNE x12 x12))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x2 x2) (fp.div RNE x4 x4)) (fp.mul RNE (fp.div RNE x3 x5) (fp.mul RNE x15 x6))))
(assert (fp.lt (fp.div RNE (fp.add RNE x1 x13) (fp.sub RNE x18 x2)) (fp.div RNE (fp.add RNE x16 x6) (fp.add RNE x17 x18))))
(assert (fp.gt (fp.add RNE (fp.div RNE x4 x18) (fp.div RNE x5 x10)) (fp.neg (fp.add RNE x13 x9))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x6 x10) (fp.neg x2)) (fp.sub RNE (fp.add RNE x18 x15) (fp.sub RNE x11 x9))))
(check-sat)
