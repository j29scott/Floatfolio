(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.div RNE x5 x3) (fp.mul RNE x16 x3)) (fp.add RNE (fp.div RNE x5 x6) (fp.div RNE x3 x16))))
(assert (fp.geq (fp.div RNE (fp.neg x11) (fp.sub RNE x11 x7)) (fp.mul RNE (fp.div RNE x15 x13) (fp.mul RNE x5 x2))))
(assert (fp.eq (fp.div RNE (fp.add RNE x1 x7) (fp.add RNE x1 x16)) (fp.add RNE (fp.mul RNE x11 x15) (fp.add RNE x5 x13))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x12 x12) (fp.div RNE x16 x1)) (fp.add RNE (fp.mul RNE x12 x10) (fp.sub RNE x10 x3))))
(assert (fp.eq (fp.div RNE (fp.div RNE x15 x12) (fp.add RNE x3 x10)) (fp.sub RNE (fp.div RNE x4 x10) (fp.div RNE x14 x1))))
(assert (fp.geq (fp.sub RNE (fp.neg x6) (fp.mul RNE x0 x7)) (fp.mul RNE (fp.neg x16) (fp.div RNE x14 x14))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x7 x7) (fp.sub RNE x1 x1)) (fp.add RNE (fp.mul RNE x12 x10) (fp.neg x0))))
(check-sat)
