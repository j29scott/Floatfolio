(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.add RNE x6 x7) (fp.mul RNE x10 x9)) (fp.mul RNE (fp.mul RNE x9 x10) (fp.mul RNE x16 x2))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x3 x16) (fp.add RNE x6 x10)) (fp.neg (fp.sub RNE x8 x2))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x11 x12) (fp.sub RNE x2 x15)) (fp.add RNE (fp.add RNE x1 x9) (fp.sub RNE x16 x0))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x7 x16) (fp.neg x15)) (fp.sub RNE (fp.div RNE x17 x14) (fp.neg x14))))
(check-sat)
