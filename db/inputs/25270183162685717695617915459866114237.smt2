(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.div RNE x0 x13) (fp.add RNE x1 x22)) (fp.sub RNE (fp.sub RNE x4 x12) (fp.sub RNE x14 x20))) (fp.mul RNE (fp.neg (fp.div RNE x19 x19)) (fp.div RNE (fp.div RNE x11 x22) (fp.div RNE x13 x1)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.div RNE x1 x16)) (fp.sub RNE (fp.mul RNE x7 x8) (fp.neg x8))) (fp.div RNE (fp.div RNE (fp.sub RNE x7 x22) (fp.mul RNE x8 x23)) (fp.sub RNE (fp.add RNE x23 x18) (fp.add RNE x12 x19))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE (fp.sub RNE x3 x22) (fp.div RNE x20 x7))) (fp.mul RNE (fp.neg (fp.div RNE x15 x4)) (fp.mul RNE (fp.sub RNE x23 x15) (fp.div RNE x1 x23)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x11) (fp.div RNE x5 x21)) (fp.add RNE (fp.sub RNE x19 x5) (fp.neg x3))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE (fp.mul RNE x9 x17) (fp.sub RNE x18 x2)) (fp.div RNE (fp.div RNE x0 x18) (fp.mul RNE x12 x12)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.div RNE x18 x21)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x23 x2))) (fp.sub RNE (fp.add RNE (fp.neg x1) (fp.mul RNE x18 x7)) (fp.mul RNE (fp.neg x19) (fp.sub RNE x14 x13))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x9 x22) (fp.div RNE x20 x21)) (fp.add RNE (fp.mul RNE x10 x12) (fp.sub RNE x18 x4))) (fp.add RNE (fp.sub RNE (fp.mul RNE x15 x9) (fp.add RNE x1 x4)) (fp.add RNE (fp.mul RNE x18 x17) (fp.mul RNE x21 x22)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.div RNE x3 x22) (fp.div RNE x9 x16))) (fp.mul RNE (fp.sub RNE (fp.add RNE x5 x23) (fp.neg x20)) (fp.neg (fp.neg x16))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg (fp.neg x5)) (fp.neg (fp.add RNE x19 x9))) (fp.sub RNE (fp.sub RNE (fp.add RNE x13 x1) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x14 x6) (fp.mul RNE x3 x17)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x5 x3) (fp.div RNE x7 x19)) (fp.sub RNE (fp.add RNE x16 x22) (fp.sub RNE x11 x1))) (fp.mul RNE (fp.neg (fp.mul RNE x5 x8)) (fp.add RNE (fp.neg x0) (fp.neg x0))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x9 x2) (fp.mul RNE x20 x14)) (fp.neg (fp.add RNE x0 x2))) (fp.add RNE (fp.neg (fp.div RNE x8 x1)) (fp.neg (fp.add RNE x19 x0)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x22 x13) (fp.add RNE x12 x5)) (fp.add RNE (fp.mul RNE x6 x3) (fp.sub RNE x14 x17))))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE (fp.mul RNE x16 x11) (fp.mul RNE x3 x2)) (fp.sub RNE (fp.add RNE x9 x9) (fp.add RNE x6 x2)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x23 x21) (fp.div RNE x7 x21))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x15) (fp.mul RNE x7 x3)) (fp.mul RNE (fp.add RNE x11 x21) (fp.add RNE x22 x14))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg (fp.div RNE x14 x0))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x14 x15) (fp.mul RNE x20 x12)) (fp.sub RNE (fp.mul RNE x0 x14) (fp.add RNE x3 x23)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.add RNE x8 x9) (fp.add RNE x6 x17)) (fp.sub RNE (fp.add RNE x4 x14) (fp.div RNE x22 x1))) (fp.sub RNE (fp.add RNE (fp.div RNE x8 x5) (fp.mul RNE x19 x21)) (fp.neg (fp.add RNE x1 x6))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x21) (fp.sub RNE x20 x9)) (fp.add RNE (fp.div RNE x2 x8) (fp.div RNE x7 x19))) (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x9) (fp.sub RNE x0 x2)) (fp.neg (fp.mul RNE x10 x4)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.add RNE x18 x23) (fp.div RNE x6 x10)) (fp.neg (fp.div RNE x14 x4))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x23 x18) (fp.add RNE x6 x23)) (fp.div RNE (fp.div RNE x22 x22) (fp.add RNE x20 x21))) (fp.neg (fp.div RNE (fp.neg x10) (fp.mul RNE x21 x6)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.add RNE x15 x3) (fp.add RNE x22 x7)) (fp.sub RNE (fp.add RNE x4 x3) (fp.add RNE x23 x22))) (fp.add RNE (fp.div RNE (fp.div RNE x1 x10) (fp.mul RNE x21 x23)) (fp.neg (fp.neg x12))))))
(check-sat)
