(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE x0 x0)) (fp.neg (fp.sub RNE x0 x7))) (fp.div RNE (fp.sub RNE (fp.add RNE x11 x9) (fp.sub RNE x2 x13)) (fp.add RNE (fp.neg x8) (fp.add RNE x13 x10)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x8 x0) (fp.div RNE x12 x7)) (fp.add RNE (fp.sub RNE x13 x2) (fp.neg x7))) (fp.neg (fp.neg (fp.add RNE x11 x0)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.add RNE x8 x12) (fp.sub RNE x14 x1))) (fp.sub RNE (fp.div RNE (fp.mul RNE x0 x6) (fp.sub RNE x9 x5)) (fp.add RNE (fp.div RNE x9 x0) (fp.div RNE x12 x7)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.sub RNE x5 x0) (fp.mul RNE x8 x5))) (fp.neg (fp.div RNE (fp.div RNE x1 x14) (fp.add RNE x4 x8)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE x5 x10) (fp.neg x8)) (fp.neg (fp.sub RNE x4 x15))) (fp.sub RNE (fp.add RNE (fp.add RNE x3 x13) (fp.sub RNE x9 x2)) (fp.div RNE (fp.mul RNE x15 x8) (fp.add RNE x12 x6)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.div RNE x4 x1) (fp.neg x6))) (fp.mul RNE (fp.div RNE (fp.sub RNE x8 x10) (fp.add RNE x11 x1)) (fp.neg (fp.add RNE x13 x7)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.add RNE x3 x1) (fp.sub RNE x0 x9)) (fp.div RNE (fp.sub RNE x5 x12) (fp.add RNE x11 x3))) (fp.neg (fp.mul RNE (fp.sub RNE x1 x10) (fp.neg x4)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.add RNE x3 x4) (fp.sub RNE x10 x9))) (fp.add RNE (fp.add RNE (fp.div RNE x9 x5) (fp.div RNE x15 x6)) (fp.add RNE (fp.add RNE x3 x2) (fp.sub RNE x15 x11)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.sub RNE x4 x10)) (fp.mul RNE (fp.neg x4) (fp.div RNE x13 x1))) (fp.div RNE (fp.sub RNE (fp.sub RNE x10 x9) (fp.sub RNE x1 x0)) (fp.mul RNE (fp.add RNE x3 x8) (fp.div RNE x0 x6)))))
(check-sat)
