(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.mul RNE x17 x3) (fp.mul RNE x1 x17)) (fp.mul RNE (fp.sub RNE x9 x3) (fp.neg x12))) (fp.neg (fp.add RNE (fp.mul RNE x0 x11) (fp.mul RNE x7 x5)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x2 x18) (fp.div RNE x13 x6))) (fp.neg (fp.neg (fp.add RNE x18 x0)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE x9 x12) (fp.add RNE x15 x17))) (fp.sub RNE (fp.div RNE (fp.div RNE x2 x11) (fp.add RNE x1 x14)) (fp.neg (fp.sub RNE x19 x6)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE x15 x6) (fp.mul RNE x1 x19)) (fp.neg (fp.div RNE x8 x1))) (fp.add RNE (fp.add RNE (fp.div RNE x12 x7) (fp.mul RNE x13 x0)) (fp.neg (fp.sub RNE x14 x7)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x5) (fp.add RNE x7 x18)) (fp.mul RNE (fp.neg x13) (fp.add RNE x7 x18))) (fp.mul RNE (fp.mul RNE (fp.neg x17) (fp.mul RNE x4 x2)) (fp.neg (fp.add RNE x7 x10)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x10 x13) (fp.sub RNE x6 x17)) (fp.div RNE (fp.mul RNE x15 x9) (fp.mul RNE x14 x1))) (fp.add RNE (fp.add RNE (fp.div RNE x16 x8) (fp.mul RNE x11 x5)) (fp.neg (fp.mul RNE x19 x8)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x9 x7) (fp.div RNE x19 x12))) (fp.add RNE (fp.div RNE (fp.neg x6) (fp.neg x8)) (fp.neg (fp.mul RNE x10 x7)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x1 x16) (fp.add RNE x8 x15)) (fp.mul RNE (fp.mul RNE x1 x17) (fp.mul RNE x14 x6))) (fp.neg (fp.sub RNE (fp.neg x1) (fp.div RNE x6 x14)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE x12 x7) (fp.div RNE x9 x1)) (fp.neg (fp.neg x5))) (fp.mul RNE (fp.add RNE (fp.neg x17) (fp.mul RNE x17 x19)) (fp.sub RNE (fp.div RNE x14 x12) (fp.sub RNE x16 x8)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x13 x15) (fp.neg x10)) (fp.sub RNE (fp.add RNE x0 x5) (fp.mul RNE x4 x13))) (fp.add RNE (fp.add RNE (fp.div RNE x17 x17) (fp.div RNE x6 x13)) (fp.sub RNE (fp.add RNE x5 x5) (fp.mul RNE x1 x5)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg x10) (fp.neg x4)) (fp.neg (fp.add RNE x18 x18))) (fp.neg (fp.div RNE (fp.add RNE x17 x8) (fp.add RNE x13 x1)))))
(check-sat)
