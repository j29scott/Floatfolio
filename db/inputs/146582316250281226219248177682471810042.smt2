(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x4) (fp.mul RNE x7 x13)) (fp.div RNE (fp.div RNE x11 x3) (fp.neg x5))) (fp.neg (fp.div RNE (fp.add RNE x19 x19) (fp.add RNE x6 x14)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.neg x19) (fp.mul RNE x18 x8)) (fp.sub RNE (fp.add RNE x6 x1) (fp.add RNE x1 x17))) (fp.add RNE (fp.mul RNE (fp.neg x8) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x20 x4) (fp.sub RNE x6 x4)))))
(check-sat)
