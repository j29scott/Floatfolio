(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.mul RNE x8 x14)) (fp.sub RNE (fp.mul RNE x10 x10) (fp.sub RNE x5 x15))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x5 x13) (fp.sub RNE x7 x7)) (fp.neg (fp.neg x8))))
(assert (fp.leq (fp.add RNE (fp.add RNE x11 x14) (fp.neg x6)) (fp.mul RNE (fp.add RNE x2 x13) (fp.div RNE x10 x2))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x13 x14) (fp.neg x6)) (fp.sub RNE (fp.div RNE x6 x12) (fp.sub RNE x4 x14))))
(assert (fp.geq (fp.mul RNE (fp.neg x3) (fp.div RNE x9 x15)) (fp.add RNE (fp.sub RNE x14 x12) (fp.div RNE x3 x7))))
(check-sat)
