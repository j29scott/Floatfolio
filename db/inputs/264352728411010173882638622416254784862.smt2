(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.div RNE x2 x7) (fp.mul RNE x1 x9)) (fp.sub RNE (fp.add RNE x10 x8) (fp.add RNE x5 x1))))
(assert (fp.gt (fp.sub RNE (fp.neg x11) (fp.sub RNE x6 x0)) (fp.div RNE (fp.add RNE x11 x11) (fp.sub RNE x11 x9))))
(assert (fp.leq (fp.add RNE (fp.neg x10) (fp.neg x6)) (fp.neg (fp.neg x4))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x11 x1) (fp.add RNE x9 x4)) (fp.neg (fp.div RNE x1 x11))))
(assert (fp.eq (fp.div RNE (fp.neg x5) (fp.mul RNE x10 x6)) (fp.div RNE (fp.add RNE x3 x0) (fp.add RNE x1 x0))))
(assert (fp.lt (fp.neg (fp.neg x5)) (fp.mul RNE (fp.div RNE x5 x1) (fp.add RNE x5 x3))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x6 x7) (fp.sub RNE x6 x10)) (fp.mul RNE (fp.add RNE x11 x5) (fp.add RNE x10 x8))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x10 x10) (fp.mul RNE x6 x9)) (fp.div RNE (fp.add RNE x0 x8) (fp.div RNE x6 x7))))
(assert (fp.eq (fp.div RNE (fp.div RNE x0 x2) (fp.neg x11)) (fp.sub RNE (fp.mul RNE x8 x1) (fp.mul RNE x8 x5))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x4 x4) (fp.div RNE x1 x10)) (fp.neg (fp.neg x4))))
(assert (fp.leq (fp.sub RNE (fp.neg x10) (fp.div RNE x1 x6)) (fp.add RNE (fp.neg x8) (fp.mul RNE x11 x0))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x0 x1) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x5 x0) (fp.add RNE x3 x8))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x7 x7) (fp.div RNE x1 x8)) (fp.mul RNE (fp.div RNE x11 x4) (fp.add RNE x7 x5))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x10 x1) (fp.div RNE x8 x11)) (fp.add RNE (fp.sub RNE x8 x8) (fp.add RNE x8 x0))))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x3) (fp.add RNE x4 x7)) (fp.mul RNE (fp.add RNE x4 x11) (fp.neg x5))))
(check-sat)
