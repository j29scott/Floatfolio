(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.div RNE x7 x4) (fp.mul RNE x3 x11)) (fp.neg (fp.sub RNE x10 x14))))
(assert (fp.gt (fp.div RNE (fp.neg x11) (fp.div RNE x8 x16)) (fp.div RNE (fp.mul RNE x1 x4) (fp.neg x6))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x21 x10) (fp.neg x20)) (fp.sub RNE (fp.mul RNE x10 x6) (fp.neg x11))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x8 x9) (fp.add RNE x16 x2)) (fp.neg (fp.neg x7))))
(assert (fp.eq (fp.div RNE (fp.div RNE x12 x9) (fp.add RNE x13 x12)) (fp.add RNE (fp.sub RNE x14 x9) (fp.div RNE x6 x7))))
(check-sat)
