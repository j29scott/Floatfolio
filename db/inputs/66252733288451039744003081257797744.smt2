(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x18 x5) (fp.neg x5)) (fp.div RNE (fp.sub RNE x19 x9) (fp.neg x13))) (fp.neg (fp.neg (fp.neg x8)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x2 x14) (fp.mul RNE x8 x1))) (fp.neg (fp.div RNE (fp.div RNE x4 x10) (fp.add RNE x9 x4)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x0) (fp.sub RNE x7 x2)) (fp.neg (fp.neg x8))) (fp.sub RNE (fp.neg (fp.add RNE x5 x3)) (fp.add RNE (fp.sub RNE x16 x11) (fp.sub RNE x17 x0)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.mul RNE x13 x19) (fp.mul RNE x1 x3))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x9 x2) (fp.div RNE x13 x15)) (fp.mul RNE (fp.sub RNE x19 x4) (fp.mul RNE x5 x10)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x2 x3) (fp.mul RNE x18 x4))) (fp.mul RNE (fp.add RNE (fp.div RNE x0 x17) (fp.div RNE x5 x19)) (fp.sub RNE (fp.add RNE x1 x17) (fp.mul RNE x17 x11)))))
(check-sat)
