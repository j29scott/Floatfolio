(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x8) (fp.add RNE x4 x9)))
(assert (fp.gt (fp.add RNE x13 x3) (fp.neg x2)))
(assert (fp.lt (fp.mul RNE x3 x2) (fp.mul RNE x6 x13)))
(assert (fp.leq (fp.add RNE x11 x7) (fp.div RNE x5 x1)))
(assert (fp.leq (fp.sub RNE x4 x6) (fp.sub RNE x10 x8)))
(assert (fp.gt (fp.div RNE x5 x1) (fp.neg x10)))
(assert (fp.eq (fp.mul RNE x3 x2) (fp.neg x6)))
(assert (fp.eq (fp.mul RNE x5 x11) (fp.div RNE x11 x1)))
(assert (fp.eq (fp.add RNE x11 x10) (fp.div RNE x6 x6)))
(assert (fp.lt (fp.div RNE x1 x0) (fp.neg x9)))
(check-sat)
