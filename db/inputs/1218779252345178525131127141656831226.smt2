(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.neg x1) (fp.div RNE x4 x6)) (fp.sub RNE (fp.div RNE x7 x9) (fp.add RNE x7 x5))))
(assert (fp.gt (fp.add RNE (fp.div RNE x6 x3) (fp.div RNE x2 x4)) (fp.div RNE (fp.neg x10) (fp.neg x8))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x1 x2) (fp.div RNE x1 x7)) (fp.div RNE (fp.mul RNE x7 x9) (fp.add RNE x0 x10))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x5 x10) (fp.add RNE x1 x1)) (fp.div RNE (fp.mul RNE x5 x4) (fp.sub RNE x6 x1))))
(assert (fp.geq (fp.div RNE (fp.div RNE x1 x4) (fp.sub RNE x4 x3)) (fp.mul RNE (fp.add RNE x2 x3) (fp.add RNE x5 x0))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x6 x8) (fp.neg x6)) (fp.sub RNE (fp.add RNE x3 x9) (fp.sub RNE x10 x4))))
(assert (fp.geq (fp.neg (fp.add RNE x5 x6)) (fp.mul RNE (fp.neg x8) (fp.neg x10))))
(check-sat)
