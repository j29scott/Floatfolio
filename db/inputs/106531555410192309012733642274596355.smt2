(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x7 x15) (fp.sub RNE x4 x3)))
(assert (fp.lt (fp.add RNE x13 x2) (fp.add RNE x9 x6)))
(assert (fp.gt (fp.mul RNE x17 x7) (fp.add RNE x8 x7)))
(assert (fp.leq (fp.add RNE x13 x11) (fp.mul RNE x0 x3)))
(assert (fp.geq (fp.sub RNE x1 x7) (fp.add RNE x16 x12)))
(assert (fp.eq (fp.neg x0) (fp.sub RNE x17 x5)))
(assert (fp.geq (fp.sub RNE x4 x12) (fp.sub RNE x14 x2)))
(assert (fp.leq (fp.mul RNE x9 x7) (fp.add RNE x8 x14)))
(assert (fp.lt (fp.div RNE x3 x17) (fp.neg x12)))
(assert (fp.leq (fp.div RNE x4 x4) (fp.div RNE x6 x12)))
(assert (fp.gt (fp.add RNE x8 x8) (fp.sub RNE x8 x15)))
(assert (fp.lt (fp.add RNE x10 x16) (fp.sub RNE x1 x0)))
(assert (fp.geq (fp.sub RNE x17 x9) (fp.add RNE x6 x10)))
(assert (fp.gt (fp.div RNE x0 x8) (fp.mul RNE x0 x8)))
(check-sat)
