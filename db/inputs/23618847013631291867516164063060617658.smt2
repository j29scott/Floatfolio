(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x21 x5) (fp.div RNE x5 x18)) (fp.sub RNE (fp.div RNE x14 x28) (fp.div RNE x26 x11))) (fp.div RNE (fp.sub RNE (fp.sub RNE x11 x24) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x28 x15) (fp.div RNE x10 x13)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.neg x22) (fp.sub RNE x10 x26)) (fp.add RNE (fp.add RNE x10 x12) (fp.mul RNE x11 x19))) (fp.neg (fp.mul RNE (fp.sub RNE x1 x6) (fp.add RNE x9 x27))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x7 x15) (fp.sub RNE x22 x4)) (fp.add RNE (fp.mul RNE x5 x24) (fp.mul RNE x3 x24))) (fp.mul RNE (fp.neg (fp.add RNE x7 x25)) (fp.div RNE (fp.sub RNE x4 x21) (fp.neg x1)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.neg x14) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x2 x7) (fp.add RNE x1 x24))) (fp.neg (fp.neg (fp.mul RNE x7 x10))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE (fp.mul RNE x11 x27) (fp.neg x26))) (fp.neg (fp.sub RNE (fp.add RNE x21 x9) (fp.div RNE x4 x27)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x23 x10) (fp.mul RNE x0 x7)) (fp.add RNE (fp.div RNE x12 x11) (fp.div RNE x28 x10))) (fp.neg (fp.div RNE (fp.mul RNE x17 x28) (fp.div RNE x6 x5))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x14) (fp.div RNE x21 x24)) (fp.sub RNE (fp.div RNE x24 x4) (fp.add RNE x8 x23))) (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.add RNE x21 x1)) (fp.neg (fp.div RNE x27 x14)))) (fp.sub RNE (fp.neg (fp.neg (fp.div RNE x25 x23))) (fp.neg (fp.neg (fp.mul RNE x4 x12))))))
(check-sat)
