(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE x9 x8) (fp.add RNE x16 x5)))
(assert (fp.leq (fp.sub RNE x13 x10) (fp.add RNE x9 x0)))
(assert (fp.eq (fp.mul RNE x16 x0) (fp.add RNE x1 x6)))
(assert (fp.eq (fp.div RNE x1 x5) (fp.mul RNE x6 x10)))
(assert (fp.geq (fp.div RNE x15 x3) (fp.neg x16)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.neg x16)))
(assert (fp.leq (fp.neg x12) (fp.neg x12)))
(assert (fp.geq (fp.add RNE x4 x8) (fp.sub RNE x10 x13)))
(assert (fp.eq (fp.mul RNE x9 x2) (fp.add RNE x1 x1)))
(assert (fp.gt (fp.mul RNE x11 x9) (fp.div RNE x12 x5)))
(assert (fp.geq (fp.add RNE x15 x12) (fp.neg x5)))
(check-sat)
