(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.mul RNE x5 x12)) (fp.neg (fp.sub RNE x9 x10))) (fp.add RNE (fp.div RNE (fp.mul RNE x2 x12) (fp.mul RNE x7 x9)) (fp.add RNE (fp.neg x11) (fp.add RNE x0 x9)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x6 x2) (fp.neg x12)) (fp.sub RNE (fp.sub RNE x4 x11) (fp.add RNE x10 x2))) (fp.neg (fp.add RNE (fp.sub RNE x0 x0) (fp.neg x8)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x9) (fp.div RNE x2 x1)) (fp.mul RNE (fp.mul RNE x9 x3) (fp.div RNE x6 x10))) (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.div RNE x6 x5)) (fp.sub RNE (fp.add RNE x8 x2) (fp.add RNE x11 x9)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.mul RNE x11 x9) (fp.sub RNE x4 x8)) (fp.mul RNE (fp.add RNE x2 x4) (fp.neg x0))) (fp.neg (fp.sub RNE (fp.add RNE x5 x6) (fp.mul RNE x7 x7)))))
(check-sat)
