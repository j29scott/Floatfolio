(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE x0 x14) (fp.mul RNE x8 x2)) (fp.mul RNE (fp.sub RNE x5 x7) (fp.add RNE x5 x3))) (fp.neg (fp.sub RNE (fp.add RNE x11 x14) (fp.add RNE x2 x12)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.mul RNE x4 x21) (fp.add RNE x1 x22))) (fp.sub RNE (fp.neg (fp.add RNE x14 x17)) (fp.sub RNE (fp.mul RNE x11 x15) (fp.neg x2)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg x22) (fp.sub RNE x7 x7))) (fp.mul RNE (fp.neg (fp.add RNE x7 x20)) (fp.neg (fp.neg x8)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x12) (fp.mul RNE x11 x13)) (fp.sub RNE (fp.sub RNE x14 x19) (fp.div RNE x17 x21))) (fp.div RNE (fp.sub RNE (fp.neg x5) (fp.add RNE x1 x0)) (fp.neg (fp.mul RNE x5 x19)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x15 x11)) (fp.neg (fp.add RNE x5 x1))) (fp.sub RNE (fp.neg (fp.sub RNE x9 x14)) (fp.div RNE (fp.sub RNE x16 x5) (fp.add RNE x18 x7)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x8 x17) (fp.sub RNE x17 x19)) (fp.sub RNE (fp.div RNE x22 x8) (fp.mul RNE x20 x4))) (fp.sub RNE (fp.neg (fp.neg x18)) (fp.sub RNE (fp.div RNE x21 x15) (fp.sub RNE x15 x14)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x4) (fp.sub RNE x3 x8)) (fp.div RNE (fp.add RNE x14 x5) (fp.sub RNE x17 x12))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x1) (fp.div RNE x2 x3)) (fp.sub RNE (fp.add RNE x2 x12) (fp.add RNE x21 x17)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x7 x9) (fp.neg x6)) (fp.sub RNE (fp.mul RNE x18 x5) (fp.sub RNE x22 x14))) (fp.mul RNE (fp.neg (fp.add RNE x1 x20)) (fp.neg (fp.div RNE x18 x17)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x10) (fp.add RNE x0 x11)) (fp.mul RNE (fp.div RNE x20 x1) (fp.div RNE x10 x7))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x22 x18) (fp.sub RNE x1 x19)) (fp.div RNE (fp.div RNE x8 x14) (fp.mul RNE x3 x17)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE x2 x8) (fp.sub RNE x8 x20)) (fp.add RNE (fp.neg x22) (fp.mul RNE x6 x4))) (fp.mul RNE (fp.neg (fp.mul RNE x4 x1)) (fp.add RNE (fp.add RNE x13 x12) (fp.neg x17)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE x8 x16) (fp.mul RNE x14 x6)) (fp.mul RNE (fp.neg x10) (fp.div RNE x2 x20))) (fp.div RNE (fp.add RNE (fp.add RNE x7 x11) (fp.neg x11)) (fp.div RNE (fp.div RNE x2 x20) (fp.div RNE x5 x18)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x5 x3)) (fp.neg (fp.mul RNE x2 x0))) (fp.mul RNE (fp.sub RNE (fp.div RNE x20 x12) (fp.sub RNE x9 x7)) (fp.div RNE (fp.neg x6) (fp.mul RNE x4 x14)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.div RNE x8 x4) (fp.div RNE x16 x10)) (fp.sub RNE (fp.add RNE x6 x1) (fp.neg x21))) (fp.neg (fp.add RNE (fp.neg x0) (fp.add RNE x21 x12)))))
(check-sat)
