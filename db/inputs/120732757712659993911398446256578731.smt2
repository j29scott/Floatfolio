(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x3) (fp.neg x2)))
(assert (fp.lt (fp.div RNE x5 x6) (fp.mul RNE x3 x2)))
(assert (fp.leq (fp.add RNE x6 x0) (fp.sub RNE x6 x3)))
(assert (fp.gt (fp.sub RNE x5 x2) (fp.add RNE x5 x3)))
(assert (fp.gt (fp.neg x3) (fp.div RNE x3 x4)))
(assert (fp.leq (fp.sub RNE x3 x6) (fp.mul RNE x1 x5)))
(assert (fp.eq (fp.neg x3) (fp.sub RNE x0 x2)))
(assert (fp.geq (fp.add RNE x0 x3) (fp.neg x4)))
(assert (fp.leq (fp.sub RNE x2 x5) (fp.add RNE x0 x2)))
(assert (fp.gt (fp.mul RNE x1 x6) (fp.neg x5)))
(assert (fp.leq (fp.neg x6) (fp.add RNE x0 x6)))
(assert (fp.gt (fp.mul RNE x3 x3) (fp.mul RNE x2 x3)))
(assert (fp.gt (fp.mul RNE x1 x4) (fp.add RNE x3 x3)))
(assert (fp.gt (fp.add RNE x5 x4) (fp.div RNE x3 x6)))
(assert (fp.eq (fp.add RNE x6 x3) (fp.div RNE x3 x0)))
(check-sat)
