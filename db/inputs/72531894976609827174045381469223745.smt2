(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x14 x7) (fp.add RNE x17 x16)))
(assert (fp.geq (fp.sub RNE x1 x2) (fp.add RNE x14 x5)))
(assert (fp.eq (fp.mul RNE x12 x13) (fp.add RNE x13 x16)))
(assert (fp.geq (fp.sub RNE x1 x3) (fp.sub RNE x6 x2)))
(assert (fp.eq (fp.neg x10) (fp.sub RNE x4 x13)))
(assert (fp.eq (fp.mul RNE x6 x1) (fp.sub RNE x9 x6)))
(assert (fp.lt (fp.add RNE x4 x0) (fp.sub RNE x12 x17)))
(assert (fp.geq (fp.div RNE x7 x17) (fp.div RNE x14 x10)))
(assert (fp.eq (fp.neg x10) (fp.sub RNE x16 x8)))
(assert (fp.eq (fp.div RNE x8 x0) (fp.neg x9)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x1 x5)))
(assert (fp.eq (fp.mul RNE x3 x8) (fp.sub RNE x15 x2)))
(assert (fp.geq (fp.div RNE x17 x4) (fp.neg x5)))
(assert (fp.leq (fp.mul RNE x10 x14) (fp.mul RNE x5 x10)))
(assert (fp.leq (fp.sub RNE x0 x0) (fp.sub RNE x8 x5)))
(assert (fp.leq (fp.add RNE x6 x8) (fp.neg x13)))
(assert (fp.leq (fp.div RNE x16 x9) (fp.div RNE x2 x10)))
(assert (fp.geq (fp.mul RNE x7 x9) (fp.div RNE x2 x13)))
(check-sat)
