(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE x5 x0) (fp.neg x8)) (fp.add RNE (fp.neg x11) (fp.neg x5))) (fp.sub RNE (fp.sub RNE (fp.add RNE x3 x4) (fp.neg x8)) (fp.div RNE (fp.mul RNE x9 x10) (fp.add RNE x7 x10)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg x4)) (fp.add RNE (fp.sub RNE x1 x6) (fp.sub RNE x7 x2))) (fp.sub RNE (fp.neg (fp.neg x11)) (fp.mul RNE (fp.add RNE x7 x4) (fp.div RNE x0 x0)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x5 x9) (fp.mul RNE x0 x2))) (fp.add RNE (fp.add RNE (fp.mul RNE x10 x5) (fp.add RNE x2 x4)) (fp.mul RNE (fp.div RNE x3 x1) (fp.add RNE x3 x3)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x5) (fp.div RNE x8 x5)) (fp.mul RNE (fp.mul RNE x1 x3) (fp.neg x7))) (fp.mul RNE (fp.neg (fp.sub RNE x1 x5)) (fp.add RNE (fp.mul RNE x1 x10) (fp.mul RNE x9 x9)))))
(check-sat)
