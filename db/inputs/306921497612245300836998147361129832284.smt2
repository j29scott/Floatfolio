(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x18 x9) (fp.sub RNE x5 x3)) (fp.sub RNE (fp.neg x17) (fp.neg x14))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x0 x20) (fp.neg x6)) (fp.add RNE (fp.div RNE x8 x4) (fp.neg x1))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x5 x15) (fp.add RNE x18 x12)) (fp.sub RNE (fp.sub RNE x9 x16) (fp.neg x22))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x4 x9) (fp.mul RNE x0 x9)) (fp.div RNE (fp.sub RNE x17 x12) (fp.sub RNE x21 x13))))
(assert (fp.leq (fp.neg (fp.div RNE x3 x16)) (fp.add RNE (fp.mul RNE x3 x21) (fp.div RNE x14 x22))))
(assert (fp.geq (fp.add RNE (fp.neg x12) (fp.neg x2)) (fp.neg (fp.div RNE x5 x6))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x7 x7) (fp.div RNE x11 x9)) (fp.sub RNE (fp.neg x6) (fp.div RNE x1 x7))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x15 x10) (fp.sub RNE x0 x2)) (fp.mul RNE (fp.neg x21) (fp.add RNE x3 x2))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x15 x21) (fp.div RNE x0 x18)) (fp.sub RNE (fp.neg x8) (fp.add RNE x3 x1))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x4 x8) (fp.mul RNE x3 x13)) (fp.div RNE (fp.mul RNE x11 x7) (fp.neg x18))))
(assert (fp.geq (fp.div RNE (fp.add RNE x3 x14) (fp.sub RNE x19 x2)) (fp.mul RNE (fp.neg x6) (fp.add RNE x6 x8))))
(assert (fp.geq (fp.neg (fp.mul RNE x0 x18)) (fp.neg (fp.mul RNE x4 x0))))
(assert (fp.lt (fp.neg (fp.mul RNE x16 x4)) (fp.neg (fp.sub RNE x18 x20))))
(assert (fp.leq (fp.add RNE (fp.div RNE x19 x15) (fp.sub RNE x0 x0)) (fp.add RNE (fp.div RNE x15 x15) (fp.div RNE x21 x13))))
(assert (fp.gt (fp.add RNE (fp.add RNE x8 x6) (fp.neg x4)) (fp.add RNE (fp.add RNE x16 x6) (fp.neg x0))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x9 x19) (fp.add RNE x22 x6)) (fp.sub RNE (fp.add RNE x22 x15) (fp.div RNE x15 x8))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x0 x8) (fp.neg x4)) (fp.sub RNE (fp.div RNE x5 x7) (fp.sub RNE x13 x6))))
(assert (fp.leq (fp.mul RNE (fp.neg x0) (fp.neg x2)) (fp.add RNE (fp.sub RNE x4 x20) (fp.neg x21))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x8 x21) (fp.sub RNE x18 x7)) (fp.div RNE (fp.neg x21) (fp.div RNE x7 x2))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x20 x3) (fp.neg x8)) (fp.div RNE (fp.neg x7) (fp.add RNE x17 x4))))
(check-sat)
