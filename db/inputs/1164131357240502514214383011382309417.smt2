(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x9 x21) (fp.sub RNE x0 x19)))
(assert (fp.lt (fp.sub RNE x3 x21) (fp.mul RNE x4 x13)))
(assert (fp.eq (fp.neg x6) (fp.mul RNE x9 x5)))
(assert (fp.lt (fp.sub RNE x16 x6) (fp.div RNE x13 x20)))
(assert (fp.eq (fp.neg x18) (fp.mul RNE x2 x0)))
(assert (fp.leq (fp.add RNE x8 x2) (fp.mul RNE x18 x19)))
(assert (fp.lt (fp.mul RNE x19 x18) (fp.sub RNE x10 x15)))
(assert (fp.lt (fp.sub RNE x21 x1) (fp.mul RNE x10 x11)))
(assert (fp.lt (fp.add RNE x10 x5) (fp.sub RNE x8 x1)))
(assert (fp.geq (fp.mul RNE x5 x7) (fp.add RNE x4 x21)))
(assert (fp.geq (fp.add RNE x11 x12) (fp.add RNE x6 x21)))
(assert (fp.leq (fp.add RNE x1 x6) (fp.div RNE x0 x4)))
(assert (fp.eq (fp.add RNE x20 x16) (fp.sub RNE x15 x9)))
(assert (fp.eq (fp.div RNE x3 x16) (fp.sub RNE x10 x4)))
(check-sat)
