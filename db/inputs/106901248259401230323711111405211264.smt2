(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE (fp.neg x6) (fp.add RNE x8 x10)) (fp.sub RNE (fp.mul RNE x9 x0) (fp.add RNE x14 x5)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.sub RNE x3 x12) (fp.add RNE x3 x9)) (fp.mul RNE (fp.div RNE x15 x6) (fp.neg x1))) (fp.mul RNE (fp.div RNE (fp.add RNE x10 x1) (fp.div RNE x1 x11)) (fp.mul RNE (fp.mul RNE x3 x3) (fp.add RNE x7 x3))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.neg x1) (fp.neg x0)) (fp.mul RNE (fp.neg x3) (fp.mul RNE x0 x10))) (fp.add RNE (fp.mul RNE (fp.add RNE x3 x6) (fp.sub RNE x6 x5)) (fp.add RNE (fp.add RNE x15 x5) (fp.add RNE x5 x4)))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.add RNE x0 x9) (fp.sub RNE x3 x15)) (fp.sub RNE (fp.div RNE x0 x10) (fp.sub RNE x9 x3))) (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.sub RNE x2 x1)) (fp.neg (fp.add RNE x11 x13))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x12) (fp.add RNE x8 x12)) (fp.div RNE (fp.sub RNE x6 x6) (fp.neg x11))) (fp.div RNE (fp.add RNE (fp.add RNE x4 x6) (fp.div RNE x14 x12)) (fp.add RNE (fp.mul RNE x10 x8) (fp.add RNE x2 x11)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.add RNE x6 x0) (fp.sub RNE x7 x14))) (fp.div RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x5 x6)) (fp.neg (fp.sub RNE x9 x5))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x6 x0) (fp.neg x7)) (fp.neg (fp.mul RNE x13 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x13 x7) (fp.div RNE x0 x6)) (fp.mul RNE (fp.add RNE x5 x0) (fp.neg x8)))) (fp.neg (fp.add RNE (fp.add RNE (fp.neg x2) (fp.sub RNE x1 x5)) (fp.neg (fp.mul RNE x11 x2))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x10 x1) (fp.add RNE x6 x6)) (fp.mul RNE (fp.div RNE x4 x14) (fp.add RNE x8 x10))) (fp.neg (fp.mul RNE (fp.add RNE x7 x5) (fp.mul RNE x4 x4)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x10 x4) (fp.add RNE x14 x8)) (fp.div RNE (fp.add RNE x10 x10) (fp.add RNE x7 x10))) (fp.add RNE (fp.sub RNE (fp.sub RNE x15 x2) (fp.sub RNE x11 x7)) (fp.neg (fp.div RNE x10 x8))))))
(check-sat)
