(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg x0) (fp.mul RNE x9 x7)) (fp.add RNE (fp.div RNE x4 x7) (fp.mul RNE x9 x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x11 x1) (fp.add RNE x11 x16)) (fp.add RNE (fp.neg x12) (fp.add RNE x16 x15))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x10 x3) (fp.add RNE x3 x7)) (fp.sub RNE (fp.sub RNE x6 x17) (fp.add RNE x11 x15))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x6 x3) (fp.mul RNE x3 x9)) (fp.add RNE (fp.mul RNE x16 x6) (fp.div RNE x16 x15))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x7 x13) (fp.div RNE x17 x4)) (fp.neg (fp.sub RNE x0 x15))))
(assert (fp.gt (fp.div RNE (fp.div RNE x15 x10) (fp.add RNE x12 x17)) (fp.add RNE (fp.sub RNE x0 x3) (fp.div RNE x12 x6))))
(assert (fp.eq (fp.div RNE (fp.add RNE x15 x9) (fp.div RNE x16 x1)) (fp.sub RNE (fp.neg x17) (fp.div RNE x0 x12))))
(assert (fp.lt (fp.neg (fp.add RNE x0 x16)) (fp.add RNE (fp.neg x2) (fp.mul RNE x14 x2))))
(check-sat)
