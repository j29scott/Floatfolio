(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x2 x4) (fp.mul RNE x10 x9)) (fp.add RNE (fp.add RNE x4 x6) (fp.add RNE x5 x9))) (fp.add RNE (fp.neg (fp.neg x7)) (fp.mul RNE (fp.mul RNE x10 x0) (fp.sub RNE x10 x5)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x2 x10) (fp.div RNE x11 x8)) (fp.add RNE (fp.div RNE x9 x3) (fp.neg x9))) (fp.div RNE (fp.neg (fp.div RNE x5 x6)) (fp.sub RNE (fp.add RNE x11 x7) (fp.neg x3)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.mul RNE x3 x8)) (fp.add RNE (fp.sub RNE x7 x3) (fp.neg x0))) (fp.mul RNE (fp.div RNE (fp.div RNE x5 x9) (fp.sub RNE x11 x1)) (fp.add RNE (fp.div RNE x0 x7) (fp.mul RNE x10 x5)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x6 x6) (fp.neg x4)) (fp.add RNE (fp.mul RNE x6 x4) (fp.div RNE x3 x2))) (fp.neg (fp.div RNE (fp.neg x6) (fp.add RNE x1 x1)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE x3 x7) (fp.neg x3)) (fp.div RNE (fp.div RNE x0 x1) (fp.mul RNE x5 x6))) (fp.neg (fp.neg (fp.div RNE x11 x10)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x5 x7) (fp.neg x2)) (fp.add RNE (fp.div RNE x3 x0) (fp.add RNE x9 x6))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x9 x9) (fp.sub RNE x2 x10)) (fp.neg (fp.div RNE x11 x10)))))
(check-sat)
