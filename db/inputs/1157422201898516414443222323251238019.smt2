(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.sub RNE x13 x20) (fp.div RNE x17 x10)) (fp.div RNE (fp.add RNE x15 x18) (fp.neg x15))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x15) (fp.add RNE x3 x9)) (fp.sub RNE (fp.mul RNE x0 x0) (fp.mul RNE x18 x13)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.sub RNE x7 x1) (fp.add RNE x21 x21))) (fp.sub RNE (fp.neg (fp.div RNE x6 x5)) (fp.mul RNE (fp.add RNE x20 x12) (fp.mul RNE x3 x19)))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE x17 x1))) (fp.add RNE (fp.sub RNE (fp.neg x9) (fp.mul RNE x0 x16)) (fp.div RNE (fp.div RNE x6 x8) (fp.mul RNE x13 x14)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.div RNE x13 x19)) (fp.sub RNE (fp.sub RNE x21 x18) (fp.sub RNE x9 x19))) (fp.mul RNE (fp.mul RNE (fp.neg x21) (fp.div RNE x12 x8)) (fp.neg (fp.div RNE x14 x1)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x0 x14) (fp.neg x0)) (fp.mul RNE (fp.add RNE x12 x1) (fp.neg x15))) (fp.neg (fp.neg (fp.neg x4)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.neg x0) (fp.neg x20)) (fp.neg (fp.mul RNE x6 x6))) (fp.mul RNE (fp.sub RNE (fp.neg x4) (fp.add RNE x0 x8)) (fp.mul RNE (fp.div RNE x4 x15) (fp.mul RNE x14 x20)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE x18 x7) (fp.div RNE x14 x13)) (fp.add RNE (fp.add RNE x11 x1) (fp.neg x4))) (fp.div RNE (fp.sub RNE (fp.add RNE x16 x18) (fp.neg x15)) (fp.neg (fp.mul RNE x4 x10)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x0 x15) (fp.add RNE x16 x3)) (fp.div RNE (fp.add RNE x2 x0) (fp.neg x16))) (fp.add RNE (fp.sub RNE (fp.sub RNE x9 x18) (fp.add RNE x7 x13)) (fp.div RNE (fp.div RNE x15 x13) (fp.div RNE x16 x16)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.mul RNE x16 x3)) (fp.mul RNE (fp.sub RNE x16 x16) (fp.mul RNE x14 x1))) (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x20) (fp.sub RNE x1 x5)) (fp.mul RNE (fp.div RNE x13 x0) (fp.sub RNE x15 x13)))))
(check-sat)
