(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg x7) (fp.div RNE x8 x3))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x12 x10) (fp.add RNE x7 x8)) (fp.sub RNE (fp.div RNE x2 x13) (fp.add RNE x1 x6)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg x5) (fp.add RNE x12 x5)) (fp.div RNE (fp.mul RNE x6 x6) (fp.div RNE x8 x11))) (fp.neg (fp.div RNE (fp.add RNE x7 x5) (fp.add RNE x4 x2)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x7 x4) (fp.div RNE x2 x6)) (fp.neg (fp.mul RNE x10 x5))) (fp.neg (fp.neg (fp.div RNE x9 x2)))))
(check-sat)
