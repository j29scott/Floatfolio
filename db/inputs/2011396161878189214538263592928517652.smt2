(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.sub RNE x22 x13) (fp.div RNE x2 x19)) (fp.mul RNE (fp.div RNE x20 x16) (fp.mul RNE x13 x10))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x0 x14) (fp.sub RNE x5 x1)) (fp.div RNE (fp.div RNE x11 x12) (fp.div RNE x8 x18))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x4 x4) (fp.mul RNE x12 x2)) (fp.add RNE (fp.sub RNE x12 x6) (fp.sub RNE x15 x7))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x22 x8) (fp.sub RNE x22 x17)) (fp.div RNE (fp.div RNE x19 x4) (fp.div RNE x4 x12))))
(assert (fp.eq (fp.div RNE (fp.add RNE x3 x15) (fp.mul RNE x16 x15)) (fp.neg (fp.div RNE x12 x5))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x7 x2) (fp.neg x19)) (fp.add RNE (fp.add RNE x7 x7) (fp.div RNE x6 x21))))
(assert (fp.leq (fp.neg (fp.sub RNE x13 x10)) (fp.neg (fp.mul RNE x19 x22))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x4 x16) (fp.add RNE x20 x17)) (fp.add RNE (fp.sub RNE x7 x13) (fp.add RNE x7 x13))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x22 x21) (fp.mul RNE x8 x13)) (fp.add RNE (fp.add RNE x7 x3) (fp.mul RNE x9 x5))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x0 x18) (fp.sub RNE x7 x12)) (fp.mul RNE (fp.div RNE x1 x19) (fp.mul RNE x6 x3))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x22 x1) (fp.sub RNE x14 x11)) (fp.sub RNE (fp.sub RNE x6 x15) (fp.mul RNE x0 x17))))
(assert (fp.gt (fp.neg (fp.neg x22)) (fp.div RNE (fp.mul RNE x12 x5) (fp.sub RNE x10 x5))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x20 x2) (fp.add RNE x20 x2)) (fp.sub RNE (fp.sub RNE x12 x6) (fp.add RNE x5 x13))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x5 x21) (fp.add RNE x13 x6)) (fp.sub RNE (fp.add RNE x19 x7) (fp.add RNE x14 x1))))
(assert (fp.lt (fp.add RNE (fp.neg x5) (fp.div RNE x0 x8)) (fp.sub RNE (fp.sub RNE x1 x20) (fp.mul RNE x7 x12))))
(check-sat)
