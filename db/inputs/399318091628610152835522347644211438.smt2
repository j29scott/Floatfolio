(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg x3) (fp.mul RNE x5 x3)))
(assert (fp.leq (fp.add RNE x8 x10) (fp.neg x9)))
(assert (fp.gt (fp.add RNE x7 x9) (fp.add RNE x7 x7)))
(assert (fp.eq (fp.mul RNE x3 x2) (fp.neg x1)))
(assert (fp.lt (fp.add RNE x7 x5) (fp.div RNE x5 x8)))
(assert (fp.gt (fp.div RNE x10 x3) (fp.neg x5)))
(assert (fp.leq (fp.div RNE x0 x8) (fp.div RNE x8 x5)))
(assert (fp.lt (fp.div RNE x8 x5) (fp.sub RNE x0 x4)))
(assert (fp.geq (fp.sub RNE x9 x4) (fp.mul RNE x9 x6)))
(assert (fp.gt (fp.sub RNE x5 x3) (fp.div RNE x5 x10)))
(assert (fp.leq (fp.mul RNE x6 x10) (fp.sub RNE x9 x4)))
(assert (fp.geq (fp.add RNE x3 x9) (fp.sub RNE x6 x1)))
(assert (fp.geq (fp.neg x4) (fp.sub RNE x8 x8)))
(assert (fp.eq (fp.neg x3) (fp.add RNE x3 x3)))
(assert (fp.gt (fp.div RNE x1 x9) (fp.div RNE x10 x2)))
(assert (fp.lt (fp.neg x0) (fp.mul RNE x0 x3)))
(assert (fp.eq (fp.mul RNE x3 x10) (fp.add RNE x6 x2)))
(assert (fp.leq (fp.sub RNE x9 x2) (fp.mul RNE x2 x4)))
(check-sat)
