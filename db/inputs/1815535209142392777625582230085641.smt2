(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.add RNE x1 x0) (fp.add RNE x2 x6)) (fp.mul RNE (fp.div RNE x0 x3) (fp.add RNE x8 x2))))
(assert (fp.leq (fp.neg (fp.div RNE x8 x8)) (fp.sub RNE (fp.neg x2) (fp.sub RNE x0 x0))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x7 x2) (fp.sub RNE x5 x8)) (fp.neg (fp.neg x8))))
(assert (fp.geq (fp.neg (fp.neg x5)) (fp.neg (fp.sub RNE x3 x1))))
(assert (fp.leq (fp.neg (fp.neg x0)) (fp.add RNE (fp.sub RNE x2 x8) (fp.add RNE x0 x8))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x7 x7) (fp.mul RNE x4 x1)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x0 x1))))
(assert (fp.eq (fp.add RNE (fp.neg x8) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.mul RNE x6 x3))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.mul RNE x2 x4)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x4 x1))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x7 x2) (fp.mul RNE x3 x5)) (fp.sub RNE (fp.div RNE x3 x0) (fp.div RNE x0 x1))))
(assert (fp.leq (fp.div RNE (fp.add RNE x0 x2) (fp.mul RNE x8 x7)) (fp.add RNE (fp.neg x4) (fp.mul RNE x2 x8))))
(check-sat)
