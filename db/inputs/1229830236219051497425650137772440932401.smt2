(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.add RNE x4 x5) (fp.add RNE x6 x8)) (fp.sub RNE (fp.sub RNE x13 x5) (fp.add RNE x7 x7))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x3 x16) (fp.sub RNE x0 x5)) (fp.mul RNE (fp.add RNE x10 x4) (fp.neg x10))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x14 x5) (fp.mul RNE x0 x9)) (fp.sub RNE (fp.neg x17) (fp.sub RNE x13 x11))))
(assert (fp.leq (fp.neg (fp.sub RNE x11 x7)) (fp.mul RNE (fp.sub RNE x11 x5) (fp.sub RNE x4 x6))))
(assert (fp.eq (fp.add RNE (fp.div RNE x11 x7) (fp.div RNE x5 x16)) (fp.add RNE (fp.mul RNE x10 x17) (fp.mul RNE x2 x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x12 x17) (fp.mul RNE x5 x7)) (fp.sub RNE (fp.div RNE x7 x2) (fp.div RNE x10 x4))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x8 x13) (fp.mul RNE x5 x13)) (fp.sub RNE (fp.mul RNE x10 x9) (fp.mul RNE x5 x5))))
(assert (fp.lt (fp.sub RNE (fp.neg x4) (fp.div RNE x14 x17)) (fp.neg (fp.neg x13))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x15 x4) (fp.sub RNE x14 x5)) (fp.neg (fp.div RNE x14 x12))))
(assert (fp.leq (fp.add RNE (fp.add RNE x6 x8) (fp.add RNE x0 x13)) (fp.mul RNE (fp.mul RNE x6 x4) (fp.neg x0))))
(assert (fp.leq (fp.add RNE (fp.add RNE x0 x9) (fp.add RNE x0 x11)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x11 x5))))
(assert (fp.leq (fp.neg (fp.sub RNE x10 x9)) (fp.neg (fp.sub RNE x1 x15))))
(assert (fp.geq (fp.mul RNE (fp.neg x2) (fp.mul RNE x8 x12)) (fp.sub RNE (fp.div RNE x2 x13) (fp.neg x7))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x6 x15) (fp.sub RNE x1 x3)) (fp.add RNE (fp.neg x1) (fp.neg x11))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x17 x7) (fp.div RNE x6 x16)) (fp.sub RNE (fp.add RNE x6 x4) (fp.add RNE x9 x15))))
(assert (fp.gt (fp.div RNE (fp.neg x0) (fp.sub RNE x16 x1)) (fp.add RNE (fp.mul RNE x2 x10) (fp.sub RNE x4 x12))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x14 x11) (fp.sub RNE x10 x3)) (fp.sub RNE (fp.mul RNE x10 x4) (fp.sub RNE x6 x7))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x15 x12) (fp.sub RNE x0 x10)) (fp.div RNE (fp.sub RNE x9 x9) (fp.add RNE x16 x16))))
(check-sat)
