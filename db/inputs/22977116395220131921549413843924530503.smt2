(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x14 x14) (fp.mul RNE x20 x16)) (fp.sub RNE (fp.neg x11) (fp.div RNE x19 x15))) (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x15) (fp.add RNE x11 x12)) (fp.div RNE (fp.neg x2) (fp.div RNE x18 x1)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x6 x13) (fp.sub RNE x14 x18)) (fp.sub RNE (fp.div RNE x17 x9) (fp.div RNE x17 x18))) (fp.mul RNE (fp.div RNE (fp.mul RNE x0 x14) (fp.sub RNE x3 x15)) (fp.add RNE (fp.sub RNE x5 x14) (fp.sub RNE x2 x17)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x20) (fp.sub RNE x17 x12)) (fp.add RNE (fp.add RNE x17 x9) (fp.add RNE x15 x7))) (fp.div RNE (fp.add RNE (fp.div RNE x18 x10) (fp.mul RNE x10 x17)) (fp.div RNE (fp.mul RNE x6 x11) (fp.mul RNE x7 x12)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x6 x0) (fp.add RNE x15 x0)) (fp.mul RNE (fp.add RNE x20 x13) (fp.sub RNE x15 x12))) (fp.sub RNE (fp.neg (fp.neg x4)) (fp.neg (fp.sub RNE x9 x14)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x19 x20) (fp.add RNE x2 x7))) (fp.add RNE (fp.add RNE (fp.neg x9) (fp.neg x0)) (fp.mul RNE (fp.add RNE x18 x20) (fp.neg x12)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE x13 x20) (fp.add RNE x8 x11)) (fp.div RNE (fp.sub RNE x16 x8) (fp.sub RNE x1 x3))) (fp.neg (fp.mul RNE (fp.mul RNE x11 x16) (fp.neg x20)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x17) (fp.neg x17)) (fp.div RNE (fp.div RNE x20 x6) (fp.sub RNE x15 x3))) (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.add RNE x5 x16)) (fp.mul RNE (fp.mul RNE x10 x18) (fp.div RNE x16 x15)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x3 x4) (fp.mul RNE x20 x16)) (fp.div RNE (fp.mul RNE x15 x20) (fp.mul RNE x1 x16))) (fp.div RNE (fp.sub RNE (fp.sub RNE x10 x6) (fp.add RNE x12 x5)) (fp.div RNE (fp.sub RNE x10 x15) (fp.mul RNE x14 x2)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.div RNE x0 x16) (fp.neg x5))) (fp.div RNE (fp.sub RNE (fp.sub RNE x9 x5) (fp.neg x17)) (fp.add RNE (fp.div RNE x0 x12) (fp.div RNE x18 x20)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.add RNE x17 x14) (fp.mul RNE x13 x8)) (fp.div RNE (fp.add RNE x15 x2) (fp.mul RNE x7 x1))) (fp.div RNE (fp.neg (fp.add RNE x6 x9)) (fp.sub RNE (fp.mul RNE x15 x5) (fp.div RNE x18 x14)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.mul RNE x1 x17)) (fp.div RNE (fp.neg x9) (fp.div RNE x4 x4))) (fp.sub RNE (fp.neg (fp.div RNE x4 x9)) (fp.mul RNE (fp.mul RNE x6 x12) (fp.div RNE x13 x14)))))
(check-sat)
