(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.div RNE x8 x22) (fp.neg x15)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.neg x15))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x22 x24) (fp.mul RNE x8 x24)) (fp.neg (fp.neg x25))))
(assert (fp.gt (fp.neg (fp.mul RNE x7 x25)) (fp.mul RNE (fp.neg x24) (fp.sub RNE x1 x3))))
(assert (fp.gt (fp.neg (fp.add RNE x6 x21)) (fp.sub RNE (fp.mul RNE x2 x19) (fp.sub RNE x19 x17))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x10 x25) (fp.mul RNE x12 x18)) (fp.neg (fp.mul RNE x4 x10))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x2 x10) (fp.div RNE x6 x16)) (fp.sub RNE (fp.add RNE x0 x23) (fp.sub RNE x5 x20))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x17) (fp.sub RNE x1 x8)) (fp.add RNE (fp.mul RNE x2 x0) (fp.add RNE x13 x16))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x8 x4) (fp.sub RNE x24 x6)) (fp.mul RNE (fp.add RNE x14 x1) (fp.mul RNE x27 x18))))
(assert (fp.eq (fp.div RNE (fp.neg x13) (fp.div RNE x4 x11)) (fp.add RNE (fp.mul RNE x20 x11) (fp.mul RNE x7 x8))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x16 x25) (fp.neg x5)) (fp.div RNE (fp.mul RNE x25 x22) (fp.div RNE x22 x23))))
(check-sat)
