(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x0 x6) (fp.sub RNE x4 x6)) (fp.sub RNE (fp.sub RNE x7 x8) (fp.div RNE x1 x11))) (fp.sub RNE (fp.div RNE (fp.add RNE x7 x0) (fp.add RNE x10 x0)) (fp.sub RNE (fp.sub RNE x5 x11) (fp.div RNE x7 x4)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE x9 x10) (fp.sub RNE x8 x0)) (fp.sub RNE (fp.div RNE x7 x10) (fp.add RNE x3 x7))) (fp.mul RNE (fp.add RNE (fp.sub RNE x10 x2) (fp.add RNE x11 x4)) (fp.sub RNE (fp.neg x5) (fp.add RNE x2 x1)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE x8 x9) (fp.mul RNE x3 x1)) (fp.neg (fp.div RNE x0 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x9 x5) (fp.add RNE x3 x2)) (fp.div RNE (fp.sub RNE x2 x7) (fp.div RNE x6 x2)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.add RNE x1 x2)) (fp.mul RNE (fp.div RNE x5 x10) (fp.add RNE x6 x3))) (fp.div RNE (fp.mul RNE (fp.add RNE x1 x8) (fp.sub RNE x0 x7)) (fp.neg (fp.sub RNE x0 x7)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.div RNE x9 x4)) (fp.mul RNE (fp.sub RNE x10 x11) (fp.sub RNE x0 x8))) (fp.neg (fp.div RNE (fp.sub RNE x1 x3) (fp.div RNE x9 x2)))))
(check-sat)
