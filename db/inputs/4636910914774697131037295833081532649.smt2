(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x0) (fp.sub RNE x6 x7)) (fp.sub RNE (fp.mul RNE x0 x9) (fp.neg x8))))
(assert (fp.gt (fp.div RNE (fp.neg x6) (fp.sub RNE x9 x8)) (fp.sub RNE (fp.neg x6) (fp.div RNE x2 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x8) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x5 x9) (fp.mul RNE x9 x9))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x8 x7) (fp.sub RNE x9 x2)) (fp.sub RNE (fp.sub RNE x9 x2) (fp.neg x10))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x10 x4) (fp.mul RNE x7 x7)) (fp.add RNE (fp.neg x1) (fp.mul RNE x2 x3))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x7 x4) (fp.mul RNE x5 x7)) (fp.neg (fp.add RNE x4 x4))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x10 x3) (fp.div RNE x8 x2)) (fp.sub RNE (fp.mul RNE x10 x5) (fp.div RNE x9 x10))))
(assert (fp.gt (fp.neg (fp.div RNE x0 x9)) (fp.mul RNE (fp.mul RNE x5 x3) (fp.mul RNE x2 x1))))
(check-sat)
