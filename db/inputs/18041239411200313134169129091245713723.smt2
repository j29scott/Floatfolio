(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x14) (fp.sub RNE x13 x6)) (fp.mul RNE (fp.mul RNE x10 x10) (fp.mul RNE x14 x3))) (fp.add RNE (fp.add RNE (fp.sub RNE x11 x3) (fp.neg x12)) (fp.add RNE (fp.div RNE x2 x2) (fp.mul RNE x14 x4)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x3 x13) (fp.mul RNE x1 x5)) (fp.mul RNE (fp.mul RNE x9 x1) (fp.mul RNE x1 x3))) (fp.mul RNE (fp.neg (fp.mul RNE x14 x3)) (fp.mul RNE (fp.sub RNE x9 x6) (fp.mul RNE x3 x14)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.neg x8)) (fp.div RNE (fp.div RNE x1 x10) (fp.div RNE x2 x9))) (fp.neg (fp.neg (fp.add RNE x14 x6)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x14 x3) (fp.add RNE x0 x9))) (fp.add RNE (fp.neg (fp.add RNE x5 x12)) (fp.add RNE (fp.div RNE x3 x0) (fp.add RNE x0 x10)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x12 x1) (fp.neg x4)) (fp.sub RNE (fp.neg x12) (fp.mul RNE x12 x13))) (fp.neg (fp.sub RNE (fp.div RNE x12 x5) (fp.div RNE x1 x10)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE x2 x5) (fp.add RNE x3 x0))) (fp.add RNE (fp.add RNE (fp.div RNE x5 x4) (fp.neg x4)) (fp.add RNE (fp.mul RNE x10 x6) (fp.mul RNE x8 x4)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x10 x5)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x8 x11))) (fp.neg (fp.add RNE (fp.sub RNE x7 x12) (fp.div RNE x10 x14)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x1) (fp.sub RNE x1 x6)) (fp.div RNE (fp.div RNE x12 x2) (fp.add RNE x3 x8))) (fp.add RNE (fp.neg (fp.add RNE x3 x0)) (fp.add RNE (fp.div RNE x6 x5) (fp.div RNE x3 x7)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE x4 x10) (fp.sub RNE x3 x10))) (fp.neg (fp.div RNE (fp.neg x7) (fp.mul RNE x1 x6)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.mul RNE x12 x3) (fp.neg x8)) (fp.add RNE (fp.sub RNE x3 x1) (fp.add RNE x13 x9))) (fp.sub RNE (fp.div RNE (fp.mul RNE x14 x12) (fp.neg x8)) (fp.sub RNE (fp.div RNE x11 x5) (fp.neg x14)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x11 x11)) (fp.neg (fp.mul RNE x13 x9))) (fp.neg (fp.mul RNE (fp.neg x14) (fp.neg x1)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x6 x2)) (fp.div RNE (fp.neg x14) (fp.mul RNE x11 x2))) (fp.sub RNE (fp.add RNE (fp.neg x7) (fp.div RNE x2 x8)) (fp.div RNE (fp.neg x11) (fp.mul RNE x14 x14)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg x3) (fp.neg x2))) (fp.sub RNE (fp.add RNE (fp.sub RNE x7 x4) (fp.sub RNE x6 x11)) (fp.add RNE (fp.add RNE x1 x5) (fp.sub RNE x1 x2)))))
(check-sat)
