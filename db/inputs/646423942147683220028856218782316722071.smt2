(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.neg x0) (fp.neg x0)) (fp.add RNE (fp.mul RNE x13 x6) (fp.add RNE x1 x0))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x3 x8) (fp.neg x2)) (fp.neg (fp.sub RNE x5 x16))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x8 x7) (fp.div RNE x15 x10)) (fp.mul RNE (fp.sub RNE x8 x10) (fp.add RNE x6 x1))))
(assert (fp.eq (fp.div RNE (fp.div RNE x17 x8) (fp.mul RNE x5 x4)) (fp.neg (fp.mul RNE x16 x6))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x15 x0) (fp.neg x14)) (fp.mul RNE (fp.mul RNE x17 x1) (fp.add RNE x14 x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x16 x17) (fp.mul RNE x14 x8)) (fp.add RNE (fp.sub RNE x3 x12) (fp.neg x11))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x16 x17) (fp.div RNE x11 x1)) (fp.sub RNE (fp.mul RNE x10 x16) (fp.div RNE x4 x12))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x1) (fp.mul RNE x1 x11)) (fp.mul RNE (fp.mul RNE x9 x13) (fp.add RNE x7 x7))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x11 x8) (fp.div RNE x11 x16)) (fp.add RNE (fp.div RNE x16 x15) (fp.div RNE x8 x4))))
(assert (fp.lt (fp.add RNE (fp.add RNE x17 x4) (fp.neg x5)) (fp.neg (fp.mul RNE x13 x9))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x2 x17) (fp.add RNE x4 x1)) (fp.sub RNE (fp.neg x6) (fp.add RNE x10 x12))))
(assert (fp.gt (fp.sub RNE (fp.neg x4) (fp.neg x12)) (fp.sub RNE (fp.add RNE x16 x7) (fp.div RNE x7 x9))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x4 x11) (fp.add RNE x5 x14)) (fp.mul RNE (fp.add RNE x17 x9) (fp.mul RNE x11 x5))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x10 x9) (fp.add RNE x12 x5)) (fp.div RNE (fp.neg x2) (fp.mul RNE x7 x5))))
(assert (fp.eq (fp.neg (fp.mul RNE x10 x16)) (fp.neg (fp.div RNE x16 x8))))
(check-sat)
