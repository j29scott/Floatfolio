(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE x5 x10) (fp.add RNE x11 x11)))
(assert (fp.geq (fp.add RNE x6 x8) (fp.sub RNE x4 x7)))
(assert (fp.lt (fp.div RNE x3 x6) (fp.div RNE x8 x0)))
(assert (fp.geq (fp.div RNE x5 x9) (fp.sub RNE x12 x2)))
(assert (fp.geq (fp.neg x7) (fp.add RNE x2 x11)))
(assert (fp.geq (fp.div RNE x1 x3) (fp.add RNE x11 x7)))
(assert (fp.lt (fp.sub RNE x2 x0) (fp.div RNE x5 x1)))
(assert (fp.leq (fp.mul RNE x10 x13) (fp.add RNE x10 x7)))
(assert (fp.eq (fp.neg x9) (fp.div RNE x11 x5)))
(assert (fp.gt (fp.sub RNE x4 x0) (fp.div RNE x9 x5)))
(check-sat)
