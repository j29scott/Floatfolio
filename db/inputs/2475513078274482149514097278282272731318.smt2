(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE x9 x3) (fp.sub RNE x0 x7)))
(assert (fp.geq (fp.div RNE x12 x7) (fp.sub RNE x6 x2)))
(assert (fp.lt (fp.sub RNE x7 x3) (fp.add RNE x8 x3)))
(assert (fp.geq (fp.neg x2) (fp.add RNE x12 x10)))
(assert (fp.eq (fp.sub RNE x4 x3) (fp.neg x2)))
(assert (fp.geq (fp.mul RNE x0 x3) (fp.neg x4)))
(assert (fp.leq (fp.add RNE x12 x10) (fp.neg x8)))
(assert (fp.geq (fp.sub RNE x10 x6) (fp.div RNE x5 x5)))
(assert (fp.leq (fp.neg x6) (fp.neg x2)))
(assert (fp.geq (fp.add RNE x7 x1) (fp.div RNE x6 x6)))
(assert (fp.lt (fp.sub RNE x1 x8) (fp.sub RNE x4 x2)))
(assert (fp.eq (fp.div RNE x0 x3) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x6 x1) (fp.neg x10)))
(assert (fp.lt (fp.sub RNE x7 x6) (fp.mul RNE x12 x11)))
(assert (fp.gt (fp.sub RNE x12 x4) (fp.add RNE x12 x3)))
(check-sat)
