(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.sub RNE x22 x16) (fp.neg x20)) (fp.neg (fp.div RNE x9 x21))) (fp.neg (fp.neg (fp.div RNE x3 x14)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x19) (fp.neg x4)) (fp.mul RNE (fp.add RNE x21 x13) (fp.sub RNE x12 x0))) (fp.add RNE (fp.sub RNE (fp.mul RNE x14 x13) (fp.add RNE x0 x2)) (fp.div RNE (fp.add RNE x5 x19) (fp.sub RNE x18 x12))))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE (fp.sub RNE x1 x0) (fp.add RNE x7 x7))) (fp.div RNE (fp.add RNE (fp.add RNE x11 x0) (fp.mul RNE x10 x14)) (fp.sub RNE (fp.div RNE x13 x2) (fp.add RNE x17 x0)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.mul RNE x3 x20) (fp.add RNE x1 x5))) (fp.neg (fp.neg (fp.neg x16))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x8 x2) (fp.div RNE x0 x12)) (fp.neg (fp.neg x14))) (fp.div RNE (fp.sub RNE (fp.mul RNE x18 x13) (fp.mul RNE x16 x4)) (fp.div RNE (fp.add RNE x13 x1) (fp.sub RNE x3 x22)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.neg x7) (fp.neg x12)) (fp.sub RNE (fp.div RNE x15 x11) (fp.div RNE x0 x4))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x15) (fp.sub RNE x11 x11)) (fp.add RNE (fp.add RNE x13 x7) (fp.sub RNE x15 x22))) (fp.div RNE (fp.mul RNE (fp.neg x7) (fp.mul RNE x13 x13)) (fp.neg (fp.mul RNE x11 x11)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x22) (fp.neg x0)) (fp.sub RNE (fp.div RNE x13 x16) (fp.sub RNE x16 x11))) (fp.div RNE (fp.div RNE (fp.neg x11) (fp.add RNE x7 x15)) (fp.div RNE (fp.mul RNE x8 x13) (fp.mul RNE x22 x21))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x12 x2) (fp.add RNE x20 x14)) (fp.sub RNE (fp.add RNE x13 x19) (fp.div RNE x1 x3))) (fp.add RNE (fp.neg (fp.add RNE x13 x0)) (fp.neg (fp.div RNE x3 x0)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.sub RNE x3 x20) (fp.add RNE x18 x9))) (fp.neg (fp.add RNE (fp.add RNE x12 x6) (fp.sub RNE x8 x9))))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x22 x19) (fp.mul RNE x13 x19)) (fp.div RNE (fp.div RNE x17 x3) (fp.add RNE x21 x15))) (fp.mul RNE (fp.add RNE (fp.sub RNE x17 x2) (fp.mul RNE x19 x19)) (fp.sub RNE (fp.neg x21) (fp.sub RNE x14 x3)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x10 x10) (fp.sub RNE x12 x9)) (fp.neg (fp.neg x8))) (fp.mul RNE (fp.add RNE (fp.add RNE x15 x6) (fp.neg x0)) (fp.add RNE (fp.neg x4) (fp.add RNE x12 x4))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.add RNE (fp.sub RNE x17 x19) (fp.add RNE x4 x12)) (fp.sub RNE (fp.neg x6) (fp.neg x14))) (fp.mul RNE (fp.add RNE (fp.div RNE x5 x11) (fp.div RNE x8 x6)) (fp.sub RNE (fp.neg x8) (fp.div RNE x5 x9)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.neg x6) (fp.add RNE x8 x17))) (fp.neg (fp.div RNE (fp.div RNE x16 x20) (fp.add RNE x8 x20))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.add RNE x1 x8) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x13 x1) (fp.sub RNE x15 x17))) (fp.div RNE (fp.div RNE (fp.mul RNE x2 x18) (fp.neg x16)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x22 x1)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.add RNE x7 x20) (fp.add RNE x15 x3))) (fp.div RNE (fp.add RNE (fp.mul RNE x3 x4) (fp.sub RNE x1 x3)) (fp.div RNE (fp.neg x7) (fp.add RNE x11 x21))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x9) (fp.neg x12)) (fp.sub RNE (fp.div RNE x21 x21) (fp.mul RNE x14 x22))) (fp.add RNE (fp.neg (fp.add RNE x4 x21)) (fp.mul RNE (fp.div RNE x21 x17) (fp.mul RNE x19 x15)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x2 x9) (fp.mul RNE x7 x11)) (fp.neg (fp.neg x8))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x0 x22)) (fp.sub RNE (fp.div RNE x2 x7) (fp.sub RNE x7 x22)))) (fp.div RNE (fp.neg (fp.add RNE (fp.neg x0) (fp.sub RNE x0 x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x7 x17) (fp.add RNE x17 x6)) (fp.sub RNE (fp.sub RNE x0 x0) (fp.sub RNE x14 x8))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.add RNE x12 x11) (fp.neg x17)) (fp.add RNE (fp.mul RNE x21 x22) (fp.neg x18)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x8) (fp.div RNE x12 x6)) (fp.div RNE (fp.mul RNE x20 x9) (fp.div RNE x16 x11))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.div RNE x20 x9) (fp.add RNE x5 x21)) (fp.mul RNE (fp.div RNE x15 x5) (fp.add RNE x4 x7))) (fp.div RNE (fp.sub RNE (fp.div RNE x13 x15) (fp.neg x17)) (fp.neg (fp.sub RNE x21 x5)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.div RNE x7 x22) (fp.add RNE x21 x20)) (fp.div RNE (fp.sub RNE x8 x2) (fp.sub RNE x1 x12))) (fp.add RNE (fp.div RNE (fp.div RNE x0 x8) (fp.div RNE x9 x3)) (fp.neg (fp.mul RNE x4 x12))))))
(check-sat)
