(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE x7 x7) (fp.mul RNE x3 x5)) (fp.add RNE (fp.sub RNE x10 x8) (fp.sub RNE x10 x6))))
(assert (fp.eq (fp.div RNE (fp.add RNE x6 x0) (fp.neg x11)) (fp.neg (fp.mul RNE x9 x7))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x0 x10) (fp.div RNE x3 x11)) (fp.div RNE (fp.sub RNE x7 x5) (fp.mul RNE x0 x9))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x5 x9) (fp.div RNE x9 x1)) (fp.mul RNE (fp.neg x4) (fp.div RNE x4 x2))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x8) (fp.neg x9)) (fp.neg (fp.mul RNE x9 x6))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x5) (fp.mul RNE x10 x3)) (fp.add RNE (fp.add RNE x1 x4) (fp.add RNE x0 x0))))
(assert (fp.leq (fp.add RNE (fp.div RNE x11 x4) (fp.add RNE x7 x8)) (fp.neg (fp.mul RNE x4 x7))))
(assert (fp.lt (fp.neg (fp.neg x1)) (fp.add RNE (fp.add RNE x1 x1) (fp.div RNE x9 x11))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x6 x0) (fp.neg x11)) (fp.div RNE (fp.mul RNE x2 x1) (fp.neg x9))))
(check-sat)
