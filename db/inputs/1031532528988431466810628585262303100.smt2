(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x6 x6) (fp.neg x6)))
(assert (fp.eq (fp.add RNE x6 x3) (fp.sub RNE x7 x5)))
(assert (fp.eq (fp.neg x0) (fp.div RNE x3 x4)))
(assert (fp.eq (fp.neg x6) (fp.add RNE x6 x4)))
(assert (fp.eq (fp.sub RNE x1 x6) (fp.sub RNE x0 x1)))
(assert (fp.leq (fp.add RNE x6 x2) (fp.neg x1)))
(assert (fp.eq (fp.sub RNE x4 x5) (fp.mul RNE x4 x2)))
(assert (fp.eq (fp.neg x0) (fp.mul RNE x3 x2)))
(assert (fp.eq (fp.mul RNE x0 x3) (fp.add RNE x5 x0)))
(assert (fp.leq (fp.sub RNE x4 x2) (fp.add RNE x1 x1)))
(assert (fp.lt (fp.div RNE x2 x6) (fp.div RNE x3 x7)))
(assert (fp.eq (fp.mul RNE x6 x6) (fp.sub RNE x4 x5)))
(assert (fp.lt (fp.sub RNE x2 x3) (fp.div RNE x2 x3)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x5 x5)))
(check-sat)
