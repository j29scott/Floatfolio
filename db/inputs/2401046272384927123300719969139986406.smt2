(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE x5 x21) (fp.sub RNE x16 x8)))
(assert (fp.lt (fp.add RNE x18 x19) (fp.sub RNE x11 x15)))
(assert (fp.gt (fp.sub RNE x0 x5) (fp.add RNE x14 x5)))
(assert (fp.geq (fp.mul RNE x2 x5) (fp.neg x9)))
(assert (fp.lt (fp.sub RNE x8 x1) (fp.div RNE x13 x4)))
(assert (fp.lt (fp.div RNE x14 x20) (fp.div RNE x18 x0)))
(assert (fp.geq (fp.mul RNE x20 x0) (fp.sub RNE x7 x21)))
(assert (fp.leq (fp.sub RNE x21 x17) (fp.div RNE x1 x1)))
(assert (fp.lt (fp.div RNE x20 x9) (fp.div RNE x1 x16)))
(assert (fp.lt (fp.div RNE x5 x13) (fp.neg x21)))
(assert (fp.gt (fp.add RNE x1 x0) (fp.mul RNE x1 x6)))
(assert (fp.lt (fp.neg x0) (fp.add RNE x20 x20)))
(check-sat)
