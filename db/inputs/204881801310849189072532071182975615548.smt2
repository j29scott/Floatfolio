(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE x11 x1) (fp.neg x1))) (fp.add RNE (fp.mul RNE (fp.mul RNE x8 x7) (fp.neg x1)) (fp.mul RNE (fp.sub RNE x7 x14) (fp.div RNE x10 x1)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x15 x16) (fp.neg x11))) (fp.neg (fp.mul RNE (fp.mul RNE x11 x16) (fp.div RNE x5 x0)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.add RNE x18 x2) (fp.neg x15)) (fp.add RNE (fp.add RNE x3 x13) (fp.neg x11))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x8 x5) (fp.add RNE x7 x8)) (fp.add RNE (fp.mul RNE x2 x18) (fp.sub RNE x17 x14)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.sub RNE x10 x7) (fp.neg x6)) (fp.neg (fp.add RNE x14 x8))) (fp.neg (fp.add RNE (fp.div RNE x5 x12) (fp.neg x17)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x7) (fp.sub RNE x4 x3)) (fp.add RNE (fp.neg x11) (fp.div RNE x3 x1))) (fp.add RNE (fp.add RNE (fp.add RNE x0 x7) (fp.neg x10)) (fp.add RNE (fp.div RNE x0 x8) (fp.mul RNE x6 x2)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x3 x9) (fp.sub RNE x6 x2)) (fp.neg (fp.sub RNE x10 x4))) (fp.neg (fp.mul RNE (fp.sub RNE x14 x11) (fp.sub RNE x16 x12)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.sub RNE x9 x9) (fp.sub RNE x6 x10)) (fp.neg (fp.mul RNE x11 x17))) (fp.add RNE (fp.neg (fp.neg x7)) (fp.mul RNE (fp.div RNE x10 x15) (fp.sub RNE x10 x18)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg x4) (fp.sub RNE x2 x18))) (fp.neg (fp.div RNE (fp.add RNE x2 x7) (fp.div RNE x2 x4)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x10 x13) (fp.add RNE x5 x0)) (fp.neg (fp.div RNE x11 x0))) (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x10 x6)) (fp.add RNE (fp.mul RNE x14 x17) (fp.sub RNE x16 x4)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x0) (fp.mul RNE x10 x6)) (fp.sub RNE (fp.sub RNE x13 x15) (fp.neg x4))) (fp.add RNE (fp.sub RNE (fp.add RNE x10 x16) (fp.add RNE x16 x14)) (fp.mul RNE (fp.neg x7) (fp.neg x4)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.neg x8) (fp.mul RNE x11 x5))) (fp.add RNE (fp.add RNE (fp.add RNE x5 x17) (fp.neg x13)) (fp.sub RNE (fp.neg x1) (fp.add RNE x17 x1)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE x5 x12) (fp.add RNE x7 x15))) (fp.div RNE (fp.div RNE (fp.div RNE x0 x9) (fp.sub RNE x2 x18)) (fp.sub RNE (fp.sub RNE x15 x0) (fp.div RNE x6 x11)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE x16 x18) (fp.mul RNE x14 x9))) (fp.neg (fp.mul RNE (fp.mul RNE x2 x1) (fp.neg x1)))))
(assert (fp.leq (fp.neg (fp.neg (fp.sub RNE x6 x3))) (fp.sub RNE (fp.add RNE (fp.add RNE x3 x5) (fp.sub RNE x1 x8)) (fp.neg (fp.add RNE x6 x0)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE x13 x17) (fp.neg x1)) (fp.div RNE (fp.mul RNE x7 x8) (fp.neg x5))) (fp.div RNE (fp.sub RNE (fp.mul RNE x15 x9) (fp.neg x15)) (fp.sub RNE (fp.neg x3) (fp.neg x5)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x10) (fp.div RNE x2 x11)) (fp.div RNE (fp.mul RNE x8 x3) (fp.neg x1))) (fp.div RNE (fp.mul RNE (fp.div RNE x10 x10) (fp.neg x16)) (fp.div RNE (fp.mul RNE x5 x3) (fp.mul RNE x0 x1)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x18 x13)) (fp.div RNE (fp.sub RNE x6 x6) (fp.neg x4))) (fp.add RNE (fp.mul RNE (fp.neg x10) (fp.mul RNE x15 x13)) (fp.mul RNE (fp.sub RNE x9 x3) (fp.div RNE x10 x14)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x13 x2) (fp.neg x1)) (fp.add RNE (fp.sub RNE x10 x16) (fp.div RNE x2 x5))) (fp.sub RNE (fp.mul RNE (fp.div RNE x17 x3) (fp.add RNE x5 x15)) (fp.mul RNE (fp.sub RNE x2 x2) (fp.sub RNE x4 x12)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x2) (fp.mul RNE x2 x17)) (fp.mul RNE (fp.div RNE x7 x14) (fp.mul RNE x1 x15))) (fp.mul RNE (fp.sub RNE (fp.add RNE x16 x0) (fp.neg x4)) (fp.neg (fp.sub RNE x18 x12)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE x13 x5) (fp.neg x13)) (fp.sub RNE (fp.add RNE x17 x10) (fp.add RNE x15 x14))) (fp.div RNE (fp.div RNE (fp.sub RNE x12 x18) (fp.mul RNE x11 x1)) (fp.sub RNE (fp.add RNE x9 x11) (fp.sub RNE x16 x10)))))
(check-sat)
