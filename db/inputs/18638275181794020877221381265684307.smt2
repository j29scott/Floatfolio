(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x1 x0) (fp.sub RNE x7 x1)) (fp.div RNE (fp.neg x11) (fp.mul RNE x12 x10))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x8) (fp.add RNE x5 x11)) (fp.mul RNE (fp.mul RNE x6 x0) (fp.neg x3))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x13 x1) (fp.div RNE x10 x10)) (fp.mul RNE (fp.div RNE x10 x8) (fp.add RNE x5 x9))))
(assert (fp.gt (fp.sub RNE (fp.neg x3) (fp.neg x0)) (fp.div RNE (fp.div RNE x12 x0) (fp.neg x8))))
(check-sat)
