(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x15 x9) (fp.div RNE x10 x3)) (fp.div RNE (fp.sub RNE x3 x0) (fp.neg x3))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x6 x13) (fp.add RNE x0 x7)) (fp.div RNE (fp.sub RNE x2 x7) (fp.div RNE x13 x15))))
(assert (fp.lt (fp.neg (fp.mul RNE x10 x15)) (fp.sub RNE (fp.sub RNE x5 x13) (fp.sub RNE x7 x7))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x10 x7) (fp.sub RNE x8 x0)) (fp.add RNE (fp.neg x15) (fp.add RNE x3 x8))))
(assert (fp.eq (fp.neg (fp.div RNE x12 x7)) (fp.add RNE (fp.add RNE x6 x6) (fp.div RNE x14 x4))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x0 x3) (fp.mul RNE x10 x2)) (fp.add RNE (fp.sub RNE x7 x13) (fp.mul RNE x1 x11))))
(assert (fp.leq (fp.neg (fp.add RNE x4 x13)) (fp.sub RNE (fp.div RNE x15 x12) (fp.div RNE x12 x8))))
(check-sat)
