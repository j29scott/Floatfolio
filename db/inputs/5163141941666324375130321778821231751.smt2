(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg x18) (fp.mul RNE x7 x18)) (fp.add RNE (fp.add RNE x9 x0) (fp.sub RNE x15 x8))))
(assert (fp.eq (fp.add RNE (fp.div RNE x20 x11) (fp.neg x5)) (fp.sub RNE (fp.sub RNE x9 x19) (fp.sub RNE x3 x3))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x16 x13) (fp.div RNE x9 x5)) (fp.sub RNE (fp.add RNE x2 x15) (fp.mul RNE x8 x11))))
(assert (fp.lt (fp.div RNE (fp.neg x12) (fp.mul RNE x13 x19)) (fp.mul RNE (fp.mul RNE x2 x12) (fp.div RNE x3 x1))))
(assert (fp.gt (fp.add RNE (fp.neg x5) (fp.div RNE x19 x1)) (fp.mul RNE (fp.mul RNE x14 x2) (fp.sub RNE x19 x7))))
(assert (fp.geq (fp.add RNE (fp.div RNE x2 x8) (fp.div RNE x17 x5)) (fp.neg (fp.neg x12))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x4 x2) (fp.sub RNE x0 x4)) (fp.neg (fp.add RNE x16 x11))))
(assert (fp.lt (fp.neg (fp.sub RNE x16 x8)) (fp.sub RNE (fp.neg x16) (fp.div RNE x5 x6))))
(assert (fp.leq (fp.mul RNE (fp.neg x11) (fp.neg x18)) (fp.div RNE (fp.mul RNE x17 x14) (fp.add RNE x14 x20))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x17) (fp.add RNE x3 x5)) (fp.mul RNE (fp.add RNE x10 x3) (fp.sub RNE x19 x8))))
(assert (fp.gt (fp.neg (fp.mul RNE x17 x13)) (fp.div RNE (fp.neg x13) (fp.sub RNE x1 x14))))
(assert (fp.gt (fp.neg (fp.div RNE x4 x12)) (fp.div RNE (fp.sub RNE x8 x0) (fp.neg x1))))
(assert (fp.lt (fp.neg (fp.add RNE x12 x2)) (fp.add RNE (fp.sub RNE x19 x9) (fp.add RNE x17 x16))))
(assert (fp.eq (fp.sub RNE (fp.neg x17) (fp.div RNE x1 x1)) (fp.neg (fp.mul RNE x11 x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x2 x5) (fp.neg x2)) (fp.add RNE (fp.div RNE x9 x8) (fp.div RNE x16 x2))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x3 x8) (fp.sub RNE x17 x9)) (fp.sub RNE (fp.sub RNE x17 x4) (fp.div RNE x20 x3))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x5 x1) (fp.div RNE x16 x8)) (fp.add RNE (fp.add RNE x15 x2) (fp.div RNE x1 x5))))
(assert (fp.lt (fp.neg (fp.neg x10)) (fp.sub RNE (fp.mul RNE x9 x8) (fp.div RNE x14 x20))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x19 x1) (fp.neg x9)) (fp.neg (fp.neg x3))))
(check-sat)
