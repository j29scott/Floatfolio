(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x11) (fp.add RNE x5 x8)) (fp.sub RNE (fp.add RNE x12 x14) (fp.neg x11))) (fp.add RNE (fp.div RNE (fp.neg x2) (fp.div RNE x3 x15)) (fp.div RNE (fp.mul RNE x14 x14) (fp.sub RNE x1 x1)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x10) (fp.sub RNE x12 x9)) (fp.mul RNE (fp.mul RNE x9 x1) (fp.neg x13))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x9) (fp.add RNE x4 x7)) (fp.sub RNE (fp.sub RNE x9 x5) (fp.div RNE x7 x12)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x2 x2) (fp.add RNE x6 x0)) (fp.add RNE (fp.sub RNE x2 x8) (fp.add RNE x0 x10))) (fp.add RNE (fp.mul RNE (fp.neg x15) (fp.add RNE x9 x15)) (fp.div RNE (fp.neg x13) (fp.sub RNE x13 x15)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.sub RNE x0 x9)) (fp.sub RNE (fp.mul RNE x0 x5) (fp.mul RNE x8 x7))) (fp.sub RNE (fp.div RNE (fp.mul RNE x1 x1) (fp.mul RNE x14 x9)) (fp.neg (fp.div RNE x2 x15)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE x10 x13) (fp.neg x4)) (fp.add RNE (fp.sub RNE x14 x2) (fp.div RNE x9 x0))) (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x13) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x7 x12) (fp.add RNE x15 x15)))))
(check-sat)
