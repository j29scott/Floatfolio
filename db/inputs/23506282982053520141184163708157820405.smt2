(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.neg x8) (fp.neg x0)) (fp.mul RNE (fp.sub RNE x1 x9) (fp.div RNE x0 x4))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x1 x10) (fp.neg x5)) (fp.sub RNE (fp.add RNE x1 x4) (fp.div RNE x0 x0))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x10 x3) (fp.add RNE x4 x5)) (fp.add RNE (fp.neg x2) (fp.neg x0))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x1 x0) (fp.add RNE x8 x0)) (fp.neg (fp.add RNE x0 x10))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x6 x6) (fp.mul RNE x10 x3)) (fp.neg (fp.div RNE x1 x0))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x10 x7) (fp.neg x6)) (fp.mul RNE (fp.div RNE x5 x10) (fp.neg x10))))
(assert (fp.lt (fp.mul RNE (fp.neg x0) (fp.neg x10)) (fp.mul RNE (fp.mul RNE x7 x6) (fp.neg x5))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x4 x7) (fp.mul RNE x3 x6)) (fp.add RNE (fp.div RNE x0 x1) (fp.sub RNE x0 x3))))
(check-sat)
