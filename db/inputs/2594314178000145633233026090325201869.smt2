(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE x8 x0) (fp.add RNE x6 x2)))
(assert (fp.gt (fp.mul RNE x10 x19) (fp.sub RNE x1 x6)))
(assert (fp.gt (fp.div RNE x6 x19) (fp.sub RNE x7 x17)))
(assert (fp.gt (fp.sub RNE x3 x8) (fp.neg x17)))
(assert (fp.lt (fp.sub RNE x13 x4) (fp.add RNE x10 x11)))
(assert (fp.eq (fp.div RNE x16 x21) (fp.neg x21)))
(assert (fp.gt (fp.mul RNE x9 x9) (fp.div RNE x17 x14)))
(assert (fp.eq (fp.div RNE x1 x1) (fp.div RNE x4 x20)))
(assert (fp.lt (fp.add RNE x6 x7) (fp.mul RNE x16 x9)))
(check-sat)
