(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE x10 x18) (fp.sub RNE x8 x4))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x5) (fp.div RNE x7 x3)) (fp.mul RNE (fp.mul RNE x2 x13) (fp.neg x15)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x17 x2) (fp.mul RNE x6 x8))) (fp.sub RNE (fp.add RNE (fp.sub RNE x5 x12) (fp.add RNE x10 x7)) (fp.add RNE (fp.div RNE x9 x10) (fp.div RNE x6 x3)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE x12 x10) (fp.div RNE x12 x16)) (fp.sub RNE (fp.sub RNE x13 x17) (fp.mul RNE x9 x11))) (fp.div RNE (fp.mul RNE (fp.neg x0) (fp.mul RNE x10 x17)) (fp.sub RNE (fp.mul RNE x5 x12) (fp.neg x14)))))
(check-sat)
