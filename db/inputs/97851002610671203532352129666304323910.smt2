(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x12 x11) (fp.mul RNE x5 x10)) (fp.add RNE (fp.add RNE x2 x7) (fp.sub RNE x6 x6)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x5 x11) (fp.sub RNE x9 x10)) (fp.mul RNE (fp.neg x11) (fp.neg x13))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg (fp.sub RNE x9 x7))) (fp.neg (fp.sub RNE (fp.neg x1) (fp.add RNE x3 x12)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.add RNE x7 x6) (fp.add RNE x6 x2)) (fp.div RNE (fp.neg x7) (fp.div RNE x0 x10))) (fp.add RNE (fp.div RNE (fp.div RNE x13 x7) (fp.div RNE x8 x10)) (fp.div RNE (fp.add RNE x10 x8) (fp.add RNE x8 x8))))))
(check-sat)
