(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x6 x6) (fp.mul RNE x2 x3)))
(assert (fp.gt (fp.add RNE x1 x3) (fp.sub RNE x10 x0)))
(assert (fp.gt (fp.mul RNE x7 x3) (fp.neg x8)))
(assert (fp.geq (fp.mul RNE x9 x9) (fp.div RNE x8 x0)))
(assert (fp.geq (fp.div RNE x9 x8) (fp.neg x5)))
(assert (fp.leq (fp.mul RNE x5 x3) (fp.add RNE x6 x7)))
(assert (fp.gt (fp.neg x8) (fp.div RNE x2 x10)))
(assert (fp.leq (fp.mul RNE x4 x10) (fp.add RNE x8 x6)))
(assert (fp.leq (fp.add RNE x3 x8) (fp.sub RNE x3 x3)))
(assert (fp.lt (fp.div RNE x6 x6) (fp.neg x1)))
(assert (fp.eq (fp.div RNE x6 x1) (fp.div RNE x5 x8)))
(assert (fp.lt (fp.div RNE x1 x6) (fp.div RNE x1 x3)))
(assert (fp.lt (fp.sub RNE x3 x8) (fp.sub RNE x0 x9)))
(assert (fp.eq (fp.mul RNE x8 x7) (fp.div RNE x2 x4)))
(assert (fp.gt (fp.sub RNE x1 x8) (fp.neg x9)))
(assert (fp.lt (fp.sub RNE x8 x3) (fp.neg x4)))
(assert (fp.lt (fp.add RNE x6 x0) (fp.add RNE x7 x9)))
(assert (fp.eq (fp.div RNE x10 x7) (fp.sub RNE x8 x7)))
(check-sat)
