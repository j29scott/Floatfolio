(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x12 x15) (fp.div RNE x3 x14)) (fp.div RNE (fp.div RNE x5 x15) (fp.mul RNE x11 x9))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x14 x10) (fp.neg x1)) (fp.neg (fp.sub RNE x5 x12))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x0 x6) (fp.sub RNE x4 x15)) (fp.add RNE (fp.div RNE x6 x7) (fp.div RNE x10 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x15) (fp.mul RNE x15 x8)) (fp.mul RNE (fp.neg x0) (fp.add RNE x1 x1))))
(assert (fp.eq (fp.neg (fp.mul RNE x10 x11)) (fp.sub RNE (fp.add RNE x9 x4) (fp.sub RNE x10 x4))))
(assert (fp.eq (fp.neg (fp.mul RNE x6 x15)) (fp.div RNE (fp.mul RNE x8 x6) (fp.mul RNE x3 x1))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x6 x14) (fp.div RNE x5 x7)) (fp.neg (fp.sub RNE x2 x1))))
(check-sat)
