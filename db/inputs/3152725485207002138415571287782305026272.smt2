(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.div RNE x17 x6) (fp.neg x20)) (fp.mul RNE (fp.div RNE x1 x1) (fp.sub RNE x6 x18))) (fp.neg (fp.sub RNE (fp.sub RNE x10 x16) (fp.add RNE x5 x20)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x2 x1) (fp.neg x18)) (fp.div RNE (fp.mul RNE x15 x6) (fp.mul RNE x0 x19))) (fp.add RNE (fp.sub RNE (fp.mul RNE x18 x19) (fp.div RNE x7 x14)) (fp.sub RNE (fp.add RNE x5 x0) (fp.sub RNE x12 x13))))))
(check-sat)
