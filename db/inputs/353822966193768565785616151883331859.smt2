(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg (fp.add RNE x7 x12)) (fp.add RNE (fp.div RNE x5 x2) (fp.add RNE x11 x2))) (fp.mul RNE (fp.neg (fp.div RNE x9 x2)) (fp.sub RNE (fp.neg x11) (fp.div RNE x0 x12)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.div RNE x15 x11) (fp.mul RNE x2 x10))) (fp.add RNE (fp.neg (fp.neg x14)) (fp.neg (fp.add RNE x7 x12))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE (fp.mul RNE x9 x11) (fp.div RNE x2 x9)) (fp.neg (fp.div RNE x8 x12)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.div RNE x13 x14) (fp.add RNE x9 x3)) (fp.mul RNE (fp.sub RNE x11 x7) (fp.neg x9))) (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x5) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x14 x12) (fp.mul RNE x9 x4))))))
(check-sat)
