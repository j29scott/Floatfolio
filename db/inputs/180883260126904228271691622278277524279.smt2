(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.neg x11) (fp.neg x9)) (fp.mul RNE (fp.sub RNE x10 x1) (fp.add RNE x10 x5))))
(assert (fp.leq (fp.add RNE (fp.neg x6) (fp.add RNE x3 x5)) (fp.div RNE (fp.div RNE x7 x2) (fp.add RNE x5 x8))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x6 x3) (fp.neg x11)) (fp.neg (fp.div RNE x9 x2))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x5 x6) (fp.div RNE x10 x8)) (fp.div RNE (fp.add RNE x1 x10) (fp.mul RNE x7 x5))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x9 x7) (fp.sub RNE x11 x12)) (fp.add RNE (fp.div RNE x3 x10) (fp.add RNE x2 x11))))
(assert (fp.leq (fp.neg (fp.add RNE x2 x10)) (fp.mul RNE (fp.sub RNE x9 x3) (fp.neg x8))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x12 x7) (fp.sub RNE x12 x0)) (fp.mul RNE (fp.sub RNE x4 x10) (fp.mul RNE x9 x2))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x0 x3) (fp.neg x3)) (fp.mul RNE (fp.neg x3) (fp.div RNE x6 x2))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x11 x9) (fp.mul RNE x1 x9)) (fp.div RNE (fp.neg x5) (fp.div RNE x0 x7))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x9 x2) (fp.sub RNE x7 x12)) (fp.mul RNE (fp.sub RNE x2 x5) (fp.mul RNE x9 x3))))
(assert (fp.lt (fp.neg (fp.sub RNE x10 x9)) (fp.mul RNE (fp.sub RNE x4 x12) (fp.add RNE x1 x9))))
(check-sat)
