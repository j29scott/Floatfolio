(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.div RNE (fp.neg x5) (fp.div RNE x2 x3))) (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x12) (fp.sub RNE x6 x15)) (fp.div RNE (fp.sub RNE x1 x12) (fp.div RNE x13 x3)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.mul RNE x3 x13) (fp.div RNE x5 x15))) (fp.sub RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x16 x1)) (fp.neg (fp.mul RNE x1 x14)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x10 x14) (fp.neg x3)) (fp.sub RNE (fp.div RNE x14 x12) (fp.mul RNE x17 x14))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x13) (fp.mul RNE x10 x4)) (fp.mul RNE (fp.div RNE x13 x16) (fp.sub RNE x10 x16)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x3 x9) (fp.div RNE x3 x5))) (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x16) (fp.neg x13)) (fp.neg (fp.div RNE x13 x13)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x15 x17) (fp.neg x9))) (fp.neg (fp.mul RNE (fp.neg x10) (fp.add RNE x6 x10)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x14 x12) (fp.mul RNE x1 x12)) (fp.mul RNE (fp.add RNE x16 x12) (fp.div RNE x5 x1))) (fp.div RNE (fp.add RNE (fp.add RNE x11 x12) (fp.add RNE x17 x12)) (fp.sub RNE (fp.neg x2) (fp.neg x3)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x8 x10) (fp.mul RNE x14 x7)) (fp.sub RNE (fp.add RNE x1 x9) (fp.neg x4))) (fp.neg (fp.sub RNE (fp.sub RNE x8 x9) (fp.div RNE x13 x7)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE x6 x8)) (fp.sub RNE (fp.add RNE x6 x7) (fp.add RNE x0 x0))) (fp.sub RNE (fp.neg (fp.mul RNE x3 x12)) (fp.sub RNE (fp.neg x4) (fp.mul RNE x9 x6)))))
(check-sat)
