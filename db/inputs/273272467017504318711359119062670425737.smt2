(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE x8 x7) (fp.neg x13)))
(assert (fp.eq (fp.add RNE x4 x1) (fp.add RNE x4 x9)))
(assert (fp.geq (fp.mul RNE x1 x6) (fp.sub RNE x12 x6)))
(assert (fp.eq (fp.mul RNE x11 x9) (fp.mul RNE x8 x1)))
(assert (fp.eq (fp.div RNE x8 x11) (fp.sub RNE x10 x0)))
(assert (fp.gt (fp.add RNE x13 x5) (fp.neg x10)))
(assert (fp.leq (fp.add RNE x6 x0) (fp.mul RNE x0 x0)))
(assert (fp.gt (fp.div RNE x7 x3) (fp.add RNE x4 x8)))
(assert (fp.eq (fp.add RNE x6 x4) (fp.mul RNE x1 x10)))
(assert (fp.leq (fp.neg x8) (fp.mul RNE x2 x12)))
(assert (fp.eq (fp.neg x3) (fp.neg x7)))
(assert (fp.geq (fp.sub RNE x9 x6) (fp.neg x3)))
(assert (fp.geq (fp.add RNE x0 x8) (fp.div RNE x7 x1)))
(check-sat)
