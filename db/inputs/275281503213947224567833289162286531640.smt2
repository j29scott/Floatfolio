(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE x23 x1) (fp.sub RNE x13 x0))) (fp.neg (fp.sub RNE (fp.sub RNE x1 x11) (fp.div RNE x13 x11)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.div RNE x14 x4) (fp.div RNE x21 x0))) (fp.sub RNE (fp.sub RNE (fp.div RNE x10 x12) (fp.sub RNE x21 x7)) (fp.mul RNE (fp.mul RNE x10 x4) (fp.mul RNE x7 x5)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x11 x4) (fp.add RNE x2 x9)) (fp.add RNE (fp.neg x12) (fp.mul RNE x5 x2))) (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.div RNE x23 x22)) (fp.div RNE (fp.add RNE x4 x5) (fp.neg x1)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x16) (fp.sub RNE x7 x23)) (fp.neg (fp.add RNE x18 x13))) (fp.div RNE (fp.add RNE (fp.add RNE x22 x15) (fp.div RNE x3 x24)) (fp.sub RNE (fp.sub RNE x18 x7) (fp.sub RNE x13 x20)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE x2 x5) (fp.sub RNE x21 x11))) (fp.sub RNE (fp.mul RNE (fp.neg x3) (fp.add RNE x23 x19)) (fp.add RNE (fp.add RNE x17 x8) (fp.mul RNE x22 x21)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x18 x12) (fp.add RNE x14 x16)) (fp.mul RNE (fp.neg x22) (fp.neg x21))) (fp.div RNE (fp.sub RNE (fp.neg x23) (fp.mul RNE x3 x18)) (fp.neg (fp.neg x4)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x16 x11) (fp.div RNE x8 x2))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x7) (fp.add RNE x11 x5)) (fp.add RNE (fp.add RNE x19 x19) (fp.mul RNE x0 x15)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x21 x12) (fp.mul RNE x19 x10)) (fp.mul RNE (fp.neg x13) (fp.mul RNE x2 x19))) (fp.add RNE (fp.add RNE (fp.add RNE x19 x18) (fp.mul RNE x6 x22)) (fp.sub RNE (fp.mul RNE x20 x3) (fp.sub RNE x1 x18)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.neg x22)) (fp.neg (fp.div RNE x18 x5))) (fp.add RNE (fp.add RNE (fp.sub RNE x23 x7) (fp.div RNE x11 x6)) (fp.add RNE (fp.sub RNE x23 x1) (fp.neg x18)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.div RNE x17 x22) (fp.div RNE x20 x1)) (fp.sub RNE (fp.neg x24) (fp.neg x1))) (fp.sub RNE (fp.div RNE (fp.neg x22) (fp.div RNE x21 x20)) (fp.div RNE (fp.mul RNE x19 x8) (fp.div RNE x12 x0)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.sub RNE x5 x13) (fp.div RNE x10 x17)) (fp.mul RNE (fp.mul RNE x13 x13) (fp.mul RNE x22 x9))) (fp.sub RNE (fp.add RNE (fp.mul RNE x22 x1) (fp.sub RNE x18 x9)) (fp.div RNE (fp.mul RNE x3 x23) (fp.sub RNE x24 x19)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x15 x11) (fp.add RNE x8 x17)) (fp.add RNE (fp.div RNE x12 x7) (fp.add RNE x23 x20))) (fp.mul RNE (fp.div RNE (fp.div RNE x17 x24) (fp.add RNE x8 x2)) (fp.add RNE (fp.sub RNE x3 x6) (fp.sub RNE x21 x23)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x1))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x11 x11) (fp.add RNE x22 x7)) (fp.mul RNE (fp.neg x12) (fp.mul RNE x2 x17)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE x22 x9) (fp.neg x18)) (fp.add RNE (fp.div RNE x2 x4) (fp.neg x7))) (fp.sub RNE (fp.neg (fp.sub RNE x12 x11)) (fp.add RNE (fp.div RNE x19 x8) (fp.add RNE x11 x13)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.sub RNE x9 x16) (fp.div RNE x9 x1)) (fp.mul RNE (fp.div RNE x10 x4) (fp.neg x16))) (fp.div RNE (fp.mul RNE (fp.sub RNE x17 x4) (fp.sub RNE x23 x11)) (fp.neg (fp.sub RNE x10 x24)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE x10 x15) (fp.div RNE x7 x5)) (fp.sub RNE (fp.neg x3) (fp.neg x5))) (fp.add RNE (fp.neg (fp.neg x20)) (fp.sub RNE (fp.div RNE x7 x4) (fp.mul RNE x16 x16)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x19 x10) (fp.sub RNE x18 x16))) (fp.div RNE (fp.sub RNE (fp.sub RNE x2 x3) (fp.div RNE x14 x23)) (fp.mul RNE (fp.add RNE x20 x4) (fp.sub RNE x13 x17)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x21 x10) (fp.mul RNE x18 x24)) (fp.neg (fp.neg x18))) (fp.neg (fp.neg (fp.add RNE x0 x9)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x17 x10)) (fp.add RNE (fp.neg x18) (fp.add RNE x5 x22))) (fp.div RNE (fp.mul RNE (fp.sub RNE x16 x4) (fp.sub RNE x20 x19)) (fp.neg (fp.neg x11)))))
(check-sat)
