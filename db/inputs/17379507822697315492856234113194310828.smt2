(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.mul RNE x4 x4)) (fp.mul RNE (fp.neg x12) (fp.mul RNE x1 x5))) (fp.neg (fp.mul RNE (fp.mul RNE x8 x8) (fp.neg x12)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x14 x10) (fp.sub RNE x10 x13)) (fp.sub RNE (fp.div RNE x1 x15) (fp.mul RNE x14 x9))) (fp.add RNE (fp.sub RNE (fp.mul RNE x17 x0) (fp.div RNE x16 x11)) (fp.add RNE (fp.mul RNE x14 x8) (fp.div RNE x2 x2)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.mul RNE x3 x5)) (fp.div RNE (fp.add RNE x7 x8) (fp.sub RNE x9 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x14 x16) (fp.div RNE x5 x1)) (fp.add RNE (fp.mul RNE x0 x15) (fp.neg x2)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x13 x9) (fp.neg x2)) (fp.neg (fp.add RNE x10 x17))) (fp.add RNE (fp.div RNE (fp.mul RNE x12 x1) (fp.add RNE x2 x5)) (fp.sub RNE (fp.div RNE x8 x17) (fp.sub RNE x13 x9)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x13) (fp.sub RNE x10 x14)) (fp.div RNE (fp.div RNE x2 x15) (fp.mul RNE x0 x6))) (fp.mul RNE (fp.add RNE (fp.sub RNE x2 x13) (fp.sub RNE x4 x1)) (fp.neg (fp.sub RNE x1 x8)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE x5 x1)) (fp.div RNE (fp.add RNE x0 x12) (fp.neg x10))) (fp.mul RNE (fp.add RNE (fp.mul RNE x3 x5) (fp.sub RNE x10 x11)) (fp.div RNE (fp.div RNE x17 x9) (fp.mul RNE x16 x2)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE x11 x6) (fp.add RNE x5 x13))) (fp.neg (fp.div RNE (fp.mul RNE x3 x7) (fp.neg x16)))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE x15 x1))) (fp.mul RNE (fp.neg (fp.add RNE x3 x9)) (fp.sub RNE (fp.mul RNE x6 x1) (fp.sub RNE x8 x1)))))
(check-sat)
