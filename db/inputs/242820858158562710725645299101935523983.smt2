(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x10) (fp.neg x14)) (fp.neg (fp.sub RNE x12 x1))) (fp.div RNE (fp.div RNE (fp.add RNE x0 x5) (fp.div RNE x3 x4)) (fp.add RNE (fp.add RNE x6 x9) (fp.mul RNE x10 x3)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.neg x0) (fp.neg x3)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x6 x0))) (fp.div RNE (fp.mul RNE (fp.mul RNE x0 x2) (fp.sub RNE x7 x11)) (fp.mul RNE (fp.sub RNE x7 x11) (fp.sub RNE x12 x7))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.add RNE x2 x10) (fp.mul RNE x9 x14)) (fp.neg (fp.mul RNE x9 x12))) (fp.div RNE (fp.div RNE (fp.mul RNE x2 x3) (fp.neg x14)) (fp.neg (fp.add RNE x0 x6)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.mul RNE x14 x2)) (fp.add RNE (fp.sub RNE x8 x14) (fp.sub RNE x6 x9))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x11 x13) (fp.add RNE x6 x8)) (fp.neg (fp.neg x4))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE (fp.add RNE x5 x5) (fp.mul RNE x8 x13)) (fp.div RNE (fp.neg x11) (fp.sub RNE x3 x9))) (fp.add RNE (fp.neg (fp.sub RNE x14 x10)) (fp.div RNE (fp.neg x8) (fp.mul RNE x3 x14)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x7) (fp.sub RNE x10 x4)) (fp.div RNE (fp.div RNE x10 x7) (fp.neg x4))) (fp.sub RNE (fp.neg (fp.mul RNE x3 x3)) (fp.sub RNE (fp.mul RNE x14 x10) (fp.div RNE x3 x10))))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x11) (fp.div RNE x1 x1)) (fp.neg (fp.mul RNE x10 x0)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.div RNE x14 x1) (fp.mul RNE x9 x2))) (fp.div RNE (fp.add RNE (fp.mul RNE x6 x1) (fp.neg x11)) (fp.sub RNE (fp.add RNE x9 x3) (fp.neg x13))))))
(check-sat)
