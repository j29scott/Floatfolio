(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x20 x16) (fp.mul RNE x14 x13)) (fp.mul RNE (fp.sub RNE x1 x19) (fp.div RNE x3 x3))))
(assert (fp.geq (fp.div RNE (fp.neg x6) (fp.sub RNE x5 x12)) (fp.mul RNE (fp.add RNE x5 x6) (fp.mul RNE x2 x14))))
(assert (fp.lt (fp.add RNE (fp.neg x4) (fp.add RNE x2 x1)) (fp.div RNE (fp.mul RNE x4 x7) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.add RNE x5 x12)) (fp.mul RNE (fp.sub RNE x6 x20) (fp.div RNE x2 x12))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x17) (fp.add RNE x8 x1)) (fp.add RNE (fp.neg x9) (fp.sub RNE x3 x17))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x12 x11) (fp.div RNE x12 x10)) (fp.add RNE (fp.div RNE x14 x17) (fp.sub RNE x14 x7))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x5 x19) (fp.sub RNE x16 x6)) (fp.sub RNE (fp.div RNE x15 x17) (fp.neg x18))))
(assert (fp.eq (fp.neg (fp.mul RNE x0 x7)) (fp.sub RNE (fp.mul RNE x17 x19) (fp.mul RNE x7 x3))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x20 x16) (fp.add RNE x13 x1)) (fp.div RNE (fp.neg x1) (fp.div RNE x6 x12))))
(assert (fp.eq (fp.neg (fp.neg x13)) (fp.div RNE (fp.add RNE x10 x15) (fp.neg x20))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x19 x16) (fp.add RNE x0 x13)) (fp.add RNE (fp.mul RNE x15 x17) (fp.neg x4))))
(assert (fp.gt (fp.div RNE (fp.add RNE x2 x8) (fp.div RNE x7 x11)) (fp.mul RNE (fp.div RNE x14 x7) (fp.sub RNE x15 x18))))
(assert (fp.leq (fp.mul RNE (fp.neg x15) (fp.neg x15)) (fp.sub RNE (fp.mul RNE x4 x0) (fp.mul RNE x11 x7))))
(assert (fp.leq (fp.div RNE (fp.neg x10) (fp.sub RNE x12 x6)) (fp.div RNE (fp.mul RNE x8 x4) (fp.mul RNE x6 x10))))
(check-sat)
