(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.div RNE x0 x1)) (fp.neg (fp.sub RNE x1 x2))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x1 x4) (fp.sub RNE x5 x6)) (fp.div RNE (fp.add RNE x3 x5) (fp.sub RNE x6 x0))))
(assert (fp.geq (fp.neg (fp.add RNE x0 x2)) (fp.add RNE (fp.div RNE x2 x1) (fp.neg x0))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x3 x6) (fp.div RNE x2 x2)) (fp.neg (fp.add RNE x6 x5))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x2 x6) (fp.sub RNE x3 x4)) (fp.div RNE (fp.sub RNE x5 x3) (fp.div RNE x5 x2))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x3 x6) (fp.div RNE x1 x2)) (fp.neg (fp.div RNE x6 x5))))
(assert (fp.gt (fp.add RNE (fp.add RNE x2 x1) (fp.sub RNE x6 x4)) (fp.mul RNE (fp.add RNE x4 x2) (fp.neg x6))))
(check-sat)
