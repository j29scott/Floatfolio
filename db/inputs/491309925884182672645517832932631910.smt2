(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x10) (fp.div RNE x0 x14)))
(assert (fp.eq (fp.mul RNE x7 x16) (fp.neg x5)))
(assert (fp.gt (fp.div RNE x19 x6) (fp.mul RNE x16 x5)))
(assert (fp.lt (fp.div RNE x20 x6) (fp.add RNE x1 x22)))
(assert (fp.eq (fp.div RNE x17 x9) (fp.mul RNE x18 x9)))
(assert (fp.geq (fp.neg x3) (fp.div RNE x19 x10)))
(assert (fp.gt (fp.neg x12) (fp.mul RNE x20 x14)))
(assert (fp.lt (fp.sub RNE x16 x12) (fp.neg x12)))
(check-sat)
