(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.div RNE (fp.add RNE x16 x8) (fp.add RNE x16 x20))) (fp.add RNE (fp.div RNE (fp.div RNE x20 x17) (fp.sub RNE x18 x24)) (fp.sub RNE (fp.add RNE x21 x18) (fp.neg x23)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x15) (fp.div RNE x3 x8)) (fp.add RNE (fp.sub RNE x10 x22) (fp.mul RNE x24 x11))) (fp.div RNE (fp.div RNE (fp.sub RNE x11 x1) (fp.add RNE x11 x22)) (fp.add RNE (fp.neg x1) (fp.sub RNE x13 x11))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg (fp.neg x23)) (fp.sub RNE (fp.mul RNE x11 x14) (fp.sub RNE x13 x17))) (fp.mul RNE (fp.add RNE (fp.add RNE x15 x3) (fp.add RNE x0 x18)) (fp.div RNE (fp.neg x6) (fp.add RNE x23 x24)))) (fp.neg (fp.add RNE (fp.div RNE (fp.neg x0) (fp.div RNE x25 x19)) (fp.div RNE (fp.neg x3) (fp.mul RNE x16 x18))))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE (fp.neg x23) (fp.div RNE x12 x10)))) (fp.neg (fp.neg (fp.sub RNE (fp.neg x12) (fp.sub RNE x22 x17))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE (fp.div RNE x18 x24) (fp.neg x23))) (fp.add RNE (fp.add RNE (fp.add RNE x0 x6) (fp.add RNE x24 x16)) (fp.neg (fp.sub RNE x10 x22)))) (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x23 x24)) (fp.sub RNE (fp.sub RNE x0 x15) (fp.add RNE x12 x23))) (fp.div RNE (fp.div RNE (fp.neg x25) (fp.sub RNE x4 x20)) (fp.sub RNE (fp.sub RNE x2 x22) (fp.neg x2))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE x24 x17)) (fp.add RNE (fp.add RNE x18 x5) (fp.add RNE x17 x22))) (fp.mul RNE (fp.div RNE (fp.mul RNE x12 x4) (fp.mul RNE x24 x16)) (fp.mul RNE (fp.sub RNE x22 x15) (fp.mul RNE x17 x14)))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.neg x22) (fp.add RNE x20 x17)) (fp.sub RNE (fp.mul RNE x10 x20) (fp.neg x17))) (fp.mul RNE (fp.sub RNE (fp.neg x22) (fp.sub RNE x24 x13)) (fp.div RNE (fp.mul RNE x13 x13) (fp.add RNE x10 x6))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x17 x23) (fp.div RNE x21 x21)) (fp.sub RNE (fp.sub RNE x10 x14) (fp.sub RNE x4 x6))) (fp.mul RNE (fp.div RNE (fp.sub RNE x18 x0) (fp.neg x20)) (fp.div RNE (fp.sub RNE x10 x20) (fp.add RNE x12 x7)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x21 x17) (fp.div RNE x5 x1)) (fp.div RNE (fp.sub RNE x11 x9) (fp.neg x3))) (fp.neg (fp.div RNE (fp.add RNE x12 x10) (fp.div RNE x4 x8))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg (fp.sub RNE x21 x22)) (fp.neg (fp.add RNE x13 x10))) (fp.div RNE (fp.neg (fp.neg x14)) (fp.mul RNE (fp.mul RNE x7 x16) (fp.add RNE x23 x13)))) (fp.neg (fp.add RNE (fp.neg (fp.mul RNE x25 x25)) (fp.add RNE (fp.mul RNE x10 x3) (fp.add RNE x18 x7))))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.add RNE (fp.neg x12) (fp.sub RNE x13 x19)) (fp.neg (fp.neg x22))) (fp.div RNE (fp.sub RNE (fp.sub RNE x23 x14) (fp.neg x10)) (fp.add RNE (fp.sub RNE x10 x9) (fp.div RNE x4 x25)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.add RNE x9 x23) (fp.sub RNE x19 x15)) (fp.div RNE (fp.neg x20) (fp.div RNE x3 x18))) (fp.div RNE (fp.div RNE (fp.mul RNE x18 x5) (fp.add RNE x8 x9)) (fp.div RNE (fp.div RNE x24 x1) (fp.div RNE x15 x15))))))
(check-sat)
