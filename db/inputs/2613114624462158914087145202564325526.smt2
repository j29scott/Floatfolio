(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.mul RNE x0 x2) (fp.div RNE x10 x1)) (fp.div RNE (fp.div RNE x13 x15) (fp.sub RNE x12 x11))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x15 x0) (fp.neg x15)) (fp.div RNE (fp.add RNE x14 x8) (fp.sub RNE x13 x15))))
(assert (fp.leq (fp.div RNE (fp.add RNE x0 x15) (fp.sub RNE x6 x0)) (fp.mul RNE (fp.mul RNE x6 x4) (fp.neg x15))))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x2) (fp.neg x2)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x15 x5))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x12 x5) (fp.sub RNE x6 x10)) (fp.neg (fp.sub RNE x14 x6))))
(assert (fp.gt (fp.neg (fp.add RNE x0 x9)) (fp.mul RNE (fp.add RNE x12 x0) (fp.add RNE x3 x8))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x5 x7) (fp.mul RNE x11 x2)) (fp.div RNE (fp.mul RNE x11 x14) (fp.add RNE x14 x13))))
(assert (fp.lt (fp.neg (fp.add RNE x11 x0)) (fp.neg (fp.neg x12))))
(assert (fp.geq (fp.neg (fp.neg x9)) (fp.add RNE (fp.add RNE x7 x9) (fp.mul RNE x5 x10))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x7 x10) (fp.div RNE x11 x9)) (fp.sub RNE (fp.sub RNE x2 x13) (fp.neg x4))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x9 x7) (fp.neg x6)) (fp.sub RNE (fp.add RNE x12 x15) (fp.mul RNE x7 x8))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x13 x10) (fp.div RNE x1 x4)) (fp.add RNE (fp.div RNE x5 x11) (fp.add RNE x9 x15))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x2) (fp.neg x0)) (fp.sub RNE (fp.sub RNE x1 x1) (fp.neg x11))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x12 x15) (fp.add RNE x0 x6)) (fp.mul RNE (fp.sub RNE x14 x8) (fp.add RNE x13 x5))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x4 x14) (fp.mul RNE x4 x1)) (fp.neg (fp.neg x13))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x1 x5) (fp.mul RNE x3 x8)) (fp.div RNE (fp.add RNE x5 x0) (fp.neg x8))))
(check-sat)
