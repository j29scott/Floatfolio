(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x14 x15) (fp.neg x2)) (fp.div RNE (fp.mul RNE x3 x7) (fp.neg x9))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x5 x18) (fp.add RNE x15 x22)) (fp.neg (fp.sub RNE x17 x14))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x17 x1) (fp.div RNE x0 x17)) (fp.neg (fp.add RNE x3 x16))))
(assert (fp.gt (fp.neg (fp.neg x21)) (fp.add RNE (fp.mul RNE x11 x10) (fp.neg x0))))
(assert (fp.lt (fp.sub RNE (fp.neg x7) (fp.mul RNE x11 x10)) (fp.div RNE (fp.add RNE x17 x16) (fp.div RNE x17 x8))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x13 x9) (fp.div RNE x2 x5)) (fp.neg (fp.add RNE x11 x13))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x9 x17) (fp.sub RNE x18 x9)) (fp.neg (fp.add RNE x3 x16))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x12 x5) (fp.div RNE x21 x9)) (fp.sub RNE (fp.mul RNE x17 x19) (fp.div RNE x12 x13))))
(assert (fp.geq (fp.add RNE (fp.neg x12) (fp.sub RNE x21 x20)) (fp.mul RNE (fp.sub RNE x21 x15) (fp.add RNE x18 x1))))
(assert (fp.lt (fp.div RNE (fp.add RNE x22 x19) (fp.mul RNE x4 x2)) (fp.sub RNE (fp.mul RNE x17 x7) (fp.neg x2))))
(assert (fp.leq (fp.sub RNE (fp.neg x14) (fp.add RNE x13 x1)) (fp.neg (fp.neg x19))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x13 x15) (fp.sub RNE x9 x20)) (fp.sub RNE (fp.mul RNE x6 x12) (fp.neg x11))))
(assert (fp.geq (fp.add RNE (fp.add RNE x3 x0) (fp.sub RNE x8 x13)) (fp.sub RNE (fp.div RNE x18 x17) (fp.div RNE x13 x10))))
(assert (fp.eq (fp.add RNE (fp.div RNE x10 x17) (fp.add RNE x21 x1)) (fp.sub RNE (fp.mul RNE x18 x10) (fp.sub RNE x8 x14))))
(assert (fp.leq (fp.neg (fp.div RNE x17 x22)) (fp.mul RNE (fp.mul RNE x9 x21) (fp.neg x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x12 x14) (fp.mul RNE x17 x3)) (fp.add RNE (fp.add RNE x15 x17) (fp.neg x18))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x16 x1) (fp.add RNE x19 x11)) (fp.sub RNE (fp.mul RNE x0 x10) (fp.neg x15))))
(check-sat)
