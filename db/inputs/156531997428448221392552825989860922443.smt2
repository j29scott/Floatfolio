(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE x0 x2) (fp.neg x10))) (fp.neg (fp.div RNE (fp.neg x16) (fp.div RNE x7 x18)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.div RNE x2 x3) (fp.sub RNE x18 x4)) (fp.mul RNE (fp.neg x15) (fp.neg x9))) (fp.div RNE (fp.neg (fp.mul RNE x8 x17)) (fp.neg (fp.div RNE x1 x11)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE x19 x8) (fp.neg x18))) (fp.div RNE (fp.neg (fp.add RNE x17 x17)) (fp.neg (fp.div RNE x4 x0)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg x4) (fp.add RNE x8 x3)) (fp.mul RNE (fp.sub RNE x7 x12) (fp.div RNE x3 x12))) (fp.div RNE (fp.sub RNE (fp.div RNE x10 x18) (fp.sub RNE x12 x1)) (fp.mul RNE (fp.sub RNE x8 x11) (fp.sub RNE x2 x18)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE x10 x19) (fp.neg x9)) (fp.neg (fp.neg x9))) (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x14) (fp.add RNE x12 x19)) (fp.neg (fp.neg x2)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x3 x18)) (fp.sub RNE (fp.neg x12) (fp.div RNE x16 x2))) (fp.sub RNE (fp.neg (fp.mul RNE x5 x8)) (fp.div RNE (fp.mul RNE x13 x0) (fp.sub RNE x13 x15)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE x5 x8) (fp.sub RNE x3 x4))) (fp.div RNE (fp.add RNE (fp.sub RNE x9 x17) (fp.add RNE x1 x7)) (fp.mul RNE (fp.mul RNE x7 x12) (fp.sub RNE x6 x17)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x13 x4) (fp.mul RNE x11 x13)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.add RNE (fp.neg x10) (fp.add RNE x10 x15)) (fp.add RNE (fp.sub RNE x15 x0) (fp.mul RNE x3 x9)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x15 x7)) (fp.sub RNE (fp.div RNE x11 x2) (fp.neg x2))) (fp.sub RNE (fp.neg (fp.neg x12)) (fp.mul RNE (fp.mul RNE x16 x1) (fp.neg x8)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE x4 x12)) (fp.neg (fp.mul RNE x1 x16))) (fp.neg (fp.sub RNE (fp.sub RNE x13 x6) (fp.mul RNE x11 x4)))))
(check-sat)
