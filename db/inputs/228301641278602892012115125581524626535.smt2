(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE (fp.neg x4) (fp.sub RNE x22 x6)) (fp.add RNE (fp.div RNE x4 x0) (fp.mul RNE x4 x15))) (fp.neg (fp.div RNE (fp.div RNE x3 x16) (fp.div RNE x9 x6)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.neg x12) (fp.div RNE x2 x17))) (fp.mul RNE (fp.div RNE (fp.mul RNE x10 x3) (fp.add RNE x16 x5)) (fp.sub RNE (fp.sub RNE x10 x6) (fp.div RNE x15 x8))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE (fp.div RNE x1 x22) (fp.div RNE x16 x10)) (fp.sub RNE (fp.add RNE x12 x11) (fp.neg x13)))) (fp.add RNE (fp.add RNE (fp.neg (fp.add RNE x2 x23)) (fp.mul RNE (fp.add RNE x16 x16) (fp.div RNE x0 x0))) (fp.add RNE (fp.sub RNE (fp.neg x23) (fp.sub RNE x17 x9)) (fp.add RNE (fp.mul RNE x7 x18) (fp.add RNE x14 x6))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.add RNE x5 x7) (fp.mul RNE x10 x0)) (fp.add RNE (fp.add RNE x16 x5) (fp.div RNE x18 x0))) (fp.div RNE (fp.neg (fp.div RNE x1 x2)) (fp.add RNE (fp.mul RNE x17 x2) (fp.add RNE x10 x1)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.sub RNE x12 x0)) (fp.sub RNE (fp.mul RNE x11 x19) (fp.neg x17))) (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x22) (fp.add RNE x1 x18)) (fp.div RNE (fp.sub RNE x4 x12) (fp.sub RNE x5 x3))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg (fp.neg x24))) (fp.add RNE (fp.neg (fp.add RNE x9 x17)) (fp.neg (fp.div RNE x23 x24)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.add RNE x22 x13) (fp.div RNE x21 x2)) (fp.div RNE (fp.add RNE x13 x19) (fp.sub RNE x20 x12))) (fp.add RNE (fp.sub RNE (fp.div RNE x8 x10) (fp.add RNE x21 x8)) (fp.add RNE (fp.mul RNE x13 x19) (fp.neg x0))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x3) (fp.neg x21)) (fp.mul RNE (fp.sub RNE x22 x7) (fp.sub RNE x11 x5))) (fp.neg (fp.add RNE (fp.sub RNE x5 x15) (fp.mul RNE x20 x10)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x8 x6) (fp.neg x2)) (fp.mul RNE (fp.add RNE x8 x12) (fp.neg x13))) (fp.sub RNE (fp.mul RNE (fp.neg x16) (fp.div RNE x10 x18)) (fp.add RNE (fp.mul RNE x7 x15) (fp.sub RNE x15 x3))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.mul RNE (fp.neg x20) (fp.mul RNE x3 x4))) (fp.mul RNE (fp.div RNE (fp.div RNE x16 x3) (fp.add RNE x7 x18)) (fp.mul RNE (fp.div RNE x22 x5) (fp.sub RNE x14 x9)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x19 x1) (fp.neg x7)) (fp.div RNE (fp.add RNE x9 x22) (fp.sub RNE x23 x21))) (fp.neg (fp.sub RNE (fp.add RNE x14 x7) (fp.neg x6))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x15 x16)) (fp.neg (fp.add RNE x21 x23)))) (fp.neg (fp.div RNE (fp.div RNE (fp.neg x11) (fp.sub RNE x19 x9)) (fp.add RNE (fp.mul RNE x4 x2) (fp.mul RNE x16 x15))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.add RNE x20 x18) (fp.div RNE x17 x22)) (fp.sub RNE (fp.mul RNE x12 x10) (fp.sub RNE x12 x22))) (fp.add RNE (fp.neg (fp.neg x4)) (fp.mul RNE (fp.add RNE x5 x17) (fp.add RNE x18 x4)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.neg x11) (fp.mul RNE x24 x0)) (fp.sub RNE (fp.div RNE x20 x22) (fp.add RNE x12 x16))) (fp.neg (fp.sub RNE (fp.div RNE x6 x8) (fp.div RNE x12 x5))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x1 x22) (fp.neg x19)) (fp.div RNE (fp.neg x12) (fp.add RNE x7 x16))) (fp.div RNE (fp.neg (fp.add RNE x1 x24)) (fp.mul RNE (fp.mul RNE x17 x16) (fp.neg x23)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.sub RNE x0 x12) (fp.neg x15))) (fp.add RNE (fp.mul RNE (fp.add RNE x19 x1) (fp.div RNE x2 x21)) (fp.mul RNE (fp.neg x16) (fp.mul RNE x18 x24))))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.div RNE (fp.mul RNE x17 x7) (fp.neg x6)) (fp.add RNE (fp.sub RNE x20 x9) (fp.sub RNE x24 x23))) (fp.neg (fp.sub RNE (fp.neg x11) (fp.neg x10)))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x11 x24) (fp.sub RNE x16 x8)) (fp.mul RNE (fp.add RNE x8 x0) (fp.sub RNE x0 x23))) (fp.div RNE (fp.mul RNE (fp.add RNE x20 x5) (fp.sub RNE x1 x0)) (fp.add RNE (fp.sub RNE x3 x17) (fp.add RNE x17 x8))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg (fp.mul RNE x11 x20))) (fp.div RNE (fp.mul RNE (fp.add RNE x2 x8) (fp.sub RNE x24 x20)) (fp.div RNE (fp.div RNE x1 x12) (fp.sub RNE x4 x19)))) (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x5 x4)) (fp.add RNE (fp.neg x11) (fp.div RNE x16 x17))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE (fp.neg x15) (fp.sub RNE x24 x6))) (fp.add RNE (fp.div RNE (fp.mul RNE x7 x17) (fp.sub RNE x16 x16)) (fp.div RNE (fp.div RNE x24 x6) (fp.div RNE x1 x21)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x18 x18) (fp.sub RNE x0 x12)) (fp.neg (fp.sub RNE x17 x22))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x8 x14)) (fp.neg (fp.div RNE x6 x3))) (fp.add RNE (fp.sub RNE (fp.mul RNE x15 x1) (fp.neg x14)) (fp.neg (fp.neg x19)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x18 x12) (fp.div RNE x23 x16)) (fp.sub RNE (fp.mul RNE x7 x19) (fp.mul RNE x17 x8))) (fp.add RNE (fp.sub RNE (fp.neg x9) (fp.div RNE x13 x9)) (fp.add RNE (fp.mul RNE x3 x17) (fp.add RNE x5 x16))))))
(check-sat)
