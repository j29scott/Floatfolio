(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x6) (fp.add RNE x4 x8)) (fp.div RNE (fp.div RNE x10 x1) (fp.div RNE x9 x5))) (fp.neg (fp.div RNE (fp.div RNE x5 x9) (fp.neg x4)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE x1 x2) (fp.div RNE x1 x0))) (fp.neg (fp.neg (fp.div RNE x8 x3)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x9 x4) (fp.mul RNE x9 x5)) (fp.div RNE (fp.div RNE x7 x2) (fp.sub RNE x10 x9))) (fp.add RNE (fp.add RNE (fp.mul RNE x1 x5) (fp.div RNE x8 x2)) (fp.mul RNE (fp.div RNE x10 x3) (fp.add RNE x8 x7)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE x9 x2) (fp.div RNE x6 x4)) (fp.sub RNE (fp.mul RNE x3 x3) (fp.mul RNE x0 x11))) (fp.neg (fp.mul RNE (fp.div RNE x4 x11) (fp.sub RNE x3 x8)))))
(check-sat)
