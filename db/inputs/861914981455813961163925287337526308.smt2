(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE x0 x1) (fp.add RNE x7 x7)) (fp.add RNE (fp.sub RNE x9 x16) (fp.mul RNE x6 x2))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x14 x4) (fp.div RNE x3 x8)) (fp.div RNE (fp.mul RNE x0 x7) (fp.add RNE x15 x4))))
(assert (fp.gt (fp.div RNE (fp.div RNE x1 x1) (fp.div RNE x14 x14)) (fp.sub RNE (fp.div RNE x11 x10) (fp.neg x2))))
(assert (fp.eq (fp.neg (fp.mul RNE x7 x14)) (fp.add RNE (fp.div RNE x15 x1) (fp.neg x8))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x12 x8) (fp.neg x6)) (fp.mul RNE (fp.add RNE x8 x4) (fp.mul RNE x7 x13))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x12 x3) (fp.sub RNE x7 x12)) (fp.div RNE (fp.mul RNE x12 x6) (fp.sub RNE x11 x0))))
(check-sat)
