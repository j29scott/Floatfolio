(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x3 x8)) (fp.add RNE (fp.div RNE x14 x17) (fp.neg x15))) (fp.mul RNE (fp.neg (fp.neg x18)) (fp.neg (fp.add RNE x7 x6)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE x7 x6) (fp.sub RNE x8 x0)) (fp.div RNE (fp.neg x3) (fp.neg x9))) (fp.neg (fp.add RNE (fp.neg x2) (fp.div RNE x2 x14)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x16 x0) (fp.add RNE x2 x9))) (fp.div RNE (fp.add RNE (fp.add RNE x21 x7) (fp.sub RNE x1 x8)) (fp.neg (fp.sub RNE x21 x6)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.sub RNE x19 x20)) (fp.mul RNE (fp.div RNE x3 x7) (fp.sub RNE x5 x21))) (fp.mul RNE (fp.add RNE (fp.add RNE x8 x13) (fp.div RNE x20 x16)) (fp.neg (fp.add RNE x2 x11)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x18 x4) (fp.add RNE x0 x10)) (fp.sub RNE (fp.neg x5) (fp.neg x5))) (fp.div RNE (fp.div RNE (fp.sub RNE x21 x6) (fp.div RNE x4 x7)) (fp.neg (fp.mul RNE x18 x20)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE x13 x6) (fp.div RNE x14 x3)) (fp.div RNE (fp.div RNE x3 x17) (fp.mul RNE x18 x3))) (fp.mul RNE (fp.sub RNE (fp.add RNE x21 x14) (fp.sub RNE x7 x2)) (fp.add RNE (fp.sub RNE x5 x8) (fp.neg x14)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x5 x13)) (fp.div RNE (fp.neg x13) (fp.add RNE x20 x11))) (fp.div RNE (fp.add RNE (fp.div RNE x13 x8) (fp.div RNE x6 x8)) (fp.sub RNE (fp.sub RNE x5 x11) (fp.sub RNE x18 x21)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x11) (fp.div RNE x3 x9)) (fp.add RNE (fp.add RNE x8 x12) (fp.mul RNE x13 x4))) (fp.neg (fp.div RNE (fp.mul RNE x7 x17) (fp.sub RNE x18 x7)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x17 x2)) (fp.sub RNE (fp.neg x9) (fp.neg x15))) (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.add RNE x21 x16)) (fp.mul RNE (fp.div RNE x15 x12) (fp.neg x7)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.sub RNE x3 x15) (fp.add RNE x12 x9)) (fp.sub RNE (fp.div RNE x21 x6) (fp.mul RNE x18 x5))) (fp.div RNE (fp.add RNE (fp.sub RNE x16 x20) (fp.add RNE x5 x5)) (fp.mul RNE (fp.mul RNE x10 x18) (fp.mul RNE x17 x12)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x6 x15) (fp.mul RNE x14 x16)) (fp.mul RNE (fp.div RNE x7 x0) (fp.div RNE x1 x8))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x0 x14) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x2 x17) (fp.mul RNE x10 x7)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.sub RNE x20 x2)) (fp.neg (fp.div RNE x19 x12))) (fp.add RNE (fp.add RNE (fp.mul RNE x16 x17) (fp.div RNE x0 x1)) (fp.mul RNE (fp.sub RNE x6 x21) (fp.neg x10)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE x1 x9) (fp.neg x2))) (fp.div RNE (fp.add RNE (fp.sub RNE x13 x19) (fp.add RNE x9 x14)) (fp.div RNE (fp.add RNE x11 x20) (fp.sub RNE x14 x9)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.sub RNE x20 x4) (fp.mul RNE x2 x13)) (fp.div RNE (fp.div RNE x17 x7) (fp.div RNE x20 x0))) (fp.mul RNE (fp.neg (fp.mul RNE x11 x13)) (fp.div RNE (fp.div RNE x19 x18) (fp.neg x13)))))
(check-sat)
