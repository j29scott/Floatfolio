(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE x9 x5) (fp.neg x3)))
(assert (fp.eq (fp.div RNE x6 x4) (fp.sub RNE x8 x1)))
(assert (fp.gt (fp.neg x12) (fp.mul RNE x10 x0)))
(assert (fp.gt (fp.mul RNE x1 x5) (fp.div RNE x2 x3)))
(assert (fp.gt (fp.mul RNE x11 x10) (fp.sub RNE x9 x15)))
(assert (fp.geq (fp.div RNE x12 x14) (fp.add RNE x10 x7)))
(assert (fp.geq (fp.mul RNE x10 x8) (fp.mul RNE x4 x15)))
(assert (fp.gt (fp.mul RNE x15 x3) (fp.sub RNE x0 x7)))
(assert (fp.gt (fp.add RNE x10 x9) (fp.sub RNE x4 x13)))
(assert (fp.lt (fp.sub RNE x4 x6) (fp.sub RNE x0 x2)))
(assert (fp.lt (fp.add RNE x3 x2) (fp.div RNE x6 x7)))
(check-sat)
