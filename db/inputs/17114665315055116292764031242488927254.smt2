(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.sub RNE x17 x0) (fp.mul RNE x23 x5)) (fp.mul RNE (fp.sub RNE x24 x6) (fp.neg x5))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x11 x8) (fp.sub RNE x21 x0)) (fp.sub RNE (fp.sub RNE x8 x17) (fp.neg x18))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x8 x1) (fp.div RNE x9 x3)) (fp.mul RNE (fp.sub RNE x11 x8) (fp.mul RNE x14 x23))))
(assert (fp.leq (fp.add RNE (fp.div RNE x3 x7) (fp.mul RNE x8 x1)) (fp.add RNE (fp.sub RNE x8 x23) (fp.neg x11))))
(assert (fp.eq (fp.neg (fp.neg x10)) (fp.add RNE (fp.neg x23) (fp.sub RNE x8 x0))))
(assert (fp.gt (fp.add RNE (fp.neg x19) (fp.neg x12)) (fp.add RNE (fp.div RNE x3 x6) (fp.sub RNE x20 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x20 x0) (fp.div RNE x11 x16)) (fp.sub RNE (fp.sub RNE x7 x1) (fp.neg x4))))
(assert (fp.eq (fp.neg (fp.sub RNE x13 x1)) (fp.add RNE (fp.sub RNE x6 x21) (fp.neg x1))))
(assert (fp.leq (fp.neg (fp.add RNE x9 x13)) (fp.mul RNE (fp.mul RNE x8 x14) (fp.mul RNE x10 x15))))
(assert (fp.gt (fp.neg (fp.sub RNE x5 x22)) (fp.neg (fp.sub RNE x4 x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x12 x15) (fp.mul RNE x2 x13)) (fp.mul RNE (fp.add RNE x5 x8) (fp.mul RNE x15 x2))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x2 x20) (fp.mul RNE x16 x25)) (fp.neg (fp.mul RNE x17 x3))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x23 x12) (fp.neg x21)) (fp.add RNE (fp.div RNE x24 x0) (fp.mul RNE x3 x7))))
(assert (fp.leq (fp.add RNE (fp.add RNE x15 x6) (fp.add RNE x20 x16)) (fp.div RNE (fp.div RNE x4 x18) (fp.sub RNE x6 x21))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x0 x11) (fp.mul RNE x0 x4)) (fp.sub RNE (fp.sub RNE x0 x16) (fp.neg x9))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x20 x20) (fp.sub RNE x0 x0)) (fp.add RNE (fp.mul RNE x2 x12) (fp.neg x13))))
(assert (fp.lt (fp.add RNE (fp.div RNE x23 x4) (fp.neg x16)) (fp.div RNE (fp.div RNE x11 x25) (fp.mul RNE x20 x20))))
(check-sat)
