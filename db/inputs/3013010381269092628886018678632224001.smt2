(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x9 x12) (fp.sub RNE x0 x22)) (fp.div RNE (fp.div RNE x1 x16) (fp.mul RNE x20 x17))) (fp.div RNE (fp.neg (fp.neg x4)) (fp.sub RNE (fp.add RNE x5 x13) (fp.sub RNE x2 x13)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x17 x5) (fp.neg x4))) (fp.neg (fp.sub RNE (fp.sub RNE x15 x6) (fp.sub RNE x22 x6)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x17 x1) (fp.div RNE x16 x12))) (fp.neg (fp.neg (fp.add RNE x14 x10)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x21) (fp.div RNE x9 x11)) (fp.add RNE (fp.mul RNE x15 x14) (fp.sub RNE x12 x14))) (fp.sub RNE (fp.add RNE (fp.add RNE x17 x6) (fp.sub RNE x14 x20)) (fp.mul RNE (fp.add RNE x22 x4) (fp.mul RNE x15 x4)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.div RNE x2 x8)) (fp.sub RNE (fp.sub RNE x1 x12) (fp.mul RNE x5 x1))) (fp.mul RNE (fp.div RNE (fp.mul RNE x15 x0) (fp.div RNE x21 x3)) (fp.div RNE (fp.neg x18) (fp.neg x2)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x20 x4) (fp.div RNE x0 x2)) (fp.add RNE (fp.mul RNE x19 x3) (fp.sub RNE x8 x9))) (fp.div RNE (fp.add RNE (fp.add RNE x8 x19) (fp.div RNE x2 x6)) (fp.neg (fp.neg x15)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE x14 x5) (fp.neg x17)) (fp.neg (fp.sub RNE x11 x7))) (fp.mul RNE (fp.neg (fp.div RNE x19 x3)) (fp.neg (fp.mul RNE x5 x16)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x19 x12) (fp.div RNE x1 x5))) (fp.neg (fp.add RNE (fp.neg x22) (fp.div RNE x7 x0)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x19 x18) (fp.div RNE x16 x7)) (fp.mul RNE (fp.div RNE x7 x8) (fp.sub RNE x7 x13))) (fp.div RNE (fp.add RNE (fp.add RNE x2 x6) (fp.neg x1)) (fp.div RNE (fp.add RNE x18 x20) (fp.sub RNE x14 x7)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE x0 x11) (fp.neg x14)) (fp.neg (fp.neg x9))) (fp.div RNE (fp.sub RNE (fp.sub RNE x1 x5) (fp.mul RNE x14 x10)) (fp.sub RNE (fp.div RNE x4 x20) (fp.sub RNE x10 x19)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x8) (fp.add RNE x20 x11)) (fp.sub RNE (fp.mul RNE x0 x19) (fp.mul RNE x10 x13))) (fp.add RNE (fp.div RNE (fp.neg x10) (fp.mul RNE x20 x10)) (fp.mul RNE (fp.sub RNE x9 x19) (fp.add RNE x17 x22)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE x19 x1) (fp.mul RNE x15 x16)) (fp.sub RNE (fp.neg x21) (fp.add RNE x5 x13))) (fp.add RNE (fp.neg (fp.add RNE x12 x22)) (fp.div RNE (fp.neg x18) (fp.div RNE x21 x20)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE x3 x5)) (fp.neg (fp.sub RNE x19 x7))) (fp.div RNE (fp.sub RNE (fp.add RNE x15 x20) (fp.add RNE x16 x2)) (fp.neg (fp.sub RNE x8 x7)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.sub RNE x20 x4) (fp.neg x8)) (fp.neg (fp.neg x2))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x17) (fp.add RNE x13 x20)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x6) (fp.mul RNE x3 x0)) (fp.mul RNE (fp.add RNE x1 x15) (fp.sub RNE x12 x11))) (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x10) (fp.neg x4)) (fp.neg (fp.mul RNE x20 x15)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x12 x19) (fp.add RNE x5 x19)) (fp.mul RNE (fp.add RNE x22 x11) (fp.neg x20))) (fp.sub RNE (fp.mul RNE (fp.neg x8) (fp.mul RNE x19 x19)) (fp.neg (fp.div RNE x7 x11)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg x13) (fp.div RNE x18 x6)) (fp.div RNE (fp.neg x17) (fp.div RNE x9 x13))) (fp.neg (fp.add RNE (fp.mul RNE x10 x2) (fp.mul RNE x21 x21)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x20 x16) (fp.sub RNE x0 x19))) (fp.div RNE (fp.sub RNE (fp.add RNE x11 x19) (fp.sub RNE x17 x0)) (fp.add RNE (fp.sub RNE x15 x18) (fp.div RNE x12 x16)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x21 x3) (fp.div RNE x4 x6)) (fp.neg (fp.div RNE x22 x7))) (fp.sub RNE (fp.mul RNE (fp.add RNE x22 x20) (fp.neg x12)) (fp.sub RNE (fp.add RNE x4 x6) (fp.sub RNE x20 x10)))))
(check-sat)
