(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x2) (fp.sub RNE x5 x3)))
(assert (fp.geq (fp.add RNE x9 x0) (fp.add RNE x0 x9)))
(assert (fp.eq (fp.div RNE x0 x4) (fp.add RNE x5 x9)))
(assert (fp.geq (fp.div RNE x9 x5) (fp.add RNE x5 x2)))
(assert (fp.gt (fp.mul RNE x5 x3) (fp.sub RNE x5 x4)))
(assert (fp.leq (fp.sub RNE x1 x5) (fp.neg x6)))
(assert (fp.lt (fp.sub RNE x8 x8) (fp.sub RNE x6 x0)))
(assert (fp.leq (fp.add RNE x0 x3) (fp.div RNE x4 x8)))
(assert (fp.eq (fp.mul RNE x3 x9) (fp.add RNE x9 x1)))
(assert (fp.gt (fp.div RNE x2 x7) (fp.mul RNE x0 x8)))
(assert (fp.eq (fp.mul RNE x0 x2) (fp.add RNE x2 x3)))
(assert (fp.geq (fp.div RNE x1 x9) (fp.sub RNE x8 x1)))
(assert (fp.leq (fp.mul RNE x8 x5) (fp.neg x3)))
(assert (fp.geq (fp.mul RNE x1 x9) (fp.neg x6)))
(assert (fp.eq (fp.div RNE x8 x7) (fp.mul RNE x6 x3)))
(check-sat)
