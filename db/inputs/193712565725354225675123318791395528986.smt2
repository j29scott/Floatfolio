(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE x2 x4) (fp.div RNE x16 x7)) (fp.add RNE (fp.mul RNE x5 x2) (fp.add RNE x4 x0))) (fp.sub RNE (fp.neg (fp.div RNE x16 x19)) (fp.mul RNE (fp.neg x4) (fp.neg x2)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.sub RNE x8 x15)) (fp.neg (fp.div RNE x12 x10))) (fp.neg (fp.add RNE (fp.add RNE x2 x4) (fp.sub RNE x1 x13)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE x0 x15) (fp.add RNE x10 x1)) (fp.add RNE (fp.div RNE x17 x4) (fp.div RNE x10 x8))) (fp.neg (fp.add RNE (fp.div RNE x19 x1) (fp.div RNE x10 x19)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x5 x20) (fp.mul RNE x8 x12)) (fp.add RNE (fp.sub RNE x20 x0) (fp.sub RNE x0 x7))) (fp.div RNE (fp.mul RNE (fp.sub RNE x6 x17) (fp.mul RNE x20 x16)) (fp.mul RNE (fp.div RNE x8 x20) (fp.div RNE x7 x9)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.sub RNE x2 x7)) (fp.neg (fp.div RNE x0 x3))) (fp.neg (fp.add RNE (fp.div RNE x2 x1) (fp.div RNE x11 x16)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x1) (fp.sub RNE x20 x3)) (fp.mul RNE (fp.sub RNE x4 x3) (fp.div RNE x13 x5))) (fp.div RNE (fp.add RNE (fp.div RNE x0 x2) (fp.add RNE x20 x5)) (fp.div RNE (fp.mul RNE x18 x12) (fp.div RNE x11 x13)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x7 x8) (fp.div RNE x12 x16))) (fp.add RNE (fp.mul RNE (fp.neg x18) (fp.mul RNE x14 x3)) (fp.div RNE (fp.div RNE x4 x15) (fp.neg x2)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x17) (fp.mul RNE x9 x8)) (fp.add RNE (fp.mul RNE x9 x2) (fp.add RNE x18 x7))) (fp.div RNE (fp.neg (fp.div RNE x6 x12)) (fp.mul RNE (fp.div RNE x16 x19) (fp.neg x9)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE x12 x16) (fp.add RNE x14 x10)) (fp.div RNE (fp.div RNE x19 x14) (fp.neg x3))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x7 x12) (fp.sub RNE x17 x14)) (fp.neg (fp.mul RNE x11 x4)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg x5) (fp.neg x2))) (fp.neg (fp.div RNE (fp.sub RNE x2 x13) (fp.div RNE x8 x3)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.mul RNE x4 x17) (fp.mul RNE x7 x12)) (fp.add RNE (fp.sub RNE x14 x15) (fp.div RNE x5 x5))) (fp.div RNE (fp.neg (fp.sub RNE x14 x17)) (fp.neg (fp.neg x7)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x0 x10) (fp.div RNE x6 x14))) (fp.mul RNE (fp.div RNE (fp.div RNE x18 x8) (fp.sub RNE x12 x12)) (fp.neg (fp.mul RNE x6 x6)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x11 x18) (fp.add RNE x10 x9))) (fp.mul RNE (fp.add RNE (fp.neg x13) (fp.div RNE x20 x15)) (fp.neg (fp.mul RNE x5 x17)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x5)) (fp.sub RNE (fp.mul RNE x2 x5) (fp.add RNE x12 x11))) (fp.neg (fp.div RNE (fp.mul RNE x1 x10) (fp.mul RNE x18 x20)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x3) (fp.sub RNE x18 x1)) (fp.neg (fp.add RNE x20 x8))) (fp.div RNE (fp.div RNE (fp.div RNE x12 x13) (fp.sub RNE x0 x5)) (fp.mul RNE (fp.sub RNE x2 x14) (fp.neg x13)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE x17 x5) (fp.mul RNE x4 x7))) (fp.mul RNE (fp.neg (fp.add RNE x4 x12)) (fp.add RNE (fp.div RNE x14 x8) (fp.add RNE x9 x9)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.div RNE x14 x16) (fp.add RNE x13 x5)) (fp.div RNE (fp.mul RNE x7 x3) (fp.mul RNE x9 x7))) (fp.add RNE (fp.sub RNE (fp.sub RNE x17 x13) (fp.add RNE x19 x16)) (fp.mul RNE (fp.div RNE x0 x2) (fp.sub RNE x5 x8)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE x10 x9) (fp.mul RNE x2 x16)) (fp.mul RNE (fp.sub RNE x4 x17) (fp.add RNE x11 x0))) (fp.sub RNE (fp.add RNE (fp.add RNE x7 x10) (fp.add RNE x14 x7)) (fp.mul RNE (fp.add RNE x19 x9) (fp.add RNE x4 x18)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x19 x17) (fp.div RNE x9 x18)) (fp.div RNE (fp.sub RNE x9 x19) (fp.mul RNE x14 x1))) (fp.div RNE (fp.neg (fp.div RNE x7 x11)) (fp.div RNE (fp.add RNE x4 x15) (fp.neg x11)))))
(check-sat)
