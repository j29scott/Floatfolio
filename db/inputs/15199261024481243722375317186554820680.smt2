(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.neg x5) (fp.neg x7)) (fp.add RNE (fp.add RNE x6 x20) (fp.mul RNE x7 x15))))
(assert (fp.geq (fp.neg (fp.sub RNE x7 x6)) (fp.neg (fp.sub RNE x19 x13))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x4 x11) (fp.neg x0)) (fp.mul RNE (fp.sub RNE x11 x17) (fp.div RNE x17 x7))))
(assert (fp.leq (fp.neg (fp.div RNE x20 x8)) (fp.add RNE (fp.sub RNE x3 x2) (fp.div RNE x0 x6))))
(check-sat)
