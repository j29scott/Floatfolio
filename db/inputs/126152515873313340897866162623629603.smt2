(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x16 x26) (fp.sub RNE x19 x5)) (fp.mul RNE (fp.add RNE x14 x7) (fp.neg x7)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.neg x19) (fp.neg x4)) (fp.sub RNE (fp.mul RNE x26 x15) (fp.div RNE x18 x13))) (fp.div RNE (fp.sub RNE (fp.div RNE x14 x11) (fp.neg x4)) (fp.mul RNE (fp.add RNE x11 x8) (fp.mul RNE x0 x18))))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE (fp.add RNE x26 x26) (fp.mul RNE x11 x26))) (fp.neg (fp.add RNE (fp.mul RNE x2 x19) (fp.sub RNE x19 x7)))) (fp.neg (fp.div RNE (fp.neg (fp.div RNE x18 x5)) (fp.neg (fp.div RNE x11 x3))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x15) (fp.sub RNE x11 x15)) (fp.add RNE (fp.mul RNE x16 x25) (fp.sub RNE x5 x0)))) (fp.neg (fp.neg (fp.div RNE (fp.div RNE x20 x13) (fp.neg x15))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x8 x7)) (fp.neg (fp.neg x10))) (fp.add RNE (fp.add RNE (fp.div RNE x4 x9) (fp.neg x2)) (fp.div RNE (fp.div RNE x19 x20) (fp.div RNE x9 x4)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x1) (fp.neg x18)) (fp.div RNE (fp.neg x12) (fp.sub RNE x13 x13))) (fp.sub RNE (fp.div RNE (fp.sub RNE x7 x0) (fp.add RNE x24 x0)) (fp.add RNE (fp.sub RNE x16 x6) (fp.add RNE x25 x4))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.add RNE (fp.neg x1) (fp.mul RNE x24 x7)) (fp.div RNE (fp.div RNE x25 x23) (fp.sub RNE x12 x22)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.div RNE x0 x23) (fp.sub RNE x2 x25))) (fp.div RNE (fp.div RNE (fp.sub RNE x3 x14) (fp.sub RNE x23 x6)) (fp.div RNE (fp.div RNE x13 x17) (fp.add RNE x24 x25))))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x15 x23) (fp.add RNE x5 x18)) (fp.neg (fp.neg x19))) (fp.div RNE (fp.div RNE (fp.div RNE x18 x23) (fp.add RNE x0 x8)) (fp.neg (fp.neg x5)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.div RNE x19 x10) (fp.div RNE x5 x20)) (fp.div RNE (fp.mul RNE x15 x1) (fp.sub RNE x2 x11))) (fp.mul RNE (fp.neg (fp.add RNE x16 x6)) (fp.mul RNE (fp.sub RNE x13 x5) (fp.mul RNE x13 x9))))))
(check-sat)
