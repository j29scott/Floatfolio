(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x1) (fp.div RNE x10 x15)) (fp.add RNE (fp.mul RNE x2 x12) (fp.mul RNE x15 x11))) (fp.add RNE (fp.neg (fp.div RNE x1 x16)) (fp.add RNE (fp.neg x0) (fp.add RNE x19 x9)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE x12 x12)) (fp.mul RNE (fp.sub RNE x8 x12) (fp.sub RNE x16 x0))) (fp.add RNE (fp.sub RNE (fp.neg x10) (fp.mul RNE x5 x1)) (fp.sub RNE (fp.div RNE x1 x6) (fp.add RNE x12 x14)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.div RNE x6 x20) (fp.sub RNE x4 x20))) (fp.div RNE (fp.mul RNE (fp.div RNE x4 x7) (fp.mul RNE x3 x4)) (fp.mul RNE (fp.sub RNE x13 x6) (fp.mul RNE x1 x2)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x19 x1) (fp.mul RNE x7 x17)) (fp.mul RNE (fp.div RNE x20 x19) (fp.add RNE x17 x5))) (fp.div RNE (fp.add RNE (fp.add RNE x13 x6) (fp.div RNE x4 x0)) (fp.sub RNE (fp.div RNE x18 x5) (fp.neg x0)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x17 x16) (fp.sub RNE x6 x6)) (fp.div RNE (fp.mul RNE x15 x9) (fp.div RNE x17 x11))) (fp.sub RNE (fp.neg (fp.mul RNE x17 x9)) (fp.neg (fp.div RNE x18 x9)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE x15 x2) (fp.mul RNE x1 x20)) (fp.add RNE (fp.sub RNE x7 x17) (fp.add RNE x11 x16))) (fp.neg (fp.mul RNE (fp.mul RNE x16 x21) (fp.div RNE x18 x8)))))
(check-sat)
