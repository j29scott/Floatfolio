(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x4 x4) (fp.neg x4)) (fp.mul RNE (fp.add RNE x0 x3) (fp.div RNE x3 x6))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x2 x5) (fp.neg x3)) (fp.add RNE (fp.div RNE x1 x6) (fp.sub RNE x3 x6))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x1 x6) (fp.neg x6)) (fp.neg (fp.sub RNE x0 x1))))
(assert (fp.geq (fp.add RNE (fp.neg x4) (fp.div RNE x2 x0)) (fp.add RNE (fp.neg x2) (fp.mul RNE x4 x6))))
(assert (fp.gt (fp.sub RNE (fp.neg x4) (fp.div RNE x5 x3)) (fp.div RNE (fp.sub RNE x6 x4) (fp.neg x2))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x6 x4) (fp.mul RNE x1 x0)) (fp.add RNE (fp.div RNE x5 x5) (fp.add RNE x2 x3))))
(assert (fp.gt (fp.neg (fp.div RNE x3 x6)) (fp.div RNE (fp.mul RNE x3 x0) (fp.div RNE x1 x5))))
(check-sat)
