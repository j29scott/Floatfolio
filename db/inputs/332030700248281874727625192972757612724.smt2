(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.add RNE x1 x6) (fp.sub RNE x4 x4)) (fp.neg (fp.sub RNE x3 x5))))
(assert (fp.lt (fp.div RNE (fp.add RNE x7 x6) (fp.sub RNE x7 x1)) (fp.neg (fp.neg x1))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x3 x8) (fp.sub RNE x8 x0)) (fp.sub RNE (fp.mul RNE x8 x1) (fp.mul RNE x1 x6))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x0 x5) (fp.add RNE x3 x6)) (fp.neg (fp.sub RNE x8 x3))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x7 x7) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x2 x5) (fp.add RNE x0 x7))))
(assert (fp.gt (fp.sub RNE (fp.neg x2) (fp.sub RNE x8 x6)) (fp.add RNE (fp.mul RNE x1 x2) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.sub RNE x0 x4)) (fp.div RNE (fp.mul RNE x1 x6) (fp.neg x2))))
(check-sat)
