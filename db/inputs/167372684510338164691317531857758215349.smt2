(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.neg x1)) (fp.sub RNE (fp.add RNE x17 x15) (fp.sub RNE x11 x5))) (fp.neg (fp.div RNE (fp.mul RNE x0 x11) (fp.mul RNE x6 x17)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.div RNE x14 x12) (fp.mul RNE x6 x8))) (fp.add RNE (fp.add RNE (fp.add RNE x2 x16) (fp.sub RNE x12 x16)) (fp.add RNE (fp.mul RNE x16 x4) (fp.neg x5)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.neg x2) (fp.sub RNE x14 x1)) (fp.add RNE (fp.add RNE x13 x3) (fp.neg x8))) (fp.neg (fp.neg (fp.add RNE x1 x1)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x10) (fp.mul RNE x1 x13)) (fp.neg (fp.neg x14))) (fp.sub RNE (fp.add RNE (fp.div RNE x7 x1) (fp.mul RNE x10 x1)) (fp.add RNE (fp.div RNE x17 x1) (fp.sub RNE x6 x15)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE x8 x7) (fp.mul RNE x9 x5)) (fp.mul RNE (fp.div RNE x6 x2) (fp.mul RNE x2 x6))) (fp.neg (fp.div RNE (fp.neg x5) (fp.add RNE x1 x1)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.div RNE x4 x8) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x12 x10) (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.neg x9) (fp.div RNE x17 x5)) (fp.sub RNE (fp.sub RNE x17 x14) (fp.neg x12)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x13) (fp.sub RNE x12 x7)) (fp.neg (fp.sub RNE x9 x8))) (fp.div RNE (fp.add RNE (fp.div RNE x15 x11) (fp.div RNE x16 x1)) (fp.sub RNE (fp.add RNE x3 x11) (fp.mul RNE x9 x5)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x9 x4) (fp.div RNE x12 x6)) (fp.div RNE (fp.sub RNE x6 x1) (fp.neg x6))) (fp.mul RNE (fp.add RNE (fp.sub RNE x12 x10) (fp.add RNE x10 x16)) (fp.neg (fp.sub RNE x9 x6)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x9 x12) (fp.neg x15)) (fp.neg (fp.mul RNE x0 x4))) (fp.neg (fp.mul RNE (fp.div RNE x8 x12) (fp.add RNE x8 x1)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.mul RNE x8 x5) (fp.mul RNE x3 x10)) (fp.mul RNE (fp.div RNE x1 x9) (fp.neg x5))) (fp.add RNE (fp.sub RNE (fp.div RNE x9 x16) (fp.add RNE x13 x5)) (fp.mul RNE (fp.sub RNE x14 x14) (fp.mul RNE x5 x1)))))
(check-sat)
