(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg (fp.add RNE x1 x3)) (fp.add RNE (fp.neg x5) (fp.mul RNE x5 x2))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x2) (fp.div RNE x0 x1)) (fp.neg (fp.add RNE x0 x2)))) (fp.add RNE (fp.neg (fp.neg (fp.div RNE x4 x1))) (fp.div RNE (fp.neg (fp.add RNE x1 x4)) (fp.mul RNE (fp.div RNE x2 x2) (fp.mul RNE x1 x4))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.add RNE (fp.div RNE x1 x0) (fp.mul RNE x5 x4)) (fp.div RNE (fp.add RNE x3 x3) (fp.neg x3))) (fp.add RNE (fp.div RNE (fp.sub RNE x3 x0) (fp.mul RNE x3 x0)) (fp.sub RNE (fp.sub RNE x2 x1) (fp.mul RNE x3 x4)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.neg x5) (fp.div RNE x1 x1))) (fp.add RNE (fp.neg (fp.neg x1)) (fp.neg (fp.div RNE x0 x2))))))
(check-sat)
