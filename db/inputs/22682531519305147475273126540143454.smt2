(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.neg x8) (fp.add RNE x9 x9)) (fp.neg (fp.neg x2))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x16)) (fp.sub RNE (fp.mul RNE x15 x12) (fp.div RNE x15 x0))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x9 x17) (fp.div RNE x8 x0)) (fp.add RNE (fp.sub RNE x18 x9) (fp.mul RNE x12 x13))))
(assert (fp.geq (fp.div RNE (fp.div RNE x19 x3) (fp.add RNE x2 x18)) (fp.mul RNE (fp.add RNE x9 x1) (fp.sub RNE x5 x8))))
(check-sat)
