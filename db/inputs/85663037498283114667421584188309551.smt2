(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE x4 x3) (fp.sub RNE x3 x3)) (fp.neg (fp.div RNE x5 x3))) (fp.neg (fp.add RNE (fp.add RNE x1 x3) (fp.add RNE x10 x0)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE x5 x2) (fp.neg x0)) (fp.add RNE (fp.sub RNE x1 x12) (fp.sub RNE x13 x12))) (fp.neg (fp.neg (fp.div RNE x7 x6)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x8 x10)) (fp.sub RNE (fp.div RNE x6 x9) (fp.div RNE x8 x10))) (fp.add RNE (fp.add RNE (fp.mul RNE x6 x6) (fp.sub RNE x0 x4)) (fp.add RNE (fp.add RNE x7 x13) (fp.mul RNE x5 x8)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x3) (fp.neg x0)) (fp.mul RNE (fp.neg x8) (fp.mul RNE x2 x13))) (fp.add RNE (fp.mul RNE (fp.sub RNE x5 x8) (fp.sub RNE x0 x6)) (fp.mul RNE (fp.div RNE x3 x10) (fp.sub RNE x4 x13)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.mul RNE x2 x11) (fp.add RNE x12 x2))) (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x8) (fp.neg x5)) (fp.div RNE (fp.div RNE x3 x0) (fp.div RNE x4 x11)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x1 x0)) (fp.neg (fp.add RNE x6 x4))) (fp.neg (fp.mul RNE (fp.neg x9) (fp.sub RNE x9 x8)))))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE x4 x1))) (fp.sub RNE (fp.mul RNE (fp.add RNE x7 x6) (fp.div RNE x13 x1)) (fp.div RNE (fp.add RNE x2 x9) (fp.div RNE x13 x3)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE x2 x5) (fp.sub RNE x8 x3))) (fp.add RNE (fp.add RNE (fp.div RNE x6 x6) (fp.div RNE x5 x6)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x13 x3)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x11 x1) (fp.div RNE x1 x2)) (fp.add RNE (fp.mul RNE x4 x10) (fp.add RNE x6 x11))) (fp.add RNE (fp.add RNE (fp.sub RNE x10 x5) (fp.mul RNE x0 x0)) (fp.mul RNE (fp.add RNE x2 x12) (fp.add RNE x6 x12)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x11 x13) (fp.mul RNE x13 x9))) (fp.sub RNE (fp.add RNE (fp.add RNE x9 x8) (fp.add RNE x4 x8)) (fp.sub RNE (fp.sub RNE x12 x11) (fp.sub RNE x0 x9)))))
(check-sat)
