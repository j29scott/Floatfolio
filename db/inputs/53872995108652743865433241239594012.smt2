(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.neg x2) (fp.add RNE x7 x7)) (fp.neg (fp.mul RNE x4 x4))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x5 x1) (fp.neg x2)) (fp.mul RNE (fp.div RNE x2 x4) (fp.sub RNE x4 x3))))
(assert (fp.eq (fp.add RNE (fp.add RNE x7 x5) (fp.mul RNE x2 x4)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x6 x4))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x0 x4) (fp.mul RNE x1 x5)) (fp.mul RNE (fp.div RNE x6 x4) (fp.mul RNE x2 x2))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x0 x0) (fp.sub RNE x4 x6)) (fp.div RNE (fp.sub RNE x1 x5) (fp.neg x4))))
(assert (fp.leq (fp.div RNE (fp.neg x1) (fp.div RNE x2 x6)) (fp.neg (fp.mul RNE x0 x0))))
(check-sat)
