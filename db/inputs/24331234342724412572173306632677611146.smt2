(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.add RNE x14 x0)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x4 x12))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x8 x10) (fp.div RNE x7 x3)) (fp.div RNE (fp.add RNE x16 x0) (fp.div RNE x5 x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x7 x10) (fp.sub RNE x7 x3)) (fp.mul RNE (fp.neg x7) (fp.div RNE x5 x15))))
(assert (fp.lt (fp.add RNE (fp.neg x6) (fp.mul RNE x0 x6)) (fp.div RNE (fp.sub RNE x10 x13) (fp.sub RNE x9 x0))))
(assert (fp.leq (fp.sub RNE (fp.neg x10) (fp.add RNE x1 x12)) (fp.add RNE (fp.mul RNE x13 x15) (fp.sub RNE x3 x3))))
(assert (fp.geq (fp.div RNE (fp.add RNE x11 x1) (fp.sub RNE x14 x5)) (fp.sub RNE (fp.neg x0) (fp.neg x13))))
(assert (fp.leq (fp.div RNE (fp.add RNE x6 x2) (fp.sub RNE x8 x14)) (fp.neg (fp.neg x2))))
(check-sat)
