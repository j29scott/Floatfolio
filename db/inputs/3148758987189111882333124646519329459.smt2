(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x5 x9) (fp.neg x6)) (fp.neg (fp.neg x1))) (fp.div RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.add RNE x9 x2) (fp.neg x5)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.add RNE x0 x9) (fp.neg x7)) (fp.mul RNE (fp.mul RNE x8 x9) (fp.sub RNE x1 x4))) (fp.add RNE (fp.neg (fp.add RNE x0 x1)) (fp.sub RNE (fp.div RNE x3 x0) (fp.div RNE x5 x0)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x8 x2) (fp.mul RNE x3 x3))) (fp.neg (fp.add RNE (fp.sub RNE x9 x1) (fp.add RNE x2 x6)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE x6 x0) (fp.mul RNE x8 x5))) (fp.neg (fp.mul RNE (fp.neg x6) (fp.div RNE x8 x6)))))
(check-sat)
