(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE x0 x7) (fp.sub RNE x4 x13))) (fp.div RNE (fp.div RNE (fp.sub RNE x12 x2) (fp.sub RNE x5 x5)) (fp.mul RNE (fp.sub RNE x3 x5) (fp.neg x1)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x6 x5) (fp.div RNE x12 x1)) (fp.sub RNE (fp.div RNE x7 x6) (fp.add RNE x9 x15))) (fp.mul RNE (fp.div RNE (fp.neg x15) (fp.add RNE x0 x4)) (fp.sub RNE (fp.sub RNE x15 x11) (fp.add RNE x14 x15)))))
(check-sat)
