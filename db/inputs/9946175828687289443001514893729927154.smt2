(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.add RNE x0 x11) (fp.add RNE x17 x25)) (fp.mul RNE (fp.sub RNE x22 x8) (fp.sub RNE x15 x23))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x12 x18) (fp.sub RNE x21 x23)) (fp.mul RNE (fp.sub RNE x8 x5) (fp.add RNE x18 x26))))
(assert (fp.lt (fp.div RNE (fp.neg x16) (fp.div RNE x9 x22)) (fp.add RNE (fp.div RNE x21 x11) (fp.sub RNE x5 x8))))
(assert (fp.geq (fp.neg (fp.div RNE x24 x2)) (fp.sub RNE (fp.mul RNE x11 x13) (fp.sub RNE x1 x13))))
(assert (fp.eq (fp.add RNE (fp.add RNE x8 x21) (fp.neg x25)) (fp.neg (fp.neg x13))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x6 x9) (fp.div RNE x20 x3)) (fp.sub RNE (fp.neg x26) (fp.div RNE x4 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x2 x16) (fp.div RNE x21 x11)) (fp.sub RNE (fp.sub RNE x10 x23) (fp.neg x10))))
(assert (fp.eq (fp.neg (fp.sub RNE x6 x11)) (fp.add RNE (fp.mul RNE x3 x19) (fp.mul RNE x17 x12))))
(assert (fp.eq (fp.neg (fp.add RNE x21 x23)) (fp.add RNE (fp.neg x11) (fp.sub RNE x21 x8))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x25 x24) (fp.neg x5)) (fp.sub RNE (fp.add RNE x20 x13) (fp.add RNE x14 x18))))
(assert (fp.gt (fp.add RNE (fp.neg x11) (fp.neg x2)) (fp.sub RNE (fp.add RNE x17 x15) (fp.div RNE x6 x7))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x5 x16) (fp.sub RNE x3 x2)) (fp.mul RNE (fp.mul RNE x21 x2) (fp.add RNE x25 x25))))
(assert (fp.eq (fp.neg (fp.mul RNE x8 x24)) (fp.sub RNE (fp.mul RNE x15 x4) (fp.sub RNE x12 x19))))
(assert (fp.geq (fp.neg (fp.mul RNE x23 x4)) (fp.mul RNE (fp.mul RNE x15 x7) (fp.div RNE x3 x4))))
(check-sat)
