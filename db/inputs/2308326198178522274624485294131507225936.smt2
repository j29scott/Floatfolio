(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE x24 x7) (fp.mul RNE x1 x21)) (fp.add RNE (fp.mul RNE x10 x4) (fp.add RNE x16 x24))) (fp.add RNE (fp.sub RNE (fp.add RNE x5 x19) (fp.sub RNE x7 x16)) (fp.add RNE (fp.add RNE x21 x4) (fp.mul RNE x10 x7)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.mul RNE x17 x19) (fp.add RNE x5 x20)) (fp.mul RNE (fp.div RNE x10 x2) (fp.add RNE x13 x1))) (fp.div RNE (fp.div RNE (fp.div RNE x0 x24) (fp.sub RNE x20 x12)) (fp.div RNE (fp.sub RNE x22 x22) (fp.sub RNE x5 x22)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.add RNE x19 x21) (fp.sub RNE x20 x13)) (fp.neg (fp.sub RNE x8 x6))) (fp.sub RNE (fp.add RNE (fp.sub RNE x14 x12) (fp.add RNE x13 x19)) (fp.neg (fp.mul RNE x1 x20)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x24 x22) (fp.neg x2)) (fp.sub RNE (fp.sub RNE x1 x16) (fp.mul RNE x12 x22))) (fp.add RNE (fp.add RNE (fp.add RNE x9 x19) (fp.sub RNE x16 x3)) (fp.add RNE (fp.div RNE x5 x11) (fp.add RNE x1 x7)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.neg x20) (fp.mul RNE x23 x3)) (fp.sub RNE (fp.add RNE x23 x17) (fp.mul RNE x6 x7))) (fp.neg (fp.neg (fp.div RNE x2 x10)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x12 x14) (fp.mul RNE x18 x11))) (fp.add RNE (fp.div RNE (fp.neg x17) (fp.add RNE x5 x19)) (fp.sub RNE (fp.div RNE x12 x12) (fp.div RNE x5 x21)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE x5 x16) (fp.neg x10)) (fp.mul RNE (fp.add RNE x14 x13) (fp.div RNE x17 x14))) (fp.add RNE (fp.neg (fp.neg x7)) (fp.mul RNE (fp.sub RNE x9 x11) (fp.mul RNE x10 x5)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x3) (fp.neg x17)) (fp.div RNE (fp.neg x22) (fp.mul RNE x4 x15))) (fp.sub RNE (fp.sub RNE (fp.add RNE x18 x3) (fp.add RNE x5 x8)) (fp.mul RNE (fp.neg x20) (fp.add RNE x12 x23)))))
(check-sat)
