(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x9 x0) (fp.mul RNE x19 x5)) (fp.div RNE (fp.div RNE x3 x3) (fp.neg x3))) (fp.div RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x15 x18)) (fp.add RNE (fp.add RNE x0 x13) (fp.mul RNE x8 x0)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x18 x9) (fp.add RNE x16 x16)) (fp.mul RNE (fp.div RNE x10 x5) (fp.sub RNE x8 x13))) (fp.add RNE (fp.neg (fp.sub RNE x14 x0)) (fp.div RNE (fp.sub RNE x8 x11) (fp.sub RNE x10 x2)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.div RNE x0 x4) (fp.mul RNE x6 x0)) (fp.neg (fp.mul RNE x16 x0))) (fp.add RNE (fp.neg (fp.neg x17)) (fp.neg (fp.neg x10)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x18 x8) (fp.add RNE x1 x12)) (fp.sub RNE (fp.sub RNE x9 x6) (fp.sub RNE x18 x2))) (fp.add RNE (fp.sub RNE (fp.neg x18) (fp.sub RNE x5 x10)) (fp.add RNE (fp.div RNE x13 x11) (fp.mul RNE x17 x7)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x18 x4)) (fp.neg (fp.div RNE x11 x11))) (fp.neg (fp.div RNE (fp.div RNE x15 x2) (fp.sub RNE x1 x12)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x13 x11) (fp.div RNE x2 x13)) (fp.mul RNE (fp.sub RNE x5 x2) (fp.mul RNE x5 x8))) (fp.add RNE (fp.div RNE (fp.div RNE x7 x4) (fp.mul RNE x6 x9)) (fp.add RNE (fp.sub RNE x17 x6) (fp.sub RNE x6 x18)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x0) (fp.div RNE x5 x16)) (fp.sub RNE (fp.neg x8) (fp.add RNE x3 x3))) (fp.mul RNE (fp.add RNE (fp.neg x16) (fp.neg x0)) (fp.sub RNE (fp.neg x11) (fp.sub RNE x2 x15)))))
(check-sat)
