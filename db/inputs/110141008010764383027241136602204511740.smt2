(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.mul RNE x9 x3)) (fp.mul RNE (fp.neg x3) (fp.neg x12))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x2 x17) (fp.sub RNE x12 x5)) (fp.add RNE (fp.neg x9) (fp.mul RNE x6 x6))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x17 x11) (fp.sub RNE x12 x3)) (fp.sub RNE (fp.mul RNE x3 x4) (fp.add RNE x4 x4))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x12 x10) (fp.mul RNE x1 x1)) (fp.add RNE (fp.sub RNE x4 x6) (fp.div RNE x2 x8))))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.add RNE x15 x16)) (fp.sub RNE (fp.mul RNE x15 x17) (fp.div RNE x2 x10))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x8 x1) (fp.div RNE x9 x0)) (fp.sub RNE (fp.neg x15) (fp.neg x4))))
(check-sat)
