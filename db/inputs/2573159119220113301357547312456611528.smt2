(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x4) (fp.add RNE x13 x13)) (fp.neg (fp.sub RNE x13 x2))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x1 x9) (fp.neg x13)) (fp.mul RNE (fp.div RNE x7 x4) (fp.add RNE x1 x3))))
(assert (fp.gt (fp.neg (fp.mul RNE x9 x11)) (fp.mul RNE (fp.div RNE x11 x1) (fp.div RNE x4 x1))))
(assert (fp.leq (fp.neg (fp.div RNE x13 x12)) (fp.mul RNE (fp.neg x10) (fp.mul RNE x12 x9))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x2) (fp.neg x11)) (fp.sub RNE (fp.add RNE x1 x6) (fp.add RNE x3 x5))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x9 x10) (fp.mul RNE x7 x10)) (fp.add RNE (fp.add RNE x1 x9) (fp.neg x4))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x3 x9) (fp.sub RNE x11 x7)) (fp.div RNE (fp.sub RNE x0 x2) (fp.mul RNE x11 x3))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x0 x1) (fp.div RNE x9 x8)) (fp.neg (fp.sub RNE x7 x1))))
(check-sat)
