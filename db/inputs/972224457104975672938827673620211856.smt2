(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.add RNE x12 x1) (fp.neg x15)) (fp.sub RNE (fp.add RNE x3 x15) (fp.mul RNE x5 x9))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x17 x11) (fp.div RNE x15 x11)) (fp.mul RNE (fp.add RNE x8 x3) (fp.neg x5))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x15 x16) (fp.div RNE x10 x12)) (fp.div RNE (fp.div RNE x1 x3) (fp.sub RNE x1 x1))))
(assert (fp.eq (fp.div RNE (fp.div RNE x17 x5) (fp.mul RNE x0 x10)) (fp.neg (fp.add RNE x11 x0))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x13 x6) (fp.div RNE x11 x17)) (fp.sub RNE (fp.neg x9) (fp.div RNE x3 x17))))
(assert (fp.leq (fp.neg (fp.mul RNE x9 x19)) (fp.neg (fp.add RNE x4 x10))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x2 x11) (fp.sub RNE x7 x3)) (fp.sub RNE (fp.sub RNE x2 x11) (fp.add RNE x5 x4))))
(assert (fp.gt (fp.div RNE (fp.add RNE x17 x11) (fp.sub RNE x10 x4)) (fp.neg (fp.neg x16))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x16 x4) (fp.neg x2)) (fp.sub RNE (fp.add RNE x9 x2) (fp.div RNE x16 x11))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x9 x5) (fp.mul RNE x13 x14)) (fp.neg (fp.add RNE x15 x14))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x14 x13) (fp.sub RNE x18 x9)) (fp.neg (fp.add RNE x0 x3))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x14 x13) (fp.add RNE x18 x5)) (fp.add RNE (fp.mul RNE x11 x15) (fp.div RNE x3 x14))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x0 x5) (fp.div RNE x12 x11)) (fp.add RNE (fp.add RNE x3 x15) (fp.add RNE x14 x7))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x8 x10) (fp.add RNE x6 x2)) (fp.neg (fp.add RNE x1 x3))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x17 x19) (fp.mul RNE x19 x14)) (fp.add RNE (fp.div RNE x1 x6) (fp.neg x15))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x17 x17) (fp.add RNE x0 x6)) (fp.neg (fp.add RNE x19 x15))))
(assert (fp.gt (fp.mul RNE (fp.neg x19) (fp.sub RNE x3 x13)) (fp.mul RNE (fp.neg x5) (fp.div RNE x18 x1))))
(check-sat)
