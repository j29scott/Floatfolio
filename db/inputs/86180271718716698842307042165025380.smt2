(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE x4 x10) (fp.neg x5)) (fp.add RNE (fp.add RNE x1 x10) (fp.div RNE x3 x0))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x13 x10) (fp.mul RNE x3 x12)) (fp.div RNE (fp.neg x5) (fp.div RNE x3 x12))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x11 x10) (fp.neg x4)) (fp.add RNE (fp.mul RNE x12 x3) (fp.div RNE x3 x12))))
(assert (fp.geq (fp.neg (fp.mul RNE x1 x11)) (fp.mul RNE (fp.sub RNE x2 x0) (fp.mul RNE x11 x0))))
(assert (fp.gt (fp.neg (fp.mul RNE x9 x2)) (fp.sub RNE (fp.neg x12) (fp.add RNE x11 x11))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x8 x9) (fp.neg x11)) (fp.sub RNE (fp.neg x1) (fp.neg x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x0 x5) (fp.neg x3)) (fp.div RNE (fp.sub RNE x1 x12) (fp.sub RNE x3 x3))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x10 x11) (fp.neg x6)) (fp.sub RNE (fp.add RNE x5 x8) (fp.sub RNE x3 x0))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x1 x7) (fp.sub RNE x9 x9)) (fp.neg (fp.add RNE x4 x8))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x7 x5) (fp.sub RNE x2 x8)) (fp.add RNE (fp.div RNE x8 x1) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x0 x0) (fp.sub RNE x4 x10)) (fp.mul RNE (fp.sub RNE x7 x7) (fp.mul RNE x3 x1))))
(assert (fp.leq (fp.add RNE (fp.add RNE x6 x9) (fp.neg x10)) (fp.mul RNE (fp.neg x3) (fp.neg x4))))
(check-sat)
