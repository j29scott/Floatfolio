(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE x3 x6) (fp.mul RNE x6 x1))) (fp.sub RNE (fp.mul RNE (fp.div RNE x15 x11) (fp.div RNE x15 x14)) (fp.sub RNE (fp.add RNE x4 x14) (fp.div RNE x1 x2)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.sub RNE x1 x11) (fp.add RNE x4 x10)) (fp.neg (fp.div RNE x6 x2))) (fp.div RNE (fp.add RNE (fp.add RNE x5 x12) (fp.mul RNE x1 x3)) (fp.neg (fp.sub RNE x5 x2)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x5 x10) (fp.neg x15)) (fp.neg (fp.sub RNE x2 x2))) (fp.add RNE (fp.div RNE (fp.sub RNE x10 x14) (fp.div RNE x14 x2)) (fp.add RNE (fp.neg x5) (fp.mul RNE x11 x4)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.div RNE x1 x1) (fp.div RNE x10 x11)) (fp.mul RNE (fp.mul RNE x15 x12) (fp.mul RNE x0 x0))) (fp.sub RNE (fp.add RNE (fp.neg x2) (fp.sub RNE x6 x1)) (fp.mul RNE (fp.neg x15) (fp.add RNE x3 x10)))))
(check-sat)
