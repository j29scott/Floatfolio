(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x2 x6) (fp.add RNE x4 x9)) (fp.sub RNE (fp.neg x3) (fp.div RNE x3 x12))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x11) (fp.neg x5)) (fp.add RNE (fp.mul RNE x3 x8) (fp.mul RNE x10 x2)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x4 x2) (fp.neg x10))) (fp.add RNE (fp.sub RNE (fp.div RNE x7 x12) (fp.sub RNE x3 x10)) (fp.add RNE (fp.mul RNE x8 x3) (fp.div RNE x12 x9)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x6) (fp.mul RNE x7 x1)) (fp.mul RNE (fp.div RNE x9 x11) (fp.add RNE x5 x1))) (fp.add RNE (fp.add RNE (fp.sub RNE x8 x11) (fp.neg x2)) (fp.neg (fp.sub RNE x1 x11)))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg x8))) (fp.neg (fp.add RNE (fp.div RNE x3 x11) (fp.div RNE x2 x7)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x6 x11) (fp.neg x10))) (fp.neg (fp.sub RNE (fp.add RNE x1 x12) (fp.sub RNE x12 x11)))))
(check-sat)
