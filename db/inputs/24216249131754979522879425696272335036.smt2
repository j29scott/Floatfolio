(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x3) (fp.add RNE x0 x11)))
(assert (fp.gt (fp.neg x6) (fp.mul RNE x10 x0)))
(assert (fp.gt (fp.add RNE x12 x4) (fp.add RNE x11 x3)))
(assert (fp.gt (fp.div RNE x3 x2) (fp.mul RNE x4 x12)))
(assert (fp.leq (fp.mul RNE x8 x9) (fp.neg x3)))
(assert (fp.lt (fp.mul RNE x10 x11) (fp.sub RNE x11 x10)))
(assert (fp.gt (fp.sub RNE x1 x1) (fp.div RNE x8 x4)))
(assert (fp.eq (fp.mul RNE x12 x3) (fp.sub RNE x1 x0)))
(assert (fp.lt (fp.div RNE x7 x1) (fp.div RNE x4 x11)))
(assert (fp.gt (fp.mul RNE x12 x10) (fp.neg x9)))
(assert (fp.lt (fp.neg x2) (fp.neg x2)))
(assert (fp.eq (fp.add RNE x9 x7) (fp.div RNE x8 x2)))
(check-sat)
