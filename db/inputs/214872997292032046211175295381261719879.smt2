(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x12 x19) (fp.sub RNE x12 x7))) (fp.mul RNE (fp.div RNE (fp.div RNE x13 x5) (fp.mul RNE x10 x12)) (fp.add RNE (fp.sub RNE x8 x6) (fp.sub RNE x2 x2)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x16))) (fp.sub RNE (fp.neg (fp.mul RNE x10 x7)) (fp.mul RNE (fp.neg x9) (fp.mul RNE x10 x3)))))
(check-sat)
