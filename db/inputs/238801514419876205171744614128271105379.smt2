(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE x9 x9) (fp.neg x11)))
(assert (fp.leq (fp.mul RNE x8 x1) (fp.sub RNE x10 x3)))
(assert (fp.gt (fp.sub RNE x1 x1) (fp.neg x2)))
(assert (fp.gt (fp.mul RNE x3 x11) (fp.add RNE x2 x0)))
(assert (fp.geq (fp.sub RNE x6 x1) (fp.div RNE x7 x3)))
(assert (fp.leq (fp.add RNE x9 x8) (fp.div RNE x7 x1)))
(assert (fp.leq (fp.mul RNE x7 x11) (fp.sub RNE x3 x3)))
(assert (fp.lt (fp.neg x7) (fp.sub RNE x4 x7)))
(assert (fp.gt (fp.add RNE x11 x0) (fp.mul RNE x2 x3)))
(assert (fp.geq (fp.mul RNE x8 x1) (fp.mul RNE x11 x0)))
(assert (fp.eq (fp.add RNE x1 x2) (fp.mul RNE x2 x7)))
(assert (fp.gt (fp.div RNE x3 x3) (fp.div RNE x3 x8)))
(assert (fp.gt (fp.sub RNE x1 x5) (fp.sub RNE x11 x6)))
(assert (fp.lt (fp.sub RNE x6 x6) (fp.sub RNE x6 x2)))
(assert (fp.eq (fp.neg x2) (fp.mul RNE x3 x11)))
(check-sat)
