(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.neg x4) (fp.add RNE x6 x7)) (fp.neg (fp.add RNE x12 x9))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x12 x8) (fp.add RNE x1 x8)) (fp.mul RNE (fp.neg x12) (fp.mul RNE x9 x5))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x4 x2) (fp.mul RNE x3 x0)) (fp.sub RNE (fp.sub RNE x0 x12) (fp.mul RNE x1 x12))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x12 x2) (fp.div RNE x14 x6)) (fp.div RNE (fp.sub RNE x4 x6) (fp.mul RNE x6 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x12 x12)) (fp.neg (fp.neg x3))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x10 x5))))
(check-sat)
