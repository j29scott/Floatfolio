(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.sub RNE x9 x16) (fp.add RNE x18 x18)) (fp.add RNE (fp.mul RNE x18 x10) (fp.neg x7))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x13 x19) (fp.mul RNE x17 x12)) (fp.mul RNE (fp.mul RNE x14 x4) (fp.mul RNE x5 x2))))
(assert (fp.leq (fp.neg (fp.neg x11)) (fp.mul RNE (fp.neg x5) (fp.div RNE x1 x6))))
(assert (fp.eq (fp.div RNE (fp.div RNE x14 x18) (fp.mul RNE x4 x11)) (fp.mul RNE (fp.sub RNE x7 x6) (fp.sub RNE x8 x14))))
(assert (fp.eq (fp.sub RNE (fp.neg x5) (fp.mul RNE x7 x4)) (fp.add RNE (fp.add RNE x16 x17) (fp.neg x1))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x0 x6) (fp.div RNE x13 x18)) (fp.add RNE (fp.sub RNE x5 x1) (fp.neg x18))))
(assert (fp.eq (fp.add RNE (fp.div RNE x19 x16) (fp.neg x6)) (fp.div RNE (fp.add RNE x6 x11) (fp.neg x2))))
(check-sat)
