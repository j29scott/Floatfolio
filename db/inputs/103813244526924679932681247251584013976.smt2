(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.neg x9) (fp.add RNE x7 x14)) (fp.sub RNE (fp.sub RNE x14 x4) (fp.add RNE x4 x4))) (fp.mul RNE (fp.neg (fp.div RNE x12 x13)) (fp.mul RNE (fp.sub RNE x6 x19) (fp.mul RNE x23 x20)))) (fp.neg (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x1) (fp.div RNE x25 x13)) (fp.div RNE (fp.div RNE x23 x11) (fp.sub RNE x15 x6))))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE (fp.add RNE x8 x20) (fp.mul RNE x6 x7)))) (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x10 x12) (fp.neg x17))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg (fp.sub RNE x15 x25)) (fp.div RNE (fp.add RNE x14 x18) (fp.neg x8)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x23 x1) (fp.mul RNE x22 x7)) (fp.neg (fp.div RNE x6 x16))) (fp.add RNE (fp.mul RNE (fp.add RNE x5 x21) (fp.div RNE x9 x3)) (fp.div RNE (fp.div RNE x20 x6) (fp.mul RNE x24 x9))))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x4 x19) (fp.mul RNE x20 x21)) (fp.add RNE (fp.add RNE x15 x5) (fp.add RNE x16 x17))) (fp.mul RNE (fp.sub RNE (fp.add RNE x5 x2) (fp.neg x16)) (fp.div RNE (fp.add RNE x22 x1) (fp.sub RNE x1 x1)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x16 x19) (fp.div RNE x4 x4)) (fp.add RNE (fp.sub RNE x20 x10) (fp.div RNE x17 x10))) (fp.div RNE (fp.mul RNE (fp.sub RNE x3 x25) (fp.sub RNE x1 x8)) (fp.add RNE (fp.add RNE x18 x15) (fp.mul RNE x17 x15))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x5 x20)) (fp.div RNE (fp.neg x23) (fp.add RNE x5 x5)))) (fp.neg (fp.add RNE (fp.neg (fp.add RNE x8 x1)) (fp.div RNE (fp.div RNE x1 x16) (fp.div RNE x14 x16))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE (fp.div RNE x0 x6) (fp.div RNE x15 x0))) (fp.mul RNE (fp.neg (fp.neg x7)) (fp.sub RNE (fp.div RNE x10 x7) (fp.sub RNE x3 x14)))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x7 x11) (fp.div RNE x12 x22)) (fp.neg (fp.neg x23))) (fp.neg (fp.add RNE (fp.sub RNE x13 x19) (fp.mul RNE x25 x10))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.mul RNE (fp.add RNE x0 x22) (fp.neg x4)) (fp.sub RNE (fp.mul RNE x9 x2) (fp.mul RNE x22 x20)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x2 x16) (fp.add RNE x0 x18)) (fp.sub RNE (fp.mul RNE x9 x9) (fp.neg x10))) (fp.neg (fp.sub RNE (fp.neg x12) (fp.div RNE x3 x17))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.add RNE x16 x6) (fp.mul RNE x10 x9)) (fp.neg (fp.mul RNE x5 x10))) (fp.div RNE (fp.div RNE (fp.div RNE x12 x13) (fp.neg x9)) (fp.sub RNE (fp.add RNE x23 x8) (fp.sub RNE x3 x12)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x22 x14) (fp.mul RNE x22 x10)) (fp.div RNE (fp.div RNE x13 x8) (fp.neg x22))) (fp.sub RNE (fp.neg (fp.add RNE x10 x13)) (fp.sub RNE (fp.mul RNE x8 x14) (fp.mul RNE x1 x8))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x15)) (fp.add RNE (fp.div RNE x23 x8) (fp.mul RNE x1 x21))) (fp.sub RNE (fp.div RNE (fp.div RNE x11 x15) (fp.mul RNE x10 x9)) (fp.div RNE (fp.mul RNE x17 x15) (fp.mul RNE x7 x4)))) (fp.div RNE (fp.neg (fp.neg (fp.sub RNE x8 x20))) (fp.neg (fp.add RNE (fp.add RNE x15 x8) (fp.add RNE x3 x16))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x23) (fp.add RNE x20 x3)) (fp.mul RNE (fp.mul RNE x12 x6) (fp.sub RNE x10 x12))) (fp.sub RNE (fp.neg (fp.div RNE x15 x25)) (fp.div RNE (fp.neg x1) (fp.add RNE x24 x23)))) (fp.add RNE (fp.div RNE (fp.div RNE (fp.add RNE x10 x22) (fp.mul RNE x0 x25)) (fp.sub RNE (fp.add RNE x9 x17) (fp.div RNE x4 x9))) (fp.neg (fp.div RNE (fp.neg x16) (fp.neg x15))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.add RNE x25 x5) (fp.mul RNE x24 x4)) (fp.mul RNE (fp.mul RNE x16 x23) (fp.mul RNE x3 x10))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x20 x2) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x19 x8) (fp.neg x20)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x10 x19) (fp.sub RNE x19 x16)) (fp.sub RNE (fp.div RNE x3 x15) (fp.div RNE x22 x2))) (fp.mul RNE (fp.add RNE (fp.mul RNE x20 x15) (fp.div RNE x22 x21)) (fp.sub RNE (fp.sub RNE x23 x3) (fp.sub RNE x8 x25))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE (fp.sub RNE x20 x11) (fp.add RNE x4 x0)) (fp.neg (fp.div RNE x19 x3)))) (fp.neg (fp.neg (fp.sub RNE (fp.div RNE x4 x25) (fp.add RNE x14 x9))))))
(check-sat)
