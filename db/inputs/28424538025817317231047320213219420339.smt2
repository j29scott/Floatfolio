(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE x2 x17) (fp.neg x10)) (fp.sub RNE (fp.sub RNE x13 x0) (fp.neg x16))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x10 x11) (fp.neg x7)) (fp.neg (fp.div RNE x8 x3))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x4 x21) (fp.mul RNE x3 x13)) (fp.mul RNE (fp.div RNE x10 x22) (fp.add RNE x18 x13))))
(assert (fp.gt (fp.sub RNE (fp.neg x13) (fp.sub RNE x15 x21)) (fp.neg (fp.sub RNE x10 x3))))
(assert (fp.geq (fp.neg (fp.mul RNE x5 x10)) (fp.neg (fp.neg x1))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x21 x1) (fp.add RNE x22 x19)) (fp.sub RNE (fp.add RNE x20 x22) (fp.add RNE x8 x0))))
(assert (fp.gt (fp.neg (fp.sub RNE x17 x9)) (fp.sub RNE (fp.mul RNE x20 x3) (fp.div RNE x8 x14))))
(assert (fp.geq (fp.div RNE (fp.neg x7) (fp.mul RNE x19 x3)) (fp.div RNE (fp.mul RNE x13 x18) (fp.div RNE x7 x4))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x15 x14) (fp.add RNE x22 x4)) (fp.neg (fp.div RNE x3 x13))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x13 x10) (fp.sub RNE x21 x3)) (fp.add RNE (fp.neg x20) (fp.sub RNE x22 x14))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x8 x12) (fp.mul RNE x16 x16)) (fp.sub RNE (fp.mul RNE x4 x2) (fp.div RNE x12 x6))))
(assert (fp.lt (fp.div RNE (fp.neg x20) (fp.add RNE x1 x3)) (fp.add RNE (fp.add RNE x16 x14) (fp.sub RNE x13 x12))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x16 x15) (fp.mul RNE x2 x16)) (fp.sub RNE (fp.add RNE x17 x16) (fp.mul RNE x22 x5))))
(assert (fp.lt (fp.neg (fp.sub RNE x1 x14)) (fp.mul RNE (fp.add RNE x0 x0) (fp.add RNE x15 x11))))
(assert (fp.leq (fp.div RNE (fp.add RNE x14 x16) (fp.add RNE x7 x17)) (fp.add RNE (fp.add RNE x10 x17) (fp.div RNE x10 x6))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x9 x13) (fp.sub RNE x2 x3)) (fp.div RNE (fp.div RNE x0 x9) (fp.neg x17))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x0 x22) (fp.div RNE x12 x12)) (fp.mul RNE (fp.div RNE x15 x22) (fp.add RNE x4 x18))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x11 x10) (fp.add RNE x16 x18)) (fp.mul RNE (fp.neg x21) (fp.mul RNE x22 x10))))
(assert (fp.gt (fp.neg (fp.div RNE x7 x13)) (fp.sub RNE (fp.div RNE x13 x5) (fp.sub RNE x22 x14))))
(check-sat)
