(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x19 x0) (fp.neg x9)) (fp.add RNE (fp.neg x20) (fp.mul RNE x5 x2))) (fp.mul RNE (fp.add RNE (fp.neg x21) (fp.div RNE x18 x2)) (fp.mul RNE (fp.mul RNE x16 x22) (fp.sub RNE x16 x14)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x3 x11) (fp.div RNE x4 x10)) (fp.div RNE (fp.div RNE x0 x13) (fp.sub RNE x19 x10))) (fp.div RNE (fp.sub RNE (fp.div RNE x12 x13) (fp.add RNE x15 x15)) (fp.mul RNE (fp.mul RNE x16 x17) (fp.div RNE x14 x1)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x7 x13) (fp.sub RNE x8 x3)) (fp.sub RNE (fp.mul RNE x23 x12) (fp.add RNE x11 x20))) (fp.div RNE (fp.sub RNE (fp.div RNE x5 x10) (fp.div RNE x11 x12)) (fp.neg (fp.div RNE x1 x11)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x13 x11) (fp.div RNE x22 x16)) (fp.neg (fp.sub RNE x21 x9))) (fp.add RNE (fp.neg (fp.div RNE x12 x11)) (fp.add RNE (fp.div RNE x17 x10) (fp.neg x13)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg x13)) (fp.div RNE (fp.sub RNE x16 x8) (fp.mul RNE x5 x8))) (fp.add RNE (fp.sub RNE (fp.neg x8) (fp.neg x4)) (fp.mul RNE (fp.neg x11) (fp.neg x14)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x3 x18) (fp.div RNE x21 x9)) (fp.add RNE (fp.mul RNE x13 x0) (fp.div RNE x14 x1))) (fp.mul RNE (fp.div RNE (fp.sub RNE x9 x22) (fp.sub RNE x17 x11)) (fp.neg (fp.div RNE x0 x9)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.neg x5) (fp.mul RNE x7 x9)) (fp.mul RNE (fp.add RNE x0 x6) (fp.sub RNE x19 x18))) (fp.div RNE (fp.neg (fp.sub RNE x5 x15)) (fp.mul RNE (fp.sub RNE x14 x8) (fp.add RNE x15 x15)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x17) (fp.add RNE x20 x10)) (fp.div RNE (fp.mul RNE x20 x6) (fp.neg x6))) (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x6) (fp.sub RNE x12 x2)) (fp.mul RNE (fp.mul RNE x14 x6) (fp.mul RNE x11 x23)))))
(check-sat)
