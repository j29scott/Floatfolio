(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.neg x0) (fp.div RNE x11 x5)) (fp.div RNE (fp.add RNE x8 x5) (fp.neg x0))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x13 x3) (fp.div RNE x15 x12)) (fp.mul RNE (fp.mul RNE x17 x3) (fp.neg x5))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x3 x2) (fp.sub RNE x5 x10)) (fp.sub RNE (fp.sub RNE x10 x10) (fp.neg x9))))
(assert (fp.eq (fp.div RNE (fp.add RNE x5 x5) (fp.neg x9)) (fp.add RNE (fp.add RNE x9 x14) (fp.neg x0))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x19 x10) (fp.neg x10)) (fp.neg (fp.mul RNE x3 x5))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x3 x15) (fp.add RNE x17 x14)) (fp.neg (fp.neg x7))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x5 x16) (fp.mul RNE x5 x18)) (fp.neg (fp.div RNE x18 x10))))
(assert (fp.leq (fp.add RNE (fp.add RNE x19 x5) (fp.mul RNE x1 x14)) (fp.neg (fp.mul RNE x7 x2))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x4 x14) (fp.sub RNE x3 x1)) (fp.div RNE (fp.sub RNE x5 x11) (fp.mul RNE x0 x7))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x2 x4) (fp.neg x2)) (fp.add RNE (fp.neg x14) (fp.div RNE x19 x14))))
(assert (fp.lt (fp.neg (fp.add RNE x1 x12)) (fp.mul RNE (fp.add RNE x14 x0) (fp.add RNE x15 x5))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x5 x11) (fp.div RNE x11 x5)) (fp.div RNE (fp.sub RNE x3 x15) (fp.mul RNE x12 x12))))
(assert (fp.lt (fp.add RNE (fp.neg x15) (fp.sub RNE x9 x19)) (fp.div RNE (fp.neg x8) (fp.sub RNE x12 x9))))
(assert (fp.gt (fp.add RNE (fp.neg x1) (fp.add RNE x17 x6)) (fp.mul RNE (fp.sub RNE x13 x11) (fp.neg x13))))
(assert (fp.gt (fp.neg (fp.div RNE x7 x3)) (fp.sub RNE (fp.add RNE x16 x18) (fp.neg x0))))
(assert (fp.eq (fp.mul RNE (fp.neg x4) (fp.mul RNE x16 x16)) (fp.mul RNE (fp.sub RNE x13 x15) (fp.div RNE x4 x13))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x14 x3) (fp.neg x8)) (fp.neg (fp.mul RNE x8 x19))))
(assert (fp.geq (fp.neg (fp.add RNE x13 x5)) (fp.sub RNE (fp.add RNE x8 x3) (fp.div RNE x11 x18))))
(check-sat)
