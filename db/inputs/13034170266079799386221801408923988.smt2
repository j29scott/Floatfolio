(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x9) (fp.div RNE x11 x15)) (fp.div RNE (fp.sub RNE x13 x6) (fp.div RNE x8 x15))))
(assert (fp.leq (fp.add RNE (fp.neg x14) (fp.sub RNE x6 x18)) (fp.div RNE (fp.neg x1) (fp.mul RNE x7 x1))))
(assert (fp.geq (fp.div RNE (fp.div RNE x4 x5) (fp.add RNE x7 x11)) (fp.div RNE (fp.add RNE x0 x0) (fp.mul RNE x2 x18))))
(assert (fp.leq (fp.neg (fp.add RNE x5 x13)) (fp.neg (fp.mul RNE x8 x6))))
(check-sat)
