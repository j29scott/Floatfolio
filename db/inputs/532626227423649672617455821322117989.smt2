(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x11 x13)) (fp.sub RNE (fp.sub RNE x7 x8) (fp.div RNE x16 x2))) (fp.add RNE (fp.neg (fp.sub RNE x4 x12)) (fp.add RNE (fp.add RNE x11 x8) (fp.div RNE x3 x2)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x8 x9) (fp.div RNE x6 x1)) (fp.add RNE (fp.neg x10) (fp.mul RNE x15 x16))) (fp.div RNE (fp.div RNE (fp.add RNE x4 x15) (fp.neg x13)) (fp.sub RNE (fp.neg x5) (fp.div RNE x2 x14)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE x14 x15) (fp.sub RNE x16 x14))) (fp.add RNE (fp.div RNE (fp.div RNE x14 x6) (fp.add RNE x7 x11)) (fp.neg (fp.neg x1)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x6) (fp.sub RNE x13 x7)) (fp.sub RNE (fp.add RNE x12 x0) (fp.div RNE x0 x3))) (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.div RNE x12 x9)) (fp.add RNE (fp.div RNE x13 x4) (fp.neg x0)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x15 x14) (fp.mul RNE x14 x1)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.add RNE (fp.div RNE x9 x9) (fp.add RNE x13 x0)) (fp.div RNE (fp.sub RNE x3 x6) (fp.mul RNE x13 x7)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg x8) (fp.add RNE x11 x12)) (fp.div RNE (fp.add RNE x7 x13) (fp.add RNE x12 x1))) (fp.neg (fp.div RNE (fp.add RNE x3 x14) (fp.sub RNE x13 x8)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x2) (fp.mul RNE x8 x1)) (fp.mul RNE (fp.add RNE x7 x8) (fp.neg x1))) (fp.neg (fp.mul RNE (fp.div RNE x6 x13) (fp.add RNE x1 x11)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.neg x4) (fp.sub RNE x14 x14))) (fp.sub RNE (fp.add RNE (fp.mul RNE x3 x10) (fp.add RNE x6 x8)) (fp.neg (fp.add RNE x10 x16)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.mul RNE x11 x14) (fp.sub RNE x12 x6)) (fp.mul RNE (fp.sub RNE x14 x4) (fp.add RNE x2 x0))) (fp.div RNE (fp.neg (fp.div RNE x9 x4)) (fp.sub RNE (fp.mul RNE x0 x8) (fp.div RNE x5 x13)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x11) (fp.div RNE x16 x6)) (fp.add RNE (fp.sub RNE x12 x5) (fp.add RNE x15 x6))) (fp.sub RNE (fp.div RNE (fp.sub RNE x3 x9) (fp.mul RNE x7 x8)) (fp.div RNE (fp.add RNE x14 x15) (fp.div RNE x6 x0)))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x4 x1))) (fp.neg (fp.div RNE (fp.add RNE x15 x16) (fp.sub RNE x15 x15)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x8 x1) (fp.mul RNE x8 x0)) (fp.div RNE (fp.sub RNE x5 x3) (fp.div RNE x15 x7))) (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x0) (fp.add RNE x2 x3)) (fp.div RNE (fp.sub RNE x6 x10) (fp.div RNE x1 x4)))))
(check-sat)
