(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.div RNE x14 x1)) (fp.add RNE (fp.mul RNE x10 x7) (fp.neg x8))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x1 x8) (fp.neg x16)) (fp.mul RNE (fp.add RNE x6 x5) (fp.neg x14))))
(assert (fp.lt (fp.neg (fp.neg x5)) (fp.add RNE (fp.add RNE x6 x15) (fp.div RNE x10 x4))))
(assert (fp.leq (fp.neg (fp.mul RNE x3 x7)) (fp.mul RNE (fp.neg x11) (fp.div RNE x10 x11))))
(assert (fp.lt (fp.neg (fp.sub RNE x13 x10)) (fp.mul RNE (fp.neg x15) (fp.div RNE x5 x8))))
(assert (fp.geq (fp.sub RNE (fp.neg x13) (fp.sub RNE x10 x14)) (fp.div RNE (fp.neg x11) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x6 x8) (fp.div RNE x2 x7)) (fp.mul RNE (fp.add RNE x0 x9) (fp.add RNE x10 x14))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x6 x8) (fp.sub RNE x14 x12)) (fp.mul RNE (fp.neg x15) (fp.neg x2))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x3 x9) (fp.mul RNE x10 x10)) (fp.div RNE (fp.div RNE x2 x6) (fp.div RNE x12 x10))))
(assert (fp.lt (fp.add RNE (fp.div RNE x7 x12) (fp.mul RNE x9 x8)) (fp.neg (fp.div RNE x7 x1))))
(assert (fp.eq (fp.neg (fp.sub RNE x5 x8)) (fp.add RNE (fp.add RNE x3 x6) (fp.div RNE x14 x15))))
(assert (fp.gt (fp.neg (fp.neg x13)) (fp.add RNE (fp.div RNE x14 x13) (fp.mul RNE x10 x2))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x10 x9) (fp.div RNE x13 x0)) (fp.sub RNE (fp.mul RNE x14 x13) (fp.mul RNE x4 x6))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x9 x10) (fp.sub RNE x11 x6)) (fp.sub RNE (fp.div RNE x2 x14) (fp.neg x15))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x9 x16) (fp.add RNE x14 x13)) (fp.add RNE (fp.sub RNE x7 x1) (fp.div RNE x10 x12))))
(check-sat)
