(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.add RNE x26 x25) (fp.mul RNE x9 x1)) (fp.mul RNE (fp.neg x19) (fp.mul RNE x0 x17))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x23 x19) (fp.add RNE x13 x18)) (fp.add RNE (fp.div RNE x26 x2) (fp.sub RNE x13 x9)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg x27) (fp.add RNE x12 x25)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x5 x24))) (fp.neg (fp.add RNE (fp.mul RNE x14 x17) (fp.div RNE x6 x3)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.add RNE x10 x8) (fp.sub RNE x0 x7)) (fp.sub RNE (fp.div RNE x5 x20) (fp.add RNE x5 x0))) (fp.sub RNE (fp.div RNE (fp.sub RNE x22 x15) (fp.sub RNE x24 x6)) (fp.neg (fp.div RNE x17 x6)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.neg x19) (fp.sub RNE x1 x7)) (fp.mul RNE (fp.add RNE x2 x8) (fp.mul RNE x5 x0))) (fp.sub RNE (fp.add RNE (fp.neg x22) (fp.sub RNE x12 x14)) (fp.sub RNE (fp.div RNE x3 x19) (fp.add RNE x0 x22)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x5) (fp.neg x22)) (fp.add RNE (fp.mul RNE x0 x14) (fp.sub RNE x12 x21))) (fp.add RNE (fp.neg (fp.add RNE x14 x27)) (fp.div RNE (fp.mul RNE x22 x24) (fp.mul RNE x6 x13)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x25 x6) (fp.div RNE x4 x3))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x13) (fp.add RNE x16 x7)) (fp.add RNE (fp.neg x9) (fp.sub RNE x18 x15)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE x12 x27) (fp.neg x23)) (fp.neg (fp.add RNE x7 x27))) (fp.div RNE (fp.add RNE (fp.add RNE x19 x15) (fp.mul RNE x14 x26)) (fp.neg (fp.add RNE x14 x13)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.sub RNE x22 x5) (fp.div RNE x25 x2)) (fp.add RNE (fp.div RNE x23 x22) (fp.sub RNE x9 x0))) (fp.neg (fp.mul RNE (fp.sub RNE x22 x14) (fp.div RNE x4 x6)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x15) (fp.div RNE x17 x3)) (fp.mul RNE (fp.add RNE x6 x20) (fp.neg x5))) (fp.div RNE (fp.sub RNE (fp.div RNE x20 x4) (fp.sub RNE x12 x26)) (fp.mul RNE (fp.mul RNE x11 x20) (fp.mul RNE x17 x21)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE x26 x14)) (fp.sub RNE (fp.sub RNE x8 x18) (fp.add RNE x0 x8))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x15) (fp.sub RNE x5 x9)))))
(check-sat)
