(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.neg x4) (fp.add RNE x11 x6)) (fp.add RNE (fp.sub RNE x10 x14) (fp.sub RNE x19 x23))))
(assert (fp.geq (fp.neg (fp.mul RNE x3 x15)) (fp.sub RNE (fp.div RNE x12 x4) (fp.div RNE x7 x1))))
(assert (fp.geq (fp.neg (fp.add RNE x3 x1)) (fp.sub RNE (fp.neg x9) (fp.mul RNE x9 x4))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x23 x7) (fp.mul RNE x16 x22)) (fp.mul RNE (fp.mul RNE x0 x2) (fp.add RNE x22 x11))))
(assert (fp.gt (fp.neg (fp.sub RNE x16 x0)) (fp.add RNE (fp.neg x17) (fp.mul RNE x15 x6))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x5 x2) (fp.div RNE x14 x7)) (fp.sub RNE (fp.add RNE x22 x5) (fp.add RNE x21 x3))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x2 x2) (fp.add RNE x19 x22)) (fp.mul RNE (fp.sub RNE x15 x1) (fp.div RNE x22 x13))))
(check-sat)
