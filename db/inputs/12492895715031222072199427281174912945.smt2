(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x10 x18) (fp.add RNE x4 x23)))
(assert (fp.geq (fp.sub RNE x3 x11) (fp.div RNE x15 x23)))
(assert (fp.leq (fp.mul RNE x3 x11) (fp.mul RNE x9 x14)))
(assert (fp.gt (fp.add RNE x17 x23) (fp.sub RNE x12 x12)))
(assert (fp.eq (fp.neg x6) (fp.div RNE x2 x13)))
(assert (fp.eq (fp.mul RNE x19 x22) (fp.mul RNE x6 x2)))
(assert (fp.eq (fp.mul RNE x17 x12) (fp.sub RNE x23 x2)))
(assert (fp.eq (fp.add RNE x18 x13) (fp.mul RNE x8 x13)))
(assert (fp.eq (fp.neg x21) (fp.div RNE x4 x6)))
(assert (fp.leq (fp.mul RNE x6 x13) (fp.div RNE x11 x10)))
(assert (fp.geq (fp.add RNE x8 x16) (fp.mul RNE x10 x16)))
(assert (fp.leq (fp.sub RNE x20 x6) (fp.neg x15)))
(assert (fp.leq (fp.div RNE x11 x11) (fp.mul RNE x5 x1)))
(assert (fp.geq (fp.div RNE x19 x6) (fp.sub RNE x16 x15)))
(assert (fp.lt (fp.sub RNE x15 x18) (fp.neg x15)))
(assert (fp.gt (fp.add RNE x4 x0) (fp.neg x12)))
(assert (fp.eq (fp.mul RNE x5 x17) (fp.add RNE x8 x4)))
(assert (fp.eq (fp.add RNE x0 x19) (fp.neg x11)))
(assert (fp.lt (fp.add RNE x4 x3) (fp.neg x2)))
(assert (fp.gt (fp.add RNE x20 x19) (fp.mul RNE x12 x0)))
(check-sat)
