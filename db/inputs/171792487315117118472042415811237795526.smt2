(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x5 x3) (fp.neg x7)) (fp.sub RNE (fp.div RNE x6 x8) (fp.neg x7))))
(assert (fp.leq (fp.neg (fp.mul RNE x8 x2)) (fp.neg (fp.mul RNE x7 x6))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x1 x4) (fp.mul RNE x5 x1)) (fp.add RNE (fp.neg x3) (fp.add RNE x6 x8))))
(assert (fp.eq (fp.add RNE (fp.div RNE x0 x8) (fp.sub RNE x6 x5)) (fp.mul RNE (fp.div RNE x4 x1) (fp.div RNE x8 x0))))
(assert (fp.lt (fp.add RNE (fp.div RNE x0 x3) (fp.neg x3)) (fp.neg (fp.mul RNE x7 x3))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x0 x2) (fp.add RNE x5 x5)) (fp.div RNE (fp.div RNE x3 x3) (fp.mul RNE x5 x3))))
(check-sat)
