(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE x11 x5)) (fp.add RNE (fp.sub RNE x4 x8) (fp.neg x4))))
(assert (fp.leq (fp.mul RNE (fp.neg x10) (fp.div RNE x11 x11)) (fp.div RNE (fp.mul RNE x2 x1) (fp.mul RNE x7 x9))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x3 x6) (fp.neg x9)) (fp.mul RNE (fp.add RNE x0 x11) (fp.neg x3))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x5 x6) (fp.div RNE x8 x2)) (fp.sub RNE (fp.div RNE x11 x10) (fp.mul RNE x3 x9))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x11 x2) (fp.neg x9)) (fp.div RNE (fp.neg x8) (fp.sub RNE x7 x2))))
(assert (fp.gt (fp.add RNE (fp.div RNE x8 x11) (fp.add RNE x3 x7)) (fp.neg (fp.neg x1))))
(assert (fp.eq (fp.add RNE (fp.div RNE x9 x8) (fp.add RNE x10 x3)) (fp.mul RNE (fp.add RNE x10 x6) (fp.div RNE x2 x6))))
(assert (fp.leq (fp.neg (fp.add RNE x10 x8)) (fp.add RNE (fp.mul RNE x4 x7) (fp.div RNE x10 x5))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x11 x0) (fp.add RNE x2 x0)) (fp.add RNE (fp.sub RNE x1 x11) (fp.add RNE x10 x3))))
(assert (fp.lt (fp.neg (fp.neg x6)) (fp.add RNE (fp.mul RNE x3 x1) (fp.div RNE x2 x6))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x7 x7) (fp.div RNE x9 x5)) (fp.mul RNE (fp.neg x4) (fp.add RNE x5 x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x6 x7) (fp.add RNE x6 x4)) (fp.neg (fp.add RNE x6 x5))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x5 x11) (fp.add RNE x1 x8)) (fp.div RNE (fp.div RNE x5 x7) (fp.div RNE x0 x1))))
(assert (fp.gt (fp.neg (fp.sub RNE x5 x0)) (fp.neg (fp.add RNE x4 x5))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x1 x4) (fp.add RNE x3 x0)) (fp.sub RNE (fp.sub RNE x9 x7) (fp.div RNE x11 x4))))
(assert (fp.leq (fp.add RNE (fp.add RNE x9 x9) (fp.neg x10)) (fp.neg (fp.mul RNE x2 x10))))
(assert (fp.geq (fp.neg (fp.add RNE x2 x5)) (fp.sub RNE (fp.add RNE x8 x7) (fp.add RNE x10 x9))))
(assert (fp.leq (fp.add RNE (fp.neg x2) (fp.neg x5)) (fp.sub RNE (fp.neg x5) (fp.add RNE x7 x11))))
(assert (fp.leq (fp.div RNE (fp.div RNE x3 x5) (fp.neg x2)) (fp.sub RNE (fp.div RNE x6 x0) (fp.div RNE x4 x3))))
(check-sat)
