(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x2 x13) (fp.mul RNE x7 x4)) (fp.div RNE (fp.div RNE x11 x8) (fp.sub RNE x8 x21))))
(assert (fp.leq (fp.add RNE (fp.div RNE x1 x22) (fp.neg x15)) (fp.sub RNE (fp.neg x19) (fp.mul RNE x5 x0))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x16 x6) (fp.mul RNE x1 x10)) (fp.mul RNE (fp.mul RNE x15 x6) (fp.neg x11))))
(assert (fp.leq (fp.add RNE (fp.add RNE x17 x13) (fp.sub RNE x11 x18)) (fp.div RNE (fp.add RNE x7 x16) (fp.add RNE x22 x2))))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x15) (fp.sub RNE x9 x21)) (fp.sub RNE (fp.neg x18) (fp.div RNE x9 x5))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x18 x13) (fp.div RNE x10 x11)) (fp.div RNE (fp.add RNE x6 x3) (fp.sub RNE x22 x22))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x21 x13) (fp.sub RNE x1 x10)) (fp.mul RNE (fp.mul RNE x0 x11) (fp.div RNE x10 x5))))
(assert (fp.eq (fp.add RNE (fp.add RNE x21 x2) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x5 x5) (fp.add RNE x17 x4))))
(assert (fp.gt (fp.div RNE (fp.add RNE x17 x16) (fp.add RNE x15 x13)) (fp.mul RNE (fp.mul RNE x1 x19) (fp.sub RNE x12 x9))))
(assert (fp.leq (fp.neg (fp.div RNE x3 x6)) (fp.neg (fp.mul RNE x20 x7))))
(assert (fp.leq (fp.sub RNE (fp.neg x6) (fp.sub RNE x15 x1)) (fp.add RNE (fp.div RNE x0 x17) (fp.div RNE x14 x15))))
(assert (fp.eq (fp.mul RNE (fp.neg x22) (fp.mul RNE x17 x19)) (fp.add RNE (fp.div RNE x8 x21) (fp.neg x10))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x15 x4) (fp.add RNE x3 x20)) (fp.neg (fp.add RNE x7 x17))))
(assert (fp.gt (fp.neg (fp.sub RNE x3 x9)) (fp.div RNE (fp.add RNE x7 x16) (fp.add RNE x17 x6))))
(assert (fp.leq (fp.neg (fp.add RNE x13 x18)) (fp.div RNE (fp.neg x2) (fp.add RNE x1 x0))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x17 x19) (fp.mul RNE x14 x16)) (fp.mul RNE (fp.mul RNE x15 x16) (fp.neg x8))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x14 x2) (fp.sub RNE x3 x11)) (fp.div RNE (fp.add RNE x16 x20) (fp.div RNE x3 x8))))
(assert (fp.lt (fp.neg (fp.sub RNE x19 x15)) (fp.add RNE (fp.add RNE x20 x10) (fp.add RNE x9 x22))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x1 x14) (fp.mul RNE x12 x6)) (fp.div RNE (fp.neg x22) (fp.add RNE x1 x1))))
(check-sat)
