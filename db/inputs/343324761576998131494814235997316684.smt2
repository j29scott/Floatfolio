(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.sub RNE x6 x2) (fp.div RNE x12 x0)) (fp.mul RNE (fp.neg x10) (fp.div RNE x8 x1))))
(assert (fp.geq (fp.mul RNE (fp.neg x9) (fp.div RNE x9 x8)) (fp.sub RNE (fp.add RNE x7 x10) (fp.div RNE x2 x4))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x0 x8) (fp.sub RNE x12 x6)) (fp.sub RNE (fp.add RNE x12 x11) (fp.sub RNE x7 x6))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x6 x9) (fp.div RNE x1 x0)) (fp.neg (fp.add RNE x2 x0))))
(assert (fp.gt (fp.neg (fp.add RNE x6 x4)) (fp.neg (fp.neg x7))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x4) (fp.mul RNE x6 x0)) (fp.neg (fp.sub RNE x6 x4))))
(check-sat)
