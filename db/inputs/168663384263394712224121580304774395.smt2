(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x6 x9) (fp.mul RNE x4 x0))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x3 x11) (fp.mul RNE x17 x13)) (fp.mul RNE (fp.div RNE x13 x8) (fp.sub RNE x15 x10)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.sub RNE x10 x2)) (fp.mul RNE (fp.neg x15) (fp.add RNE x12 x14))) (fp.add RNE (fp.div RNE (fp.sub RNE x18 x3) (fp.div RNE x10 x6)) (fp.div RNE (fp.neg x15) (fp.neg x15)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x17 x18) (fp.sub RNE x0 x2)) (fp.div RNE (fp.sub RNE x0 x2) (fp.sub RNE x1 x7))) (fp.neg (fp.neg (fp.add RNE x2 x14)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x6 x4) (fp.add RNE x1 x11)) (fp.neg (fp.div RNE x13 x4))) (fp.mul RNE (fp.add RNE (fp.add RNE x1 x2) (fp.mul RNE x10 x15)) (fp.div RNE (fp.sub RNE x16 x11) (fp.mul RNE x7 x3)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x6) (fp.mul RNE x13 x2)) (fp.div RNE (fp.neg x12) (fp.add RNE x5 x5))) (fp.add RNE (fp.sub RNE (fp.div RNE x17 x12) (fp.mul RNE x12 x17)) (fp.add RNE (fp.sub RNE x8 x3) (fp.neg x8)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg x3) (fp.div RNE x16 x17))) (fp.div RNE (fp.div RNE (fp.sub RNE x14 x12) (fp.neg x7)) (fp.mul RNE (fp.mul RNE x15 x1) (fp.mul RNE x6 x3)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE x2 x7) (fp.div RNE x4 x17)) (fp.add RNE (fp.neg x7) (fp.div RNE x7 x15))) (fp.neg (fp.sub RNE (fp.sub RNE x4 x8) (fp.mul RNE x3 x2)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x11) (fp.neg x15)) (fp.add RNE (fp.sub RNE x13 x10) (fp.div RNE x8 x11))) (fp.div RNE (fp.mul RNE (fp.add RNE x10 x13) (fp.sub RNE x13 x8)) (fp.add RNE (fp.div RNE x7 x4) (fp.sub RNE x0 x0)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.sub RNE x7 x14)) (fp.add RNE (fp.neg x12) (fp.div RNE x9 x16))) (fp.add RNE (fp.div RNE (fp.add RNE x8 x7) (fp.mul RNE x1 x15)) (fp.mul RNE (fp.add RNE x16 x2) (fp.div RNE x12 x17)))))
(check-sat)
