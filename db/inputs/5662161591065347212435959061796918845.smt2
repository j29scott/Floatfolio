(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.div RNE x3 x0)) (fp.sub RNE (fp.sub RNE x4 x3) (fp.mul RNE x2 x1))) (fp.add RNE (fp.sub RNE (fp.neg x0) (fp.div RNE x4 x1)) (fp.add RNE (fp.sub RNE x2 x2) (fp.add RNE x2 x3)))) (fp.div RNE (fp.neg (fp.add RNE (fp.sub RNE x2 x2) (fp.add RNE x2 x3))) (fp.div RNE (fp.div RNE (fp.sub RNE x1 x0) (fp.sub RNE x3 x0)) (fp.neg (fp.neg x1))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x0 x3)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x4 x4))) (fp.div RNE (fp.add RNE (fp.add RNE x2 x1) (fp.neg x3)) (fp.sub RNE (fp.add RNE x2 x1) (fp.sub RNE x3 x3)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.div RNE x1 x4) (fp.div RNE x0 x1)) (fp.mul RNE (fp.add RNE x0 x3) (fp.mul RNE x0 x3))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE (fp.div RNE x3 x1) (fp.sub RNE x2 x0)) (fp.div RNE (fp.div RNE x1 x2) (fp.mul RNE x1 x4)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.add RNE x2 x4) (fp.add RNE x2 x3)) (fp.add RNE (fp.mul RNE x1 x0) (fp.add RNE x0 x1))) (fp.mul RNE (fp.add RNE (fp.div RNE x4 x1) (fp.neg x2)) (fp.add RNE (fp.div RNE x3 x0) (fp.add RNE x4 x1))))))
(check-sat)
