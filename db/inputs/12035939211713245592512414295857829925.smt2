(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE (fp.div RNE x19 x11) (fp.mul RNE x5 x6)) (fp.add RNE (fp.neg x10) (fp.sub RNE x11 x0)))) (fp.neg (fp.sub RNE (fp.neg (fp.sub RNE x0 x20)) (fp.div RNE (fp.neg x8) (fp.add RNE x6 x0))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.add RNE (fp.sub RNE x6 x16) (fp.mul RNE x4 x15)) (fp.sub RNE (fp.add RNE x8 x0) (fp.div RNE x7 x16))) (fp.add RNE (fp.neg (fp.add RNE x5 x22)) (fp.sub RNE (fp.add RNE x20 x3) (fp.mul RNE x2 x6)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.add RNE x16 x22) (fp.mul RNE x16 x5)) (fp.div RNE (fp.sub RNE x2 x12) (fp.neg x12))) (fp.sub RNE (fp.mul RNE (fp.add RNE x13 x19) (fp.sub RNE x9 x19)) (fp.neg (fp.neg x0))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x19) (fp.mul RNE x4 x21)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x6 x16))) (fp.neg (fp.add RNE (fp.div RNE x20 x8) (fp.add RNE x0 x22)))) (fp.sub RNE (fp.neg (fp.neg (fp.add RNE x7 x19))) (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.add RNE x22 x0)) (fp.neg (fp.sub RNE x13 x13))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE (fp.mul RNE x12 x14) (fp.mul RNE x9 x18)) (fp.sub RNE (fp.div RNE x21 x22) (fp.mul RNE x1 x3)))) (fp.mul RNE (fp.neg (fp.neg (fp.mul RNE x13 x14))) (fp.div RNE (fp.neg (fp.neg x22)) (fp.sub RNE (fp.neg x6) (fp.neg x14))))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE (fp.div RNE x8 x19) (fp.neg x14)) (fp.sub RNE (fp.add RNE x20 x14) (fp.neg x11)))) (fp.neg (fp.div RNE (fp.add RNE (fp.sub RNE x7 x8) (fp.add RNE x4 x14)) (fp.add RNE (fp.sub RNE x3 x13) (fp.div RNE x1 x4))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.mul RNE (fp.mul RNE x8 x5) (fp.div RNE x17 x6))) (fp.neg (fp.mul RNE (fp.sub RNE x2 x1) (fp.mul RNE x0 x11)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x20) (fp.add RNE x2 x3)) (fp.add RNE (fp.neg x1) (fp.div RNE x0 x12))) (fp.add RNE (fp.add RNE (fp.neg x0) (fp.add RNE x9 x9)) (fp.mul RNE (fp.mul RNE x14 x12) (fp.sub RNE x20 x21))))))
(assert (fp.geq (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x19 x22) (fp.add RNE x1 x2)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x2 x4) (fp.div RNE x5 x18)) (fp.sub RNE (fp.mul RNE x10 x16) (fp.mul RNE x12 x17))) (fp.sub RNE (fp.neg (fp.div RNE x11 x9)) (fp.div RNE (fp.neg x14) (fp.neg x2))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x2 x9)) (fp.neg (fp.add RNE x7 x15))) (fp.add RNE (fp.neg (fp.mul RNE x7 x13)) (fp.div RNE (fp.neg x22) (fp.add RNE x5 x22)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x3 x2) (fp.mul RNE x8 x15)) (fp.sub RNE (fp.neg x13) (fp.neg x14))) (fp.div RNE (fp.mul RNE (fp.mul RNE x1 x5) (fp.mul RNE x9 x13)) (fp.mul RNE (fp.div RNE x14 x2) (fp.add RNE x5 x9))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x22 x4) (fp.mul RNE x11 x18)) (fp.sub RNE (fp.add RNE x3 x9) (fp.mul RNE x9 x9))) (fp.div RNE (fp.sub RNE (fp.add RNE x8 x0) (fp.neg x21)) (fp.div RNE (fp.neg x19) (fp.mul RNE x3 x22)))) (fp.mul RNE (fp.neg (fp.div RNE (fp.add RNE x12 x1) (fp.div RNE x19 x19))) (fp.div RNE (fp.sub RNE (fp.add RNE x17 x13) (fp.mul RNE x5 x6)) (fp.mul RNE (fp.sub RNE x3 x13) (fp.neg x19))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE (fp.neg x10) (fp.sub RNE x13 x9)) (fp.neg (fp.add RNE x2 x9)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.sub RNE x5 x17) (fp.neg x12)) (fp.neg (fp.add RNE x13 x20))) (fp.div RNE (fp.div RNE (fp.add RNE x18 x11) (fp.div RNE x18 x14)) (fp.mul RNE (fp.mul RNE x12 x16) (fp.div RNE x21 x18))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x13) (fp.mul RNE x11 x20)) (fp.add RNE (fp.mul RNE x7 x9) (fp.mul RNE x5 x6))) (fp.mul RNE (fp.neg (fp.add RNE x9 x21)) (fp.neg (fp.add RNE x15 x18)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.neg x2) (fp.neg x10)) (fp.div RNE (fp.neg x6) (fp.sub RNE x15 x19))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE (fp.neg x2) (fp.div RNE x6 x17)) (fp.add RNE (fp.sub RNE x12 x3) (fp.sub RNE x18 x11)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x6 x16) (fp.add RNE x11 x13)) (fp.add RNE (fp.div RNE x17 x22) (fp.neg x1))) (fp.mul RNE (fp.add RNE (fp.sub RNE x4 x20) (fp.div RNE x11 x14)) (fp.add RNE (fp.mul RNE x21 x2) (fp.sub RNE x4 x10))))))
(check-sat)
