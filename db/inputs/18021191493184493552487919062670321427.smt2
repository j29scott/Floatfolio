(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x1) (fp.add RNE x6 x2)) (fp.neg (fp.neg x4))) (fp.neg (fp.add RNE (fp.add RNE x3 x0) (fp.add RNE x6 x9)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE x2 x0) (fp.sub RNE x7 x0)) (fp.div RNE (fp.sub RNE x1 x8) (fp.mul RNE x4 x5))) (fp.div RNE (fp.mul RNE (fp.div RNE x1 x7) (fp.mul RNE x3 x9)) (fp.mul RNE (fp.add RNE x7 x9) (fp.add RNE x6 x2)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x0 x0) (fp.mul RNE x4 x4))) (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x7) (fp.sub RNE x1 x2)) (fp.div RNE (fp.neg x1) (fp.neg x4)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x4 x3) (fp.div RNE x5 x7)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x8 x9))) (fp.add RNE (fp.div RNE (fp.sub RNE x1 x7) (fp.sub RNE x2 x2)) (fp.neg (fp.neg x0)))))
(check-sat)
