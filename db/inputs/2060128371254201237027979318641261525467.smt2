(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.div RNE x3 x3) (fp.mul RNE x4 x4)) (fp.div RNE (fp.mul RNE x3 x4) (fp.mul RNE x5 x2))) (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x3) (fp.add RNE x0 x1)) (fp.sub RNE (fp.add RNE x3 x4) (fp.neg x2)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.sub RNE x2 x2) (fp.add RNE x2 x4)) (fp.add RNE (fp.sub RNE x4 x5) (fp.sub RNE x0 x2))) (fp.sub RNE (fp.div RNE (fp.div RNE x4 x1) (fp.neg x5)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x5 x1))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.div RNE (fp.sub RNE x3 x2) (fp.add RNE x5 x5))) (fp.add RNE (fp.neg (fp.mul RNE x5 x3)) (fp.neg (fp.mul RNE x0 x2)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.add RNE x1 x0) (fp.div RNE x2 x4)) (fp.add RNE (fp.neg x3) (fp.add RNE x3 x4))))))
(check-sat)
