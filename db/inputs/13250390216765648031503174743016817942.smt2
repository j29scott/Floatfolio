(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg (fp.sub RNE x0 x3)) (fp.neg (fp.neg x0))) (fp.div RNE (fp.neg (fp.sub RNE x3 x1)) (fp.sub RNE (fp.div RNE x1 x10) (fp.mul RNE x12 x3)))) (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x7 x8)) (fp.add RNE (fp.add RNE x10 x12) (fp.add RNE x11 x0))) (fp.mul RNE (fp.neg (fp.div RNE x12 x7)) (fp.sub RNE (fp.sub RNE x12 x12) (fp.neg x4))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg (fp.mul RNE x7 x3)) (fp.add RNE (fp.sub RNE x9 x9) (fp.neg x4))) (fp.div RNE (fp.add RNE (fp.mul RNE x0 x1) (fp.div RNE x13 x10)) (fp.mul RNE (fp.mul RNE x3 x7) (fp.sub RNE x3 x12)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.add RNE x12 x8) (fp.mul RNE x7 x11)) (fp.sub RNE (fp.add RNE x5 x2) (fp.sub RNE x13 x9))) (fp.mul RNE (fp.add RNE (fp.div RNE x12 x11) (fp.mul RNE x0 x13)) (fp.div RNE (fp.sub RNE x6 x1) (fp.add RNE x2 x6))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x11) (fp.sub RNE x5 x4)) (fp.mul RNE (fp.add RNE x1 x7) (fp.div RNE x9 x7))) (fp.mul RNE (fp.neg (fp.div RNE x3 x9)) (fp.add RNE (fp.add RNE x2 x13) (fp.neg x2)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x8 x12) (fp.sub RNE x13 x1)) (fp.div RNE (fp.div RNE x4 x11) (fp.add RNE x9 x0))) (fp.div RNE (fp.add RNE (fp.div RNE x1 x9) (fp.sub RNE x11 x5)) (fp.add RNE (fp.mul RNE x6 x5) (fp.neg x3))))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x3 x10) (fp.neg x3)) (fp.mul RNE (fp.div RNE x10 x12) (fp.add RNE x0 x13))) (fp.neg (fp.neg (fp.neg x13)))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x12) (fp.div RNE x6 x7)) (fp.add RNE (fp.neg x7) (fp.div RNE x11 x6))) (fp.div RNE (fp.sub RNE (fp.div RNE x8 x13) (fp.neg x0)) (fp.sub RNE (fp.add RNE x11 x12) (fp.mul RNE x13 x7))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE (fp.add RNE x11 x0) (fp.div RNE x11 x10)) (fp.neg (fp.sub RNE x11 x10))) (fp.neg (fp.add RNE (fp.sub RNE x0 x11) (fp.sub RNE x7 x10)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.sub RNE x4 x4) (fp.neg x8)) (fp.sub RNE (fp.mul RNE x0 x5) (fp.add RNE x8 x1))) (fp.add RNE (fp.mul RNE (fp.div RNE x9 x8) (fp.sub RNE x10 x10)) (fp.mul RNE (fp.sub RNE x3 x8) (fp.mul RNE x5 x13))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.sub RNE (fp.sub RNE x8 x12) (fp.neg x9))) (fp.neg (fp.mul RNE (fp.add RNE x12 x2) (fp.sub RNE x9 x8)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.add RNE x13 x6) (fp.mul RNE x7 x0)) (fp.mul RNE (fp.div RNE x9 x3) (fp.add RNE x10 x1))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x0)) (fp.sub RNE (fp.sub RNE x10 x1) (fp.sub RNE x1 x7))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg (fp.mul RNE x13 x5)) (fp.add RNE (fp.neg x7) (fp.sub RNE x8 x6))) (fp.neg (fp.mul RNE (fp.sub RNE x6 x7) (fp.neg x4)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x11) (fp.mul RNE x2 x10)) (fp.neg (fp.mul RNE x0 x6))) (fp.mul RNE (fp.neg (fp.div RNE x2 x0)) (fp.add RNE (fp.mul RNE x11 x6) (fp.neg x12))))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg (fp.mul RNE x11 x7)) (fp.div RNE (fp.mul RNE x0 x6) (fp.neg x9))) (fp.neg (fp.div RNE (fp.div RNE x13 x4) (fp.div RNE x12 x3)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.div RNE x13 x10) (fp.div RNE x0 x13)) (fp.neg (fp.mul RNE x10 x3))) (fp.mul RNE (fp.neg (fp.neg x13)) (fp.add RNE (fp.add RNE x10 x12) (fp.div RNE x0 x12))))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.add RNE (fp.neg x13) (fp.mul RNE x12 x8)) (fp.add RNE (fp.neg x7) (fp.sub RNE x0 x9))) (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x13 x2)) (fp.div RNE (fp.div RNE x10 x11) (fp.sub RNE x2 x7)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.div RNE x8 x5)) (fp.mul RNE (fp.neg x9) (fp.div RNE x5 x10))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x13 x2) (fp.neg x13)) (fp.add RNE (fp.mul RNE x2 x6) (fp.neg x3))))))
(check-sat)
