(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.neg x7) (fp.sub RNE x4 x5)) (fp.add RNE (fp.sub RNE x9 x6) (fp.mul RNE x8 x6))))
(assert (fp.lt (fp.neg (fp.neg x17)) (fp.mul RNE (fp.add RNE x18 x16) (fp.add RNE x11 x9))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x8 x15) (fp.add RNE x2 x10)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x9 x7))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x14 x15) (fp.mul RNE x10 x2)) (fp.sub RNE (fp.div RNE x18 x7) (fp.mul RNE x12 x19))))
(assert (fp.leq (fp.add RNE (fp.div RNE x18 x16) (fp.div RNE x3 x3)) (fp.neg (fp.mul RNE x18 x12))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x5 x12) (fp.mul RNE x19 x12)) (fp.sub RNE (fp.sub RNE x16 x16) (fp.sub RNE x3 x4))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x18 x8) (fp.add RNE x14 x1)) (fp.sub RNE (fp.mul RNE x0 x19) (fp.add RNE x14 x7))))
(assert (fp.gt (fp.sub RNE (fp.neg x0) (fp.neg x0)) (fp.sub RNE (fp.mul RNE x15 x19) (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x16 x9) (fp.sub RNE x14 x4)) (fp.div RNE (fp.neg x0) (fp.mul RNE x13 x19))))
(check-sat)
