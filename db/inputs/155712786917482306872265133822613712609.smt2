(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.neg x8) (fp.add RNE x18 x15)) (fp.div RNE (fp.neg x11) (fp.add RNE x15 x3))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x2 x2) (fp.mul RNE x0 x2)) (fp.mul RNE (fp.add RNE x17 x3) (fp.sub RNE x18 x0))))
(assert (fp.lt (fp.div RNE (fp.add RNE x17 x10) (fp.add RNE x12 x12)) (fp.mul RNE (fp.mul RNE x14 x3) (fp.add RNE x11 x7))))
(assert (fp.gt (fp.neg (fp.mul RNE x9 x4)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x6 x18))))
(assert (fp.lt (fp.add RNE (fp.neg x5) (fp.div RNE x12 x10)) (fp.sub RNE (fp.neg x10) (fp.sub RNE x0 x13))))
(assert (fp.leq (fp.neg (fp.neg x0)) (fp.mul RNE (fp.mul RNE x5 x8) (fp.neg x5))))
(check-sat)
