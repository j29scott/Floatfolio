(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x1) (fp.mul RNE x5 x9)))
(assert (fp.gt (fp.mul RNE x8 x0) (fp.mul RNE x4 x5)))
(assert (fp.geq (fp.mul RNE x3 x7) (fp.mul RNE x10 x4)))
(assert (fp.gt (fp.mul RNE x9 x0) (fp.add RNE x1 x6)))
(assert (fp.gt (fp.add RNE x6 x8) (fp.neg x10)))
(assert (fp.geq (fp.div RNE x1 x3) (fp.sub RNE x5 x5)))
(assert (fp.gt (fp.neg x3) (fp.mul RNE x2 x0)))
(assert (fp.geq (fp.sub RNE x0 x10) (fp.neg x3)))
(assert (fp.leq (fp.neg x10) (fp.neg x10)))
(assert (fp.eq (fp.sub RNE x4 x0) (fp.add RNE x7 x1)))
(assert (fp.lt (fp.div RNE x4 x0) (fp.mul RNE x8 x8)))
(check-sat)
