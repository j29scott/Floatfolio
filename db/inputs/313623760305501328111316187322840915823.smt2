(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x2 x7) (fp.add RNE x4 x9)) (fp.div RNE (fp.neg x8) (fp.add RNE x5 x11))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x4 x2) (fp.sub RNE x9 x1)) (fp.div RNE (fp.neg x7) (fp.add RNE x7 x6))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x6 x5) (fp.mul RNE x11 x9)) (fp.div RNE (fp.mul RNE x8 x1) (fp.div RNE x6 x3))))
(assert (fp.eq (fp.div RNE (fp.div RNE x11 x7) (fp.sub RNE x5 x7)) (fp.mul RNE (fp.add RNE x0 x7) (fp.sub RNE x2 x9))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x7 x11) (fp.mul RNE x3 x7)) (fp.neg (fp.neg x4))))
(check-sat)
