(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.neg x12)) (fp.neg (fp.neg x10))))
(assert (fp.gt (fp.add RNE (fp.div RNE x3 x1) (fp.sub RNE x5 x6)) (fp.mul RNE (fp.add RNE x6 x7) (fp.neg x14))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x12 x11) (fp.mul RNE x10 x6)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x13 x4))))
(assert (fp.eq (fp.sub RNE (fp.neg x13) (fp.mul RNE x10 x0)) (fp.mul RNE (fp.sub RNE x11 x10) (fp.mul RNE x4 x0))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x1 x12) (fp.mul RNE x9 x1)) (fp.add RNE (fp.neg x0) (fp.mul RNE x8 x10))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x9 x8) (fp.neg x4)) (fp.sub RNE (fp.add RNE x3 x8) (fp.mul RNE x6 x8))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x4 x4) (fp.add RNE x9 x8)) (fp.mul RNE (fp.mul RNE x3 x3) (fp.sub RNE x13 x13))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x5 x6) (fp.div RNE x8 x10)) (fp.add RNE (fp.div RNE x5 x1) (fp.div RNE x3 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x3 x10) (fp.add RNE x4 x10)) (fp.neg (fp.neg x14))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.mul RNE x6 x7)) (fp.div RNE (fp.div RNE x0 x0) (fp.mul RNE x9 x4))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x11 x8) (fp.neg x12)) (fp.neg (fp.div RNE x5 x3))))
(assert (fp.eq (fp.neg (fp.add RNE x9 x5)) (fp.mul RNE (fp.mul RNE x11 x12) (fp.sub RNE x0 x7))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x8 x12) (fp.mul RNE x12 x13)) (fp.add RNE (fp.sub RNE x10 x3) (fp.sub RNE x11 x1))))
(assert (fp.leq (fp.div RNE (fp.add RNE x10 x3) (fp.sub RNE x2 x10)) (fp.sub RNE (fp.sub RNE x5 x10) (fp.div RNE x12 x6))))
(assert (fp.lt (fp.neg (fp.neg x7)) (fp.div RNE (fp.div RNE x5 x12) (fp.add RNE x9 x3))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x3 x11) (fp.mul RNE x1 x4)) (fp.mul RNE (fp.mul RNE x2 x14) (fp.sub RNE x4 x14))))
(assert (fp.eq (fp.neg (fp.mul RNE x12 x10)) (fp.mul RNE (fp.mul RNE x12 x1) (fp.neg x2))))
(assert (fp.geq (fp.neg (fp.div RNE x1 x5)) (fp.div RNE (fp.mul RNE x12 x10) (fp.sub RNE x14 x8))))
(check-sat)
