(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.neg x3)) (fp.div RNE (fp.sub RNE x0 x2) (fp.div RNE x7 x7))) (fp.mul RNE (fp.neg (fp.div RNE x1 x0)) (fp.div RNE (fp.neg x3) (fp.add RNE x6 x7)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg x0) (fp.mul RNE x3 x2))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x5) (fp.sub RNE x8 x7)) (fp.div RNE (fp.sub RNE x6 x3) (fp.div RNE x11 x8)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg x5) (fp.neg x4))) (fp.mul RNE (fp.neg (fp.div RNE x6 x4)) (fp.mul RNE (fp.div RNE x10 x7) (fp.div RNE x10 x1)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x7 x5) (fp.neg x3)) (fp.sub RNE (fp.add RNE x2 x5) (fp.mul RNE x11 x1))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x5 x0) (fp.div RNE x4 x3)) (fp.mul RNE (fp.neg x10) (fp.add RNE x10 x10)))))
(check-sat)
