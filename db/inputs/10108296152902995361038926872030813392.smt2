(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE x13 x9) (fp.add RNE x4 x16)) (fp.neg (fp.sub RNE x7 x9))) (fp.div RNE (fp.add RNE (fp.sub RNE x14 x15) (fp.add RNE x2 x8)) (fp.div RNE (fp.sub RNE x7 x5) (fp.mul RNE x18 x16)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE x1 x18) (fp.neg x7)) (fp.div RNE (fp.add RNE x17 x11) (fp.div RNE x21 x17))) (fp.neg (fp.mul RNE (fp.neg x2) (fp.neg x4)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE x4 x12)) (fp.mul RNE (fp.mul RNE x6 x7) (fp.div RNE x9 x21))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.sub RNE x21 x0)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x18 x6) (fp.sub RNE x17 x4)) (fp.neg (fp.neg x5))) (fp.mul RNE (fp.div RNE (fp.add RNE x1 x8) (fp.neg x9)) (fp.add RNE (fp.div RNE x8 x1) (fp.div RNE x19 x3)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x21 x13)) (fp.add RNE (fp.neg x18) (fp.div RNE x0 x8))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x17) (fp.sub RNE x0 x2)) (fp.neg (fp.div RNE x19 x14)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg x3) (fp.neg x11))) (fp.sub RNE (fp.add RNE (fp.add RNE x21 x15) (fp.add RNE x19 x2)) (fp.div RNE (fp.sub RNE x3 x4) (fp.mul RNE x8 x1)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.add RNE x2 x17) (fp.neg x9)) (fp.neg (fp.neg x14))) (fp.add RNE (fp.div RNE (fp.sub RNE x2 x21) (fp.div RNE x10 x17)) (fp.neg (fp.add RNE x4 x14)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x7 x12) (fp.div RNE x5 x21)) (fp.neg (fp.neg x5))) (fp.sub RNE (fp.div RNE (fp.div RNE x15 x5) (fp.mul RNE x19 x17)) (fp.neg (fp.mul RNE x7 x8)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE x19 x9) (fp.div RNE x4 x20)) (fp.neg (fp.add RNE x12 x5))) (fp.add RNE (fp.neg (fp.sub RNE x12 x9)) (fp.div RNE (fp.add RNE x7 x15) (fp.mul RNE x4 x5)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x2 x4) (fp.neg x0)) (fp.div RNE (fp.neg x6) (fp.div RNE x12 x15))) (fp.mul RNE (fp.div RNE (fp.div RNE x4 x17) (fp.div RNE x6 x4)) (fp.sub RNE (fp.neg x20) (fp.sub RNE x7 x19)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.neg x17)) (fp.sub RNE (fp.div RNE x17 x16) (fp.add RNE x1 x16))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x16) (fp.add RNE x10 x12)) (fp.div RNE (fp.div RNE x7 x9) (fp.div RNE x9 x3)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.div RNE x10 x4) (fp.add RNE x11 x5)) (fp.div RNE (fp.mul RNE x14 x2) (fp.mul RNE x4 x9))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x12 x20) (fp.sub RNE x14 x9)) (fp.add RNE (fp.neg x12) (fp.div RNE x20 x20)))))
(check-sat)
