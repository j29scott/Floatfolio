(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE x1 x13) (fp.add RNE x4 x16)) (fp.div RNE (fp.add RNE x14 x10) (fp.mul RNE x18 x6))) (fp.add RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.mul RNE x6 x9) (fp.div RNE x4 x12)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x20 x1) (fp.div RNE x4 x20)) (fp.sub RNE (fp.neg x20) (fp.mul RNE x12 x18))) (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x2) (fp.sub RNE x0 x18)) (fp.neg (fp.add RNE x5 x4)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.neg x17) (fp.neg x18)) (fp.mul RNE (fp.div RNE x6 x13) (fp.add RNE x20 x19))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x7) (fp.add RNE x17 x5)) (fp.mul RNE (fp.mul RNE x13 x15) (fp.mul RNE x7 x7)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.div RNE x7 x8) (fp.sub RNE x18 x2))) (fp.mul RNE (fp.neg (fp.neg x12)) (fp.div RNE (fp.add RNE x3 x13) (fp.neg x16)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.sub RNE x5 x16) (fp.add RNE x2 x15)) (fp.div RNE (fp.sub RNE x12 x14) (fp.add RNE x20 x0))) (fp.neg (fp.neg (fp.sub RNE x9 x4)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE x2 x13) (fp.div RNE x16 x15)) (fp.add RNE (fp.add RNE x8 x5) (fp.sub RNE x11 x9))) (fp.add RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x3 x5)) (fp.add RNE (fp.add RNE x20 x12) (fp.sub RNE x7 x11)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x14 x10) (fp.mul RNE x20 x20)) (fp.mul RNE (fp.add RNE x12 x3) (fp.div RNE x10 x10))) (fp.sub RNE (fp.sub RNE (fp.add RNE x10 x0) (fp.add RNE x9 x17)) (fp.neg (fp.mul RNE x2 x19)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg x4) (fp.add RNE x12 x8)) (fp.add RNE (fp.sub RNE x19 x17) (fp.neg x1))) (fp.mul RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x20 x14)) (fp.mul RNE (fp.div RNE x10 x14) (fp.mul RNE x0 x5)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x2 x10) (fp.add RNE x11 x4)) (fp.add RNE (fp.add RNE x18 x4) (fp.sub RNE x2 x11))) (fp.mul RNE (fp.neg (fp.add RNE x4 x6)) (fp.add RNE (fp.sub RNE x11 x1) (fp.mul RNE x8 x2)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.add RNE x16 x8) (fp.div RNE x11 x8)) (fp.add RNE (fp.neg x1) (fp.neg x15))) (fp.add RNE (fp.mul RNE (fp.sub RNE x6 x4) (fp.div RNE x16 x10)) (fp.div RNE (fp.mul RNE x14 x11) (fp.mul RNE x3 x0)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x17 x18) (fp.neg x15))) (fp.mul RNE (fp.sub RNE (fp.div RNE x8 x5) (fp.mul RNE x19 x5)) (fp.add RNE (fp.neg x12) (fp.div RNE x17 x7)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x13) (fp.div RNE x17 x13)) (fp.div RNE (fp.add RNE x2 x16) (fp.sub RNE x17 x11))) (fp.add RNE (fp.sub RNE (fp.sub RNE x15 x20) (fp.neg x17)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x5 x10)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE x10 x3) (fp.sub RNE x5 x0)) (fp.mul RNE (fp.mul RNE x2 x19) (fp.div RNE x7 x15))) (fp.neg (fp.sub RNE (fp.div RNE x19 x0) (fp.sub RNE x8 x8)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x10 x17) (fp.div RNE x2 x17))) (fp.neg (fp.div RNE (fp.neg x16) (fp.div RNE x3 x10)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.div RNE x5 x18) (fp.mul RNE x11 x18)) (fp.neg (fp.sub RNE x11 x1))) (fp.neg (fp.div RNE (fp.sub RNE x8 x11) (fp.add RNE x0 x3)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x12 x5) (fp.add RNE x9 x7))) (fp.sub RNE (fp.neg (fp.mul RNE x14 x11)) (fp.div RNE (fp.add RNE x8 x2) (fp.neg x14)))))
(check-sat)
