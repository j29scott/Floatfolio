(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE x2 x4) (fp.sub RNE x2 x7)))
(assert (fp.geq (fp.sub RNE x1 x3) (fp.add RNE x4 x0)))
(assert (fp.gt (fp.add RNE x0 x5) (fp.sub RNE x2 x1)))
(assert (fp.leq (fp.neg x3) (fp.mul RNE x0 x3)))
(assert (fp.geq (fp.mul RNE x5 x4) (fp.neg x7)))
(assert (fp.leq (fp.div RNE x5 x2) (fp.add RNE x4 x6)))
(assert (fp.leq (fp.add RNE x5 x7) (fp.add RNE x4 x2)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x0 x6)))
(assert (fp.eq (fp.neg x5) (fp.div RNE x5 x2)))
(assert (fp.gt (fp.neg x0) (fp.div RNE x4 x6)))
(assert (fp.leq (fp.neg x1) (fp.div RNE x5 x0)))
(assert (fp.eq (fp.div RNE x3 x4) (fp.sub RNE x7 x4)))
(assert (fp.leq (fp.neg x2) (fp.mul RNE x5 x4)))
(check-sat)
