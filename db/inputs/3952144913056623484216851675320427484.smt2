(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x0) (fp.div RNE x6 x9)))
(assert (fp.eq (fp.sub RNE x0 x3) (fp.mul RNE x3 x6)))
(assert (fp.lt (fp.div RNE x3 x7) (fp.sub RNE x9 x3)))
(assert (fp.lt (fp.add RNE x3 x2) (fp.neg x2)))
(assert (fp.lt (fp.div RNE x4 x2) (fp.sub RNE x4 x2)))
(assert (fp.geq (fp.mul RNE x2 x1) (fp.add RNE x8 x3)))
(assert (fp.geq (fp.neg x5) (fp.sub RNE x5 x3)))
(assert (fp.eq (fp.neg x4) (fp.neg x1)))
(assert (fp.gt (fp.sub RNE x0 x0) (fp.neg x4)))
(assert (fp.leq (fp.mul RNE x3 x2) (fp.sub RNE x3 x4)))
(assert (fp.lt (fp.sub RNE x6 x8) (fp.add RNE x0 x5)))
(assert (fp.eq (fp.add RNE x3 x1) (fp.div RNE x2 x5)))
(assert (fp.geq (fp.mul RNE x9 x8) (fp.div RNE x5 x5)))
(assert (fp.lt (fp.sub RNE x1 x0) (fp.add RNE x8 x0)))
(check-sat)
