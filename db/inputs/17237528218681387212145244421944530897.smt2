(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x16) (fp.mul RNE x9 x6)) (fp.neg (fp.neg x14))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x3 x14) (fp.add RNE x6 x9)) (fp.div RNE (fp.neg x4) (fp.neg x6)))) (fp.mul RNE (fp.neg (fp.div RNE (fp.neg x16) (fp.mul RNE x11 x7))) (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x18) (fp.add RNE x9 x10)) (fp.sub RNE (fp.add RNE x14 x4) (fp.div RNE x5 x0))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.add RNE (fp.neg x20) (fp.add RNE x20 x4)) (fp.add RNE (fp.neg x11) (fp.neg x19)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.div RNE x23 x3) (fp.div RNE x16 x2)) (fp.neg (fp.neg x20))) (fp.add RNE (fp.neg (fp.mul RNE x4 x11)) (fp.add RNE (fp.div RNE x4 x23) (fp.mul RNE x8 x8))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x23 x2) (fp.add RNE x5 x22)) (fp.add RNE (fp.sub RNE x19 x12) (fp.div RNE x21 x1))) (fp.sub RNE (fp.div RNE (fp.add RNE x7 x17) (fp.sub RNE x6 x11)) (fp.add RNE (fp.add RNE x22 x10) (fp.sub RNE x21 x23)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x1 x12) (fp.mul RNE x7 x2)) (fp.add RNE (fp.mul RNE x22 x6) (fp.add RNE x7 x16))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x5 x1) (fp.div RNE x17 x8)) (fp.div RNE (fp.div RNE x4 x7) (fp.neg x12))) (fp.div RNE (fp.sub RNE (fp.sub RNE x17 x0) (fp.sub RNE x3 x2)) (fp.neg (fp.mul RNE x7 x18)))) (fp.neg (fp.add RNE (fp.neg (fp.neg x3)) (fp.mul RNE (fp.mul RNE x12 x9) (fp.neg x20))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE (fp.neg x17) (fp.div RNE x19 x2)) (fp.add RNE (fp.sub RNE x21 x10) (fp.add RNE x8 x2))) (fp.sub RNE (fp.neg (fp.div RNE x5 x18)) (fp.sub RNE (fp.neg x23) (fp.add RNE x17 x14)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.sub RNE x22 x5) (fp.add RNE x17 x7)) (fp.div RNE (fp.neg x17) (fp.mul RNE x15 x7))) (fp.add RNE (fp.add RNE (fp.neg x5) (fp.div RNE x17 x6)) (fp.sub RNE (fp.add RNE x8 x23) (fp.add RNE x2 x21))))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg (fp.neg x2)) (fp.neg (fp.sub RNE x8 x6))) (fp.add RNE (fp.neg (fp.div RNE x4 x22)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x5 x8)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.sub RNE x20 x17) (fp.mul RNE x4 x17)) (fp.neg (fp.mul RNE x15 x4))) (fp.add RNE (fp.div RNE (fp.mul RNE x23 x22) (fp.mul RNE x7 x0)) (fp.sub RNE (fp.add RNE x0 x2) (fp.div RNE x0 x23))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x5 x0) (fp.div RNE x8 x8)) (fp.div RNE (fp.sub RNE x2 x7) (fp.mul RNE x15 x4))) (fp.neg (fp.neg (fp.neg x13)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x1 x22) (fp.add RNE x9 x12)) (fp.neg (fp.add RNE x10 x19))) (fp.neg (fp.div RNE (fp.sub RNE x7 x4) (fp.neg x23))))))
(check-sat)
