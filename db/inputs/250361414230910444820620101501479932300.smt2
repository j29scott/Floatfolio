(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x12 x13) (fp.mul RNE x23 x11)) (fp.add RNE (fp.add RNE x3 x6) (fp.neg x4))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x9 x16) (fp.neg x10)) (fp.neg (fp.sub RNE x18 x22))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x5 x6) (fp.div RNE x17 x8)) (fp.sub RNE (fp.add RNE x10 x3) (fp.add RNE x20 x20))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x4 x8) (fp.add RNE x4 x3)) (fp.div RNE (fp.add RNE x15 x14) (fp.div RNE x12 x16))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x20 x7) (fp.sub RNE x6 x24)) (fp.neg (fp.mul RNE x3 x7))))
(check-sat)
