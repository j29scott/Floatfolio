(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x1 x8) (fp.add RNE x12 x4)))
(assert (fp.gt (fp.neg x1) (fp.neg x8)))
(assert (fp.gt (fp.div RNE x0 x11) (fp.add RNE x7 x0)))
(assert (fp.lt (fp.div RNE x2 x4) (fp.div RNE x14 x10)))
(assert (fp.leq (fp.add RNE x16 x10) (fp.div RNE x13 x9)))
(assert (fp.eq (fp.sub RNE x10 x3) (fp.mul RNE x16 x8)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x12 x11)))
(assert (fp.lt (fp.add RNE x17 x11) (fp.mul RNE x10 x11)))
(assert (fp.geq (fp.sub RNE x1 x13) (fp.add RNE x17 x16)))
(assert (fp.leq (fp.add RNE x2 x11) (fp.sub RNE x11 x14)))
(assert (fp.lt (fp.add RNE x2 x15) (fp.add RNE x7 x12)))
(assert (fp.geq (fp.sub RNE x13 x8) (fp.add RNE x16 x6)))
(assert (fp.geq (fp.mul RNE x17 x1) (fp.mul RNE x15 x16)))
(assert (fp.lt (fp.neg x12) (fp.div RNE x5 x8)))
(assert (fp.lt (fp.mul RNE x8 x10) (fp.div RNE x14 x9)))
(assert (fp.lt (fp.sub RNE x8 x2) (fp.div RNE x14 x13)))
(assert (fp.geq (fp.neg x9) (fp.neg x5)))
(check-sat)
