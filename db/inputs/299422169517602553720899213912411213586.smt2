(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.div RNE x6 x0) (fp.div RNE x7 x7)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x3 x11) (fp.div RNE x9 x3)) (fp.add RNE (fp.neg x11) (fp.div RNE x12 x9))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x5 x11) (fp.sub RNE x0 x3)) (fp.sub RNE (fp.mul RNE x0 x6) (fp.sub RNE x2 x6))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x6 x1) (fp.mul RNE x3 x3)) (fp.sub RNE (fp.div RNE x9 x8) (fp.sub RNE x5 x13))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x4 x11) (fp.sub RNE x2 x0)) (fp.add RNE (fp.mul RNE x0 x6) (fp.mul RNE x13 x5))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x4 x9) (fp.add RNE x4 x6)) (fp.sub RNE (fp.add RNE x5 x0) (fp.mul RNE x4 x8))))
(assert (fp.eq (fp.mul RNE (fp.neg x0) (fp.mul RNE x4 x10)) (fp.add RNE (fp.neg x0) (fp.div RNE x5 x11))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x0 x13) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x6 x5) (fp.add RNE x2 x10))))
(check-sat)
