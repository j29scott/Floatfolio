(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.add RNE x12 x4) (fp.neg x0)) (fp.mul RNE (fp.div RNE x15 x12) (fp.div RNE x11 x1))))
(assert (fp.eq (fp.neg (fp.mul RNE x4 x13)) (fp.add RNE (fp.div RNE x9 x13) (fp.mul RNE x1 x0))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x1 x2) (fp.div RNE x13 x4)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x6 x9))))
(assert (fp.lt (fp.neg (fp.mul RNE x15 x6)) (fp.sub RNE (fp.neg x9) (fp.sub RNE x0 x3))))
(check-sat)
