(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg x4) (fp.sub RNE x0 x4)) (fp.add RNE (fp.sub RNE x5 x8) (fp.div RNE x11 x9))))
(assert (fp.lt (fp.add RNE (fp.neg x9) (fp.add RNE x3 x6)) (fp.add RNE (fp.div RNE x3 x11) (fp.sub RNE x8 x0))))
(assert (fp.gt (fp.sub RNE (fp.neg x6) (fp.mul RNE x4 x1)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x4 x6))))
(assert (fp.geq (fp.add RNE (fp.div RNE x8 x2) (fp.mul RNE x7 x4)) (fp.neg (fp.div RNE x11 x7))))
(assert (fp.gt (fp.neg (fp.sub RNE x10 x5)) (fp.div RNE (fp.neg x2) (fp.neg x0))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x2 x8) (fp.add RNE x8 x8)) (fp.sub RNE (fp.neg x4) (fp.add RNE x7 x0))))
(check-sat)
