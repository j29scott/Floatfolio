(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x10 x9) (fp.mul RNE x4 x14)) (fp.sub RNE (fp.add RNE x0 x4) (fp.neg x14))) (fp.sub RNE (fp.div RNE (fp.add RNE x4 x6) (fp.sub RNE x14 x1)) (fp.sub RNE (fp.add RNE x4 x2) (fp.mul RNE x10 x13)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.mul RNE x8 x14)) (fp.div RNE (fp.sub RNE x3 x14) (fp.mul RNE x3 x2))) (fp.div RNE (fp.add RNE (fp.mul RNE x13 x1) (fp.sub RNE x7 x2)) (fp.neg (fp.mul RNE x12 x12)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE x3 x6)) (fp.mul RNE (fp.div RNE x14 x11) (fp.add RNE x1 x1))) (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x10) (fp.neg x13)) (fp.sub RNE (fp.sub RNE x12 x13) (fp.neg x10)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x11 x2) (fp.neg x11)) (fp.add RNE (fp.div RNE x1 x4) (fp.add RNE x9 x11))) (fp.add RNE (fp.mul RNE (fp.sub RNE x8 x0) (fp.add RNE x1 x11)) (fp.div RNE (fp.sub RNE x11 x3) (fp.neg x9)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.add RNE x7 x12)) (fp.mul RNE (fp.mul RNE x11 x9) (fp.div RNE x3 x8))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x6 x14) (fp.mul RNE x14 x3)) (fp.mul RNE (fp.neg x12) (fp.neg x11)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE x14 x6) (fp.div RNE x13 x13)) (fp.sub RNE (fp.add RNE x10 x6) (fp.sub RNE x0 x12))) (fp.neg (fp.add RNE (fp.mul RNE x4 x7) (fp.neg x12)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x13) (fp.div RNE x8 x12))) (fp.sub RNE (fp.neg (fp.sub RNE x1 x5)) (fp.mul RNE (fp.add RNE x0 x14) (fp.div RNE x10 x4)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE x6 x8) (fp.div RNE x2 x11)) (fp.add RNE (fp.neg x11) (fp.add RNE x7 x9))) (fp.neg (fp.mul RNE (fp.add RNE x2 x2) (fp.neg x6)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x5) (fp.neg x13)) (fp.mul RNE (fp.sub RNE x9 x5) (fp.neg x11))) (fp.add RNE (fp.neg (fp.mul RNE x6 x12)) (fp.sub RNE (fp.sub RNE x4 x9) (fp.neg x9)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x3 x0) (fp.mul RNE x10 x8)) (fp.add RNE (fp.mul RNE x5 x1) (fp.add RNE x1 x7))) (fp.neg (fp.neg (fp.add RNE x13 x12)))))
(check-sat)
