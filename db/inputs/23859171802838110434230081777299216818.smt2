(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.add RNE x5 x10) (fp.sub RNE x4 x0)) (fp.sub RNE (fp.sub RNE x6 x7) (fp.neg x2))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x5 x3) (fp.sub RNE x8 x10)) (fp.add RNE (fp.add RNE x3 x9) (fp.div RNE x5 x2))))
(assert (fp.lt (fp.neg (fp.sub RNE x7 x10)) (fp.sub RNE (fp.mul RNE x10 x10) (fp.sub RNE x9 x0))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x7 x7) (fp.add RNE x10 x3)) (fp.add RNE (fp.sub RNE x6 x8) (fp.add RNE x11 x3))))
(assert (fp.leq (fp.div RNE (fp.neg x2) (fp.div RNE x11 x2)) (fp.div RNE (fp.add RNE x4 x3) (fp.neg x9))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x6 x7) (fp.add RNE x8 x5)) (fp.sub RNE (fp.div RNE x10 x9) (fp.div RNE x0 x5))))
(assert (fp.geq (fp.sub RNE (fp.neg x8) (fp.div RNE x4 x10)) (fp.neg (fp.sub RNE x11 x10))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x2 x6) (fp.mul RNE x1 x11)) (fp.neg (fp.neg x7))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x4 x1) (fp.mul RNE x7 x7)) (fp.neg (fp.mul RNE x10 x5))))
(assert (fp.gt (fp.mul RNE (fp.neg x6) (fp.neg x0)) (fp.sub RNE (fp.div RNE x6 x11) (fp.div RNE x1 x0))))
(check-sat)
