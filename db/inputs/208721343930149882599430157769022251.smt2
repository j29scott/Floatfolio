(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.mul RNE x3 x7) (fp.add RNE x10 x4)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x8 x3))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x1 x1) (fp.div RNE x1 x10)) (fp.neg (fp.div RNE x3 x9))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x7 x4) (fp.sub RNE x10 x3)) (fp.div RNE (fp.add RNE x3 x9) (fp.mul RNE x6 x0))))
(assert (fp.lt (fp.div RNE (fp.add RNE x1 x9) (fp.sub RNE x9 x8)) (fp.mul RNE (fp.sub RNE x7 x6) (fp.neg x0))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x8) (fp.div RNE x8 x2)) (fp.sub RNE (fp.add RNE x10 x5) (fp.div RNE x8 x3))))
(assert (fp.leq (fp.add RNE (fp.div RNE x2 x2) (fp.mul RNE x7 x10)) (fp.neg (fp.div RNE x0 x1))))
(assert (fp.geq (fp.add RNE (fp.div RNE x3 x6) (fp.neg x8)) (fp.sub RNE (fp.neg x7) (fp.div RNE x1 x8))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x6 x0) (fp.add RNE x2 x1)) (fp.sub RNE (fp.div RNE x2 x9) (fp.mul RNE x0 x7))))
(assert (fp.eq (fp.neg (fp.div RNE x9 x9)) (fp.neg (fp.add RNE x9 x10))))
(assert (fp.lt (fp.neg (fp.div RNE x10 x5)) (fp.neg (fp.add RNE x6 x1))))
(assert (fp.lt (fp.div RNE (fp.div RNE x6 x8) (fp.sub RNE x5 x0)) (fp.sub RNE (fp.add RNE x2 x10) (fp.sub RNE x2 x0))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x1 x7) (fp.add RNE x3 x5)) (fp.div RNE (fp.div RNE x5 x5) (fp.div RNE x3 x3))))
(check-sat)
