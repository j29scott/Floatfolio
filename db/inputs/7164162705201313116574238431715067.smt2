(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x19 x13)) (fp.mul RNE (fp.mul RNE x15 x18) (fp.add RNE x10 x2)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.div RNE x19 x19) (fp.mul RNE x22 x3)) (fp.neg (fp.mul RNE x8 x1))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE (fp.div RNE x12 x2) (fp.sub RNE x23 x19)) (fp.neg (fp.neg x1)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.mul RNE x20 x5)) (fp.div RNE (fp.div RNE x0 x1) (fp.neg x20))) (fp.neg (fp.mul RNE (fp.div RNE x3 x4) (fp.sub RNE x10 x15))))))
(check-sat)
