(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x4 x9) (fp.mul RNE x7 x4)) (fp.sub RNE (fp.mul RNE x3 x8) (fp.neg x7))) (fp.neg (fp.mul RNE (fp.div RNE x1 x11) (fp.add RNE x8 x11)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.add RNE x1 x9) (fp.mul RNE x2 x2)) (fp.add RNE (fp.neg x15) (fp.sub RNE x8 x2))) (fp.mul RNE (fp.add RNE (fp.div RNE x2 x13) (fp.add RNE x7 x8)) (fp.add RNE (fp.div RNE x3 x7) (fp.neg x13))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE (fp.neg x1) (fp.neg x10)) (fp.sub RNE (fp.mul RNE x0 x11) (fp.sub RNE x5 x15))) (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.sub RNE x9 x7)) (fp.add RNE (fp.add RNE x0 x15) (fp.add RNE x9 x9)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x2) (fp.div RNE x1 x0)) (fp.add RNE (fp.add RNE x1 x6) (fp.mul RNE x0 x14))) (fp.div RNE (fp.div RNE (fp.neg x1) (fp.add RNE x13 x10)) (fp.sub RNE (fp.mul RNE x14 x15) (fp.sub RNE x3 x9))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x10 x12)) (fp.sub RNE (fp.sub RNE x5 x14) (fp.neg x4))) (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.div RNE x0 x1)) (fp.sub RNE (fp.mul RNE x3 x1) (fp.div RNE x0 x6)))) (fp.neg (fp.neg (fp.div RNE (fp.add RNE x5 x5) (fp.mul RNE x15 x12))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x4) (fp.neg x10)) (fp.mul RNE (fp.sub RNE x11 x3) (fp.sub RNE x3 x8))) (fp.div RNE (fp.neg (fp.add RNE x0 x2)) (fp.div RNE (fp.div RNE x0 x10) (fp.neg x8)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.neg x15) (fp.add RNE x4 x11)) (fp.div RNE (fp.div RNE x12 x10) (fp.div RNE x10 x1))) (fp.neg (fp.add RNE (fp.sub RNE x9 x7) (fp.div RNE x15 x6))))))
(check-sat)
