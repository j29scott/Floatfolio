(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE x3 x11) (fp.mul RNE x9 x9)))
(assert (fp.leq (fp.div RNE x1 x9) (fp.add RNE x2 x4)))
(assert (fp.geq (fp.add RNE x0 x8) (fp.add RNE x7 x6)))
(assert (fp.eq (fp.div RNE x11 x2) (fp.div RNE x10 x6)))
(assert (fp.leq (fp.add RNE x0 x0) (fp.div RNE x8 x8)))
(assert (fp.geq (fp.add RNE x0 x7) (fp.mul RNE x3 x2)))
(assert (fp.geq (fp.mul RNE x8 x8) (fp.neg x4)))
(assert (fp.eq (fp.neg x5) (fp.add RNE x11 x3)))
(assert (fp.lt (fp.neg x0) (fp.div RNE x3 x7)))
(assert (fp.gt (fp.add RNE x5 x8) (fp.add RNE x1 x3)))
(assert (fp.eq (fp.div RNE x9 x1) (fp.mul RNE x0 x8)))
(assert (fp.geq (fp.sub RNE x2 x5) (fp.div RNE x10 x7)))
(check-sat)
