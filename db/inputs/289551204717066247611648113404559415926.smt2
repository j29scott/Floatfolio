(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x3 x13) (fp.add RNE x17 x14)) (fp.mul RNE (fp.neg x7) (fp.neg x0))) (fp.add RNE (fp.div RNE (fp.neg x2) (fp.neg x21)) (fp.neg (fp.sub RNE x20 x18)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.add RNE x20 x21) (fp.add RNE x2 x13)) (fp.mul RNE (fp.mul RNE x15 x10) (fp.add RNE x19 x19))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.div RNE x19 x19) (fp.neg x5)) (fp.add RNE (fp.add RNE x4 x19) (fp.sub RNE x20 x11))) (fp.sub RNE (fp.sub RNE (fp.neg x8) (fp.neg x21)) (fp.add RNE (fp.mul RNE x5 x2) (fp.add RNE x12 x22)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x12) (fp.neg x5)) (fp.neg (fp.neg x11))) (fp.add RNE (fp.add RNE (fp.div RNE x16 x9) (fp.mul RNE x22 x0)) (fp.mul RNE (fp.mul RNE x1 x19) (fp.mul RNE x17 x0))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.neg x14)) (fp.div RNE (fp.neg x5) (fp.mul RNE x0 x15)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x14 x10) (fp.sub RNE x20 x1)) (fp.add RNE (fp.sub RNE x8 x15) (fp.neg x21))) (fp.neg (fp.div RNE (fp.div RNE x2 x1) (fp.neg x21))))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.add RNE (fp.sub RNE x19 x13) (fp.div RNE x18 x14)) (fp.div RNE (fp.mul RNE x7 x5) (fp.neg x14)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.add RNE x22 x16) (fp.sub RNE x16 x18)) (fp.add RNE (fp.add RNE x14 x17) (fp.mul RNE x18 x17))) (fp.neg (fp.neg (fp.sub RNE x18 x18))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x16 x7) (fp.neg x4)) (fp.div RNE (fp.add RNE x20 x1) (fp.neg x12))) (fp.sub RNE (fp.div RNE (fp.add RNE x22 x6) (fp.neg x11)) (fp.mul RNE (fp.mul RNE x7 x21) (fp.sub RNE x6 x10)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.div RNE x9 x17) (fp.sub RNE x15 x20)) (fp.sub RNE (fp.add RNE x6 x16) (fp.div RNE x6 x14))) (fp.div RNE (fp.mul RNE (fp.add RNE x20 x16) (fp.add RNE x11 x12)) (fp.add RNE (fp.neg x0) (fp.mul RNE x0 x14))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.add RNE x1 x16) (fp.div RNE x4 x4)) (fp.div RNE (fp.add RNE x5 x14) (fp.add RNE x13 x10))) (fp.neg (fp.sub RNE (fp.add RNE x12 x15) (fp.div RNE x11 x1)))) (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x8 x4) (fp.add RNE x18 x1)) (fp.div RNE (fp.neg x18) (fp.mul RNE x10 x0))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg (fp.div RNE x2 x0)) (fp.add RNE (fp.div RNE x6 x10) (fp.neg x21))) (fp.mul RNE (fp.neg (fp.add RNE x11 x6)) (fp.div RNE (fp.sub RNE x7 x9) (fp.neg x12)))) (fp.sub RNE (fp.neg (fp.sub RNE (fp.sub RNE x7 x14) (fp.mul RNE x13 x15))) (fp.neg (fp.div RNE (fp.neg x5) (fp.sub RNE x8 x22))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg (fp.add RNE x5 x6)) (fp.neg (fp.mul RNE x4 x17))) (fp.mul RNE (fp.add RNE (fp.neg x14) (fp.div RNE x22 x22)) (fp.neg (fp.div RNE x22 x12)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x17 x7) (fp.mul RNE x5 x8)) (fp.add RNE (fp.add RNE x7 x12) (fp.div RNE x3 x6))) (fp.add RNE (fp.add RNE (fp.sub RNE x7 x1) (fp.div RNE x16 x4)) (fp.mul RNE (fp.sub RNE x16 x12) (fp.sub RNE x9 x22))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.neg (fp.sub RNE x16 x6))) (fp.sub RNE (fp.div RNE (fp.div RNE x20 x11) (fp.div RNE x17 x6)) (fp.add RNE (fp.sub RNE x13 x20) (fp.add RNE x4 x2)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.div RNE x8 x2) (fp.add RNE x15 x0))) (fp.mul RNE (fp.div RNE (fp.div RNE x22 x7) (fp.neg x22)) (fp.sub RNE (fp.div RNE x3 x9) (fp.mul RNE x13 x11))))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.add RNE (fp.div RNE x18 x11) (fp.mul RNE x21 x14)) (fp.neg (fp.mul RNE x7 x6)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.add RNE x12 x16) (fp.div RNE x22 x8)) (fp.add RNE (fp.add RNE x9 x19) (fp.sub RNE x6 x4))) (fp.neg (fp.sub RNE (fp.sub RNE x12 x12) (fp.sub RNE x11 x19))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE (fp.mul RNE x20 x5) (fp.neg x12)) (fp.div RNE (fp.sub RNE x10 x4) (fp.sub RNE x2 x21)))) (fp.neg (fp.neg (fp.sub RNE (fp.add RNE x17 x5) (fp.add RNE x11 x11))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x12 x5) (fp.mul RNE x13 x16)) (fp.neg (fp.sub RNE x21 x17))) (fp.mul RNE (fp.neg (fp.mul RNE x16 x11)) (fp.div RNE (fp.neg x5) (fp.mul RNE x4 x22)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x14) (fp.neg x17)) (fp.sub RNE (fp.div RNE x21 x5) (fp.add RNE x21 x0))) (fp.neg (fp.neg (fp.sub RNE x1 x7))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x22) (fp.add RNE x15 x12)) (fp.neg (fp.add RNE x20 x6))) (fp.div RNE (fp.neg (fp.mul RNE x20 x15)) (fp.neg (fp.add RNE x15 x7)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.sub RNE x0 x5) (fp.sub RNE x13 x1))) (fp.div RNE (fp.sub RNE (fp.sub RNE x6 x4) (fp.div RNE x5 x22)) (fp.sub RNE (fp.div RNE x18 x11) (fp.add RNE x8 x0))))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.mul RNE (fp.neg x16) (fp.add RNE x20 x16))) (fp.mul RNE (fp.add RNE (fp.mul RNE x13 x13) (fp.add RNE x3 x8)) (fp.sub RNE (fp.sub RNE x21 x18) (fp.neg x17)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.neg x14) (fp.mul RNE x18 x8))) (fp.add RNE (fp.div RNE (fp.add RNE x17 x20) (fp.add RNE x21 x17)) (fp.add RNE (fp.sub RNE x12 x4) (fp.neg x1))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.sub RNE x21 x16) (fp.add RNE x1 x5)) (fp.div RNE (fp.sub RNE x21 x20) (fp.mul RNE x0 x14))) (fp.div RNE (fp.neg (fp.neg x12)) (fp.mul RNE (fp.div RNE x14 x18) (fp.add RNE x11 x7)))) (fp.add RNE (fp.neg (fp.div RNE (fp.neg x0) (fp.sub RNE x16 x14))) (fp.sub RNE (fp.add RNE (fp.div RNE x8 x21) (fp.div RNE x10 x17)) (fp.sub RNE (fp.div RNE x1 x22) (fp.neg x9))))))
(check-sat)
