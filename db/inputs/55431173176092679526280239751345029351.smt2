(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.add RNE x12 x11) (fp.neg x6)) (fp.neg (fp.mul RNE x10 x5))))
(assert (fp.geq (fp.add RNE (fp.div RNE x9 x11) (fp.div RNE x6 x11)) (fp.div RNE (fp.sub RNE x4 x6) (fp.neg x1))))
(assert (fp.lt (fp.add RNE (fp.add RNE x7 x0) (fp.add RNE x1 x9)) (fp.neg (fp.sub RNE x0 x0))))
(assert (fp.gt (fp.mul RNE (fp.neg x7) (fp.sub RNE x1 x2)) (fp.neg (fp.sub RNE x0 x6))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x6 x5) (fp.mul RNE x2 x6)) (fp.div RNE (fp.sub RNE x1 x10) (fp.neg x12))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x8 x4) (fp.add RNE x10 x7)) (fp.sub RNE (fp.add RNE x7 x7) (fp.div RNE x0 x2))))
(assert (fp.lt (fp.div RNE (fp.div RNE x3 x6) (fp.sub RNE x3 x1)) (fp.div RNE (fp.mul RNE x3 x1) (fp.add RNE x11 x1))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x5 x3) (fp.mul RNE x8 x8)) (fp.add RNE (fp.mul RNE x12 x0) (fp.sub RNE x2 x11))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x7 x3) (fp.sub RNE x6 x10)) (fp.mul RNE (fp.div RNE x3 x10) (fp.neg x11))))
(assert (fp.gt (fp.neg (fp.add RNE x1 x3)) (fp.add RNE (fp.sub RNE x9 x12) (fp.sub RNE x5 x10))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x10 x9) (fp.neg x11)) (fp.neg (fp.sub RNE x5 x10))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x4 x12) (fp.neg x6)) (fp.neg (fp.div RNE x8 x10))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x8 x3) (fp.mul RNE x11 x10)) (fp.div RNE (fp.add RNE x12 x11) (fp.mul RNE x1 x9))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x6 x1) (fp.mul RNE x10 x7)) (fp.mul RNE (fp.sub RNE x12 x4) (fp.div RNE x5 x1))))
(assert (fp.gt (fp.neg (fp.mul RNE x2 x10)) (fp.add RNE (fp.mul RNE x4 x5) (fp.div RNE x6 x11))))
(assert (fp.eq (fp.div RNE (fp.neg x5) (fp.mul RNE x5 x11)) (fp.div RNE (fp.mul RNE x6 x1) (fp.neg x4))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x4 x9) (fp.mul RNE x11 x10)) (fp.neg (fp.add RNE x2 x2))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x3) (fp.sub RNE x4 x5)) (fp.mul RNE (fp.add RNE x1 x3) (fp.div RNE x1 x10))))
(assert (fp.geq (fp.add RNE (fp.neg x5) (fp.div RNE x1 x4)) (fp.add RNE (fp.sub RNE x9 x4) (fp.div RNE x9 x4))))
(check-sat)
