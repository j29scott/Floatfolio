(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE x13 x3) (fp.add RNE x1 x7)))
(assert (fp.geq (fp.add RNE x11 x10) (fp.sub RNE x0 x0)))
(assert (fp.leq (fp.div RNE x4 x4) (fp.div RNE x7 x8)))
(assert (fp.gt (fp.mul RNE x4 x1) (fp.add RNE x7 x7)))
(assert (fp.eq (fp.mul RNE x4 x1) (fp.sub RNE x1 x10)))
(assert (fp.eq (fp.div RNE x9 x15) (fp.mul RNE x15 x14)))
(assert (fp.geq (fp.neg x15) (fp.sub RNE x10 x7)))
(assert (fp.geq (fp.neg x6) (fp.neg x7)))
(assert (fp.geq (fp.div RNE x6 x12) (fp.neg x6)))
(assert (fp.leq (fp.mul RNE x8 x11) (fp.div RNE x13 x9)))
(assert (fp.eq (fp.neg x10) (fp.div RNE x10 x15)))
(assert (fp.leq (fp.add RNE x14 x11) (fp.mul RNE x1 x14)))
(check-sat)
