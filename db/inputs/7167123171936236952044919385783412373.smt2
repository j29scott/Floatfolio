(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x10 x8) (fp.div RNE x10 x3)) (fp.div RNE (fp.sub RNE x2 x0) (fp.neg x10))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x7 x5) (fp.neg x0)) (fp.add RNE (fp.neg x3) (fp.mul RNE x5 x4))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x9 x7) (fp.add RNE x0 x7)) (fp.neg (fp.neg x9))))
(assert (fp.eq (fp.div RNE (fp.div RNE x2 x0) (fp.sub RNE x8 x1)) (fp.mul RNE (fp.sub RNE x3 x9) (fp.add RNE x4 x5))))
(assert (fp.leq (fp.neg (fp.mul RNE x2 x6)) (fp.div RNE (fp.neg x1) (fp.neg x7))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x7 x10) (fp.sub RNE x0 x7)) (fp.div RNE (fp.sub RNE x0 x1) (fp.sub RNE x8 x5))))
(check-sat)
