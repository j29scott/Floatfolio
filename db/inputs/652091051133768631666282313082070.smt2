(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.neg x10) (fp.div RNE x9 x5)) (fp.mul RNE (fp.sub RNE x9 x7) (fp.mul RNE x1 x3))))
(assert (fp.leq (fp.div RNE (fp.div RNE x1 x8) (fp.div RNE x6 x2)) (fp.sub RNE (fp.add RNE x0 x5) (fp.neg x10))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x2 x7) (fp.neg x10)) (fp.add RNE (fp.sub RNE x0 x5) (fp.add RNE x8 x4))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x10 x1) (fp.sub RNE x6 x1)) (fp.mul RNE (fp.sub RNE x5 x2) (fp.div RNE x7 x9))))
(assert (fp.leq (fp.add RNE (fp.add RNE x5 x8) (fp.neg x4)) (fp.sub RNE (fp.mul RNE x2 x6) (fp.add RNE x6 x4))))
(assert (fp.gt (fp.div RNE (fp.add RNE x2 x4) (fp.div RNE x0 x0)) (fp.neg (fp.div RNE x3 x4))))
(check-sat)
