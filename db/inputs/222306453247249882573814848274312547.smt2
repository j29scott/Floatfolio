(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.mul RNE x9 x8) (fp.add RNE x12 x14)) (fp.sub RNE (fp.sub RNE x4 x12) (fp.sub RNE x10 x6))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x12 x14) (fp.div RNE x8 x6)) (fp.neg (fp.add RNE x3 x7))))
(assert (fp.eq (fp.neg (fp.div RNE x11 x9)) (fp.add RNE (fp.sub RNE x10 x8) (fp.add RNE x7 x11))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x3 x6) (fp.add RNE x4 x2)) (fp.mul RNE (fp.div RNE x3 x5) (fp.div RNE x13 x13))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x14 x9) (fp.sub RNE x8 x9)) (fp.mul RNE (fp.add RNE x14 x13) (fp.neg x1))))
(assert (fp.gt (fp.sub RNE (fp.neg x5) (fp.div RNE x5 x2)) (fp.add RNE (fp.div RNE x7 x12) (fp.neg x0))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x11 x1) (fp.mul RNE x4 x0)) (fp.add RNE (fp.div RNE x12 x0) (fp.add RNE x0 x5))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x0 x5) (fp.mul RNE x2 x0)) (fp.add RNE (fp.div RNE x9 x13) (fp.div RNE x8 x2))))
(assert (fp.eq (fp.neg (fp.sub RNE x7 x10)) (fp.add RNE (fp.neg x7) (fp.add RNE x7 x13))))
(assert (fp.eq (fp.mul RNE (fp.neg x14) (fp.neg x5)) (fp.add RNE (fp.mul RNE x10 x5) (fp.div RNE x2 x7))))
(assert (fp.gt (fp.div RNE (fp.add RNE x9 x12) (fp.add RNE x9 x6)) (fp.div RNE (fp.div RNE x13 x14) (fp.sub RNE x11 x11))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x8 x12) (fp.sub RNE x3 x1)) (fp.add RNE (fp.neg x14) (fp.div RNE x5 x9))))
(assert (fp.leq (fp.add RNE (fp.add RNE x4 x9) (fp.div RNE x13 x0)) (fp.mul RNE (fp.div RNE x6 x10) (fp.div RNE x9 x14))))
(assert (fp.lt (fp.neg (fp.mul RNE x3 x11)) (fp.sub RNE (fp.sub RNE x14 x4) (fp.div RNE x11 x7))))
(assert (fp.lt (fp.sub RNE (fp.neg x13) (fp.div RNE x5 x0)) (fp.mul RNE (fp.sub RNE x12 x8) (fp.div RNE x12 x7))))
(assert (fp.leq (fp.div RNE (fp.neg x0) (fp.neg x4)) (fp.add RNE (fp.sub RNE x13 x8) (fp.sub RNE x10 x5))))
(assert (fp.lt (fp.neg (fp.neg x0)) (fp.mul RNE (fp.div RNE x6 x1) (fp.add RNE x11 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x10 x1) (fp.add RNE x5 x4)) (fp.add RNE (fp.add RNE x3 x0) (fp.mul RNE x8 x4))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x9 x6) (fp.mul RNE x14 x10)) (fp.neg (fp.sub RNE x9 x14))))
(assert (fp.gt (fp.neg (fp.div RNE x9 x11)) (fp.sub RNE (fp.neg x6) (fp.add RNE x9 x6))))
(check-sat)
