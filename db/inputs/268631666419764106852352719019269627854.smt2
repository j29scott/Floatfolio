(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x10 x6) (fp.add RNE x2 x12)) (fp.mul RNE (fp.sub RNE x3 x4) (fp.neg x12))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x6 x19) (fp.neg x16)) (fp.neg (fp.neg x5))))
(assert (fp.geq (fp.add RNE (fp.neg x11) (fp.div RNE x20 x4)) (fp.div RNE (fp.sub RNE x6 x3) (fp.neg x7))))
(assert (fp.lt (fp.add RNE (fp.div RNE x12 x19) (fp.sub RNE x18 x4)) (fp.sub RNE (fp.mul RNE x8 x20) (fp.mul RNE x8 x0))))
(assert (fp.lt (fp.add RNE (fp.neg x13) (fp.div RNE x2 x8)) (fp.add RNE (fp.neg x0) (fp.div RNE x8 x13))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x14 x12) (fp.neg x4)) (fp.add RNE (fp.neg x12) (fp.sub RNE x17 x5))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x6 x8) (fp.add RNE x18 x21)) (fp.div RNE (fp.div RNE x9 x7) (fp.mul RNE x14 x9))))
(check-sat)
