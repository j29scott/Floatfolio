(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x3 x1) (fp.neg x1)) (fp.div RNE (fp.add RNE x3 x5) (fp.div RNE x11 x8))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x11) (fp.add RNE x13 x4)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x14 x13)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x9 x12) (fp.neg x2)) (fp.div RNE (fp.add RNE x12 x1) (fp.add RNE x14 x12))) (fp.neg (fp.add RNE (fp.add RNE x5 x7) (fp.div RNE x1 x2)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x5 x12) (fp.neg x8)) (fp.div RNE (fp.sub RNE x9 x7) (fp.neg x9))) (fp.neg (fp.div RNE (fp.neg x3) (fp.neg x0)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x9 x4) (fp.div RNE x6 x6)) (fp.mul RNE (fp.add RNE x6 x0) (fp.sub RNE x2 x4))) (fp.mul RNE (fp.add RNE (fp.div RNE x15 x6) (fp.neg x6)) (fp.neg (fp.mul RNE x9 x11)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x15 x15) (fp.div RNE x7 x8))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x15 x15) (fp.add RNE x5 x2)) (fp.mul RNE (fp.add RNE x14 x10) (fp.neg x11)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x11 x0) (fp.sub RNE x11 x9)) (fp.add RNE (fp.add RNE x6 x12) (fp.add RNE x5 x9))) (fp.add RNE (fp.div RNE (fp.sub RNE x14 x0) (fp.add RNE x6 x4)) (fp.sub RNE (fp.add RNE x3 x2) (fp.mul RNE x7 x14)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE x10 x13) (fp.add RNE x2 x11)) (fp.mul RNE (fp.sub RNE x9 x15) (fp.add RNE x10 x9))) (fp.mul RNE (fp.add RNE (fp.div RNE x3 x1) (fp.mul RNE x6 x4)) (fp.neg (fp.neg x8)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x7 x9) (fp.sub RNE x12 x7))) (fp.add RNE (fp.add RNE (fp.mul RNE x9 x1) (fp.neg x11)) (fp.mul RNE (fp.mul RNE x5 x2) (fp.div RNE x2 x7)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg x0) (fp.mul RNE x12 x14)) (fp.neg (fp.div RNE x11 x11))) (fp.mul RNE (fp.sub RNE (fp.neg x7) (fp.neg x1)) (fp.sub RNE (fp.add RNE x10 x5) (fp.div RNE x14 x3)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE x2 x9) (fp.mul RNE x9 x11))) (fp.add RNE (fp.sub RNE (fp.add RNE x0 x12) (fp.div RNE x9 x15)) (fp.sub RNE (fp.mul RNE x12 x13) (fp.mul RNE x10 x6)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x0 x11) (fp.neg x11)) (fp.add RNE (fp.mul RNE x0 x15) (fp.neg x1))) (fp.add RNE (fp.mul RNE (fp.add RNE x14 x10) (fp.mul RNE x6 x7)) (fp.mul RNE (fp.sub RNE x1 x0) (fp.add RNE x0 x0)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x4 x5) (fp.add RNE x4 x11)) (fp.mul RNE (fp.mul RNE x3 x1) (fp.div RNE x3 x4))) (fp.neg (fp.add RNE (fp.div RNE x15 x4) (fp.add RNE x12 x12)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.sub RNE x15 x15) (fp.neg x13)) (fp.neg (fp.sub RNE x13 x9))) (fp.neg (fp.sub RNE (fp.neg x12) (fp.div RNE x7 x2)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE x1 x2) (fp.sub RNE x7 x14))) (fp.neg (fp.add RNE (fp.sub RNE x9 x15) (fp.neg x14)))))
(check-sat)
