(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x5) (fp.neg x4)) (fp.sub RNE (fp.add RNE x4 x2) (fp.add RNE x5 x1))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x4 x2) (fp.add RNE x3 x4)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x1 x0))))
(assert (fp.eq (fp.add RNE (fp.neg x0) (fp.div RNE x1 x0)) (fp.neg (fp.neg x2))))
(assert (fp.gt (fp.add RNE (fp.neg x5) (fp.sub RNE x2 x0)) (fp.add RNE (fp.sub RNE x4 x0) (fp.neg x3))))
(assert (fp.gt (fp.neg (fp.sub RNE x2 x3)) (fp.add RNE (fp.mul RNE x1 x3) (fp.sub RNE x3 x4))))
(assert (fp.geq (fp.div RNE (fp.add RNE x5 x0) (fp.neg x2)) (fp.add RNE (fp.neg x0) (fp.div RNE x4 x0))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x0 x2) (fp.sub RNE x3 x0)) (fp.neg (fp.sub RNE x2 x2))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x4 x5) (fp.neg x2)) (fp.div RNE (fp.div RNE x5 x2) (fp.div RNE x3 x5))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x1 x0) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x5 x5) (fp.neg x5))))
(check-sat)
