(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x5) (fp.mul RNE x0 x2)) (fp.mul RNE (fp.sub RNE x1 x1) (fp.mul RNE x2 x1))) (fp.sub RNE (fp.neg (fp.div RNE x3 x2)) (fp.mul RNE (fp.sub RNE x6 x3) (fp.div RNE x1 x3)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x4) (fp.neg x3)) (fp.add RNE (fp.div RNE x5 x2) (fp.div RNE x1 x6))) (fp.sub RNE (fp.sub RNE (fp.neg x1) (fp.div RNE x5 x3)) (fp.neg (fp.add RNE x1 x5))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE (fp.div RNE x4 x0) (fp.add RNE x5 x4)) (fp.sub RNE (fp.add RNE x0 x3) (fp.sub RNE x5 x2))) (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x4) (fp.mul RNE x6 x0)) (fp.sub RNE (fp.add RNE x0 x5) (fp.mul RNE x0 x2)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x6)) (fp.div RNE (fp.neg x4) (fp.div RNE x0 x6))) (fp.neg (fp.sub RNE (fp.neg x3) (fp.add RNE x4 x0))))))
(check-sat)
