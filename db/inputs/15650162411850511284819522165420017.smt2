(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE x16 x14) (fp.div RNE x10 x12))) (fp.mul RNE (fp.mul RNE (fp.neg x5) (fp.neg x0)) (fp.mul RNE (fp.div RNE x9 x10) (fp.neg x10)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x15) (fp.add RNE x12 x2))) (fp.add RNE (fp.add RNE (fp.div RNE x18 x9) (fp.add RNE x10 x12)) (fp.add RNE (fp.add RNE x19 x15) (fp.div RNE x17 x14)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x10 x5) (fp.neg x9)) (fp.sub RNE (fp.neg x1) (fp.neg x6))) (fp.div RNE (fp.mul RNE (fp.div RNE x10 x17) (fp.div RNE x9 x6)) (fp.div RNE (fp.div RNE x5 x3) (fp.sub RNE x2 x1)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg x15) (fp.neg x3)) (fp.add RNE (fp.neg x0) (fp.div RNE x16 x13))) (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x3) (fp.div RNE x15 x12)) (fp.div RNE (fp.mul RNE x14 x7) (fp.div RNE x5 x1)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x16 x2) (fp.sub RNE x19 x20)) (fp.neg (fp.neg x10))) (fp.neg (fp.add RNE (fp.div RNE x16 x15) (fp.add RNE x13 x18)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x8 x5) (fp.div RNE x2 x12))) (fp.sub RNE (fp.div RNE (fp.div RNE x17 x1) (fp.mul RNE x20 x5)) (fp.sub RNE (fp.add RNE x1 x18) (fp.sub RNE x17 x15)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x10 x11) (fp.neg x1))) (fp.add RNE (fp.sub RNE (fp.add RNE x20 x12) (fp.mul RNE x0 x13)) (fp.neg (fp.mul RNE x7 x10)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.div RNE x9 x3) (fp.mul RNE x2 x9)) (fp.add RNE (fp.neg x8) (fp.add RNE x3 x2))) (fp.neg (fp.div RNE (fp.sub RNE x14 x0) (fp.div RNE x4 x9)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x8) (fp.add RNE x3 x17)) (fp.div RNE (fp.sub RNE x6 x20) (fp.div RNE x18 x20))) (fp.neg (fp.div RNE (fp.mul RNE x17 x19) (fp.div RNE x8 x11)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x5 x5) (fp.sub RNE x8 x9)) (fp.mul RNE (fp.sub RNE x12 x9) (fp.add RNE x6 x3))) (fp.div RNE (fp.sub RNE (fp.div RNE x15 x11) (fp.neg x0)) (fp.neg (fp.neg x7)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.sub RNE x16 x19)) (fp.neg (fp.sub RNE x20 x20))) (fp.neg (fp.neg (fp.mul RNE x10 x12)))))
(check-sat)
