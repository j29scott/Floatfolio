(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x4) (fp.mul RNE x15 x7)) (fp.neg (fp.div RNE x15 x10))) (fp.add RNE (fp.sub RNE (fp.add RNE x4 x7) (fp.mul RNE x13 x6)) (fp.neg (fp.add RNE x11 x12)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.sub RNE x4 x1)) (fp.neg (fp.mul RNE x4 x1))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x13 x13) (fp.mul RNE x2 x0)) (fp.neg (fp.mul RNE x9 x3))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x10 x7) (fp.neg x15)) (fp.neg (fp.mul RNE x9 x4))) (fp.neg (fp.mul RNE (fp.add RNE x4 x11) (fp.sub RNE x8 x3)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.sub RNE x9 x9) (fp.sub RNE x9 x15)) (fp.div RNE (fp.div RNE x0 x6) (fp.div RNE x3 x2))) (fp.sub RNE (fp.sub RNE (fp.div RNE x6 x13) (fp.mul RNE x7 x2)) (fp.sub RNE (fp.sub RNE x15 x4) (fp.div RNE x2 x4))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.div RNE (fp.mul RNE x0 x13) (fp.neg x1))) (fp.neg (fp.div RNE (fp.add RNE x8 x7) (fp.sub RNE x8 x13)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.div RNE x10 x0)) (fp.neg (fp.add RNE x5 x8))) (fp.div RNE (fp.neg (fp.sub RNE x15 x3)) (fp.neg (fp.sub RNE x10 x5))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE (fp.div RNE x2 x10) (fp.mul RNE x3 x1)) (fp.add RNE (fp.div RNE x11 x1) (fp.neg x14))) (fp.div RNE (fp.add RNE (fp.sub RNE x4 x11) (fp.div RNE x1 x9)) (fp.add RNE (fp.sub RNE x0 x12) (fp.sub RNE x6 x7)))) (fp.neg (fp.div RNE (fp.div RNE (fp.neg x5) (fp.add RNE x1 x5)) (fp.div RNE (fp.add RNE x1 x9) (fp.neg x6))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.neg (fp.div RNE x3 x12)) (fp.div RNE (fp.mul RNE x9 x6) (fp.add RNE x11 x12))) (fp.sub RNE (fp.mul RNE (fp.add RNE x4 x14) (fp.mul RNE x12 x10)) (fp.add RNE (fp.mul RNE x12 x14) (fp.neg x11)))) (fp.add RNE (fp.neg (fp.neg (fp.neg x15))) (fp.add RNE (fp.mul RNE (fp.neg x11) (fp.div RNE x2 x4)) (fp.mul RNE (fp.mul RNE x4 x8) (fp.div RNE x0 x8))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x15 x0) (fp.add RNE x4 x12)) (fp.sub RNE (fp.neg x13) (fp.div RNE x11 x0))) (fp.add RNE (fp.sub RNE (fp.sub RNE x14 x1) (fp.neg x2)) (fp.neg (fp.neg x4)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x3) (fp.add RNE x10 x3)) (fp.add RNE (fp.sub RNE x13 x10) (fp.mul RNE x14 x4))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x5) (fp.add RNE x1 x10)) (fp.div RNE (fp.neg x7) (fp.add RNE x11 x1))))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x13 x5) (fp.mul RNE x1 x10)) (fp.mul RNE (fp.add RNE x11 x3) (fp.div RNE x11 x10)))) (fp.neg (fp.neg (fp.sub RNE (fp.add RNE x15 x15) (fp.neg x5))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x0) (fp.sub RNE x10 x3)) (fp.neg (fp.add RNE x14 x2))) (fp.mul RNE (fp.add RNE (fp.sub RNE x4 x4) (fp.sub RNE x4 x14)) (fp.sub RNE (fp.div RNE x8 x3) (fp.add RNE x6 x11)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x1 x15)) (fp.mul RNE (fp.add RNE x4 x4) (fp.div RNE x12 x1))) (fp.mul RNE (fp.add RNE (fp.div RNE x0 x12) (fp.neg x4)) (fp.add RNE (fp.div RNE x10 x13) (fp.div RNE x2 x4))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.div RNE (fp.mul RNE x14 x7) (fp.neg x15)) (fp.add RNE (fp.neg x12) (fp.neg x9))) (fp.neg (fp.sub RNE (fp.sub RNE x3 x11) (fp.neg x9)))) (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x11 x10) (fp.neg x2)) (fp.div RNE (fp.add RNE x12 x12) (fp.div RNE x13 x11))))))
(check-sat)
