(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x8 x0) (fp.neg x8)) (fp.div RNE (fp.mul RNE x15 x5) (fp.neg x11))) (fp.div RNE (fp.mul RNE (fp.sub RNE x2 x16) (fp.sub RNE x16 x8)) (fp.sub RNE (fp.add RNE x13 x4) (fp.div RNE x16 x10)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x1) (fp.add RNE x16 x2)) (fp.sub RNE (fp.div RNE x15 x8) (fp.sub RNE x15 x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x8) (fp.sub RNE x15 x2)) (fp.sub RNE (fp.add RNE x4 x3) (fp.add RNE x2 x8)))))
(check-sat)
