(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.add RNE x4 x14)) (fp.mul RNE (fp.neg x3) (fp.add RNE x4 x14))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x7 x0) (fp.sub RNE x6 x7)) (fp.neg (fp.mul RNE x0 x9))))
(assert (fp.eq (fp.neg (fp.sub RNE x7 x15)) (fp.add RNE (fp.sub RNE x0 x0) (fp.sub RNE x6 x3))))
(assert (fp.eq (fp.add RNE (fp.neg x11) (fp.sub RNE x5 x6)) (fp.add RNE (fp.neg x9) (fp.add RNE x4 x8))))
(assert (fp.gt (fp.neg (fp.neg x11)) (fp.neg (fp.add RNE x11 x0))))
(assert (fp.eq (fp.div RNE (fp.add RNE x13 x0) (fp.add RNE x7 x13)) (fp.neg (fp.sub RNE x5 x1))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x3 x9) (fp.sub RNE x6 x2)) (fp.mul RNE (fp.neg x2) (fp.div RNE x15 x0))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x12 x10) (fp.sub RNE x8 x0)) (fp.neg (fp.div RNE x10 x15))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x13 x8) (fp.sub RNE x2 x8)) (fp.add RNE (fp.sub RNE x14 x13) (fp.add RNE x4 x12))))
(assert (fp.eq (fp.neg (fp.mul RNE x6 x1)) (fp.mul RNE (fp.neg x3) (fp.neg x11))))
(assert (fp.gt (fp.div RNE (fp.add RNE x10 x13) (fp.div RNE x4 x4)) (fp.mul RNE (fp.sub RNE x14 x0) (fp.div RNE x6 x5))))
(assert (fp.eq (fp.div RNE (fp.div RNE x4 x10) (fp.mul RNE x10 x12)) (fp.add RNE (fp.sub RNE x5 x9) (fp.div RNE x15 x9))))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x13)) (fp.add RNE (fp.add RNE x2 x11) (fp.sub RNE x3 x11))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x1 x15) (fp.mul RNE x10 x11)) (fp.div RNE (fp.neg x4) (fp.mul RNE x10 x7))))
(assert (fp.eq (fp.add RNE (fp.div RNE x6 x0) (fp.mul RNE x15 x4)) (fp.sub RNE (fp.mul RNE x2 x5) (fp.sub RNE x0 x13))))
(assert (fp.eq (fp.add RNE (fp.neg x12) (fp.add RNE x9 x4)) (fp.div RNE (fp.neg x11) (fp.neg x3))))
(assert (fp.eq (fp.sub RNE (fp.neg x10) (fp.add RNE x9 x14)) (fp.add RNE (fp.neg x4) (fp.mul RNE x4 x14))))
(check-sat)
