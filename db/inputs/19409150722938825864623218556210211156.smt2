(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.neg x0) (fp.div RNE x3 x4)) (fp.div RNE (fp.div RNE x3 x2) (fp.sub RNE x5 x10))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x5 x9) (fp.div RNE x11 x11)) (fp.add RNE (fp.div RNE x8 x10) (fp.neg x5))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x7 x6) (fp.add RNE x5 x5)) (fp.add RNE (fp.neg x5) (fp.div RNE x4 x9))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x4 x7) (fp.neg x10)) (fp.sub RNE (fp.neg x3) (fp.add RNE x11 x3))))
(assert (fp.eq (fp.neg (fp.sub RNE x8 x9)) (fp.sub RNE (fp.neg x2) (fp.sub RNE x7 x10))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x2 x4) (fp.neg x11)) (fp.mul RNE (fp.neg x7) (fp.neg x4))))
(check-sat)
