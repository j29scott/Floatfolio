(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.div RNE x2 x1) (fp.sub RNE x12 x13)) (fp.sub RNE (fp.mul RNE x1 x0) (fp.sub RNE x13 x11))))
(assert (fp.lt (fp.add RNE (fp.add RNE x7 x9) (fp.div RNE x12 x1)) (fp.add RNE (fp.mul RNE x2 x4) (fp.div RNE x11 x2))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x6 x11) (fp.neg x4)) (fp.div RNE (fp.add RNE x9 x6) (fp.sub RNE x12 x2))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x13 x5) (fp.sub RNE x1 x10)) (fp.sub RNE (fp.div RNE x3 x8) (fp.add RNE x0 x0))))
(assert (fp.eq (fp.neg (fp.mul RNE x9 x0)) (fp.sub RNE (fp.div RNE x12 x9) (fp.mul RNE x13 x5))))
(assert (fp.gt (fp.add RNE (fp.add RNE x7 x0) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x8 x5) (fp.add RNE x12 x0))))
(assert (fp.gt (fp.neg (fp.div RNE x12 x0)) (fp.add RNE (fp.sub RNE x0 x9) (fp.div RNE x13 x3))))
(assert (fp.lt (fp.mul RNE (fp.neg x4) (fp.mul RNE x11 x5)) (fp.div RNE (fp.mul RNE x12 x8) (fp.sub RNE x8 x11))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x1 x7) (fp.add RNE x5 x4)) (fp.neg (fp.neg x7))))
(assert (fp.lt (fp.add RNE (fp.neg x8) (fp.mul RNE x2 x4)) (fp.mul RNE (fp.mul RNE x8 x10) (fp.add RNE x2 x9))))
(check-sat)
