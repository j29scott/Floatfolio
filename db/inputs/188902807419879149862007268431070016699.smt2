(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.div RNE x14 x5) (fp.div RNE x10 x17)) (fp.mul RNE (fp.sub RNE x20 x13) (fp.div RNE x22 x19))) (fp.add RNE (fp.div RNE (fp.mul RNE x2 x4) (fp.mul RNE x7 x2)) (fp.sub RNE (fp.sub RNE x13 x9) (fp.add RNE x20 x13)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.div RNE x21 x14) (fp.add RNE x11 x13)) (fp.div RNE (fp.div RNE x20 x2) (fp.div RNE x9 x16))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x19 x7) (fp.add RNE x10 x13)) (fp.div RNE (fp.sub RNE x22 x14) (fp.neg x7)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x22 x16)) (fp.add RNE (fp.add RNE x17 x15) (fp.sub RNE x3 x16))) (fp.add RNE (fp.mul RNE (fp.div RNE x9 x10) (fp.div RNE x8 x4)) (fp.div RNE (fp.neg x1) (fp.mul RNE x7 x19)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.add RNE x19 x1) (fp.add RNE x2 x18))) (fp.div RNE (fp.div RNE (fp.sub RNE x0 x6) (fp.neg x15)) (fp.sub RNE (fp.mul RNE x15 x4) (fp.sub RNE x0 x14)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.div RNE x11 x0)) (fp.sub RNE (fp.add RNE x13 x17) (fp.add RNE x0 x18))) (fp.neg (fp.sub RNE (fp.div RNE x15 x18) (fp.mul RNE x21 x17)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.add RNE x14 x9) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x10 x2) (fp.neg x14))) (fp.sub RNE (fp.add RNE (fp.add RNE x0 x22) (fp.mul RNE x18 x5)) (fp.div RNE (fp.mul RNE x4 x14) (fp.div RNE x16 x8)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x15 x12) (fp.neg x4)) (fp.mul RNE (fp.mul RNE x4 x21) (fp.neg x8))) (fp.mul RNE (fp.sub RNE (fp.neg x19) (fp.add RNE x5 x14)) (fp.add RNE (fp.add RNE x1 x11) (fp.sub RNE x16 x18)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x9 x21) (fp.sub RNE x22 x18))) (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x22) (fp.sub RNE x0 x9)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x2 x6)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE x9 x3) (fp.div RNE x15 x7)) (fp.mul RNE (fp.div RNE x0 x13) (fp.sub RNE x3 x11))) (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x8) (fp.mul RNE x21 x22)) (fp.div RNE (fp.neg x9) (fp.add RNE x16 x4)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x16 x0) (fp.mul RNE x8 x14)) (fp.mul RNE (fp.div RNE x0 x4) (fp.neg x5))) (fp.div RNE (fp.add RNE (fp.neg x10) (fp.mul RNE x7 x17)) (fp.neg (fp.neg x10)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE x1 x21) (fp.add RNE x12 x4)) (fp.add RNE (fp.neg x4) (fp.neg x11))) (fp.div RNE (fp.neg (fp.sub RNE x22 x15)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x11 x15)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE x6 x6) (fp.div RNE x19 x19)) (fp.mul RNE (fp.neg x11) (fp.mul RNE x11 x15))) (fp.mul RNE (fp.add RNE (fp.add RNE x13 x16) (fp.add RNE x3 x0)) (fp.add RNE (fp.sub RNE x16 x22) (fp.div RNE x9 x18)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg x8)) (fp.mul RNE (fp.div RNE x6 x17) (fp.div RNE x10 x9))) (fp.neg (fp.add RNE (fp.mul RNE x6 x14) (fp.add RNE x15 x19)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x18 x10)) (fp.add RNE (fp.mul RNE x6 x5) (fp.neg x12))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x22 x0) (fp.div RNE x14 x20)) (fp.mul RNE (fp.sub RNE x9 x22) (fp.sub RNE x16 x3)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.mul RNE x7 x17) (fp.add RNE x17 x5))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x19 x16) (fp.div RNE x22 x1)) (fp.sub RNE (fp.sub RNE x11 x17) (fp.add RNE x4 x18)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.neg x3) (fp.div RNE x19 x7)) (fp.mul RNE (fp.sub RNE x14 x13) (fp.mul RNE x12 x3))) (fp.neg (fp.neg (fp.mul RNE x20 x12)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x8) (fp.sub RNE x11 x2)) (fp.add RNE (fp.sub RNE x20 x19) (fp.sub RNE x5 x15))) (fp.neg (fp.sub RNE (fp.div RNE x15 x14) (fp.sub RNE x20 x11)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.div RNE x21 x11) (fp.div RNE x21 x2))) (fp.neg (fp.div RNE (fp.sub RNE x22 x10) (fp.neg x22)))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x7 x16))) (fp.mul RNE (fp.add RNE (fp.div RNE x18 x22) (fp.sub RNE x8 x4)) (fp.neg (fp.add RNE x1 x9)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.sub RNE x0 x17)) (fp.sub RNE (fp.sub RNE x20 x22) (fp.mul RNE x18 x10))) (fp.add RNE (fp.sub RNE (fp.neg x5) (fp.sub RNE x8 x11)) (fp.neg (fp.mul RNE x14 x5)))))
(check-sat)
