(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x6) (fp.div RNE x1 x7)) (fp.add RNE (fp.mul RNE x1 x4) (fp.sub RNE x0 x4))) (fp.div RNE (fp.sub RNE (fp.div RNE x4 x0) (fp.div RNE x9 x4)) (fp.neg (fp.div RNE x8 x4)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.mul RNE x9 x6) (fp.add RNE x2 x1))) (fp.sub RNE (fp.neg (fp.add RNE x2 x2)) (fp.neg (fp.mul RNE x10 x2)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x8) (fp.sub RNE x8 x3)) (fp.div RNE (fp.sub RNE x3 x7) (fp.mul RNE x0 x6))) (fp.div RNE (fp.add RNE (fp.sub RNE x6 x6) (fp.add RNE x2 x3)) (fp.add RNE (fp.mul RNE x4 x6) (fp.sub RNE x1 x10)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x9 x4) (fp.add RNE x0 x0))) (fp.mul RNE (fp.div RNE (fp.mul RNE x5 x2) (fp.add RNE x2 x10)) (fp.add RNE (fp.div RNE x3 x9) (fp.add RNE x0 x5)))))
(check-sat)
