(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x3) (fp.neg x4)))
(assert (fp.gt (fp.div RNE x7 x8) (fp.sub RNE x1 x0)))
(assert (fp.gt (fp.add RNE x1 x0) (fp.div RNE x1 x7)))
(assert (fp.geq (fp.sub RNE x8 x0) (fp.mul RNE x7 x2)))
(assert (fp.leq (fp.mul RNE x1 x7) (fp.add RNE x3 x7)))
(assert (fp.lt (fp.neg x8) (fp.div RNE x7 x4)))
(assert (fp.lt (fp.sub RNE x0 x8) (fp.div RNE x8 x5)))
(assert (fp.geq (fp.div RNE x8 x8) (fp.div RNE x4 x1)))
(assert (fp.eq (fp.sub RNE x4 x2) (fp.add RNE x0 x0)))
(assert (fp.leq (fp.mul RNE x7 x0) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x4 x3) (fp.add RNE x9 x5)))
(assert (fp.leq (fp.add RNE x9 x2) (fp.div RNE x1 x2)))
(check-sat)
