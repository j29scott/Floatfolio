(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.add RNE x5 x5) (fp.neg x7)) (fp.add RNE (fp.add RNE x5 x5) (fp.neg x3))))
(assert (fp.lt (fp.div RNE (fp.neg x5) (fp.mul RNE x0 x15)) (fp.div RNE (fp.add RNE x2 x7) (fp.add RNE x0 x5))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x3 x0) (fp.add RNE x0 x17)) (fp.add RNE (fp.sub RNE x5 x11) (fp.add RNE x17 x9))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x4 x4) (fp.sub RNE x5 x17)) (fp.neg (fp.mul RNE x11 x16))))
(assert (fp.eq (fp.sub RNE (fp.neg x1) (fp.sub RNE x14 x4)) (fp.div RNE (fp.sub RNE x10 x4) (fp.div RNE x5 x7))))
(assert (fp.gt (fp.neg (fp.sub RNE x8 x3)) (fp.div RNE (fp.add RNE x7 x8) (fp.neg x12))))
(assert (fp.lt (fp.add RNE (fp.add RNE x8 x3) (fp.neg x8)) (fp.add RNE (fp.add RNE x8 x1) (fp.mul RNE x2 x14))))
(assert (fp.lt (fp.sub RNE (fp.neg x14) (fp.div RNE x6 x5)) (fp.div RNE (fp.sub RNE x16 x8) (fp.add RNE x11 x14))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x0 x17) (fp.div RNE x12 x8)) (fp.mul RNE (fp.neg x7) (fp.neg x5))))
(assert (fp.gt (fp.add RNE (fp.div RNE x14 x8) (fp.mul RNE x13 x9)) (fp.mul RNE (fp.div RNE x9 x3) (fp.mul RNE x16 x8))))
(assert (fp.geq (fp.div RNE (fp.div RNE x15 x12) (fp.add RNE x3 x7)) (fp.sub RNE (fp.div RNE x16 x17) (fp.sub RNE x12 x5))))
(assert (fp.eq (fp.sub RNE (fp.neg x14) (fp.sub RNE x16 x17)) (fp.mul RNE (fp.div RNE x1 x3) (fp.add RNE x5 x7))))
(assert (fp.eq (fp.mul RNE (fp.neg x3) (fp.neg x13)) (fp.add RNE (fp.sub RNE x16 x17) (fp.sub RNE x9 x8))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x2 x14) (fp.neg x5)) (fp.add RNE (fp.mul RNE x8 x12) (fp.add RNE x1 x10))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x10 x12) (fp.div RNE x9 x10)) (fp.neg (fp.neg x15))))
(assert (fp.gt (fp.add RNE (fp.neg x14) (fp.sub RNE x0 x3)) (fp.mul RNE (fp.add RNE x13 x3) (fp.mul RNE x13 x3))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x6) (fp.sub RNE x13 x15)) (fp.add RNE (fp.neg x12) (fp.add RNE x8 x17))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x8 x16) (fp.sub RNE x16 x6)) (fp.sub RNE (fp.add RNE x16 x17) (fp.sub RNE x10 x15))))
(check-sat)
