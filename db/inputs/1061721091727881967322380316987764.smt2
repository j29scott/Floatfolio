(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x6 x13) (fp.neg x16)))
(assert (fp.lt (fp.sub RNE x10 x7) (fp.div RNE x8 x13)))
(assert (fp.lt (fp.add RNE x7 x12) (fp.sub RNE x7 x13)))
(assert (fp.leq (fp.add RNE x15 x13) (fp.sub RNE x2 x2)))
(assert (fp.leq (fp.sub RNE x16 x2) (fp.neg x8)))
(assert (fp.eq (fp.mul RNE x10 x16) (fp.sub RNE x7 x10)))
(assert (fp.lt (fp.div RNE x8 x0) (fp.add RNE x15 x14)))
(assert (fp.lt (fp.sub RNE x12 x4) (fp.div RNE x14 x0)))
(assert (fp.gt (fp.div RNE x3 x3) (fp.mul RNE x2 x11)))
(assert (fp.geq (fp.mul RNE x16 x15) (fp.div RNE x16 x13)))
(check-sat)
