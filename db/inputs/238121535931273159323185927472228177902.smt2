(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x17) (fp.neg x6)) (fp.mul RNE (fp.div RNE x11 x13) (fp.neg x1))) (fp.neg (fp.sub RNE (fp.sub RNE x16 x1) (fp.sub RNE x13 x5)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE x13 x5) (fp.sub RNE x0 x0)) (fp.sub RNE (fp.mul RNE x6 x0) (fp.neg x1))) (fp.div RNE (fp.div RNE (fp.sub RNE x5 x3) (fp.div RNE x3 x12)) (fp.div RNE (fp.add RNE x17 x7) (fp.add RNE x0 x5)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x9 x3)) (fp.neg (fp.div RNE x8 x15))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x1 x0) (fp.add RNE x7 x10)) (fp.div RNE (fp.mul RNE x16 x3) (fp.neg x12)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE x12 x1) (fp.div RNE x10 x2)) (fp.mul RNE (fp.div RNE x0 x0) (fp.sub RNE x5 x12))) (fp.neg (fp.div RNE (fp.mul RNE x6 x8) (fp.neg x8)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x5 x11) (fp.add RNE x11 x5)) (fp.div RNE (fp.mul RNE x15 x0) (fp.div RNE x16 x11))) (fp.neg (fp.neg (fp.add RNE x13 x15)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.sub RNE x5 x0)) (fp.mul RNE (fp.neg x16) (fp.add RNE x8 x12))) (fp.neg (fp.neg (fp.sub RNE x14 x2)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.add RNE x2 x7)) (fp.div RNE (fp.sub RNE x10 x13) (fp.div RNE x7 x7))) (fp.div RNE (fp.div RNE (fp.sub RNE x0 x9) (fp.neg x9)) (fp.div RNE (fp.div RNE x17 x17) (fp.neg x0)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE x15 x7) (fp.mul RNE x15 x6)) (fp.mul RNE (fp.div RNE x3 x11) (fp.mul RNE x12 x7))) (fp.sub RNE (fp.div RNE (fp.div RNE x2 x5) (fp.div RNE x7 x1)) (fp.sub RNE (fp.add RNE x4 x8) (fp.neg x13)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE x16 x5) (fp.add RNE x11 x3))) (fp.sub RNE (fp.sub RNE (fp.div RNE x13 x14) (fp.sub RNE x11 x3)) (fp.neg (fp.sub RNE x7 x0)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.mul RNE x10 x5) (fp.sub RNE x2 x0)) (fp.mul RNE (fp.add RNE x4 x12) (fp.div RNE x1 x6))) (fp.neg (fp.div RNE (fp.sub RNE x11 x17) (fp.neg x1)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg x5) (fp.add RNE x1 x13)) (fp.mul RNE (fp.neg x5) (fp.div RNE x8 x17))) (fp.div RNE (fp.neg (fp.add RNE x1 x10)) (fp.mul RNE (fp.add RNE x11 x2) (fp.sub RNE x7 x14)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x17 x0) (fp.sub RNE x12 x8))) (fp.neg (fp.mul RNE (fp.mul RNE x17 x6) (fp.add RNE x0 x9)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.div RNE x17 x0)) (fp.neg (fp.div RNE x10 x3))) (fp.mul RNE (fp.neg (fp.div RNE x4 x14)) (fp.neg (fp.neg x4)))))
(check-sat)
