(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE x1 x11) (fp.add RNE x3 x5)))
(assert (fp.eq (fp.mul RNE x5 x9) (fp.sub RNE x3 x5)))
(assert (fp.gt (fp.div RNE x11 x12) (fp.add RNE x9 x12)))
(assert (fp.geq (fp.add RNE x8 x6) (fp.mul RNE x8 x4)))
(assert (fp.geq (fp.div RNE x3 x4) (fp.neg x2)))
(assert (fp.lt (fp.neg x1) (fp.sub RNE x2 x5)))
(assert (fp.eq (fp.div RNE x3 x4) (fp.div RNE x6 x0)))
(assert (fp.eq (fp.mul RNE x9 x3) (fp.div RNE x2 x12)))
(assert (fp.lt (fp.div RNE x5 x4) (fp.sub RNE x4 x8)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x2 x7)))
(assert (fp.leq (fp.sub RNE x7 x2) (fp.neg x6)))
(assert (fp.leq (fp.div RNE x2 x9) (fp.sub RNE x11 x6)))
(assert (fp.leq (fp.sub RNE x6 x0) (fp.neg x12)))
(assert (fp.leq (fp.neg x2) (fp.sub RNE x9 x3)))
(assert (fp.geq (fp.neg x5) (fp.sub RNE x0 x1)))
(assert (fp.geq (fp.mul RNE x8 x7) (fp.neg x4)))
(assert (fp.geq (fp.add RNE x6 x2) (fp.sub RNE x1 x5)))
(assert (fp.lt (fp.div RNE x12 x10) (fp.div RNE x8 x5)))
(assert (fp.lt (fp.sub RNE x6 x1) (fp.sub RNE x11 x5)))
(check-sat)
