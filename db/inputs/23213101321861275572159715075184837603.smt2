(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.add RNE x13 x18)) (fp.div RNE (fp.sub RNE x11 x10) (fp.div RNE x22 x4))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x22 x9) (fp.div RNE x9 x19)) (fp.div RNE (fp.div RNE x19 x14) (fp.div RNE x0 x5))))
(assert (fp.eq (fp.div RNE (fp.add RNE x1 x8) (fp.add RNE x19 x16)) (fp.add RNE (fp.div RNE x9 x13) (fp.mul RNE x21 x4))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x17 x10) (fp.sub RNE x18 x11)) (fp.add RNE (fp.mul RNE x12 x20) (fp.div RNE x15 x17))))
(assert (fp.gt (fp.mul RNE (fp.neg x19) (fp.mul RNE x23 x16)) (fp.mul RNE (fp.neg x1) (fp.div RNE x8 x12))))
(check-sat)
