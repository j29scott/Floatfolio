(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE (fp.sub RNE x4 x20) (fp.div RNE x7 x11)) (fp.add RNE (fp.sub RNE x1 x5) (fp.div RNE x6 x14))) (fp.mul RNE (fp.add RNE (fp.add RNE x14 x8) (fp.sub RNE x8 x7)) (fp.sub RNE (fp.div RNE x11 x10) (fp.div RNE x14 x19)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.add RNE x16 x6) (fp.sub RNE x20 x12)) (fp.mul RNE (fp.sub RNE x10 x1) (fp.neg x18))) (fp.sub RNE (fp.neg (fp.div RNE x10 x3)) (fp.div RNE (fp.mul RNE x9 x12) (fp.sub RNE x17 x0))))))
(check-sat)
