(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x10 x7) (fp.mul RNE x3 x9)))
(assert (fp.leq (fp.div RNE x4 x5) (fp.div RNE x11 x0)))
(assert (fp.leq (fp.add RNE x9 x6) (fp.mul RNE x12 x6)))
(assert (fp.lt (fp.div RNE x8 x10) (fp.mul RNE x5 x7)))
(assert (fp.geq (fp.div RNE x7 x0) (fp.neg x0)))
(assert (fp.lt (fp.add RNE x1 x2) (fp.sub RNE x12 x6)))
(assert (fp.lt (fp.add RNE x1 x1) (fp.neg x4)))
(assert (fp.eq (fp.sub RNE x11 x7) (fp.mul RNE x3 x2)))
(assert (fp.geq (fp.sub RNE x1 x2) (fp.div RNE x11 x9)))
(assert (fp.leq (fp.add RNE x8 x5) (fp.sub RNE x10 x1)))
(assert (fp.eq (fp.sub RNE x4 x7) (fp.mul RNE x7 x5)))
(assert (fp.leq (fp.neg x12) (fp.sub RNE x11 x5)))
(assert (fp.eq (fp.neg x0) (fp.add RNE x0 x9)))
(assert (fp.gt (fp.sub RNE x7 x3) (fp.mul RNE x10 x0)))
(assert (fp.lt (fp.sub RNE x2 x7) (fp.sub RNE x3 x10)))
(assert (fp.gt (fp.div RNE x10 x8) (fp.sub RNE x4 x4)))
(assert (fp.leq (fp.add RNE x10 x6) (fp.mul RNE x12 x5)))
(check-sat)
