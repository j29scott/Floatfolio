(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x0 x7) (fp.div RNE x3 x4)))
(assert (fp.lt (fp.div RNE x0 x8) (fp.div RNE x7 x5)))
(assert (fp.geq (fp.sub RNE x7 x2) (fp.div RNE x5 x4)))
(assert (fp.gt (fp.add RNE x0 x4) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x0 x3) (fp.add RNE x0 x3)))
(assert (fp.lt (fp.div RNE x1 x2) (fp.mul RNE x4 x2)))
(assert (fp.lt (fp.div RNE x3 x7) (fp.neg x8)))
(assert (fp.geq (fp.div RNE x5 x1) (fp.neg x4)))
(assert (fp.gt (fp.mul RNE x6 x5) (fp.neg x8)))
(assert (fp.eq (fp.add RNE x4 x6) (fp.mul RNE x3 x8)))
(assert (fp.geq (fp.mul RNE x3 x5) (fp.sub RNE x8 x4)))
(assert (fp.leq (fp.div RNE x2 x4) (fp.sub RNE x5 x3)))
(assert (fp.eq (fp.neg x0) (fp.div RNE x6 x7)))
(assert (fp.gt (fp.sub RNE x5 x5) (fp.mul RNE x7 x4)))
(assert (fp.gt (fp.add RNE x3 x2) (fp.add RNE x6 x8)))
(assert (fp.leq (fp.sub RNE x6 x1) (fp.neg x4)))
(check-sat)
