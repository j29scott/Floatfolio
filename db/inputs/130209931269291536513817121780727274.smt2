(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x1 x5) (fp.div RNE x0 x1)))
(assert (fp.eq (fp.sub RNE x6 x7) (fp.div RNE x8 x6)))
(assert (fp.gt (fp.neg x0) (fp.div RNE x0 x1)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x0 x4)))
(assert (fp.geq (fp.mul RNE x8 x6) (fp.neg x1)))
(assert (fp.eq (fp.neg x5) (fp.add RNE x6 x8)))
(assert (fp.gt (fp.mul RNE x4 x0) (fp.add RNE x4 x8)))
(assert (fp.lt (fp.sub RNE x1 x1) (fp.add RNE x5 x1)))
(assert (fp.geq (fp.div RNE x3 x1) (fp.div RNE x8 x8)))
(assert (fp.geq (fp.mul RNE x0 x7) (fp.mul RNE x3 x3)))
(assert (fp.eq (fp.add RNE x4 x8) (fp.neg x5)))
(assert (fp.geq (fp.div RNE x2 x2) (fp.div RNE x8 x0)))
(assert (fp.eq (fp.neg x8) (fp.add RNE x6 x2)))
(assert (fp.leq (fp.add RNE x2 x3) (fp.mul RNE x5 x3)))
(assert (fp.eq (fp.div RNE x3 x5) (fp.div RNE x0 x0)))
(assert (fp.eq (fp.mul RNE x6 x1) (fp.mul RNE x6 x5)))
(assert (fp.geq (fp.mul RNE x1 x4) (fp.neg x6)))
(check-sat)
