(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x2 x3) (fp.mul RNE x3 x0)))
(assert (fp.geq (fp.sub RNE x1 x1) (fp.add RNE x0 x2)))
(assert (fp.gt (fp.neg x1) (fp.sub RNE x1 x3)))
(assert (fp.leq (fp.mul RNE x0 x0) (fp.add RNE x3 x0)))
(assert (fp.lt (fp.div RNE x0 x2) (fp.sub RNE x3 x4)))
(assert (fp.eq (fp.div RNE x1 x3) (fp.add RNE x4 x4)))
(assert (fp.geq (fp.add RNE x4 x1) (fp.add RNE x0 x1)))
(assert (fp.geq (fp.mul RNE x0 x3) (fp.add RNE x1 x0)))
(assert (fp.geq (fp.sub RNE x3 x2) (fp.neg x3)))
(assert (fp.gt (fp.mul RNE x2 x3) (fp.div RNE x1 x0)))
(assert (fp.geq (fp.div RNE x0 x3) (fp.add RNE x0 x3)))
(assert (fp.lt (fp.div RNE x3 x1) (fp.mul RNE x3 x1)))
(assert (fp.leq (fp.sub RNE x2 x3) (fp.neg x2)))
(assert (fp.leq (fp.mul RNE x2 x4) (fp.mul RNE x0 x4)))
(assert (fp.gt (fp.div RNE x1 x3) (fp.neg x3)))
(assert (fp.lt (fp.sub RNE x1 x1) (fp.neg x2)))
(check-sat)
