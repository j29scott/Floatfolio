(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x15 x13) (fp.mul RNE x3 x6))) (fp.div RNE (fp.mul RNE (fp.mul RNE x9 x0) (fp.mul RNE x2 x0)) (fp.sub RNE (fp.mul RNE x3 x13) (fp.sub RNE x1 x5)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x11 x6) (fp.add RNE x1 x1)) (fp.mul RNE (fp.sub RNE x12 x14) (fp.div RNE x11 x4))) (fp.neg (fp.div RNE (fp.mul RNE x14 x3) (fp.add RNE x0 x10)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE x14 x3) (fp.div RNE x3 x11)) (fp.sub RNE (fp.neg x14) (fp.neg x10))) (fp.mul RNE (fp.mul RNE (fp.neg x14) (fp.div RNE x14 x1)) (fp.mul RNE (fp.div RNE x10 x3) (fp.sub RNE x9 x0)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x11) (fp.add RNE x13 x3)) (fp.mul RNE (fp.mul RNE x7 x14) (fp.add RNE x0 x3))) (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x9) (fp.mul RNE x2 x12)) (fp.div RNE (fp.sub RNE x8 x2) (fp.neg x12)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.add RNE x12 x10) (fp.div RNE x11 x1)) (fp.sub RNE (fp.neg x14) (fp.div RNE x1 x1))) (fp.div RNE (fp.mul RNE (fp.sub RNE x7 x14) (fp.sub RNE x13 x12)) (fp.add RNE (fp.neg x10) (fp.add RNE x10 x13)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x7 x3) (fp.div RNE x11 x14))) (fp.add RNE (fp.neg (fp.add RNE x13 x5)) (fp.neg (fp.mul RNE x5 x6)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg x5)) (fp.div RNE (fp.div RNE x0 x1) (fp.add RNE x10 x1))) (fp.div RNE (fp.div RNE (fp.mul RNE x11 x8) (fp.mul RNE x0 x10)) (fp.neg (fp.add RNE x13 x6)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x0 x5) (fp.sub RNE x9 x15)) (fp.div RNE (fp.mul RNE x12 x12) (fp.sub RNE x3 x13))) (fp.add RNE (fp.div RNE (fp.neg x13) (fp.div RNE x8 x8)) (fp.sub RNE (fp.add RNE x7 x7) (fp.sub RNE x10 x5)))))
(check-sat)
