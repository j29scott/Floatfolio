(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x19 x10) (fp.add RNE x5 x6)) (fp.div RNE (fp.div RNE x20 x21) (fp.add RNE x6 x6))) (fp.div RNE (fp.mul RNE (fp.neg x21) (fp.div RNE x21 x2)) (fp.add RNE (fp.mul RNE x24 x14) (fp.add RNE x6 x14)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.mul RNE x10 x12) (fp.add RNE x25 x7)) (fp.div RNE (fp.neg x9) (fp.add RNE x12 x8))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.div RNE x10 x7) (fp.add RNE x5 x23)) (fp.sub RNE (fp.add RNE x4 x7) (fp.sub RNE x12 x1))) (fp.mul RNE (fp.div RNE (fp.add RNE x14 x16) (fp.mul RNE x12 x1)) (fp.neg (fp.div RNE x9 x18)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x13 x18) (fp.div RNE x2 x18)) (fp.neg (fp.add RNE x23 x21))) (fp.mul RNE (fp.add RNE (fp.add RNE x8 x15) (fp.neg x24)) (fp.sub RNE (fp.div RNE x25 x11) (fp.neg x20))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x9) (fp.neg x4)) (fp.div RNE (fp.mul RNE x20 x12) (fp.neg x9))) (fp.mul RNE (fp.neg (fp.sub RNE x25 x2)) (fp.div RNE (fp.sub RNE x13 x14) (fp.add RNE x15 x4)))) (fp.neg (fp.neg (fp.neg (fp.mul RNE x15 x6))))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.add RNE (fp.div RNE x14 x19) (fp.sub RNE x2 x0)) (fp.div RNE (fp.div RNE x1 x8) (fp.mul RNE x12 x12))) (fp.add RNE (fp.div RNE (fp.sub RNE x17 x8) (fp.sub RNE x22 x4)) (fp.div RNE (fp.add RNE x20 x12) (fp.add RNE x25 x13)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x8 x1) (fp.neg x10)) (fp.mul RNE (fp.neg x12) (fp.add RNE x18 x14))) (fp.sub RNE (fp.add RNE (fp.div RNE x8 x20) (fp.div RNE x1 x17)) (fp.neg (fp.add RNE x5 x5))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x16 x10)) (fp.mul RNE (fp.add RNE x25 x24) (fp.sub RNE x1 x4)))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.neg x19) (fp.div RNE x18 x20)) (fp.add RNE (fp.add RNE x24 x10) (fp.div RNE x25 x22))) (fp.add RNE (fp.div RNE (fp.add RNE x24 x1) (fp.sub RNE x5 x20)) (fp.sub RNE (fp.mul RNE x18 x16) (fp.mul RNE x24 x22))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x13 x10) (fp.neg x19)) (fp.div RNE (fp.sub RNE x21 x0) (fp.neg x14))) (fp.neg (fp.mul RNE (fp.mul RNE x0 x12) (fp.div RNE x11 x21)))) (fp.add RNE (fp.div RNE (fp.div RNE (fp.div RNE x20 x20) (fp.add RNE x21 x14)) (fp.neg (fp.sub RNE x18 x4))) (fp.add RNE (fp.sub RNE (fp.add RNE x11 x20) (fp.sub RNE x15 x17)) (fp.div RNE (fp.add RNE x13 x1) (fp.sub RNE x10 x20))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE (fp.neg x12) (fp.sub RNE x11 x9)) (fp.neg (fp.neg x23)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.sub RNE x8 x16) (fp.neg x1)) (fp.mul RNE (fp.add RNE x2 x4) (fp.sub RNE x7 x15))))))
(check-sat)
