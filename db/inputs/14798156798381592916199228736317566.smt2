(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE x0 x6) (fp.mul RNE x4 x15)))
(assert (fp.eq (fp.sub RNE x16 x12) (fp.div RNE x7 x13)))
(assert (fp.leq (fp.mul RNE x12 x15) (fp.sub RNE x18 x15)))
(assert (fp.eq (fp.div RNE x0 x17) (fp.neg x12)))
(assert (fp.leq (fp.div RNE x17 x8) (fp.sub RNE x17 x11)))
(assert (fp.eq (fp.neg x13) (fp.div RNE x0 x19)))
(assert (fp.leq (fp.add RNE x1 x10) (fp.add RNE x17 x7)))
(assert (fp.leq (fp.neg x18) (fp.mul RNE x19 x11)))
(assert (fp.lt (fp.mul RNE x20 x12) (fp.neg x15)))
(assert (fp.leq (fp.sub RNE x17 x3) (fp.add RNE x16 x2)))
(assert (fp.geq (fp.div RNE x2 x6) (fp.neg x13)))
(check-sat)
