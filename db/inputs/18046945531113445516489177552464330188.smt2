(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.neg x17) (fp.div RNE x8 x9)) (fp.div RNE (fp.div RNE x16 x14) (fp.sub RNE x2 x15))) (fp.add RNE (fp.neg (fp.mul RNE x6 x12)) (fp.sub RNE (fp.sub RNE x8 x3) (fp.neg x10)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg x0) (fp.mul RNE x12 x15)) (fp.sub RNE (fp.sub RNE x10 x11) (fp.div RNE x10 x1))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x0) (fp.mul RNE x13 x13)) (fp.neg (fp.neg x7)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x9 x6)) (fp.div RNE (fp.add RNE x8 x8) (fp.neg x13))) (fp.mul RNE (fp.neg (fp.mul RNE x1 x5)) (fp.div RNE (fp.mul RNE x12 x7) (fp.add RNE x14 x13)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x10) (fp.mul RNE x3 x5)) (fp.add RNE (fp.neg x9) (fp.div RNE x6 x1))) (fp.mul RNE (fp.div RNE (fp.neg x17) (fp.add RNE x16 x5)) (fp.neg (fp.mul RNE x4 x12)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x0) (fp.neg x9)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.neg (fp.div RNE x16 x11)) (fp.mul RNE (fp.neg x5) (fp.div RNE x8 x11)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x16) (fp.mul RNE x4 x2)) (fp.neg (fp.add RNE x10 x0))) (fp.add RNE (fp.sub RNE (fp.sub RNE x6 x17) (fp.mul RNE x12 x5)) (fp.sub RNE (fp.add RNE x6 x12) (fp.neg x5)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE x10 x3)) (fp.sub RNE (fp.mul RNE x0 x1) (fp.sub RNE x9 x1))) (fp.neg (fp.div RNE (fp.neg x3) (fp.neg x2)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.mul RNE x13 x0) (fp.div RNE x10 x14)) (fp.neg (fp.div RNE x5 x5))) (fp.add RNE (fp.div RNE (fp.div RNE x14 x4) (fp.mul RNE x3 x2)) (fp.mul RNE (fp.mul RNE x14 x15) (fp.add RNE x13 x8)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.div RNE x12 x12) (fp.div RNE x17 x6)) (fp.div RNE (fp.mul RNE x13 x15) (fp.div RNE x9 x2))) (fp.sub RNE (fp.sub RNE (fp.div RNE x14 x12) (fp.neg x12)) (fp.neg (fp.div RNE x2 x7)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x1) (fp.neg x6)) (fp.mul RNE (fp.neg x10) (fp.div RNE x2 x9))) (fp.div RNE (fp.add RNE (fp.mul RNE x10 x6) (fp.add RNE x1 x14)) (fp.sub RNE (fp.add RNE x17 x0) (fp.add RNE x4 x11)))))
(check-sat)
