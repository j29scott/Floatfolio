(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(declare-const x28 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x12 x21) (fp.div RNE x22 x19)))
(assert (fp.gt (fp.add RNE x28 x20) (fp.sub RNE x19 x25)))
(assert (fp.leq (fp.add RNE x10 x25) (fp.sub RNE x0 x7)))
(assert (fp.leq (fp.div RNE x20 x13) (fp.sub RNE x0 x5)))
(assert (fp.gt (fp.neg x28) (fp.sub RNE x26 x8)))
(assert (fp.leq (fp.neg x4) (fp.mul RNE x16 x28)))
(assert (fp.geq (fp.add RNE x6 x26) (fp.add RNE x25 x26)))
(assert (fp.leq (fp.mul RNE x18 x26) (fp.sub RNE x11 x28)))
(assert (fp.lt (fp.div RNE x28 x5) (fp.add RNE x16 x26)))
(assert (fp.geq (fp.sub RNE x13 x28) (fp.add RNE x26 x18)))
(assert (fp.gt (fp.neg x7) (fp.neg x19)))
(assert (fp.eq (fp.add RNE x5 x5) (fp.sub RNE x11 x25)))
(assert (fp.gt (fp.neg x23) (fp.neg x19)))
(assert (fp.gt (fp.add RNE x19 x7) (fp.neg x15)))
(assert (fp.leq (fp.sub RNE x0 x21) (fp.sub RNE x19 x14)))
(assert (fp.leq (fp.div RNE x15 x7) (fp.div RNE x2 x17)))
(assert (fp.geq (fp.mul RNE x2 x23) (fp.sub RNE x15 x21)))
(assert (fp.geq (fp.sub RNE x7 x8) (fp.mul RNE x18 x4)))
(assert (fp.leq (fp.sub RNE x7 x24) (fp.div RNE x13 x0)))
(check-sat)
