(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x1 x8)))
(assert (fp.geq (fp.div RNE x10 x3) (fp.sub RNE x6 x9)))
(assert (fp.lt (fp.neg x9) (fp.mul RNE x4 x1)))
(assert (fp.eq (fp.div RNE x1 x3) (fp.add RNE x7 x0)))
(assert (fp.lt (fp.div RNE x5 x7) (fp.mul RNE x4 x11)))
(assert (fp.geq (fp.sub RNE x0 x7) (fp.div RNE x9 x2)))
(assert (fp.lt (fp.sub RNE x2 x11) (fp.sub RNE x8 x10)))
(assert (fp.geq (fp.add RNE x11 x7) (fp.div RNE x8 x0)))
(assert (fp.geq (fp.div RNE x9 x9) (fp.mul RNE x10 x1)))
(assert (fp.geq (fp.neg x9) (fp.sub RNE x11 x6)))
(assert (fp.gt (fp.add RNE x6 x1) (fp.add RNE x2 x4)))
(check-sat)
