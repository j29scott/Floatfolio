(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.sub RNE x16 x19) (fp.div RNE x17 x11)) (fp.div RNE (fp.add RNE x1 x16) (fp.neg x14))))
(assert (fp.eq (fp.neg (fp.add RNE x11 x3)) (fp.neg (fp.sub RNE x9 x1))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x8 x2) (fp.add RNE x1 x3)) (fp.add RNE (fp.neg x2) (fp.div RNE x8 x3))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x11 x6) (fp.sub RNE x0 x5)) (fp.sub RNE (fp.neg x14) (fp.div RNE x15 x16))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x8 x18) (fp.add RNE x15 x12)) (fp.add RNE (fp.sub RNE x16 x7) (fp.add RNE x10 x9))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x7 x1) (fp.sub RNE x13 x9)) (fp.sub RNE (fp.neg x12) (fp.mul RNE x5 x6))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x7 x13) (fp.div RNE x15 x4)) (fp.sub RNE (fp.sub RNE x19 x12) (fp.div RNE x8 x11))))
(assert (fp.geq (fp.add RNE (fp.add RNE x13 x2) (fp.mul RNE x14 x1)) (fp.sub RNE (fp.neg x12) (fp.neg x11))))
(assert (fp.leq (fp.sub RNE (fp.neg x6) (fp.sub RNE x8 x18)) (fp.sub RNE (fp.sub RNE x13 x15) (fp.div RNE x8 x3))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x10 x11) (fp.div RNE x12 x9)) (fp.add RNE (fp.mul RNE x10 x12) (fp.add RNE x1 x18))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x10 x17) (fp.mul RNE x3 x3)) (fp.add RNE (fp.neg x16) (fp.neg x14))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x11 x3) (fp.neg x19)) (fp.sub RNE (fp.div RNE x12 x18) (fp.div RNE x18 x5))))
(assert (fp.leq (fp.neg (fp.add RNE x15 x5)) (fp.div RNE (fp.neg x14) (fp.div RNE x17 x15))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x13)) (fp.div RNE (fp.div RNE x15 x14) (fp.mul RNE x17 x3))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x9 x19) (fp.neg x2)) (fp.mul RNE (fp.mul RNE x14 x1) (fp.sub RNE x19 x16))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x13 x10) (fp.add RNE x7 x17)) (fp.mul RNE (fp.sub RNE x9 x15) (fp.neg x15))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x14 x12) (fp.div RNE x3 x9)) (fp.div RNE (fp.neg x15) (fp.add RNE x15 x8))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x2 x13) (fp.add RNE x5 x18)) (fp.div RNE (fp.sub RNE x0 x11) (fp.neg x18))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x7) (fp.neg x9)) (fp.sub RNE (fp.add RNE x15 x14) (fp.sub RNE x5 x8))))
(assert (fp.lt (fp.div RNE (fp.neg x9) (fp.div RNE x5 x6)) (fp.mul RNE (fp.div RNE x11 x1) (fp.mul RNE x11 x5))))
(check-sat)
