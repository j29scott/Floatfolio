(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE x10 x9)) (fp.add RNE (fp.div RNE x8 x9) (fp.add RNE x0 x10))))
(assert (fp.eq (fp.add RNE (fp.div RNE x8 x1) (fp.add RNE x10 x10)) (fp.mul RNE (fp.add RNE x2 x4) (fp.add RNE x8 x9))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x8 x0) (fp.sub RNE x1 x3)) (fp.sub RNE (fp.div RNE x0 x5) (fp.div RNE x6 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x5 x8) (fp.sub RNE x1 x9)) (fp.div RNE (fp.add RNE x1 x10) (fp.mul RNE x0 x8))))
(assert (fp.lt (fp.add RNE (fp.add RNE x5 x6) (fp.sub RNE x10 x0)) (fp.sub RNE (fp.add RNE x1 x7) (fp.div RNE x4 x2))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x9 x5) (fp.sub RNE x8 x10)) (fp.div RNE (fp.sub RNE x10 x3) (fp.div RNE x0 x2))))
(assert (fp.geq (fp.neg (fp.div RNE x0 x0)) (fp.neg (fp.neg x8))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x4) (fp.neg x0)) (fp.neg (fp.neg x10))))
(check-sat)
