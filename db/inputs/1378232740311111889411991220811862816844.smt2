(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.div RNE x19 x14) (fp.mul RNE x21 x19)) (fp.sub RNE (fp.div RNE x19 x15) (fp.div RNE x19 x10))) (fp.add RNE (fp.mul RNE (fp.sub RNE x3 x17) (fp.add RNE x21 x7)) (fp.mul RNE (fp.mul RNE x20 x0) (fp.sub RNE x0 x11)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.mul RNE x14 x21) (fp.sub RNE x15 x6)) (fp.sub RNE (fp.sub RNE x12 x5) (fp.mul RNE x13 x5))) (fp.add RNE (fp.neg (fp.add RNE x18 x3)) (fp.div RNE (fp.neg x12) (fp.div RNE x22 x21)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x7)) (fp.neg (fp.mul RNE x4 x10))) (fp.div RNE (fp.neg (fp.div RNE x9 x17)) (fp.neg (fp.mul RNE x4 x13)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.mul RNE x2 x5) (fp.add RNE x0 x5)) (fp.mul RNE (fp.add RNE x20 x5) (fp.sub RNE x15 x2))) (fp.sub RNE (fp.div RNE (fp.div RNE x8 x15) (fp.add RNE x17 x3)) (fp.neg (fp.sub RNE x6 x14)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x17 x11) (fp.div RNE x23 x0)) (fp.mul RNE (fp.sub RNE x8 x13) (fp.neg x8))) (fp.mul RNE (fp.add RNE (fp.mul RNE x22 x19) (fp.add RNE x20 x12)) (fp.add RNE (fp.add RNE x0 x12) (fp.div RNE x0 x18)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x5)) (fp.add RNE (fp.div RNE x1 x20) (fp.div RNE x3 x0))) (fp.add RNE (fp.neg (fp.mul RNE x12 x0)) (fp.div RNE (fp.neg x17) (fp.sub RNE x0 x5)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.div RNE x14 x13)) (fp.div RNE (fp.sub RNE x22 x16) (fp.neg x19))) (fp.neg (fp.sub RNE (fp.div RNE x2 x1) (fp.div RNE x13 x18)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.add RNE x12 x22)) (fp.mul RNE (fp.sub RNE x4 x6) (fp.add RNE x21 x20))) (fp.sub RNE (fp.neg (fp.add RNE x15 x13)) (fp.mul RNE (fp.neg x9) (fp.div RNE x2 x18)))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x22 x12))) (fp.neg (fp.div RNE (fp.sub RNE x19 x7) (fp.add RNE x2 x20)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE x18 x22) (fp.add RNE x7 x14)) (fp.mul RNE (fp.div RNE x7 x22) (fp.sub RNE x7 x14))) (fp.mul RNE (fp.div RNE (fp.sub RNE x5 x19) (fp.neg x10)) (fp.mul RNE (fp.add RNE x17 x14) (fp.div RNE x20 x0)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE x1 x7) (fp.mul RNE x4 x10)) (fp.neg (fp.mul RNE x0 x7))) (fp.div RNE (fp.mul RNE (fp.add RNE x12 x19) (fp.mul RNE x21 x0)) (fp.add RNE (fp.mul RNE x19 x7) (fp.add RNE x0 x3)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE x3 x14) (fp.div RNE x11 x6)) (fp.neg (fp.sub RNE x13 x18))) (fp.add RNE (fp.div RNE (fp.neg x4) (fp.add RNE x13 x20)) (fp.add RNE (fp.neg x8) (fp.add RNE x23 x16)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE x0 x8) (fp.mul RNE x21 x3)) (fp.sub RNE (fp.neg x12) (fp.add RNE x22 x6))) (fp.div RNE (fp.add RNE (fp.div RNE x22 x14) (fp.div RNE x18 x13)) (fp.sub RNE (fp.sub RNE x2 x14) (fp.add RNE x23 x18)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x13) (fp.neg x18)) (fp.add RNE (fp.sub RNE x17 x0) (fp.add RNE x9 x4))) (fp.add RNE (fp.neg (fp.div RNE x14 x15)) (fp.mul RNE (fp.sub RNE x17 x3) (fp.mul RNE x9 x0)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.div RNE x9 x19)) (fp.sub RNE (fp.mul RNE x13 x15) (fp.mul RNE x11 x16))) (fp.add RNE (fp.neg (fp.add RNE x6 x5)) (fp.sub RNE (fp.sub RNE x19 x0) (fp.div RNE x20 x5)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x18 x22) (fp.div RNE x1 x17)) (fp.sub RNE (fp.sub RNE x17 x9) (fp.neg x18))) (fp.sub RNE (fp.sub RNE (fp.div RNE x8 x21) (fp.add RNE x7 x11)) (fp.div RNE (fp.mul RNE x22 x15) (fp.neg x5)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x19) (fp.sub RNE x22 x14)) (fp.add RNE (fp.sub RNE x9 x17) (fp.sub RNE x0 x10))) (fp.sub RNE (fp.mul RNE (fp.div RNE x2 x13) (fp.add RNE x15 x5)) (fp.sub RNE (fp.sub RNE x19 x11) (fp.mul RNE x10 x12)))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE x12 x5))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x19 x12) (fp.sub RNE x3 x10)) (fp.div RNE (fp.mul RNE x8 x2) (fp.div RNE x13 x22)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.div RNE x18 x18) (fp.neg x6)) (fp.div RNE (fp.mul RNE x14 x16) (fp.add RNE x15 x8))) (fp.neg (fp.add RNE (fp.neg x2) (fp.add RNE x21 x11)))))
(check-sat)
