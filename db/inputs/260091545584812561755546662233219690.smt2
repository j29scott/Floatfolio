(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x2 x8) (fp.div RNE x9 x10)) (fp.add RNE (fp.add RNE x4 x1) (fp.neg x8))) (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x3) (fp.neg x0)) (fp.neg (fp.div RNE x9 x8)))) (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x2 x4)) (fp.add RNE (fp.div RNE x9 x6) (fp.mul RNE x7 x9))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x4 x10) (fp.mul RNE x4 x2)) (fp.div RNE (fp.neg x9) (fp.div RNE x7 x6))) (fp.sub RNE (fp.neg (fp.add RNE x1 x8)) (fp.add RNE (fp.neg x0) (fp.mul RNE x6 x0)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.neg x7) (fp.neg x0)) (fp.mul RNE (fp.neg x0) (fp.add RNE x10 x6))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x4 x9) (fp.add RNE x5 x8))) (fp.div RNE (fp.add RNE (fp.add RNE x5 x7) (fp.neg x7)) (fp.neg (fp.mul RNE x9 x8)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.add RNE x1 x1) (fp.mul RNE x8 x2)) (fp.mul RNE (fp.mul RNE x1 x2) (fp.div RNE x0 x1))) (fp.mul RNE (fp.mul RNE (fp.neg x8) (fp.neg x8)) (fp.sub RNE (fp.mul RNE x9 x8) (fp.mul RNE x5 x10))))))
(check-sat)
