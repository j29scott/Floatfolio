(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x24 x24) (fp.neg x19)) (fp.mul RNE (fp.add RNE x1 x10) (fp.mul RNE x23 x7))) (fp.add RNE (fp.div RNE (fp.mul RNE x24 x19) (fp.div RNE x2 x5)) (fp.neg (fp.div RNE x1 x6)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE x14 x9) (fp.mul RNE x12 x2)) (fp.mul RNE (fp.mul RNE x6 x20) (fp.sub RNE x5 x3))) (fp.div RNE (fp.add RNE (fp.add RNE x2 x12) (fp.add RNE x10 x6)) (fp.mul RNE (fp.sub RNE x18 x18) (fp.div RNE x2 x25)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.add RNE x7 x11) (fp.add RNE x10 x23)) (fp.add RNE (fp.sub RNE x15 x0) (fp.sub RNE x18 x12))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x14) (fp.add RNE x18 x21)) (fp.sub RNE (fp.sub RNE x5 x11) (fp.neg x20)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.mul RNE x25 x22) (fp.neg x18)) (fp.div RNE (fp.sub RNE x11 x23) (fp.add RNE x5 x20))) (fp.sub RNE (fp.neg (fp.mul RNE x24 x20)) (fp.mul RNE (fp.div RNE x23 x6) (fp.add RNE x13 x9)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg x6) (fp.mul RNE x11 x11))) (fp.add RNE (fp.div RNE (fp.neg x23) (fp.mul RNE x21 x22)) (fp.add RNE (fp.sub RNE x3 x24) (fp.mul RNE x8 x2)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.sub RNE x9 x5) (fp.div RNE x16 x13)) (fp.add RNE (fp.add RNE x16 x19) (fp.add RNE x13 x17))) (fp.add RNE (fp.sub RNE (fp.mul RNE x4 x1) (fp.sub RNE x6 x24)) (fp.div RNE (fp.mul RNE x11 x0) (fp.add RNE x5 x15)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x19 x14) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x1 x5) (fp.div RNE x16 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x15 x6) (fp.div RNE x16 x16)) (fp.sub RNE (fp.sub RNE x23 x3) (fp.neg x25)))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg x3))) (fp.sub RNE (fp.div RNE (fp.add RNE x17 x21) (fp.div RNE x18 x16)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x2 x18)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg x13) (fp.mul RNE x18 x23)) (fp.neg (fp.sub RNE x11 x24))) (fp.add RNE (fp.add RNE (fp.neg x9) (fp.neg x16)) (fp.add RNE (fp.sub RNE x9 x2) (fp.neg x12)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.neg x13)) (fp.add RNE (fp.div RNE x18 x3) (fp.add RNE x5 x2))) (fp.mul RNE (fp.mul RNE (fp.add RNE x11 x1) (fp.div RNE x10 x5)) (fp.add RNE (fp.add RNE x0 x4) (fp.neg x18)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.neg x10)) (fp.add RNE (fp.sub RNE x20 x15) (fp.div RNE x25 x10))) (fp.add RNE (fp.add RNE (fp.sub RNE x23 x0) (fp.div RNE x15 x25)) (fp.mul RNE (fp.neg x17) (fp.add RNE x7 x0)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE x2 x11) (fp.neg x8)) (fp.div RNE (fp.div RNE x21 x14) (fp.mul RNE x7 x4))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x10 x5) (fp.mul RNE x2 x1)) (fp.mul RNE (fp.sub RNE x17 x24) (fp.add RNE x13 x15)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE x21 x13) (fp.add RNE x5 x1)) (fp.add RNE (fp.sub RNE x0 x25) (fp.mul RNE x24 x3))) (fp.add RNE (fp.sub RNE (fp.neg x13) (fp.neg x16)) (fp.neg (fp.div RNE x20 x14)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.mul RNE x18 x7) (fp.sub RNE x12 x13)) (fp.mul RNE (fp.div RNE x14 x6) (fp.mul RNE x3 x18))) (fp.add RNE (fp.neg (fp.mul RNE x3 x15)) (fp.div RNE (fp.mul RNE x10 x25) (fp.div RNE x2 x0)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.div RNE x11 x11) (fp.div RNE x19 x5)) (fp.add RNE (fp.add RNE x17 x22) (fp.div RNE x10 x21))) (fp.add RNE (fp.mul RNE (fp.sub RNE x19 x6) (fp.mul RNE x24 x25)) (fp.sub RNE (fp.neg x24) (fp.mul RNE x3 x9)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x3) (fp.mul RNE x6 x10)) (fp.mul RNE (fp.neg x24) (fp.div RNE x19 x25))) (fp.div RNE (fp.mul RNE (fp.add RNE x2 x17) (fp.sub RNE x24 x12)) (fp.sub RNE (fp.mul RNE x17 x14) (fp.div RNE x9 x13)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.div RNE x20 x13) (fp.neg x22)) (fp.sub RNE (fp.neg x22) (fp.div RNE x13 x2))) (fp.neg (fp.neg (fp.div RNE x3 x0)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x15 x0) (fp.add RNE x11 x18)) (fp.div RNE (fp.add RNE x9 x14) (fp.mul RNE x10 x2))) (fp.sub RNE (fp.neg (fp.div RNE x21 x5)) (fp.add RNE (fp.neg x12) (fp.neg x1)))))
(check-sat)
