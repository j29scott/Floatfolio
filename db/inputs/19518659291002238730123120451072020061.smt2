(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.add RNE x5 x8) (fp.neg x10))) (fp.div RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x7 x11)) (fp.add RNE (fp.add RNE x8 x9) (fp.mul RNE x4 x0)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE x8 x1) (fp.mul RNE x3 x7))) (fp.neg (fp.sub RNE (fp.mul RNE x7 x12) (fp.neg x1)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x5 x3) (fp.mul RNE x3 x9)) (fp.mul RNE (fp.sub RNE x9 x11) (fp.add RNE x1 x11))) (fp.sub RNE (fp.add RNE (fp.mul RNE x5 x0) (fp.div RNE x3 x12)) (fp.add RNE (fp.mul RNE x0 x7) (fp.sub RNE x12 x2)))))
(check-sat)
