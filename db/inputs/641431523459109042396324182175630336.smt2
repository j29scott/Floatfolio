(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x18 x14) (fp.div RNE x15 x7)))
(assert (fp.leq (fp.add RNE x4 x12) (fp.sub RNE x17 x5)))
(assert (fp.leq (fp.neg x1) (fp.add RNE x14 x18)))
(assert (fp.leq (fp.sub RNE x12 x14) (fp.neg x0)))
(assert (fp.gt (fp.sub RNE x20 x9) (fp.add RNE x12 x17)))
(assert (fp.geq (fp.div RNE x10 x1) (fp.sub RNE x9 x18)))
(assert (fp.geq (fp.neg x10) (fp.add RNE x0 x18)))
(check-sat)
