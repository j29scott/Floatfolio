(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.add RNE x18 x18) (fp.neg x2)) (fp.neg (fp.div RNE x12 x1))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x19 x14) (fp.neg x0)) (fp.neg (fp.sub RNE x8 x2))))
(assert (fp.lt (fp.add RNE (fp.add RNE x21 x4) (fp.add RNE x10 x5)) (fp.neg (fp.add RNE x14 x14))))
(assert (fp.leq (fp.neg (fp.mul RNE x19 x3)) (fp.div RNE (fp.add RNE x12 x3) (fp.div RNE x1 x15))))
(assert (fp.gt (fp.div RNE (fp.add RNE x5 x15) (fp.sub RNE x3 x8)) (fp.div RNE (fp.sub RNE x2 x18) (fp.add RNE x0 x12))))
(assert (fp.eq (fp.div RNE (fp.neg x14) (fp.add RNE x22 x1)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x17 x10))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x5 x22) (fp.neg x9)) (fp.neg (fp.mul RNE x23 x1))))
(assert (fp.gt (fp.div RNE (fp.neg x20) (fp.div RNE x20 x8)) (fp.sub RNE (fp.sub RNE x15 x4) (fp.neg x22))))
(assert (fp.eq (fp.neg (fp.add RNE x22 x1)) (fp.add RNE (fp.mul RNE x13 x20) (fp.mul RNE x7 x6))))
(assert (fp.eq (fp.div RNE (fp.div RNE x23 x20) (fp.div RNE x3 x6)) (fp.neg (fp.div RNE x14 x0))))
(assert (fp.geq (fp.add RNE (fp.div RNE x19 x16) (fp.sub RNE x13 x16)) (fp.div RNE (fp.neg x18) (fp.add RNE x18 x22))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x3 x8) (fp.add RNE x8 x15)) (fp.mul RNE (fp.add RNE x11 x2) (fp.sub RNE x12 x3))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x1 x6) (fp.mul RNE x5 x13)) (fp.neg (fp.neg x19))))
(assert (fp.geq (fp.add RNE (fp.add RNE x6 x2) (fp.add RNE x21 x4)) (fp.add RNE (fp.div RNE x4 x13) (fp.sub RNE x17 x5))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x12 x1) (fp.mul RNE x10 x6)) (fp.sub RNE (fp.mul RNE x2 x7) (fp.add RNE x5 x17))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x15 x0) (fp.mul RNE x20 x20)) (fp.div RNE (fp.add RNE x8 x4) (fp.sub RNE x23 x5))))
(check-sat)
