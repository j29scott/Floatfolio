(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x1 x7) (fp.mul RNE x4 x2)) (fp.add RNE (fp.add RNE x2 x6) (fp.sub RNE x11 x6))) (fp.sub RNE (fp.mul RNE (fp.div RNE x8 x2) (fp.div RNE x3 x11)) (fp.mul RNE (fp.add RNE x6 x0) (fp.add RNE x8 x3)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x11) (fp.div RNE x4 x8)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x2 x9))) (fp.div RNE (fp.div RNE (fp.mul RNE x2 x6) (fp.div RNE x2 x12)) (fp.sub RNE (fp.add RNE x11 x10) (fp.add RNE x2 x5))))))
(check-sat)
