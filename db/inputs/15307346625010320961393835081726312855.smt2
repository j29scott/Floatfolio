(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.sub RNE x0 x14) (fp.div RNE x11 x2)) (fp.neg (fp.div RNE x9 x13))))
(assert (fp.lt (fp.neg (fp.neg x10)) (fp.sub RNE (fp.sub RNE x11 x8) (fp.sub RNE x16 x11))))
(assert (fp.leq (fp.neg (fp.add RNE x7 x10)) (fp.add RNE (fp.mul RNE x3 x11) (fp.mul RNE x8 x12))))
(assert (fp.leq (fp.neg (fp.neg x1)) (fp.mul RNE (fp.sub RNE x11 x16) (fp.div RNE x11 x3))))
(assert (fp.eq (fp.div RNE (fp.div RNE x7 x15) (fp.div RNE x4 x7)) (fp.add RNE (fp.div RNE x5 x1) (fp.add RNE x6 x5))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x4 x3) (fp.neg x15)) (fp.add RNE (fp.add RNE x1 x7) (fp.div RNE x4 x9))))
(assert (fp.geq (fp.neg (fp.sub RNE x7 x11)) (fp.mul RNE (fp.div RNE x6 x6) (fp.sub RNE x4 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x12 x1) (fp.add RNE x1 x1)) (fp.mul RNE (fp.neg x8) (fp.neg x3))))
(assert (fp.lt (fp.mul RNE (fp.neg x12) (fp.sub RNE x6 x10)) (fp.add RNE (fp.add RNE x5 x5) (fp.div RNE x6 x3))))
(assert (fp.eq (fp.neg (fp.div RNE x13 x11)) (fp.neg (fp.sub RNE x4 x5))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x3 x14) (fp.sub RNE x10 x11)) (fp.neg (fp.neg x15))))
(check-sat)
