(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.mul RNE x14 x2) (fp.mul RNE x1 x3)) (fp.mul RNE (fp.neg x2) (fp.neg x10))) (fp.mul RNE (fp.div RNE (fp.add RNE x14 x11) (fp.sub RNE x3 x7)) (fp.div RNE (fp.add RNE x8 x4) (fp.sub RNE x9 x12)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.div RNE x7 x12) (fp.div RNE x11 x12)) (fp.neg (fp.div RNE x13 x2))) (fp.neg (fp.div RNE (fp.neg x11) (fp.add RNE x2 x13)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg x7) (fp.sub RNE x15 x5)) (fp.add RNE (fp.add RNE x0 x8) (fp.div RNE x14 x1))) (fp.add RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x14 x14)) (fp.add RNE (fp.div RNE x10 x8) (fp.sub RNE x6 x8)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.div RNE x6 x2) (fp.div RNE x0 x1)) (fp.sub RNE (fp.sub RNE x3 x6) (fp.div RNE x3 x2))) (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x1) (fp.sub RNE x12 x5)) (fp.add RNE (fp.sub RNE x12 x10) (fp.neg x15)))))
(check-sat)
