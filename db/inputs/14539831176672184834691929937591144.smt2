(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.sub RNE x8 x9)) (fp.neg (fp.div RNE x6 x5))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x4 x10) (fp.div RNE x0 x1)) (fp.div RNE (fp.mul RNE x10 x2) (fp.add RNE x8 x2))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x10 x0) (fp.add RNE x7 x8)) (fp.neg (fp.div RNE x9 x7))))
(assert (fp.gt (fp.neg (fp.div RNE x2 x5)) (fp.add RNE (fp.sub RNE x0 x4) (fp.add RNE x2 x8))))
(assert (fp.lt (fp.add RNE (fp.add RNE x12 x12) (fp.neg x9)) (fp.add RNE (fp.mul RNE x11 x11) (fp.div RNE x5 x5))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x8 x2) (fp.sub RNE x7 x3)) (fp.neg (fp.sub RNE x7 x13))))
(check-sat)
