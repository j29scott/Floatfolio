(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.add RNE x10 x3) (fp.add RNE x4 x11)) (fp.sub RNE (fp.add RNE x8 x4) (fp.div RNE x9 x7))))
(assert (fp.geq (fp.div RNE (fp.div RNE x1 x8) (fp.sub RNE x1 x6)) (fp.mul RNE (fp.add RNE x3 x5) (fp.mul RNE x12 x0))))
(assert (fp.eq (fp.neg (fp.neg x1)) (fp.neg (fp.add RNE x4 x3))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x4 x7) (fp.add RNE x5 x4)) (fp.add RNE (fp.add RNE x2 x8) (fp.sub RNE x6 x0))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x7 x0) (fp.add RNE x4 x3)) (fp.sub RNE (fp.div RNE x7 x9) (fp.sub RNE x1 x10))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x8 x3) (fp.div RNE x2 x11)) (fp.mul RNE (fp.add RNE x3 x10) (fp.div RNE x7 x7))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x6 x7) (fp.div RNE x1 x11)) (fp.mul RNE (fp.mul RNE x9 x0) (fp.neg x1))))
(assert (fp.gt (fp.div RNE (fp.add RNE x4 x5) (fp.div RNE x9 x4)) (fp.div RNE (fp.sub RNE x4 x8) (fp.div RNE x12 x10))))
(assert (fp.geq (fp.neg (fp.neg x3)) (fp.add RNE (fp.div RNE x11 x6) (fp.neg x8))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x9 x0) (fp.neg x0)) (fp.add RNE (fp.mul RNE x9 x4) (fp.sub RNE x6 x4))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x5 x9) (fp.div RNE x12 x4)) (fp.add RNE (fp.mul RNE x0 x2) (fp.sub RNE x9 x1))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x1) (fp.sub RNE x10 x12)) (fp.sub RNE (fp.neg x10) (fp.mul RNE x3 x5))))
(check-sat)
