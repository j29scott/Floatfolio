(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x17 x2) (fp.div RNE x16 x2)) (fp.neg (fp.div RNE x8 x15))) (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.mul RNE x2 x7)) (fp.add RNE (fp.add RNE x0 x18) (fp.add RNE x17 x2)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.mul RNE x4 x5) (fp.div RNE x17 x16)) (fp.add RNE (fp.add RNE x15 x16) (fp.add RNE x17 x13))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.div RNE (fp.add RNE x12 x7) (fp.sub RNE x16 x14)) (fp.div RNE (fp.add RNE x16 x7) (fp.add RNE x1 x11))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x16) (fp.div RNE x7 x9)) (fp.mul RNE (fp.mul RNE x14 x2) (fp.div RNE x13 x17)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x18 x13) (fp.div RNE x17 x14)) (fp.div RNE (fp.add RNE x15 x9) (fp.mul RNE x0 x5))) (fp.div RNE (fp.div RNE (fp.mul RNE x5 x8) (fp.neg x18)) (fp.mul RNE (fp.neg x9) (fp.div RNE x4 x0))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg (fp.sub RNE x10 x14)) (fp.sub RNE (fp.add RNE x6 x18) (fp.mul RNE x6 x15))) (fp.add RNE (fp.sub RNE (fp.sub RNE x2 x16) (fp.mul RNE x6 x3)) (fp.sub RNE (fp.sub RNE x4 x8) (fp.add RNE x9 x8)))) (fp.neg (fp.neg (fp.neg (fp.neg x16))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x16) (fp.sub RNE x11 x16)) (fp.neg (fp.neg x11))) (fp.add RNE (fp.div RNE (fp.neg x1) (fp.div RNE x3 x16)) (fp.neg (fp.add RNE x6 x4)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.neg x12) (fp.mul RNE x9 x5)) (fp.mul RNE (fp.mul RNE x17 x3) (fp.sub RNE x0 x13))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE (fp.mul RNE x10 x6) (fp.mul RNE x10 x3))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x0 x16) (fp.neg x13)) (fp.add RNE (fp.neg x4) (fp.mul RNE x18 x6)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x3) (fp.div RNE x6 x0)) (fp.neg (fp.add RNE x8 x15))) (fp.neg (fp.sub RNE (fp.neg x13) (fp.neg x17))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg (fp.mul RNE x11 x9)) (fp.add RNE (fp.neg x3) (fp.add RNE x12 x1))) (fp.neg (fp.neg (fp.sub RNE x2 x7)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x12 x12) (fp.sub RNE x15 x8)) (fp.add RNE (fp.mul RNE x14 x14) (fp.add RNE x6 x6))) (fp.neg (fp.neg (fp.sub RNE x9 x5))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE (fp.sub RNE x4 x7) (fp.div RNE x13 x8)) (fp.mul RNE (fp.div RNE x12 x12) (fp.div RNE x7 x7)))) (fp.sub RNE (fp.neg (fp.neg (fp.add RNE x7 x1))) (fp.sub RNE (fp.div RNE (fp.sub RNE x11 x11) (fp.neg x9)) (fp.sub RNE (fp.sub RNE x10 x7) (fp.div RNE x6 x14))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg (fp.neg x15)) (fp.div RNE (fp.mul RNE x12 x14) (fp.neg x8))) (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x9) (fp.add RNE x16 x0)) (fp.sub RNE (fp.div RNE x10 x3) (fp.sub RNE x12 x18)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x14 x14) (fp.add RNE x5 x1)) (fp.div RNE (fp.sub RNE x5 x14) (fp.div RNE x6 x8))) (fp.sub RNE (fp.div RNE (fp.neg x11) (fp.add RNE x8 x14)) (fp.neg (fp.div RNE x7 x9))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.neg x7) (fp.mul RNE x11 x12)) (fp.sub RNE (fp.add RNE x2 x2) (fp.div RNE x10 x1))) (fp.add RNE (fp.neg (fp.sub RNE x13 x17)) (fp.add RNE (fp.add RNE x8 x16) (fp.add RNE x17 x4)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.div RNE x2 x16) (fp.sub RNE x1 x7)) (fp.neg (fp.mul RNE x4 x4))) (fp.mul RNE (fp.add RNE (fp.sub RNE x10 x8) (fp.sub RNE x10 x0)) (fp.div RNE (fp.neg x14) (fp.neg x11))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x15 x11) (fp.add RNE x10 x8)) (fp.div RNE (fp.neg x7) (fp.neg x4))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x10 x4) (fp.div RNE x9 x10)) (fp.add RNE (fp.div RNE x7 x7) (fp.sub RNE x12 x9)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.add RNE x9 x10) (fp.neg x13))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x17) (fp.div RNE x14 x5)) (fp.neg (fp.sub RNE x12 x3))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x16 x5) (fp.div RNE x11 x6)) (fp.mul RNE (fp.add RNE x6 x12) (fp.sub RNE x8 x14)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.neg x8) (fp.sub RNE x12 x18)) (fp.mul RNE (fp.mul RNE x11 x11) (fp.neg x11))))))
(check-sat)
