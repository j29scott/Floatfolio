(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x3 x9) (fp.div RNE x3 x8)))
(assert (fp.lt (fp.add RNE x6 x6) (fp.div RNE x4 x2)))
(assert (fp.leq (fp.mul RNE x8 x1) (fp.sub RNE x6 x5)))
(assert (fp.gt (fp.mul RNE x0 x3) (fp.div RNE x2 x8)))
(assert (fp.geq (fp.add RNE x6 x3) (fp.add RNE x5 x2)))
(assert (fp.eq (fp.mul RNE x5 x6) (fp.neg x8)))
(assert (fp.eq (fp.mul RNE x3 x8) (fp.neg x4)))
(assert (fp.geq (fp.div RNE x7 x8) (fp.div RNE x6 x6)))
(assert (fp.gt (fp.add RNE x4 x1) (fp.div RNE x6 x3)))
(assert (fp.geq (fp.mul RNE x7 x8) (fp.div RNE x7 x1)))
(assert (fp.leq (fp.mul RNE x4 x1) (fp.add RNE x9 x2)))
(assert (fp.lt (fp.mul RNE x5 x3) (fp.sub RNE x5 x1)))
(assert (fp.geq (fp.sub RNE x8 x6) (fp.mul RNE x4 x6)))
(assert (fp.lt (fp.add RNE x4 x9) (fp.neg x3)))
(assert (fp.gt (fp.sub RNE x5 x9) (fp.div RNE x8 x0)))
(check-sat)
