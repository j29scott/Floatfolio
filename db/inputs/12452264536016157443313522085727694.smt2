(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.add RNE x9 x16) (fp.div RNE x19 x17)) (fp.add RNE (fp.mul RNE x2 x21) (fp.add RNE x17 x21))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x10 x18) (fp.mul RNE x4 x15)) (fp.div RNE (fp.neg x0) (fp.sub RNE x5 x4))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x7 x1) (fp.neg x12)) (fp.sub RNE (fp.mul RNE x13 x2) (fp.add RNE x15 x13))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x2 x11) (fp.mul RNE x2 x14)) (fp.mul RNE (fp.sub RNE x8 x1) (fp.mul RNE x4 x3))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x14 x0) (fp.sub RNE x0 x21)) (fp.neg (fp.add RNE x9 x5))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x8 x15) (fp.neg x10)) (fp.neg (fp.neg x9))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x12 x4) (fp.mul RNE x7 x18)) (fp.neg (fp.sub RNE x21 x2))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x21 x12) (fp.mul RNE x8 x19)) (fp.neg (fp.add RNE x10 x14))))
(assert (fp.gt (fp.neg (fp.div RNE x15 x4)) (fp.mul RNE (fp.neg x20) (fp.add RNE x7 x15))))
(check-sat)
