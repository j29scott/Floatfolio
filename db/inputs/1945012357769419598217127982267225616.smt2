(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x8 x5) (fp.add RNE x12 x9)))
(assert (fp.gt (fp.mul RNE x5 x1) (fp.mul RNE x5 x7)))
(assert (fp.gt (fp.div RNE x0 x11) (fp.neg x3)))
(assert (fp.geq (fp.mul RNE x14 x2) (fp.neg x9)))
(assert (fp.lt (fp.mul RNE x5 x7) (fp.div RNE x7 x9)))
(assert (fp.lt (fp.mul RNE x12 x4) (fp.div RNE x0 x13)))
(assert (fp.eq (fp.div RNE x5 x7) (fp.add RNE x1 x13)))
(assert (fp.leq (fp.mul RNE x0 x9) (fp.neg x12)))
(assert (fp.lt (fp.add RNE x10 x11) (fp.sub RNE x8 x7)))
(assert (fp.leq (fp.neg x7) (fp.mul RNE x13 x10)))
(check-sat)
