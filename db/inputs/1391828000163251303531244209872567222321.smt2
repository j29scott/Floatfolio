(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.div RNE x13 x17) (fp.add RNE x14 x13)) (fp.mul RNE (fp.mul RNE x14 x14) (fp.add RNE x9 x0)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.add RNE x5 x2) (fp.neg x8)) (fp.mul RNE (fp.add RNE x10 x5) (fp.mul RNE x12 x11))) (fp.sub RNE (fp.neg (fp.add RNE x17 x4)) (fp.sub RNE (fp.neg x6) (fp.add RNE x1 x1))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.add RNE x8 x2) (fp.sub RNE x15 x12)) (fp.add RNE (fp.div RNE x13 x9) (fp.mul RNE x0 x12))) (fp.add RNE (fp.neg (fp.sub RNE x6 x16)) (fp.mul RNE (fp.sub RNE x9 x4) (fp.div RNE x20 x14)))) (fp.div RNE (fp.neg (fp.add RNE (fp.div RNE x1 x7) (fp.mul RNE x8 x17))) (fp.div RNE (fp.add RNE (fp.neg x9) (fp.add RNE x16 x5)) (fp.sub RNE (fp.mul RNE x6 x3) (fp.div RNE x6 x9))))))
(check-sat)
