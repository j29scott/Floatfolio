(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE (fp.div RNE x4 x12) (fp.div RNE x15 x10))) (fp.sub RNE (fp.neg (fp.add RNE x15 x9)) (fp.neg (fp.neg x0)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.add RNE x10 x8) (fp.mul RNE x1 x4)) (fp.mul RNE (fp.sub RNE x9 x11) (fp.sub RNE x9 x15))) (fp.neg (fp.div RNE (fp.mul RNE x11 x1) (fp.add RNE x4 x8))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x16 x14)) (fp.mul RNE (fp.neg x12) (fp.sub RNE x13 x14))) (fp.add RNE (fp.add RNE (fp.mul RNE x9 x16) (fp.add RNE x1 x8)) (fp.mul RNE (fp.div RNE x12 x11) (fp.add RNE x17 x5)))) (fp.div RNE (fp.div RNE (fp.neg (fp.mul RNE x15 x6)) (fp.div RNE (fp.neg x15) (fp.mul RNE x4 x10))) (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.neg x9)) (fp.add RNE (fp.mul RNE x13 x8) (fp.sub RNE x15 x6))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x6 x12) (fp.add RNE x5 x11)) (fp.add RNE (fp.sub RNE x16 x9) (fp.add RNE x10 x1))) (fp.neg (fp.add RNE (fp.add RNE x13 x17) (fp.add RNE x7 x9)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x11 x6) (fp.add RNE x11 x4)) (fp.mul RNE (fp.neg x4) (fp.div RNE x0 x6))) (fp.add RNE (fp.add RNE (fp.neg x10) (fp.sub RNE x8 x6)) (fp.div RNE (fp.sub RNE x16 x4) (fp.div RNE x9 x10))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE (fp.div RNE x10 x6) (fp.div RNE x12 x17))) (fp.sub RNE (fp.sub RNE (fp.div RNE x17 x9) (fp.neg x7)) (fp.div RNE (fp.div RNE x13 x6) (fp.neg x0)))) (fp.neg (fp.div RNE (fp.add RNE (fp.neg x15) (fp.neg x14)) (fp.add RNE (fp.add RNE x11 x1) (fp.sub RNE x11 x8))))))
(assert (fp.geq (fp.neg (fp.neg (fp.sub RNE (fp.add RNE x11 x12) (fp.neg x14)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x13 x2)) (fp.neg (fp.sub RNE x9 x0))) (fp.add RNE (fp.neg (fp.mul RNE x6 x10)) (fp.sub RNE (fp.neg x13) (fp.neg x17))))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x16 x1) (fp.mul RNE x11 x12)) (fp.add RNE (fp.mul RNE x11 x14) (fp.mul RNE x3 x16))) (fp.mul RNE (fp.add RNE (fp.neg x11) (fp.add RNE x11 x2)) (fp.mul RNE (fp.add RNE x11 x10) (fp.mul RNE x4 x7)))) (fp.add RNE (fp.neg (fp.neg (fp.sub RNE x6 x17))) (fp.div RNE (fp.neg (fp.sub RNE x3 x17)) (fp.neg (fp.div RNE x0 x12))))))
(check-sat)
