(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.mul RNE x2 x1) (fp.mul RNE x8 x7)) (fp.mul RNE (fp.neg x2) (fp.neg x5))) (fp.div RNE (fp.add RNE (fp.sub RNE x9 x9) (fp.div RNE x8 x7)) (fp.neg (fp.add RNE x9 x1)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE x5 x7) (fp.div RNE x7 x1)) (fp.div RNE (fp.div RNE x8 x3) (fp.sub RNE x4 x6))) (fp.div RNE (fp.div RNE (fp.sub RNE x1 x9) (fp.div RNE x8 x4)) (fp.div RNE (fp.neg x5) (fp.add RNE x9 x1)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.mul RNE x5 x4) (fp.mul RNE x5 x9)) (fp.mul RNE (fp.neg x6) (fp.sub RNE x9 x8))) (fp.neg (fp.add RNE (fp.add RNE x8 x3) (fp.sub RNE x1 x6)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x3 x0) (fp.mul RNE x9 x0))) (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x6) (fp.mul RNE x3 x6)) (fp.neg (fp.div RNE x1 x0)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x3 x7) (fp.neg x8)) (fp.add RNE (fp.sub RNE x4 x8) (fp.div RNE x8 x1))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x8 x0) (fp.sub RNE x4 x1)) (fp.mul RNE (fp.div RNE x2 x1) (fp.mul RNE x7 x7)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.add RNE x7 x4)) (fp.sub RNE (fp.sub RNE x9 x2) (fp.sub RNE x1 x3))) (fp.div RNE (fp.div RNE (fp.add RNE x4 x0) (fp.div RNE x3 x6)) (fp.mul RNE (fp.neg x3) (fp.neg x6)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE x2 x7)) (fp.neg (fp.sub RNE x8 x6))) (fp.div RNE (fp.mul RNE (fp.add RNE x1 x9) (fp.neg x9)) (fp.mul RNE (fp.add RNE x0 x2) (fp.div RNE x7 x0)))))
(check-sat)
