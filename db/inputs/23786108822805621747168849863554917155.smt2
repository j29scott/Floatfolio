(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.sub RNE x14 x2) (fp.add RNE x5 x12)) (fp.neg (fp.div RNE x14 x12))) (fp.div RNE (fp.div RNE (fp.add RNE x13 x8) (fp.neg x15)) (fp.add RNE (fp.sub RNE x14 x8) (fp.div RNE x14 x2)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x2 x1) (fp.add RNE x12 x10)) (fp.div RNE (fp.sub RNE x9 x7) (fp.add RNE x1 x6))) (fp.div RNE (fp.add RNE (fp.add RNE x15 x3) (fp.div RNE x10 x16)) (fp.mul RNE (fp.neg x8) (fp.div RNE x14 x14)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x2) (fp.mul RNE x15 x10)) (fp.add RNE (fp.add RNE x9 x16) (fp.sub RNE x12 x5))) (fp.sub RNE (fp.mul RNE (fp.neg x14) (fp.div RNE x11 x16)) (fp.neg (fp.sub RNE x11 x16)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.sub RNE x15 x14) (fp.mul RNE x15 x0)) (fp.mul RNE (fp.add RNE x11 x10) (fp.div RNE x9 x11))) (fp.div RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x17 x8)) (fp.mul RNE (fp.neg x6) (fp.mul RNE x4 x2)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x8 x0) (fp.div RNE x2 x0))) (fp.add RNE (fp.div RNE (fp.neg x5) (fp.div RNE x11 x14)) (fp.neg (fp.neg x10)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x2 x17) (fp.add RNE x10 x0))) (fp.neg (fp.mul RNE (fp.neg x15) (fp.mul RNE x11 x4)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE x5 x10) (fp.div RNE x15 x3)) (fp.neg (fp.add RNE x3 x17))) (fp.sub RNE (fp.sub RNE (fp.add RNE x17 x16) (fp.div RNE x2 x3)) (fp.add RNE (fp.neg x13) (fp.sub RNE x17 x9)))))
(check-sat)
