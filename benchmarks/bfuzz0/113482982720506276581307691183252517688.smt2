(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE x7 x9)) (fp.mul RNE (fp.neg x7) (fp.add RNE x2 x9))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x1 x5) (fp.sub RNE x0 x0)) (fp.div RNE (fp.mul RNE x6 x0) (fp.add RNE x2 x0))))
(assert (fp.lt (fp.div RNE (fp.add RNE x2 x1) (fp.div RNE x9 x0)) (fp.mul RNE (fp.mul RNE x9 x0) (fp.mul RNE x7 x9))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x8 x7) (fp.add RNE x7 x7)) (fp.sub RNE (fp.mul RNE x5 x9) (fp.add RNE x6 x9))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x6 x8) (fp.div RNE x5 x5)) (fp.add RNE (fp.mul RNE x0 x4) (fp.mul RNE x0 x4))))
(assert (fp.leq (fp.neg (fp.div RNE x8 x8)) (fp.add RNE (fp.add RNE x0 x7) (fp.sub RNE x3 x2))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x2 x2) (fp.add RNE x8 x0)) (fp.neg (fp.mul RNE x7 x6))))
(assert (fp.gt (fp.neg (fp.neg x2)) (fp.sub RNE (fp.sub RNE x3 x9) (fp.div RNE x0 x3))))
(check-sat)
