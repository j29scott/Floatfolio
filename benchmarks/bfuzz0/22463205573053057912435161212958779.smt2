(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x1 x10) (fp.add RNE x12 x4)))
(assert (fp.geq (fp.mul RNE x16 x14) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x15 x11) (fp.add RNE x16 x4)))
(assert (fp.eq (fp.div RNE x8 x15) (fp.div RNE x5 x18)))
(assert (fp.geq (fp.mul RNE x7 x9) (fp.add RNE x8 x2)))
(assert (fp.lt (fp.div RNE x8 x11) (fp.div RNE x6 x13)))
(assert (fp.gt (fp.div RNE x15 x6) (fp.div RNE x18 x19)))
(assert (fp.lt (fp.div RNE x3 x12) (fp.add RNE x3 x2)))
(assert (fp.lt (fp.neg x10) (fp.neg x16)))
(check-sat)
