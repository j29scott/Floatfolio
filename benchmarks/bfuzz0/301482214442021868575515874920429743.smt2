(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x8 x14)) (fp.sub RNE (fp.neg x12) (fp.div RNE x8 x6)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.sub RNE x2 x11)) (fp.mul RNE (fp.div RNE x0 x9) (fp.sub RNE x11 x1))))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x18 x1)) (fp.add RNE (fp.div RNE x16 x18) (fp.add RNE x8 x2)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE x2 x10) (fp.mul RNE x18 x2))) (fp.div RNE (fp.div RNE (fp.sub RNE x8 x18) (fp.sub RNE x8 x6)) (fp.div RNE (fp.sub RNE x7 x18) (fp.sub RNE x13 x1))))))
(check-sat)
