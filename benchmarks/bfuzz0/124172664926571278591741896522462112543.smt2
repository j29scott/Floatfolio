(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x3) (fp.add RNE x1 x5)))
(assert (fp.lt (fp.neg x2) (fp.add RNE x3 x5)))
(assert (fp.eq (fp.mul RNE x4 x4) (fp.add RNE x1 x2)))
(assert (fp.lt (fp.add RNE x0 x5) (fp.mul RNE x5 x0)))
(assert (fp.gt (fp.neg x0) (fp.div RNE x1 x1)))
(assert (fp.gt (fp.add RNE x3 x2) (fp.add RNE x2 x1)))
(assert (fp.leq (fp.sub RNE x2 x5) (fp.div RNE x0 x1)))
(assert (fp.geq (fp.neg x4) (fp.div RNE x5 x5)))
(assert (fp.gt (fp.add RNE x3 x4) (fp.mul RNE x1 x2)))
(assert (fp.leq (fp.sub RNE x0 x2) (fp.sub RNE x4 x0)))
(assert (fp.eq (fp.neg x5) (fp.add RNE x2 x1)))
(assert (fp.geq (fp.div RNE x2 x2) (fp.div RNE x2 x4)))
(assert (fp.eq (fp.neg x4) (fp.neg x5)))
(assert (fp.geq (fp.div RNE x4 x2) (fp.div RNE x3 x4)))
(check-sat)
