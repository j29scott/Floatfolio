(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x11 x5) (fp.add RNE x3 x1)))
(assert (fp.eq (fp.add RNE x13 x13) (fp.sub RNE x6 x1)))
(assert (fp.geq (fp.mul RNE x13 x10) (fp.mul RNE x3 x11)))
(assert (fp.leq (fp.div RNE x7 x12) (fp.div RNE x0 x1)))
(assert (fp.geq (fp.sub RNE x11 x10) (fp.sub RNE x8 x0)))
(assert (fp.eq (fp.div RNE x13 x5) (fp.mul RNE x11 x3)))
(assert (fp.eq (fp.mul RNE x6 x4) (fp.div RNE x2 x3)))
(assert (fp.eq (fp.add RNE x11 x0) (fp.sub RNE x6 x9)))
(assert (fp.leq (fp.sub RNE x2 x8) (fp.neg x5)))
(assert (fp.gt (fp.neg x4) (fp.mul RNE x12 x10)))
(assert (fp.leq (fp.mul RNE x9 x7) (fp.mul RNE x3 x5)))
(assert (fp.lt (fp.mul RNE x1 x3) (fp.mul RNE x4 x4)))
(assert (fp.lt (fp.sub RNE x3 x8) (fp.add RNE x3 x1)))
(assert (fp.leq (fp.mul RNE x3 x13) (fp.mul RNE x13 x1)))
(assert (fp.geq (fp.add RNE x8 x5) (fp.add RNE x3 x3)))
(check-sat)
