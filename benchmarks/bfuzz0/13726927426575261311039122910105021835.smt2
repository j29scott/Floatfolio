(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x17))) (fp.add RNE (fp.div RNE (fp.mul RNE x14 x13) (fp.add RNE x17 x2)) (fp.add RNE (fp.div RNE x16 x15) (fp.mul RNE x17 x18)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.sub RNE x17 x10) (fp.add RNE x17 x7)) (fp.sub RNE (fp.neg x4) (fp.neg x8))) (fp.div RNE (fp.add RNE (fp.neg x19) (fp.sub RNE x8 x9)) (fp.add RNE (fp.div RNE x9 x17) (fp.add RNE x8 x20)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.sub RNE x21 x21) (fp.neg x21))) (fp.add RNE (fp.neg (fp.neg x21)) (fp.mul RNE (fp.add RNE x4 x8) (fp.neg x9)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x2 x11) (fp.mul RNE x5 x0)) (fp.add RNE (fp.neg x17) (fp.add RNE x19 x2))) (fp.sub RNE (fp.mul RNE (fp.neg x2) (fp.neg x12)) (fp.mul RNE (fp.add RNE x8 x10) (fp.div RNE x20 x16)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x3 x20) (fp.div RNE x21 x11)) (fp.mul RNE (fp.div RNE x0 x11) (fp.div RNE x0 x15))) (fp.add RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x11 x19)) (fp.sub RNE (fp.div RNE x0 x21) (fp.mul RNE x20 x11)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x18 x16) (fp.div RNE x19 x13)) (fp.mul RNE (fp.mul RNE x11 x21) (fp.sub RNE x20 x13))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x16) (fp.mul RNE x4 x10)) (fp.add RNE (fp.add RNE x7 x17) (fp.mul RNE x4 x1)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.div RNE x3 x15) (fp.neg x16))) (fp.neg (fp.div RNE (fp.sub RNE x16 x3) (fp.sub RNE x11 x8)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x19) (fp.div RNE x20 x16)) (fp.neg (fp.div RNE x6 x1))) (fp.div RNE (fp.neg (fp.neg x9)) (fp.div RNE (fp.sub RNE x0 x18) (fp.div RNE x5 x6)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x3) (fp.div RNE x13 x2)) (fp.add RNE (fp.sub RNE x10 x16) (fp.div RNE x2 x11))) (fp.add RNE (fp.add RNE (fp.neg x19) (fp.sub RNE x1 x1)) (fp.div RNE (fp.neg x5) (fp.add RNE x20 x4)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x17) (fp.div RNE x0 x7)) (fp.div RNE (fp.mul RNE x13 x0) (fp.add RNE x15 x4))) (fp.div RNE (fp.div RNE (fp.neg x4) (fp.mul RNE x1 x0)) (fp.add RNE (fp.sub RNE x5 x12) (fp.add RNE x1 x7)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg x11)) (fp.neg (fp.neg x2))) (fp.neg (fp.add RNE (fp.add RNE x11 x14) (fp.neg x19)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE x2 x4) (fp.div RNE x19 x12)) (fp.add RNE (fp.add RNE x11 x4) (fp.neg x12))) (fp.add RNE (fp.div RNE (fp.neg x11) (fp.neg x1)) (fp.sub RNE (fp.add RNE x15 x1) (fp.mul RNE x19 x19)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.mul RNE x15 x21) (fp.mul RNE x6 x20)) (fp.mul RNE (fp.sub RNE x12 x12) (fp.neg x5))) (fp.div RNE (fp.mul RNE (fp.sub RNE x13 x14) (fp.div RNE x7 x19)) (fp.sub RNE (fp.sub RNE x20 x8) (fp.div RNE x21 x11)))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x11 x6))) (fp.add RNE (fp.div RNE (fp.mul RNE x9 x11) (fp.mul RNE x21 x5)) (fp.add RNE (fp.add RNE x8 x9) (fp.sub RNE x13 x0)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x2 x9) (fp.mul RNE x7 x17)) (fp.sub RNE (fp.mul RNE x5 x20) (fp.sub RNE x16 x12))) (fp.div RNE (fp.mul RNE (fp.neg x17) (fp.neg x16)) (fp.mul RNE (fp.mul RNE x3 x12) (fp.div RNE x19 x9)))))
(check-sat)
