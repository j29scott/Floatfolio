(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x13 x2) (fp.neg x8)) (fp.sub RNE (fp.div RNE x5 x7) (fp.mul RNE x15 x10))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x6 x4) (fp.mul RNE x2 x4)) (fp.sub RNE (fp.mul RNE x12 x3) (fp.add RNE x8 x8)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.sub RNE x14 x6) (fp.add RNE x1 x10)) (fp.div RNE (fp.sub RNE x0 x10) (fp.add RNE x1 x10))) (fp.mul RNE (fp.neg (fp.sub RNE x5 x1)) (fp.sub RNE (fp.div RNE x15 x5) (fp.mul RNE x1 x1)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE x9 x8) (fp.mul RNE x14 x13)) (fp.add RNE (fp.add RNE x5 x13) (fp.sub RNE x5 x0))) (fp.add RNE (fp.neg (fp.div RNE x0 x7)) (fp.neg (fp.add RNE x9 x11)))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x7 x12))) (fp.add RNE (fp.add RNE (fp.add RNE x3 x5) (fp.mul RNE x0 x5)) (fp.mul RNE (fp.div RNE x1 x1) (fp.sub RNE x5 x11)))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE x1 x1))) (fp.neg (fp.mul RNE (fp.sub RNE x14 x9) (fp.sub RNE x0 x6)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x5 x15) (fp.mul RNE x0 x5)) (fp.sub RNE (fp.mul RNE x0 x0) (fp.div RNE x6 x9))) (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x12) (fp.mul RNE x12 x8)) (fp.div RNE (fp.add RNE x2 x15) (fp.add RNE x3 x3)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x1 x6) (fp.neg x14))) (fp.div RNE (fp.neg (fp.div RNE x0 x2)) (fp.mul RNE (fp.sub RNE x11 x2) (fp.div RNE x11 x4)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x1 x15)) (fp.add RNE (fp.add RNE x6 x12) (fp.div RNE x11 x6))) (fp.add RNE (fp.sub RNE (fp.div RNE x2 x10) (fp.sub RNE x13 x5)) (fp.neg (fp.neg x2)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x14 x15) (fp.div RNE x3 x9))) (fp.sub RNE (fp.add RNE (fp.add RNE x10 x10) (fp.sub RNE x3 x14)) (fp.neg (fp.neg x14)))))
(check-sat)
