(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x5 x10) (fp.div RNE x5 x0)))
(assert (fp.lt (fp.mul RNE x0 x15) (fp.mul RNE x8 x2)))
(assert (fp.leq (fp.mul RNE x0 x12) (fp.mul RNE x10 x3)))
(assert (fp.gt (fp.sub RNE x5 x9) (fp.add RNE x5 x17)))
(assert (fp.eq (fp.neg x3) (fp.div RNE x12 x1)))
(assert (fp.lt (fp.mul RNE x5 x12) (fp.sub RNE x15 x1)))
(assert (fp.leq (fp.sub RNE x1 x10) (fp.neg x8)))
(assert (fp.geq (fp.div RNE x1 x9) (fp.mul RNE x15 x10)))
(assert (fp.gt (fp.add RNE x0 x15) (fp.neg x14)))
(assert (fp.leq (fp.div RNE x13 x10) (fp.add RNE x3 x15)))
(assert (fp.geq (fp.div RNE x7 x16) (fp.sub RNE x1 x15)))
(assert (fp.gt (fp.mul RNE x4 x15) (fp.add RNE x4 x9)))
(assert (fp.gt (fp.add RNE x7 x8) (fp.sub RNE x6 x15)))
(assert (fp.geq (fp.mul RNE x17 x2) (fp.neg x12)))
(assert (fp.gt (fp.neg x3) (fp.neg x17)))
(assert (fp.gt (fp.sub RNE x10 x17) (fp.mul RNE x9 x4)))
(assert (fp.eq (fp.neg x5) (fp.neg x2)))
(assert (fp.leq (fp.mul RNE x8 x4) (fp.mul RNE x1 x6)))
(assert (fp.gt (fp.neg x4) (fp.div RNE x4 x5)))
(assert (fp.geq (fp.div RNE x14 x17) (fp.sub RNE x14 x16)))
(check-sat)
