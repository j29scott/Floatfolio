(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.sub RNE x9 x3) (fp.neg x0)) (fp.sub RNE (fp.add RNE x4 x0) (fp.mul RNE x2 x0))) (fp.div RNE (fp.sub RNE (fp.sub RNE x11 x0) (fp.sub RNE x9 x1)) (fp.div RNE (fp.sub RNE x8 x3) (fp.neg x7)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x12 x8) (fp.add RNE x11 x2)) (fp.add RNE (fp.sub RNE x10 x10) (fp.sub RNE x7 x1))) (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x1) (fp.div RNE x14 x12)) (fp.div RNE (fp.mul RNE x2 x14) (fp.sub RNE x2 x8)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.add RNE x0 x4) (fp.mul RNE x14 x12))) (fp.div RNE (fp.neg (fp.neg x5)) (fp.mul RNE (fp.div RNE x5 x12) (fp.add RNE x5 x5)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x0 x9) (fp.div RNE x5 x10)) (fp.div RNE (fp.add RNE x6 x13) (fp.add RNE x7 x13))) (fp.add RNE (fp.div RNE (fp.neg x7) (fp.div RNE x12 x10)) (fp.neg (fp.add RNE x4 x1)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x14) (fp.mul RNE x1 x2)) (fp.add RNE (fp.neg x9) (fp.neg x0))) (fp.sub RNE (fp.neg (fp.mul RNE x9 x9)) (fp.mul RNE (fp.div RNE x4 x1) (fp.sub RNE x8 x5)))))
(check-sat)
