(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE x17 x4) (fp.sub RNE x7 x6)) (fp.mul RNE (fp.neg x23) (fp.sub RNE x5 x19))))
(assert (fp.eq (fp.mul RNE (fp.neg x11) (fp.neg x11)) (fp.neg (fp.add RNE x0 x19))))
(assert (fp.lt (fp.add RNE (fp.add RNE x6 x17) (fp.add RNE x13 x18)) (fp.neg (fp.mul RNE x17 x1))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x22 x10) (fp.neg x1)) (fp.neg (fp.neg x10))))
(assert (fp.gt (fp.div RNE (fp.div RNE x10 x18) (fp.add RNE x21 x10)) (fp.div RNE (fp.add RNE x13 x3) (fp.neg x11))))
(assert (fp.eq (fp.neg (fp.sub RNE x8 x2)) (fp.mul RNE (fp.div RNE x19 x15) (fp.sub RNE x12 x0))))
(assert (fp.gt (fp.neg (fp.sub RNE x16 x14)) (fp.neg (fp.sub RNE x11 x10))))
(assert (fp.eq (fp.add RNE (fp.div RNE x23 x19) (fp.div RNE x6 x19)) (fp.div RNE (fp.div RNE x17 x14) (fp.neg x9))))
(assert (fp.geq (fp.mul RNE (fp.neg x9) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x19 x3) (fp.mul RNE x3 x11))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x20 x15) (fp.mul RNE x10 x16)) (fp.add RNE (fp.sub RNE x10 x0) (fp.neg x3))))
(assert (fp.eq (fp.mul RNE (fp.neg x16) (fp.add RNE x6 x11)) (fp.div RNE (fp.mul RNE x22 x17) (fp.neg x11))))
(assert (fp.geq (fp.neg (fp.neg x5)) (fp.neg (fp.add RNE x6 x23))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x11 x2) (fp.div RNE x8 x4)) (fp.sub RNE (fp.mul RNE x6 x20) (fp.mul RNE x3 x8))))
(assert (fp.gt (fp.neg (fp.mul RNE x11 x12)) (fp.div RNE (fp.add RNE x5 x20) (fp.neg x17))))
(assert (fp.leq (fp.add RNE (fp.div RNE x14 x16) (fp.sub RNE x1 x10)) (fp.add RNE (fp.add RNE x23 x19) (fp.sub RNE x20 x4))))
(assert (fp.gt (fp.sub RNE (fp.neg x17) (fp.add RNE x21 x19)) (fp.mul RNE (fp.add RNE x18 x11) (fp.sub RNE x13 x18))))
(check-sat)
