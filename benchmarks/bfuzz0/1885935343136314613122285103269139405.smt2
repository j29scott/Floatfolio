(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.neg x9) (fp.neg x5)) (fp.div RNE (fp.add RNE x9 x4) (fp.add RNE x20 x9))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x16 x3) (fp.sub RNE x0 x21)) (fp.neg (fp.mul RNE x18 x11))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x17 x2) (fp.sub RNE x0 x6)) (fp.sub RNE (fp.sub RNE x8 x11) (fp.sub RNE x2 x15))))
(assert (fp.geq (fp.neg (fp.div RNE x15 x22)) (fp.neg (fp.div RNE x14 x16))))
(assert (fp.geq (fp.neg (fp.add RNE x5 x7)) (fp.neg (fp.sub RNE x22 x21))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x5 x17) (fp.add RNE x13 x12)) (fp.mul RNE (fp.sub RNE x21 x1) (fp.add RNE x14 x6))))
(assert (fp.leq (fp.div RNE (fp.div RNE x17 x1) (fp.div RNE x2 x9)) (fp.add RNE (fp.mul RNE x16 x16) (fp.sub RNE x18 x17))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x17 x10) (fp.mul RNE x4 x7)) (fp.neg (fp.neg x22))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x12 x22) (fp.mul RNE x19 x2)) (fp.neg (fp.add RNE x20 x0))))
(assert (fp.eq (fp.div RNE (fp.div RNE x2 x1) (fp.add RNE x6 x16)) (fp.neg (fp.mul RNE x7 x8))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x3 x20) (fp.mul RNE x7 x15)) (fp.neg (fp.sub RNE x12 x21))))
(assert (fp.leq (fp.add RNE (fp.neg x16) (fp.add RNE x20 x22)) (fp.add RNE (fp.add RNE x10 x0) (fp.div RNE x6 x0))))
(assert (fp.geq (fp.neg (fp.div RNE x13 x13)) (fp.sub RNE (fp.sub RNE x1 x14) (fp.sub RNE x12 x10))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x22 x1) (fp.div RNE x6 x3)) (fp.sub RNE (fp.add RNE x5 x0) (fp.add RNE x15 x19))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x7 x21) (fp.sub RNE x3 x20)) (fp.div RNE (fp.div RNE x4 x7) (fp.sub RNE x7 x22))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x13 x12) (fp.div RNE x7 x15)) (fp.div RNE (fp.sub RNE x9 x21) (fp.div RNE x1 x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x9) (fp.sub RNE x21 x8)) (fp.neg (fp.div RNE x10 x9))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x5 x2) (fp.neg x13)) (fp.sub RNE (fp.mul RNE x19 x19) (fp.sub RNE x6 x3))))
(check-sat)
