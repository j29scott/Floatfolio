(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE x7 x10) (fp.div RNE x10 x7)))
(assert (fp.lt (fp.add RNE x10 x6) (fp.add RNE x9 x1)))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x10 x0)))
(assert (fp.geq (fp.div RNE x7 x10) (fp.sub RNE x9 x7)))
(assert (fp.lt (fp.neg x6) (fp.add RNE x3 x9)))
(assert (fp.lt (fp.sub RNE x2 x0) (fp.div RNE x2 x6)))
(assert (fp.geq (fp.add RNE x9 x9) (fp.sub RNE x1 x9)))
(assert (fp.leq (fp.add RNE x0 x6) (fp.neg x1)))
(assert (fp.leq (fp.add RNE x10 x7) (fp.div RNE x1 x5)))
(assert (fp.gt (fp.mul RNE x3 x7) (fp.add RNE x5 x5)))
(assert (fp.leq (fp.sub RNE x7 x4) (fp.mul RNE x0 x7)))
(assert (fp.geq (fp.sub RNE x8 x4) (fp.div RNE x10 x6)))
(assert (fp.gt (fp.div RNE x10 x10) (fp.div RNE x1 x8)))
(assert (fp.leq (fp.add RNE x10 x2) (fp.neg x1)))
(assert (fp.leq (fp.add RNE x5 x1) (fp.sub RNE x7 x4)))
(assert (fp.gt (fp.sub RNE x5 x10) (fp.add RNE x0 x2)))
(assert (fp.leq (fp.div RNE x10 x7) (fp.add RNE x8 x7)))
(check-sat)
