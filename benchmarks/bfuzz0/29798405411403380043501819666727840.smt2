(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.div RNE x4 x12) (fp.neg x12)) (fp.div RNE (fp.mul RNE x11 x18) (fp.div RNE x0 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x0 x2)) (fp.sub RNE (fp.sub RNE x4 x6) (fp.sub RNE x1 x15))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x3 x17) (fp.neg x8)) (fp.add RNE (fp.sub RNE x19 x6) (fp.add RNE x19 x7))))
(assert (fp.lt (fp.add RNE (fp.neg x2) (fp.neg x8)) (fp.neg (fp.sub RNE x14 x6))))
(assert (fp.eq (fp.add RNE (fp.add RNE x6 x18) (fp.div RNE x9 x10)) (fp.div RNE (fp.add RNE x8 x0) (fp.div RNE x10 x2))))
(assert (fp.gt (fp.sub RNE (fp.neg x3) (fp.add RNE x19 x0)) (fp.add RNE (fp.mul RNE x16 x15) (fp.sub RNE x7 x15))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x0 x0) (fp.add RNE x11 x14)) (fp.mul RNE (fp.div RNE x10 x14) (fp.div RNE x4 x19))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x12 x18) (fp.add RNE x5 x2)) (fp.neg (fp.div RNE x15 x4))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x9 x14) (fp.neg x16)) (fp.div RNE (fp.sub RNE x19 x13) (fp.neg x14))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x4 x13) (fp.mul RNE x5 x0)) (fp.neg (fp.mul RNE x5 x15))))
(assert (fp.eq (fp.div RNE (fp.div RNE x7 x17) (fp.neg x15)) (fp.add RNE (fp.sub RNE x18 x10) (fp.sub RNE x8 x3))))
(check-sat)
