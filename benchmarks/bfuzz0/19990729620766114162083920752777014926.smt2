(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE x4 x13) (fp.mul RNE x2 x0)) (fp.sub RNE (fp.neg x15) (fp.sub RNE x12 x13))) (fp.add RNE (fp.neg (fp.mul RNE x6 x15)) (fp.neg (fp.mul RNE x7 x12)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x16 x19) (fp.neg x10)) (fp.neg (fp.neg x1))) (fp.neg (fp.neg (fp.sub RNE x10 x9)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.add RNE x4 x1) (fp.mul RNE x13 x17)) (fp.neg (fp.div RNE x9 x4))) (fp.sub RNE (fp.div RNE (fp.mul RNE x1 x9) (fp.div RNE x11 x4)) (fp.neg (fp.add RNE x19 x16)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x5) (fp.add RNE x14 x5)) (fp.add RNE (fp.sub RNE x20 x18) (fp.div RNE x21 x6))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x18) (fp.sub RNE x13 x12)) (fp.div RNE (fp.div RNE x1 x3) (fp.add RNE x11 x19)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.mul RNE x16 x10) (fp.div RNE x15 x21)) (fp.add RNE (fp.mul RNE x1 x8) (fp.neg x5))) (fp.mul RNE (fp.div RNE (fp.div RNE x0 x18) (fp.neg x11)) (fp.mul RNE (fp.add RNE x5 x19) (fp.add RNE x7 x21)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.div RNE x10 x17) (fp.neg x3))) (fp.add RNE (fp.neg (fp.sub RNE x7 x12)) (fp.neg (fp.mul RNE x14 x2)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x2) (fp.neg x1)) (fp.neg (fp.mul RNE x6 x19))) (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x13) (fp.mul RNE x21 x7)) (fp.div RNE (fp.mul RNE x3 x1) (fp.div RNE x12 x19)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.div RNE x18 x9) (fp.mul RNE x17 x11)) (fp.mul RNE (fp.add RNE x18 x7) (fp.mul RNE x9 x9))) (fp.sub RNE (fp.neg (fp.mul RNE x10 x5)) (fp.mul RNE (fp.add RNE x0 x1) (fp.mul RNE x16 x19)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x2 x11) (fp.mul RNE x9 x5))) (fp.div RNE (fp.add RNE (fp.mul RNE x15 x1) (fp.div RNE x16 x5)) (fp.add RNE (fp.neg x18) (fp.div RNE x8 x17)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x0 x9) (fp.div RNE x10 x6))) (fp.mul RNE (fp.sub RNE (fp.neg x16) (fp.add RNE x14 x21)) (fp.add RNE (fp.sub RNE x5 x11) (fp.add RNE x6 x16)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x1) (fp.mul RNE x9 x11)) (fp.div RNE (fp.add RNE x6 x14) (fp.neg x14))) (fp.mul RNE (fp.add RNE (fp.neg x21) (fp.div RNE x11 x11)) (fp.add RNE (fp.mul RNE x2 x9) (fp.sub RNE x13 x17)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.div RNE x20 x4)) (fp.neg (fp.neg x5))) (fp.neg (fp.neg (fp.add RNE x14 x2)))))
(check-sat)
