(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x4 x4) (fp.div RNE x14 x6)))
(assert (fp.lt (fp.mul RNE x12 x1) (fp.div RNE x4 x5)))
(assert (fp.leq (fp.neg x1) (fp.sub RNE x12 x3)))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x8 x6)))
(assert (fp.leq (fp.sub RNE x12 x9) (fp.add RNE x14 x1)))
(assert (fp.lt (fp.mul RNE x4 x3) (fp.add RNE x13 x6)))
(assert (fp.gt (fp.neg x12) (fp.mul RNE x10 x7)))
(assert (fp.geq (fp.div RNE x6 x14) (fp.div RNE x13 x4)))
(assert (fp.leq (fp.neg x1) (fp.sub RNE x3 x8)))
(assert (fp.geq (fp.sub RNE x4 x12) (fp.div RNE x2 x3)))
(assert (fp.lt (fp.mul RNE x8 x10) (fp.neg x13)))
(check-sat)
