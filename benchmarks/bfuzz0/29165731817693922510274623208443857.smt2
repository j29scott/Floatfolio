(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x11 x10) (fp.div RNE x8 x3)) (fp.sub RNE (fp.neg x1) (fp.neg x4))) (fp.div RNE (fp.neg (fp.add RNE x8 x2)) (fp.add RNE (fp.sub RNE x18 x23) (fp.add RNE x7 x18)))) (fp.neg (fp.neg (fp.sub RNE (fp.mul RNE x16 x17) (fp.sub RNE x16 x23))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg (fp.add RNE x6 x14)) (fp.add RNE (fp.mul RNE x16 x18) (fp.div RNE x12 x1))) (fp.div RNE (fp.add RNE (fp.mul RNE x12 x7) (fp.div RNE x2 x12)) (fp.div RNE (fp.add RNE x0 x20) (fp.mul RNE x12 x4)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x13 x20) (fp.sub RNE x22 x2)) (fp.add RNE (fp.add RNE x0 x22) (fp.add RNE x19 x14))) (fp.div RNE (fp.sub RNE (fp.add RNE x13 x19) (fp.div RNE x17 x25)) (fp.neg (fp.mul RNE x22 x18))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x24 x4) (fp.div RNE x0 x0)) (fp.add RNE (fp.sub RNE x5 x21) (fp.mul RNE x1 x8))) (fp.add RNE (fp.add RNE (fp.mul RNE x25 x4) (fp.div RNE x24 x13)) (fp.sub RNE (fp.neg x20) (fp.neg x17)))) (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x22 x22) (fp.mul RNE x2 x19))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE (fp.div RNE x16 x14) (fp.mul RNE x6 x24))) (fp.neg (fp.sub RNE (fp.div RNE x4 x15) (fp.mul RNE x11 x17)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.div RNE x11 x15) (fp.neg x19))) (fp.neg (fp.div RNE (fp.sub RNE x9 x22) (fp.neg x2))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE (fp.div RNE x24 x2) (fp.neg x8)) (fp.sub RNE (fp.neg x16) (fp.div RNE x2 x4))) (fp.add RNE (fp.div RNE (fp.neg x20) (fp.sub RNE x9 x5)) (fp.sub RNE (fp.div RNE x15 x8) (fp.div RNE x16 x20)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x7 x13) (fp.sub RNE x21 x1)) (fp.div RNE (fp.div RNE x9 x14) (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.sub RNE x10 x5) (fp.sub RNE x15 x24)) (fp.add RNE (fp.add RNE x11 x1) (fp.mul RNE x14 x2))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg (fp.mul RNE x19 x2))) (fp.neg (fp.neg (fp.sub RNE x25 x14)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x21 x11) (fp.add RNE x16 x25)) (fp.mul RNE (fp.neg x20) (fp.div RNE x5 x5))) (fp.mul RNE (fp.div RNE (fp.add RNE x4 x8) (fp.sub RNE x7 x7)) (fp.add RNE (fp.neg x3) (fp.sub RNE x21 x6))))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.neg x25) (fp.sub RNE x24 x12)) (fp.div RNE (fp.mul RNE x5 x20) (fp.sub RNE x2 x25))) (fp.mul RNE (fp.add RNE (fp.add RNE x1 x12) (fp.add RNE x9 x16)) (fp.mul RNE (fp.div RNE x22 x10) (fp.mul RNE x25 x4)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x0 x0) (fp.sub RNE x25 x14)) (fp.add RNE (fp.mul RNE x11 x17) (fp.sub RNE x0 x11))) (fp.mul RNE (fp.neg (fp.mul RNE x25 x17)) (fp.div RNE (fp.add RNE x10 x14) (fp.mul RNE x19 x9))))))
(check-sat)
