(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x4 x8) (fp.mul RNE x11 x12)))
(assert (fp.geq (fp.add RNE x12 x3) (fp.sub RNE x5 x4)))
(assert (fp.gt (fp.mul RNE x10 x2) (fp.add RNE x8 x6)))
(assert (fp.eq (fp.div RNE x4 x2) (fp.sub RNE x4 x10)))
(assert (fp.eq (fp.sub RNE x7 x11) (fp.neg x3)))
(assert (fp.eq (fp.mul RNE x12 x8) (fp.mul RNE x10 x3)))
(assert (fp.geq (fp.div RNE x2 x1) (fp.neg x11)))
(assert (fp.eq (fp.div RNE x10 x1) (fp.add RNE x5 x1)))
(assert (fp.eq (fp.div RNE x4 x1) (fp.sub RNE x10 x13)))
(assert (fp.eq (fp.sub RNE x7 x12) (fp.mul RNE x7 x3)))
(check-sat)
