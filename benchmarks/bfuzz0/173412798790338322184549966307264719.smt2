(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE x15 x23))) (fp.neg (fp.neg (fp.mul RNE x15 x4)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x18) (fp.div RNE x17 x10)) (fp.add RNE (fp.add RNE x22 x2) (fp.neg x7))) (fp.sub RNE (fp.div RNE (fp.div RNE x12 x3) (fp.sub RNE x3 x22)) (fp.add RNE (fp.mul RNE x16 x22) (fp.mul RNE x20 x6)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x14) (fp.sub RNE x1 x11)) (fp.add RNE (fp.neg x15) (fp.add RNE x22 x21))) (fp.sub RNE (fp.sub RNE (fp.add RNE x15 x23) (fp.mul RNE x5 x16)) (fp.mul RNE (fp.sub RNE x11 x19) (fp.neg x6)))))
(check-sat)
