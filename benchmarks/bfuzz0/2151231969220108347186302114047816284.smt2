(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE x14 x2)) (fp.mul RNE (fp.sub RNE x3 x10) (fp.sub RNE x3 x0))))
(assert (fp.gt (fp.div RNE (fp.div RNE x0 x2) (fp.mul RNE x1 x0)) (fp.neg (fp.mul RNE x5 x1))))
(assert (fp.leq (fp.add RNE (fp.neg x13) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x13 x11) (fp.neg x9))))
(assert (fp.geq (fp.div RNE (fp.div RNE x5 x2) (fp.mul RNE x3 x4)) (fp.neg (fp.sub RNE x11 x2))))
(assert (fp.lt (fp.sub RNE (fp.neg x11) (fp.mul RNE x12 x9)) (fp.sub RNE (fp.sub RNE x5 x7) (fp.add RNE x14 x8))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x10 x11) (fp.add RNE x3 x1)) (fp.neg (fp.add RNE x4 x10))))
(check-sat)
