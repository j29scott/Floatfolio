(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x26 x0) (fp.sub RNE x9 x10)) (fp.add RNE (fp.mul RNE x16 x17) (fp.div RNE x3 x7))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x13 x24) (fp.mul RNE x20 x21)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x25 x15))))
(assert (fp.geq (fp.add RNE (fp.div RNE x12 x5) (fp.div RNE x17 x23)) (fp.div RNE (fp.add RNE x20 x10) (fp.sub RNE x27 x9))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x11 x13) (fp.neg x3)) (fp.neg (fp.div RNE x10 x3))))
(assert (fp.gt (fp.div RNE (fp.div RNE x0 x3) (fp.sub RNE x1 x3)) (fp.neg (fp.mul RNE x22 x12))))
(assert (fp.leq (fp.add RNE (fp.add RNE x13 x11) (fp.sub RNE x24 x7)) (fp.add RNE (fp.add RNE x26 x9) (fp.sub RNE x23 x21))))
(assert (fp.leq (fp.div RNE (fp.neg x5) (fp.add RNE x18 x11)) (fp.mul RNE (fp.neg x5) (fp.neg x8))))
(assert (fp.leq (fp.add RNE (fp.add RNE x23 x0) (fp.sub RNE x15 x17)) (fp.mul RNE (fp.mul RNE x2 x18) (fp.neg x22))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x18 x10) (fp.sub RNE x0 x27)) (fp.sub RNE (fp.div RNE x19 x14) (fp.sub RNE x6 x8))))
(assert (fp.eq (fp.div RNE (fp.neg x8) (fp.div RNE x19 x26)) (fp.add RNE (fp.div RNE x5 x0) (fp.add RNE x12 x27))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x8 x8) (fp.div RNE x7 x11)) (fp.sub RNE (fp.div RNE x22 x26) (fp.div RNE x14 x24))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x14 x9) (fp.neg x3)) (fp.neg (fp.mul RNE x4 x18))))
(assert (fp.lt (fp.neg (fp.sub RNE x27 x25)) (fp.mul RNE (fp.div RNE x15 x12) (fp.mul RNE x8 x11))))
(assert (fp.lt (fp.neg (fp.mul RNE x3 x24)) (fp.div RNE (fp.add RNE x4 x8) (fp.mul RNE x24 x6))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x23 x10) (fp.mul RNE x27 x5)) (fp.div RNE (fp.add RNE x26 x9) (fp.mul RNE x2 x4))))
(assert (fp.gt (fp.add RNE (fp.neg x16) (fp.div RNE x12 x21)) (fp.div RNE (fp.add RNE x1 x11) (fp.neg x19))))
(assert (fp.gt (fp.mul RNE (fp.neg x21) (fp.sub RNE x8 x7)) (fp.add RNE (fp.mul RNE x12 x12) (fp.sub RNE x19 x4))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x9 x7) (fp.div RNE x4 x3)) (fp.div RNE (fp.add RNE x12 x24) (fp.sub RNE x9 x22))))
(check-sat)
