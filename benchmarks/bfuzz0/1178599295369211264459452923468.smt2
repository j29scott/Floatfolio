(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.add RNE x17 x8) (fp.sub RNE x8 x8)) (fp.neg (fp.mul RNE x8 x17))))
(assert (fp.eq (fp.div RNE (fp.div RNE x6 x16) (fp.div RNE x6 x6)) (fp.mul RNE (fp.div RNE x1 x5) (fp.sub RNE x14 x7))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x13 x11) (fp.neg x4)) (fp.mul RNE (fp.add RNE x7 x7) (fp.mul RNE x2 x4))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x4 x12) (fp.neg x10)) (fp.div RNE (fp.neg x13) (fp.mul RNE x14 x2))))
(assert (fp.gt (fp.neg (fp.neg x1)) (fp.div RNE (fp.mul RNE x17 x5) (fp.sub RNE x14 x2))))
(assert (fp.leq (fp.neg (fp.div RNE x15 x14)) (fp.neg (fp.neg x17))))
(assert (fp.lt (fp.neg (fp.sub RNE x15 x12)) (fp.add RNE (fp.add RNE x0 x9) (fp.neg x0))))
(assert (fp.leq (fp.add RNE (fp.add RNE x8 x5) (fp.sub RNE x6 x12)) (fp.div RNE (fp.div RNE x5 x4) (fp.mul RNE x15 x3))))
(assert (fp.lt (fp.mul RNE (fp.neg x1) (fp.sub RNE x1 x6)) (fp.mul RNE (fp.sub RNE x5 x3) (fp.neg x16))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x12 x2) (fp.div RNE x16 x10)) (fp.neg (fp.div RNE x10 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x17 x6) (fp.neg x12)) (fp.div RNE (fp.mul RNE x12 x7) (fp.neg x3))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x3 x6) (fp.neg x7)) (fp.mul RNE (fp.div RNE x16 x14) (fp.neg x0))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x3 x9) (fp.mul RNE x16 x5)) (fp.mul RNE (fp.sub RNE x6 x9) (fp.add RNE x17 x3))))
(assert (fp.leq (fp.neg (fp.add RNE x14 x6)) (fp.div RNE (fp.neg x15) (fp.neg x4))))
(assert (fp.gt (fp.neg (fp.mul RNE x10 x14)) (fp.add RNE (fp.add RNE x0 x2) (fp.sub RNE x5 x0))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x17 x3) (fp.neg x0)) (fp.neg (fp.mul RNE x9 x5))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x4 x1) (fp.neg x10)) (fp.neg (fp.add RNE x7 x1))))
(check-sat)
