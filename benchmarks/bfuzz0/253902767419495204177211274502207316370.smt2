(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.neg (fp.sub RNE x19 x7))) (fp.mul RNE (fp.add RNE (fp.div RNE x9 x18) (fp.neg x4)) (fp.div RNE (fp.sub RNE x1 x15) (fp.add RNE x4 x25)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x21) (fp.neg x21)) (fp.mul RNE (fp.sub RNE x12 x22) (fp.div RNE x0 x0))) (fp.sub RNE (fp.add RNE (fp.div RNE x2 x2) (fp.mul RNE x25 x6)) (fp.mul RNE (fp.neg x18) (fp.mul RNE x4 x4)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x23 x5)) (fp.div RNE (fp.neg x8) (fp.sub RNE x25 x19))) (fp.sub RNE (fp.neg (fp.add RNE x25 x8)) (fp.neg (fp.sub RNE x15 x16)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x15 x21) (fp.add RNE x10 x14)) (fp.div RNE (fp.mul RNE x4 x14) (fp.add RNE x18 x16))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x4) (fp.neg x25)) (fp.div RNE (fp.mul RNE x14 x14) (fp.neg x23)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.mul RNE x7 x18) (fp.div RNE x18 x25)) (fp.neg (fp.div RNE x6 x15))) (fp.sub RNE (fp.neg (fp.add RNE x9 x4)) (fp.add RNE (fp.add RNE x6 x9) (fp.add RNE x19 x25)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x21))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x0 x25) (fp.mul RNE x18 x15)) (fp.sub RNE (fp.sub RNE x16 x6) (fp.add RNE x2 x13)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.neg x23) (fp.neg x18)) (fp.neg (fp.mul RNE x18 x15))) (fp.neg (fp.add RNE (fp.sub RNE x13 x11) (fp.div RNE x14 x23)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x25 x12) (fp.neg x10)) (fp.add RNE (fp.sub RNE x22 x0) (fp.mul RNE x20 x25))) (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x2) (fp.neg x6)) (fp.div RNE (fp.div RNE x4 x23) (fp.div RNE x22 x4)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE x0 x17)) (fp.div RNE (fp.neg x25) (fp.sub RNE x10 x1))) (fp.sub RNE (fp.neg (fp.sub RNE x16 x19)) (fp.neg (fp.div RNE x11 x1)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x2 x11) (fp.sub RNE x7 x8)) (fp.div RNE (fp.add RNE x9 x20) (fp.add RNE x17 x20))) (fp.add RNE (fp.add RNE (fp.div RNE x23 x25) (fp.sub RNE x25 x22)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x22 x23)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x23) (fp.sub RNE x6 x4)) (fp.neg (fp.mul RNE x25 x25))) (fp.add RNE (fp.sub RNE (fp.sub RNE x6 x14) (fp.sub RNE x24 x12)) (fp.neg (fp.add RNE x13 x12)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x13 x5)) (fp.mul RNE (fp.div RNE x20 x20) (fp.sub RNE x19 x17))) (fp.sub RNE (fp.neg (fp.div RNE x16 x12)) (fp.add RNE (fp.div RNE x11 x18) (fp.div RNE x16 x3)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x14 x24) (fp.div RNE x9 x11)) (fp.div RNE (fp.add RNE x17 x9) (fp.div RNE x9 x6))) (fp.mul RNE (fp.mul RNE (fp.add RNE x0 x17) (fp.sub RNE x0 x7)) (fp.sub RNE (fp.mul RNE x20 x10) (fp.mul RNE x23 x25)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE x4 x21) (fp.sub RNE x10 x20)) (fp.sub RNE (fp.mul RNE x8 x13) (fp.add RNE x3 x24))) (fp.neg (fp.mul RNE (fp.sub RNE x8 x5) (fp.neg x4)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE x21 x9)) (fp.add RNE (fp.neg x6) (fp.add RNE x25 x22))) (fp.div RNE (fp.add RNE (fp.neg x0) (fp.neg x5)) (fp.mul RNE (fp.add RNE x5 x5) (fp.neg x19)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 x7) (fp.div RNE x4 x14)) (fp.neg (fp.sub RNE x1 x3))) (fp.add RNE (fp.div RNE (fp.sub RNE x13 x1) (fp.sub RNE x18 x12)) (fp.add RNE (fp.neg x5) (fp.add RNE x11 x3)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.add RNE x3 x11)) (fp.mul RNE (fp.neg x16) (fp.sub RNE x14 x13))) (fp.mul RNE (fp.neg (fp.add RNE x3 x21)) (fp.add RNE (fp.sub RNE x1 x22) (fp.mul RNE x13 x17)))))
(check-sat)
