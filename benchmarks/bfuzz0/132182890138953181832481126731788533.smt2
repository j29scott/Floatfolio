(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.sub RNE x18 x19)) (fp.neg (fp.neg x14))))
(assert (fp.geq (fp.neg (fp.div RNE x10 x3)) (fp.div RNE (fp.add RNE x1 x16) (fp.div RNE x2 x12))))
(assert (fp.leq (fp.neg (fp.neg x6)) (fp.div RNE (fp.sub RNE x17 x0) (fp.mul RNE x2 x5))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x10 x2) (fp.sub RNE x11 x13)) (fp.add RNE (fp.neg x5) (fp.neg x12))))
(assert (fp.gt (fp.add RNE (fp.div RNE x10 x5) (fp.div RNE x12 x4)) (fp.add RNE (fp.mul RNE x0 x15) (fp.neg x17))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x18 x16) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x8 x17) (fp.neg x17))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x6 x4) (fp.add RNE x10 x9)) (fp.add RNE (fp.add RNE x17 x9) (fp.mul RNE x7 x5))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x6 x1) (fp.add RNE x18 x18)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x11 x19))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x7 x8) (fp.add RNE x7 x3)) (fp.neg (fp.mul RNE x17 x14))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x13 x12) (fp.mul RNE x6 x9)) (fp.neg (fp.div RNE x17 x10))))
(assert (fp.geq (fp.neg (fp.mul RNE x7 x11)) (fp.div RNE (fp.neg x6) (fp.sub RNE x10 x13))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x8 x14) (fp.add RNE x15 x2)) (fp.sub RNE (fp.neg x8) (fp.mul RNE x10 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x16 x12) (fp.sub RNE x0 x4)) (fp.div RNE (fp.neg x16) (fp.add RNE x15 x4))))
(assert (fp.lt (fp.div RNE (fp.neg x11) (fp.mul RNE x14 x10)) (fp.mul RNE (fp.add RNE x3 x19) (fp.div RNE x14 x1))))
(assert (fp.leq (fp.div RNE (fp.neg x19) (fp.mul RNE x15 x8)) (fp.sub RNE (fp.neg x14) (fp.sub RNE x16 x9))))
(assert (fp.eq (fp.add RNE (fp.div RNE x17 x5) (fp.mul RNE x17 x17)) (fp.neg (fp.div RNE x2 x6))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x3 x12) (fp.mul RNE x9 x13)) (fp.sub RNE (fp.neg x15) (fp.add RNE x16 x2))))
(check-sat)
