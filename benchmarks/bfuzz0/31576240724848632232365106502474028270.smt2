(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg (fp.sub RNE x10 x9))) (fp.div RNE (fp.add RNE (fp.sub RNE x2 x5) (fp.div RNE x1 x4)) (fp.mul RNE (fp.mul RNE x6 x9) (fp.div RNE x2 x10)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE x2 x7) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x7 x4) (fp.add RNE x2 x7))) (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x3) (fp.neg x8)) (fp.neg (fp.add RNE x6 x9)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x10 x6) (fp.mul RNE x1 x2))) (fp.mul RNE (fp.neg (fp.div RNE x4 x1)) (fp.mul RNE (fp.div RNE x2 x2) (fp.sub RNE x8 x4)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE x10 x10) (fp.sub RNE x2 x3))) (fp.mul RNE (fp.neg (fp.add RNE x6 x7)) (fp.mul RNE (fp.add RNE x0 x9) (fp.neg x3)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.neg x5) (fp.div RNE x0 x1)) (fp.neg (fp.div RNE x2 x0))) (fp.neg (fp.add RNE (fp.neg x4) (fp.add RNE x10 x6)))))
(check-sat)
