(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x6 x1) (fp.div RNE x4 x15)) (fp.div RNE (fp.mul RNE x2 x9) (fp.sub RNE x3 x7))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x13 x2) (fp.add RNE x15 x1)) (fp.add RNE (fp.div RNE x7 x13) (fp.div RNE x8 x11))))
(assert (fp.geq (fp.add RNE (fp.neg x8) (fp.mul RNE x14 x8)) (fp.sub RNE (fp.mul RNE x1 x13) (fp.mul RNE x5 x14))))
(assert (fp.eq (fp.add RNE (fp.div RNE x8 x13) (fp.add RNE x5 x16)) (fp.div RNE (fp.neg x11) (fp.sub RNE x0 x8))))
(assert (fp.lt (fp.neg (fp.sub RNE x9 x0)) (fp.div RNE (fp.sub RNE x10 x8) (fp.neg x9))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x17 x14) (fp.div RNE x11 x12)) (fp.neg (fp.add RNE x6 x8))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x0 x16) (fp.add RNE x11 x5)) (fp.mul RNE (fp.mul RNE x8 x12) (fp.add RNE x9 x13))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x16 x11) (fp.mul RNE x9 x10)) (fp.mul RNE (fp.mul RNE x13 x8) (fp.neg x12))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x7 x11) (fp.sub RNE x0 x8)) (fp.neg (fp.div RNE x16 x4))))
(check-sat)
