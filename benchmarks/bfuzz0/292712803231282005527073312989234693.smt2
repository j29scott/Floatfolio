(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.mul RNE x1 x26)) (fp.neg (fp.mul RNE x23 x8))))
(assert (fp.lt (fp.div RNE (fp.neg x2) (fp.neg x14)) (fp.div RNE (fp.add RNE x0 x21) (fp.mul RNE x0 x15))))
(assert (fp.leq (fp.add RNE (fp.add RNE x17 x7) (fp.neg x18)) (fp.neg (fp.mul RNE x24 x2))))
(assert (fp.gt (fp.neg (fp.div RNE x19 x5)) (fp.mul RNE (fp.sub RNE x11 x4) (fp.sub RNE x19 x9))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x9 x0) (fp.div RNE x23 x8)) (fp.mul RNE (fp.add RNE x6 x1) (fp.div RNE x15 x19))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x22 x20) (fp.div RNE x12 x14)) (fp.neg (fp.div RNE x21 x13))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x24 x24) (fp.div RNE x4 x5)) (fp.add RNE (fp.add RNE x3 x20) (fp.div RNE x8 x8))))
(assert (fp.leq (fp.div RNE (fp.add RNE x7 x5) (fp.add RNE x15 x14)) (fp.neg (fp.sub RNE x20 x22))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x10 x17) (fp.neg x1)) (fp.sub RNE (fp.div RNE x8 x18) (fp.div RNE x1 x12))))
(assert (fp.leq (fp.mul RNE (fp.neg x26) (fp.mul RNE x20 x2)) (fp.sub RNE (fp.sub RNE x14 x20) (fp.add RNE x25 x15))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x20 x2) (fp.mul RNE x7 x7)) (fp.div RNE (fp.sub RNE x25 x14) (fp.mul RNE x2 x3))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x9 x22) (fp.div RNE x21 x16)) (fp.add RNE (fp.mul RNE x18 x8) (fp.sub RNE x18 x26))))
(assert (fp.eq (fp.neg (fp.add RNE x2 x24)) (fp.mul RNE (fp.neg x24) (fp.neg x15))))
(assert (fp.lt (fp.neg (fp.neg x9)) (fp.neg (fp.sub RNE x20 x5))))
(assert (fp.geq (fp.neg (fp.add RNE x8 x10)) (fp.neg (fp.sub RNE x14 x14))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x4 x6) (fp.sub RNE x3 x6)) (fp.add RNE (fp.sub RNE x4 x4) (fp.mul RNE x21 x22))))
(assert (fp.geq (fp.neg (fp.div RNE x5 x13)) (fp.neg (fp.mul RNE x7 x11))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x1 x6) (fp.mul RNE x25 x17)) (fp.neg (fp.mul RNE x11 x7))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x23 x2) (fp.add RNE x7 x24)) (fp.add RNE (fp.mul RNE x25 x8) (fp.mul RNE x8 x3))))
(check-sat)
