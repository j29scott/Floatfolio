(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x8 x8) (fp.sub RNE x3 x3))) (fp.div RNE (fp.add RNE (fp.add RNE x7 x0) (fp.add RNE x6 x6)) (fp.div RNE (fp.mul RNE x2 x7) (fp.sub RNE x2 x5)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.sub RNE x6 x1)) (fp.sub RNE (fp.div RNE x5 x8) (fp.sub RNE x7 x5))) (fp.neg (fp.add RNE (fp.div RNE x7 x3) (fp.add RNE x3 x0)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x5 x7)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x6 x6))) (fp.add RNE (fp.mul RNE (fp.mul RNE x1 x7) (fp.sub RNE x2 x6)) (fp.add RNE (fp.mul RNE x5 x2) (fp.sub RNE x5 x0)))))
(check-sat)
