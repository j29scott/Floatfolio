(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg (fp.div RNE x17 x21)) (fp.sub RNE (fp.div RNE x1 x9) (fp.sub RNE x17 x1))) (fp.div RNE (fp.mul RNE (fp.mul RNE x21 x11) (fp.sub RNE x3 x3)) (fp.div RNE (fp.mul RNE x16 x12) (fp.mul RNE x5 x4)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x19 x12) (fp.add RNE x2 x14)) (fp.neg (fp.mul RNE x6 x16))) (fp.div RNE (fp.add RNE (fp.add RNE x23 x22) (fp.add RNE x14 x5)) (fp.div RNE (fp.neg x19) (fp.mul RNE x21 x7))))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE (fp.add RNE x20 x10) (fp.div RNE x2 x2)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.sub RNE x4 x0) (fp.mul RNE x9 x20))) (fp.mul RNE (fp.mul RNE (fp.div RNE x23 x5) (fp.neg x18)) (fp.sub RNE (fp.add RNE x13 x21) (fp.div RNE x10 x20))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x20) (fp.sub RNE x17 x18)) (fp.mul RNE (fp.div RNE x15 x13) (fp.div RNE x11 x9))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x4)) (fp.div RNE (fp.add RNE x0 x19) (fp.div RNE x7 x18)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x19) (fp.add RNE x10 x3)) (fp.div RNE (fp.add RNE x3 x10) (fp.add RNE x14 x8))) (fp.mul RNE (fp.add RNE (fp.add RNE x8 x15) (fp.add RNE x17 x19)) (fp.mul RNE (fp.sub RNE x18 x1) (fp.div RNE x5 x3))))))
(check-sat)
