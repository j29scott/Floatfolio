(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.add RNE x4 x15)) (fp.div RNE (fp.sub RNE x1 x4) (fp.add RNE x16 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x1 x9) (fp.sub RNE x2 x2)) (fp.mul RNE (fp.add RNE x14 x5) (fp.neg x13))))
(assert (fp.eq (fp.sub RNE (fp.neg x14) (fp.mul RNE x10 x10)) (fp.sub RNE (fp.div RNE x17 x0) (fp.add RNE x2 x15))))
(assert (fp.eq (fp.add RNE (fp.add RNE x3 x6) (fp.sub RNE x10 x12)) (fp.add RNE (fp.neg x8) (fp.sub RNE x15 x4))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x5 x13) (fp.mul RNE x14 x5)) (fp.div RNE (fp.div RNE x17 x16) (fp.div RNE x5 x5))))
(assert (fp.geq (fp.neg (fp.div RNE x12 x12)) (fp.mul RNE (fp.neg x16) (fp.sub RNE x7 x12))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x10 x13) (fp.mul RNE x3 x9)) (fp.neg (fp.div RNE x9 x12))))
(assert (fp.eq (fp.neg (fp.add RNE x17 x6)) (fp.div RNE (fp.div RNE x12 x3) (fp.mul RNE x7 x8))))
(assert (fp.eq (fp.div RNE (fp.add RNE x15 x16) (fp.neg x5)) (fp.neg (fp.sub RNE x4 x8))))
(assert (fp.gt (fp.mul RNE (fp.neg x17) (fp.add RNE x8 x0)) (fp.add RNE (fp.add RNE x0 x8) (fp.mul RNE x11 x15))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x17 x5) (fp.add RNE x17 x3)) (fp.div RNE (fp.mul RNE x17 x3) (fp.add RNE x16 x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x15 x7) (fp.add RNE x16 x2)) (fp.mul RNE (fp.add RNE x3 x7) (fp.sub RNE x11 x6))))
(assert (fp.geq (fp.add RNE (fp.div RNE x1 x4) (fp.neg x5)) (fp.neg (fp.div RNE x16 x10))))
(assert (fp.geq (fp.mul RNE (fp.neg x8) (fp.neg x5)) (fp.add RNE (fp.neg x1) (fp.div RNE x5 x13))))
(assert (fp.eq (fp.add RNE (fp.neg x3) (fp.sub RNE x11 x17)) (fp.add RNE (fp.div RNE x14 x7) (fp.add RNE x15 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x16 x7) (fp.div RNE x4 x14)) (fp.sub RNE (fp.mul RNE x4 x4) (fp.sub RNE x0 x12))))
(assert (fp.eq (fp.neg (fp.sub RNE x8 x0)) (fp.sub RNE (fp.neg x6) (fp.div RNE x0 x8))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x5 x3) (fp.div RNE x14 x0)) (fp.div RNE (fp.div RNE x9 x1) (fp.neg x15))))
(assert (fp.geq (fp.neg (fp.div RNE x13 x7)) (fp.add RNE (fp.sub RNE x4 x3) (fp.neg x1))))
(assert (fp.lt (fp.neg (fp.div RNE x1 x5)) (fp.add RNE (fp.div RNE x3 x2) (fp.sub RNE x3 x17))))
(check-sat)
