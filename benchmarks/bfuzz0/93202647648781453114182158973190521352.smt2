(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE x4 x3)) (fp.div RNE (fp.div RNE x15 x3) (fp.neg x10))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x4 x5) (fp.mul RNE x10 x11)) (fp.mul RNE (fp.neg x11) (fp.add RNE x3 x1))))
(assert (fp.gt (fp.add RNE (fp.add RNE x2 x6) (fp.div RNE x12 x9)) (fp.neg (fp.mul RNE x9 x1))))
(assert (fp.lt (fp.mul RNE (fp.neg x13) (fp.sub RNE x5 x2)) (fp.neg (fp.div RNE x2 x5))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x8 x3) (fp.add RNE x13 x3)) (fp.neg (fp.mul RNE x5 x0))))
(assert (fp.gt (fp.neg (fp.neg x4)) (fp.sub RNE (fp.div RNE x3 x12) (fp.div RNE x6 x11))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x13 x1) (fp.mul RNE x2 x2)) (fp.div RNE (fp.mul RNE x7 x10) (fp.add RNE x1 x11))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x11 x14) (fp.add RNE x3 x9)) (fp.neg (fp.sub RNE x9 x16))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x11 x5) (fp.sub RNE x15 x11)) (fp.mul RNE (fp.div RNE x16 x14) (fp.div RNE x2 x4))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x14 x5) (fp.mul RNE x0 x1)) (fp.mul RNE (fp.neg x11) (fp.div RNE x9 x2))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x15 x7) (fp.mul RNE x14 x12)) (fp.mul RNE (fp.div RNE x1 x12) (fp.div RNE x10 x5))))
(assert (fp.eq (fp.sub RNE (fp.neg x8) (fp.mul RNE x16 x14)) (fp.mul RNE (fp.mul RNE x15 x16) (fp.neg x12))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x1 x11) (fp.sub RNE x2 x14)) (fp.mul RNE (fp.add RNE x0 x12) (fp.div RNE x2 x7))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x4 x11) (fp.div RNE x15 x15)) (fp.neg (fp.mul RNE x15 x9))))
(assert (fp.gt (fp.div RNE (fp.neg x10) (fp.add RNE x10 x8)) (fp.div RNE (fp.neg x9) (fp.sub RNE x5 x13))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x7 x15) (fp.div RNE x0 x9)) (fp.mul RNE (fp.neg x14) (fp.div RNE x9 x7))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x9 x8) (fp.sub RNE x14 x13)) (fp.sub RNE (fp.sub RNE x1 x11) (fp.mul RNE x11 x14))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x6 x16) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x6 x10) (fp.mul RNE x13 x12))))
(check-sat)
