(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x4) (fp.div RNE x15 x14)) (fp.div RNE (fp.neg x12) (fp.div RNE x1 x13))))
(assert (fp.gt (fp.add RNE (fp.neg x0) (fp.sub RNE x14 x0)) (fp.add RNE (fp.sub RNE x10 x2) (fp.neg x4))))
(assert (fp.leq (fp.neg (fp.mul RNE x4 x13)) (fp.neg (fp.add RNE x1 x12))))
(assert (fp.eq (fp.div RNE (fp.div RNE x10 x12) (fp.neg x3)) (fp.mul RNE (fp.mul RNE x16 x2) (fp.div RNE x5 x16))))
(assert (fp.geq (fp.neg (fp.div RNE x11 x1)) (fp.sub RNE (fp.neg x8) (fp.mul RNE x1 x1))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x8 x7) (fp.sub RNE x7 x0)) (fp.add RNE (fp.add RNE x14 x6) (fp.sub RNE x3 x9))))
(assert (fp.lt (fp.div RNE (fp.neg x10) (fp.neg x12)) (fp.div RNE (fp.mul RNE x13 x2) (fp.mul RNE x9 x2))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x14 x14) (fp.mul RNE x16 x0)) (fp.sub RNE (fp.sub RNE x2 x15) (fp.div RNE x12 x15))))
(assert (fp.eq (fp.div RNE (fp.div RNE x9 x4) (fp.neg x15)) (fp.sub RNE (fp.div RNE x6 x11) (fp.mul RNE x12 x16))))
(assert (fp.geq (fp.neg (fp.neg x9)) (fp.sub RNE (fp.mul RNE x2 x9) (fp.mul RNE x0 x11))))
(assert (fp.gt (fp.neg (fp.neg x0)) (fp.div RNE (fp.mul RNE x10 x6) (fp.add RNE x16 x6))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x10 x13) (fp.neg x3)) (fp.neg (fp.neg x8))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x8 x11) (fp.add RNE x12 x7)) (fp.sub RNE (fp.mul RNE x10 x5) (fp.sub RNE x8 x11))))
(assert (fp.leq (fp.div RNE (fp.div RNE x12 x10) (fp.sub RNE x16 x7)) (fp.neg (fp.add RNE x9 x13))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x14 x6) (fp.mul RNE x4 x14)) (fp.div RNE (fp.neg x13) (fp.add RNE x6 x11))))
(assert (fp.gt (fp.add RNE (fp.div RNE x9 x11) (fp.add RNE x16 x11)) (fp.sub RNE (fp.neg x6) (fp.neg x11))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x13 x1) (fp.div RNE x10 x15)) (fp.add RNE (fp.div RNE x14 x11) (fp.div RNE x5 x10))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x9 x10) (fp.mul RNE x1 x13)) (fp.sub RNE (fp.mul RNE x11 x6) (fp.add RNE x1 x12))))
(assert (fp.geq (fp.neg (fp.div RNE x3 x10)) (fp.sub RNE (fp.sub RNE x3 x15) (fp.mul RNE x6 x2))))
(check-sat)
