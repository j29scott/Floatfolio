(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE x7 x1) (fp.sub RNE x6 x6)))
(assert (fp.geq (fp.sub RNE x8 x8) (fp.div RNE x5 x10)))
(assert (fp.geq (fp.neg x10) (fp.add RNE x5 x0)))
(assert (fp.eq (fp.neg x9) (fp.neg x8)))
(assert (fp.gt (fp.neg x12) (fp.div RNE x11 x8)))
(assert (fp.lt (fp.mul RNE x4 x6) (fp.neg x7)))
(assert (fp.leq (fp.mul RNE x3 x5) (fp.sub RNE x7 x9)))
(assert (fp.geq (fp.sub RNE x2 x12) (fp.add RNE x2 x12)))
(assert (fp.eq (fp.div RNE x4 x2) (fp.mul RNE x2 x2)))
(assert (fp.geq (fp.neg x1) (fp.add RNE x0 x6)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x1 x10)))
(assert (fp.lt (fp.sub RNE x11 x0) (fp.neg x2)))
(assert (fp.geq (fp.neg x11) (fp.mul RNE x5 x2)))
(check-sat)
