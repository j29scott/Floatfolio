(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE (fp.sub RNE x0 x4) (fp.div RNE x9 x4)) (fp.add RNE (fp.add RNE x5 x9) (fp.sub RNE x0 x2))) (fp.neg (fp.neg (fp.neg x11)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x3) (fp.neg x1)) (fp.mul RNE (fp.neg x1) (fp.sub RNE x0 x10))) (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x7) (fp.add RNE x1 x5)) (fp.neg (fp.add RNE x0 x5))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x10 x9) (fp.add RNE x6 x3)) (fp.add RNE (fp.div RNE x3 x0) (fp.div RNE x5 x6))) (fp.div RNE (fp.add RNE (fp.neg x9) (fp.div RNE x6 x9)) (fp.add RNE (fp.add RNE x2 x5) (fp.mul RNE x3 x7)))) (fp.sub RNE (fp.neg (fp.neg (fp.neg x2))) (fp.div RNE (fp.neg (fp.div RNE x8 x2)) (fp.sub RNE (fp.neg x7) (fp.neg x3))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.add RNE x11 x4) (fp.add RNE x7 x3)) (fp.div RNE (fp.mul RNE x2 x4) (fp.sub RNE x0 x5))) (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x9 x3)) (fp.div RNE (fp.add RNE x10 x10) (fp.div RNE x3 x10)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.div RNE x4 x5) (fp.sub RNE x6 x3)) (fp.sub RNE (fp.div RNE x1 x7) (fp.mul RNE x1 x3))) (fp.sub RNE (fp.add RNE (fp.div RNE x3 x8) (fp.sub RNE x2 x3)) (fp.div RNE (fp.div RNE x10 x10) (fp.mul RNE x1 x0))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.div RNE x9 x11) (fp.add RNE x5 x7)) (fp.mul RNE (fp.div RNE x8 x3) (fp.sub RNE x10 x8))) (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x1) (fp.div RNE x5 x5)) (fp.mul RNE (fp.mul RNE x11 x4) (fp.add RNE x5 x6)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x6 x1) (fp.add RNE x8 x10)) (fp.mul RNE (fp.div RNE x10 x1) (fp.neg x3))) (fp.sub RNE (fp.add RNE (fp.neg x7) (fp.neg x11)) (fp.div RNE (fp.div RNE x2 x10) (fp.add RNE x0 x6))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE (fp.add RNE x6 x4) (fp.add RNE x5 x8)) (fp.div RNE (fp.sub RNE x4 x11) (fp.sub RNE x5 x9))) (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.div RNE x5 x3)) (fp.neg (fp.neg x6)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.div RNE x9 x9)) (fp.neg (fp.sub RNE x3 x3))) (fp.div RNE (fp.mul RNE (fp.add RNE x6 x8) (fp.sub RNE x5 x1)) (fp.mul RNE (fp.add RNE x3 x1) (fp.div RNE x11 x6))))))
(check-sat)
