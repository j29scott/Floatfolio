(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x11 x1))) (fp.mul RNE (fp.sub RNE (fp.add RNE x3 x0) (fp.neg x6)) (fp.add RNE (fp.div RNE x8 x7) (fp.sub RNE x1 x2)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x1 x9) (fp.sub RNE x8 x8)) (fp.mul RNE (fp.add RNE x11 x2) (fp.mul RNE x3 x5))) (fp.neg (fp.neg (fp.sub RNE x8 x2)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg x7) (fp.div RNE x10 x4)) (fp.mul RNE (fp.mul RNE x7 x10) (fp.add RNE x3 x9))) (fp.neg (fp.div RNE (fp.mul RNE x7 x8) (fp.div RNE x0 x6)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x7 x2)) (fp.mul RNE (fp.mul RNE x8 x9) (fp.neg x9))) (fp.add RNE (fp.sub RNE (fp.neg x8) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x8 x6) (fp.div RNE x5 x1)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x6) (fp.sub RNE x0 x11)) (fp.mul RNE (fp.neg x7) (fp.add RNE x1 x5))) (fp.mul RNE (fp.neg (fp.neg x9)) (fp.sub RNE (fp.mul RNE x5 x11) (fp.div RNE x9 x7)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.add RNE x9 x0)) (fp.mul RNE (fp.add RNE x9 x10) (fp.neg x7))) (fp.div RNE (fp.neg (fp.mul RNE x4 x1)) (fp.add RNE (fp.sub RNE x1 x8) (fp.add RNE x5 x4)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.div RNE x10 x4) (fp.sub RNE x9 x11)) (fp.mul RNE (fp.neg x1) (fp.div RNE x8 x10))) (fp.neg (fp.sub RNE (fp.add RNE x3 x4) (fp.mul RNE x10 x9)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.neg x5)) (fp.sub RNE (fp.sub RNE x11 x2) (fp.add RNE x11 x9))) (fp.neg (fp.sub RNE (fp.add RNE x3 x1) (fp.neg x5)))))
(check-sat)
