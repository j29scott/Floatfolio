(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.mul RNE x18 x9) (fp.neg x16)) (fp.neg (fp.neg x18))))
(assert (fp.eq (fp.neg (fp.neg x16)) (fp.neg (fp.div RNE x13 x13))))
(assert (fp.leq (fp.neg (fp.neg x1)) (fp.neg (fp.div RNE x2 x11))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x6 x15) (fp.div RNE x12 x15)) (fp.div RNE (fp.sub RNE x10 x13) (fp.sub RNE x5 x18))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x18 x13) (fp.sub RNE x0 x1)) (fp.sub RNE (fp.div RNE x3 x9) (fp.div RNE x15 x17))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x12 x8) (fp.sub RNE x12 x10)) (fp.div RNE (fp.sub RNE x16 x2) (fp.add RNE x10 x8))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x15 x5) (fp.neg x18)) (fp.add RNE (fp.add RNE x3 x12) (fp.add RNE x15 x18))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x14 x18) (fp.neg x9)) (fp.add RNE (fp.sub RNE x11 x11) (fp.mul RNE x4 x16))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x4 x13) (fp.neg x18)) (fp.sub RNE (fp.mul RNE x10 x18) (fp.div RNE x5 x7))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x17 x14) (fp.neg x0)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.mul RNE (fp.neg x6) (fp.add RNE x3 x13)) (fp.neg (fp.sub RNE x7 x8))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x9 x13) (fp.div RNE x7 x3)) (fp.add RNE (fp.mul RNE x4 x10) (fp.neg x10))))
(assert (fp.leq (fp.neg (fp.div RNE x14 x12)) (fp.mul RNE (fp.mul RNE x0 x12) (fp.add RNE x11 x1))))
(assert (fp.geq (fp.neg (fp.sub RNE x14 x15)) (fp.sub RNE (fp.div RNE x8 x16) (fp.div RNE x4 x17))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x8 x5) (fp.div RNE x7 x8)) (fp.neg (fp.neg x12))))
(assert (fp.geq (fp.neg (fp.neg x16)) (fp.sub RNE (fp.div RNE x16 x17) (fp.neg x13))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x11 x7) (fp.div RNE x18 x1)) (fp.add RNE (fp.mul RNE x1 x3) (fp.add RNE x13 x10))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x16 x8) (fp.mul RNE x17 x3)) (fp.div RNE (fp.div RNE x0 x7) (fp.add RNE x11 x1))))
(check-sat)
