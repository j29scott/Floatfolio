(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x13 x17) (fp.sub RNE x6 x9)))
(assert (fp.leq (fp.div RNE x12 x9) (fp.div RNE x6 x9)))
(assert (fp.eq (fp.add RNE x6 x12) (fp.div RNE x7 x18)))
(assert (fp.eq (fp.sub RNE x8 x13) (fp.neg x13)))
(assert (fp.geq (fp.add RNE x9 x12) (fp.sub RNE x4 x3)))
(assert (fp.geq (fp.sub RNE x10 x14) (fp.add RNE x3 x12)))
(assert (fp.lt (fp.mul RNE x6 x11) (fp.add RNE x18 x19)))
(assert (fp.eq (fp.sub RNE x16 x19) (fp.div RNE x4 x12)))
(assert (fp.gt (fp.div RNE x20 x20) (fp.div RNE x18 x20)))
(assert (fp.lt (fp.add RNE x19 x9) (fp.sub RNE x8 x19)))
(assert (fp.gt (fp.div RNE x9 x17) (fp.neg x8)))
(assert (fp.eq (fp.mul RNE x12 x1) (fp.add RNE x4 x19)))
(assert (fp.gt (fp.neg x20) (fp.sub RNE x12 x1)))
(assert (fp.eq (fp.add RNE x1 x8) (fp.add RNE x20 x13)))
(assert (fp.lt (fp.add RNE x0 x13) (fp.add RNE x17 x18)))
(assert (fp.leq (fp.div RNE x5 x13) (fp.div RNE x17 x12)))
(assert (fp.lt (fp.sub RNE x0 x0) (fp.mul RNE x15 x10)))
(check-sat)
