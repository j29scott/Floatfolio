(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE x15 x5) (fp.mul RNE x18 x14)) (fp.mul RNE (fp.sub RNE x6 x11) (fp.mul RNE x5 x14))))
(assert (fp.leq (fp.add RNE (fp.neg x18) (fp.neg x5)) (fp.add RNE (fp.add RNE x0 x11) (fp.div RNE x15 x18))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x15 x3) (fp.neg x8)) (fp.mul RNE (fp.add RNE x16 x10) (fp.div RNE x2 x7))))
(assert (fp.eq (fp.div RNE (fp.neg x20) (fp.div RNE x14 x1)) (fp.mul RNE (fp.neg x4) (fp.neg x7))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x19 x19) (fp.mul RNE x15 x0)) (fp.div RNE (fp.neg x14) (fp.mul RNE x5 x9))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x17 x1) (fp.mul RNE x16 x13)) (fp.sub RNE (fp.sub RNE x15 x15) (fp.neg x11))))
(assert (fp.lt (fp.neg (fp.mul RNE x4 x6)) (fp.mul RNE (fp.sub RNE x13 x7) (fp.sub RNE x9 x7))))
(assert (fp.leq (fp.div RNE (fp.div RNE x14 x6) (fp.sub RNE x18 x20)) (fp.div RNE (fp.div RNE x4 x3) (fp.div RNE x1 x6))))
(assert (fp.eq (fp.neg (fp.div RNE x4 x4)) (fp.div RNE (fp.neg x18) (fp.neg x16))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x10 x19) (fp.div RNE x9 x4)) (fp.neg (fp.add RNE x16 x11))))
(assert (fp.leq (fp.div RNE (fp.div RNE x11 x7) (fp.sub RNE x15 x12)) (fp.neg (fp.sub RNE x15 x19))))
(assert (fp.lt (fp.div RNE (fp.add RNE x19 x18) (fp.sub RNE x18 x16)) (fp.div RNE (fp.neg x5) (fp.neg x2))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x13 x16) (fp.mul RNE x8 x17)) (fp.sub RNE (fp.sub RNE x17 x0) (fp.div RNE x16 x7))))
(assert (fp.geq (fp.add RNE (fp.div RNE x17 x7) (fp.mul RNE x9 x6)) (fp.neg (fp.div RNE x0 x7))))
(assert (fp.leq (fp.neg (fp.add RNE x4 x11)) (fp.div RNE (fp.mul RNE x18 x10) (fp.sub RNE x1 x15))))
(assert (fp.eq (fp.neg (fp.sub RNE x6 x5)) (fp.neg (fp.add RNE x14 x18))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x11 x14) (fp.mul RNE x10 x11)) (fp.div RNE (fp.add RNE x11 x19) (fp.div RNE x2 x16))))
(assert (fp.eq (fp.div RNE (fp.div RNE x13 x13) (fp.div RNE x4 x6)) (fp.neg (fp.neg x20))))
(assert (fp.eq (fp.mul RNE (fp.neg x2) (fp.div RNE x20 x13)) (fp.div RNE (fp.div RNE x9 x16) (fp.neg x15))))
(check-sat)
