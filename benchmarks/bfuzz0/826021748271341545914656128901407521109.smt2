(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x23) (fp.sub RNE x17 x8)) (fp.div RNE (fp.sub RNE x12 x14) (fp.add RNE x4 x22))) (fp.div RNE (fp.mul RNE (fp.div RNE x3 x3) (fp.add RNE x2 x22)) (fp.sub RNE (fp.mul RNE x6 x7) (fp.mul RNE x3 x8)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.sub RNE x10 x7)) (fp.add RNE (fp.neg x7) (fp.sub RNE x10 x22))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x19 x10) (fp.div RNE x10 x20)) (fp.add RNE (fp.add RNE x9 x14) (fp.neg x2)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg x7) (fp.add RNE x16 x16))) (fp.mul RNE (fp.add RNE (fp.sub RNE x9 x14) (fp.mul RNE x22 x13)) (fp.mul RNE (fp.sub RNE x18 x1) (fp.div RNE x19 x11)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x22) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x8 x5) (fp.mul RNE x13 x22))) (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.neg x12)) (fp.add RNE (fp.div RNE x16 x13) (fp.mul RNE x14 x10)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x11 x8)) (fp.sub RNE (fp.div RNE x11 x17) (fp.neg x12))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x5 x12) (fp.div RNE x17 x1)) (fp.add RNE (fp.neg x1) (fp.sub RNE x1 x14)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x0) (fp.add RNE x13 x7)) (fp.mul RNE (fp.sub RNE x1 x2) (fp.mul RNE x13 x4))) (fp.sub RNE (fp.div RNE (fp.add RNE x2 x8) (fp.mul RNE x13 x9)) (fp.div RNE (fp.mul RNE x17 x15) (fp.add RNE x19 x0)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.add RNE x4 x22) (fp.add RNE x19 x16)) (fp.add RNE (fp.div RNE x3 x23) (fp.neg x3))) (fp.add RNE (fp.div RNE (fp.sub RNE x13 x12) (fp.neg x5)) (fp.div RNE (fp.div RNE x11 x3) (fp.mul RNE x18 x3)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg x13) (fp.sub RNE x21 x6)) (fp.div RNE (fp.sub RNE x24 x11) (fp.sub RNE x10 x9))) (fp.sub RNE (fp.add RNE (fp.add RNE x5 x13) (fp.sub RNE x10 x1)) (fp.sub RNE (fp.add RNE x24 x7) (fp.add RNE x10 x13)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.div RNE x12 x19) (fp.mul RNE x10 x13)) (fp.mul RNE (fp.div RNE x18 x21) (fp.add RNE x3 x19))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x23) (fp.mul RNE x8 x3)) (fp.div RNE (fp.add RNE x13 x5) (fp.div RNE x22 x0)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.mul RNE x6 x8) (fp.sub RNE x23 x14)) (fp.sub RNE (fp.add RNE x8 x12) (fp.add RNE x10 x0))) (fp.mul RNE (fp.div RNE (fp.sub RNE x17 x15) (fp.sub RNE x4 x4)) (fp.div RNE (fp.neg x10) (fp.div RNE x17 x21)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x16 x4) (fp.add RNE x17 x6)) (fp.div RNE (fp.neg x21) (fp.mul RNE x13 x24))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x17 x3) (fp.neg x21)) (fp.add RNE (fp.mul RNE x23 x20) (fp.div RNE x22 x1)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.mul RNE x11 x6) (fp.neg x10)) (fp.neg (fp.add RNE x16 x1))) (fp.neg (fp.add RNE (fp.add RNE x15 x8) (fp.div RNE x19 x2)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.neg x21)) (fp.mul RNE (fp.sub RNE x14 x3) (fp.sub RNE x10 x14))) (fp.neg (fp.mul RNE (fp.div RNE x12 x23) (fp.div RNE x13 x9)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x19) (fp.mul RNE x1 x15)) (fp.div RNE (fp.div RNE x11 x3) (fp.mul RNE x13 x17))) (fp.neg (fp.div RNE (fp.mul RNE x21 x6) (fp.neg x3)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.add RNE x13 x9) (fp.div RNE x23 x15)) (fp.mul RNE (fp.mul RNE x24 x14) (fp.neg x0))) (fp.div RNE (fp.sub RNE (fp.add RNE x18 x10) (fp.neg x11)) (fp.div RNE (fp.sub RNE x5 x20) (fp.div RNE x21 x15)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg x7) (fp.div RNE x5 x5)) (fp.mul RNE (fp.div RNE x13 x19) (fp.div RNE x8 x8))) (fp.sub RNE (fp.neg (fp.add RNE x2 x10)) (fp.sub RNE (fp.add RNE x8 x16) (fp.sub RNE x2 x3)))))
(check-sat)
