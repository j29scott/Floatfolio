(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x6 x4)))
(assert (fp.gt (fp.mul RNE x3 x2) (fp.add RNE x4 x11)))
(assert (fp.leq (fp.mul RNE x8 x11) (fp.neg x11)))
(assert (fp.lt (fp.div RNE x7 x2) (fp.add RNE x3 x11)))
(assert (fp.lt (fp.add RNE x10 x11) (fp.mul RNE x5 x5)))
(assert (fp.gt (fp.neg x5) (fp.mul RNE x2 x1)))
(assert (fp.lt (fp.sub RNE x0 x11) (fp.mul RNE x10 x1)))
(assert (fp.lt (fp.sub RNE x5 x11) (fp.neg x8)))
(assert (fp.gt (fp.mul RNE x2 x0) (fp.div RNE x7 x11)))
(assert (fp.geq (fp.add RNE x12 x6) (fp.add RNE x7 x0)))
(assert (fp.eq (fp.div RNE x1 x1) (fp.div RNE x8 x4)))
(assert (fp.leq (fp.div RNE x7 x9) (fp.sub RNE x6 x0)))
(check-sat)
