(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x17) (fp.div RNE x5 x0)) (fp.neg (fp.div RNE x8 x0))) (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x6) (fp.add RNE x8 x4)) (fp.add RNE (fp.sub RNE x15 x5) (fp.add RNE x8 x15)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.div RNE x4 x16)) (fp.neg (fp.mul RNE x5 x6))) (fp.add RNE (fp.sub RNE (fp.sub RNE x2 x15) (fp.div RNE x0 x1)) (fp.add RNE (fp.sub RNE x10 x13) (fp.div RNE x4 x1)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x10 x16)) (fp.div RNE (fp.sub RNE x13 x1) (fp.add RNE x16 x3))) (fp.sub RNE (fp.add RNE (fp.add RNE x10 x4) (fp.neg x4)) (fp.neg (fp.add RNE x5 x8)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x1) (fp.mul RNE x11 x2)) (fp.mul RNE (fp.sub RNE x10 x13) (fp.neg x10))) (fp.sub RNE (fp.sub RNE (fp.add RNE x7 x9) (fp.neg x5)) (fp.mul RNE (fp.add RNE x7 x5) (fp.mul RNE x5 x12)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.div RNE x9 x4)) (fp.mul RNE (fp.mul RNE x11 x15) (fp.sub RNE x9 x8))) (fp.mul RNE (fp.neg (fp.sub RNE x4 x12)) (fp.sub RNE (fp.add RNE x5 x1) (fp.sub RNE x2 x1)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.div RNE x11 x16) (fp.div RNE x13 x17)) (fp.sub RNE (fp.neg x7) (fp.neg x14))) (fp.add RNE (fp.add RNE (fp.sub RNE x5 x8) (fp.sub RNE x7 x17)) (fp.neg (fp.mul RNE x3 x3)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x3 x11)) (fp.div RNE (fp.sub RNE x7 x7) (fp.sub RNE x15 x3))) (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x13) (fp.neg x12)) (fp.div RNE (fp.neg x12) (fp.mul RNE x6 x16)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x8 x12) (fp.neg x9)) (fp.add RNE (fp.div RNE x2 x11) (fp.add RNE x11 x8))) (fp.neg (fp.mul RNE (fp.sub RNE x1 x2) (fp.neg x9)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x17 x1) (fp.add RNE x7 x1)) (fp.mul RNE (fp.neg x7) (fp.add RNE x7 x7))) (fp.neg (fp.sub RNE (fp.add RNE x0 x9) (fp.neg x4)))))
(check-sat)
