(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.neg x6) (fp.mul RNE x1 x3)) (fp.add RNE (fp.sub RNE x6 x3) (fp.neg x2))))
(assert (fp.lt (fp.div RNE (fp.div RNE x1 x6) (fp.add RNE x6 x4)) (fp.neg (fp.div RNE x1 x2))))
(assert (fp.geq (fp.neg (fp.mul RNE x3 x6)) (fp.sub RNE (fp.div RNE x8 x1) (fp.mul RNE x5 x4))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x5 x0) (fp.neg x2)) (fp.neg (fp.mul RNE x0 x1))))
(assert (fp.leq (fp.add RNE (fp.neg x4) (fp.neg x2)) (fp.mul RNE (fp.neg x7) (fp.neg x2))))
(assert (fp.geq (fp.neg (fp.mul RNE x2 x2)) (fp.mul RNE (fp.add RNE x5 x6) (fp.add RNE x1 x6))))
(assert (fp.leq (fp.mul RNE (fp.neg x7) (fp.neg x6)) (fp.div RNE (fp.mul RNE x8 x2) (fp.add RNE x1 x2))))
(check-sat)
