(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.add RNE x19 x13) (fp.mul RNE x1 x17)) (fp.mul RNE (fp.sub RNE x13 x13) (fp.sub RNE x7 x21))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x17 x17) (fp.sub RNE x15 x21)) (fp.sub RNE (fp.mul RNE x0 x6) (fp.mul RNE x13 x17)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x6 x14) (fp.neg x15)) (fp.neg (fp.mul RNE x9 x2))) (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.div RNE x17 x7)) (fp.mul RNE (fp.add RNE x13 x10) (fp.add RNE x16 x19))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg (fp.neg x11)) (fp.sub RNE (fp.sub RNE x5 x6) (fp.add RNE x5 x19)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.div RNE x13 x8) (fp.div RNE x11 x5)) (fp.div RNE (fp.mul RNE x14 x7) (fp.sub RNE x18 x4))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE (fp.mul RNE x18 x1) (fp.sub RNE x9 x9))) (fp.div RNE (fp.mul RNE (fp.add RNE x4 x19) (fp.sub RNE x10 x17)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x20 x11)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x15) (fp.sub RNE x19 x11)) (fp.sub RNE (fp.neg x13) (fp.add RNE x1 x18))) (fp.neg (fp.div RNE (fp.add RNE x14 x20) (fp.sub RNE x10 x10))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.div RNE (fp.mul RNE x10 x7) (fp.sub RNE x5 x15))) (fp.div RNE (fp.sub RNE (fp.div RNE x12 x5) (fp.neg x11)) (fp.add RNE (fp.sub RNE x18 x3) (fp.div RNE x11 x14)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.neg x5) (fp.sub RNE x8 x12))) (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x7) (fp.add RNE x13 x11)) (fp.sub RNE (fp.div RNE x7 x6) (fp.neg x10))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x2 x10) (fp.mul RNE x4 x13)) (fp.neg (fp.neg x16))) (fp.add RNE (fp.add RNE (fp.add RNE x17 x19) (fp.sub RNE x20 x7)) (fp.mul RNE (fp.add RNE x13 x10) (fp.div RNE x19 x8)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.div RNE x3 x9) (fp.mul RNE x19 x20)) (fp.mul RNE (fp.add RNE x3 x0) (fp.neg x20))) (fp.neg (fp.sub RNE (fp.mul RNE x14 x4) (fp.div RNE x6 x18))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg (fp.sub RNE x16 x7)) (fp.add RNE (fp.mul RNE x6 x17) (fp.neg x20))) (fp.add RNE (fp.neg (fp.mul RNE x5 x20)) (fp.mul RNE (fp.div RNE x13 x16) (fp.add RNE x10 x20)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x2 x13) (fp.add RNE x9 x19)) (fp.add RNE (fp.add RNE x10 x17) (fp.mul RNE x5 x11))) (fp.div RNE (fp.sub RNE (fp.add RNE x7 x7) (fp.div RNE x12 x20)) (fp.sub RNE (fp.neg x15) (fp.div RNE x2 x4))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.add RNE x6 x7) (fp.add RNE x5 x18)) (fp.div RNE (fp.div RNE x18 x16) (fp.neg x13))) (fp.sub RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x7 x3)) (fp.neg (fp.mul RNE x20 x17)))) (fp.neg (fp.div RNE (fp.add RNE (fp.add RNE x0 x8) (fp.add RNE x10 x2)) (fp.sub RNE (fp.add RNE x4 x14) (fp.neg x19))))))
(check-sat)
