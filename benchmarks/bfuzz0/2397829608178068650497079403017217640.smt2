(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE x10 x2) (fp.sub RNE x9 x11)))
(assert (fp.eq (fp.sub RNE x0 x9) (fp.add RNE x5 x4)))
(assert (fp.eq (fp.div RNE x13 x7) (fp.mul RNE x9 x0)))
(assert (fp.geq (fp.sub RNE x0 x8) (fp.add RNE x7 x8)))
(assert (fp.geq (fp.add RNE x4 x8) (fp.div RNE x8 x0)))
(assert (fp.gt (fp.mul RNE x9 x2) (fp.neg x12)))
(assert (fp.leq (fp.mul RNE x9 x2) (fp.div RNE x9 x13)))
(assert (fp.lt (fp.mul RNE x1 x12) (fp.sub RNE x9 x3)))
(assert (fp.eq (fp.add RNE x5 x3) (fp.add RNE x6 x1)))
(assert (fp.leq (fp.sub RNE x9 x6) (fp.div RNE x1 x8)))
(assert (fp.lt (fp.neg x8) (fp.mul RNE x3 x4)))
(assert (fp.leq (fp.add RNE x0 x2) (fp.div RNE x12 x13)))
(assert (fp.geq (fp.neg x5) (fp.sub RNE x2 x4)))
(assert (fp.leq (fp.add RNE x8 x3) (fp.mul RNE x3 x2)))
(check-sat)
