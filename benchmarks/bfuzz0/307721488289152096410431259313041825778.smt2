(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x0 x4) (fp.mul RNE x10 x6)))
(assert (fp.leq (fp.neg x10) (fp.neg x6)))
(assert (fp.gt (fp.neg x8) (fp.sub RNE x7 x7)))
(assert (fp.lt (fp.neg x6) (fp.add RNE x10 x6)))
(assert (fp.eq (fp.mul RNE x7 x1) (fp.div RNE x5 x3)))
(assert (fp.gt (fp.add RNE x3 x9) (fp.neg x6)))
(assert (fp.eq (fp.mul RNE x3 x7) (fp.neg x4)))
(assert (fp.eq (fp.sub RNE x6 x0) (fp.sub RNE x7 x10)))
(assert (fp.gt (fp.div RNE x3 x3) (fp.sub RNE x2 x2)))
(assert (fp.eq (fp.sub RNE x4 x10) (fp.div RNE x0 x1)))
(assert (fp.eq (fp.sub RNE x4 x7) (fp.mul RNE x1 x9)))
(assert (fp.eq (fp.div RNE x0 x4) (fp.mul RNE x2 x9)))
(assert (fp.lt (fp.add RNE x8 x9) (fp.sub RNE x3 x6)))
(check-sat)
