(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x2 x0)) (fp.neg (fp.div RNE x2 x11))) (fp.sub RNE (fp.sub RNE (fp.div RNE x8 x21) (fp.add RNE x13 x17)) (fp.sub RNE (fp.div RNE x20 x3) (fp.add RNE x11 x13)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE x16 x15) (fp.div RNE x20 x17)) (fp.mul RNE (fp.mul RNE x6 x11) (fp.sub RNE x14 x16))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x0 x12) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x11 x13) (fp.div RNE x0 x17)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.neg x11) (fp.add RNE x20 x21)) (fp.div RNE (fp.add RNE x1 x8) (fp.neg x18))) (fp.neg (fp.mul RNE (fp.add RNE x16 x14) (fp.neg x5)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.add RNE x13 x22) (fp.neg x15)) (fp.div RNE (fp.neg x7) (fp.neg x11))) (fp.mul RNE (fp.div RNE (fp.add RNE x8 x21) (fp.neg x4)) (fp.sub RNE (fp.div RNE x5 x6) (fp.mul RNE x12 x8)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE x0 x13) (fp.add RNE x16 x0)) (fp.neg (fp.sub RNE x5 x17))) (fp.sub RNE (fp.sub RNE (fp.div RNE x17 x8) (fp.sub RNE x15 x0)) (fp.add RNE (fp.mul RNE x14 x11) (fp.sub RNE x0 x4)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x4 x4) (fp.add RNE x17 x16)) (fp.neg (fp.add RNE x8 x5))) (fp.mul RNE (fp.add RNE (fp.mul RNE x8 x0) (fp.add RNE x21 x5)) (fp.sub RNE (fp.sub RNE x1 x20) (fp.div RNE x9 x19)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x4 x1) (fp.add RNE x0 x9)) (fp.sub RNE (fp.div RNE x20 x7) (fp.add RNE x7 x6))) (fp.div RNE (fp.div RNE (fp.neg x15) (fp.neg x16)) (fp.div RNE (fp.add RNE x8 x1) (fp.mul RNE x10 x11)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x17) (fp.div RNE x7 x6)) (fp.div RNE (fp.mul RNE x13 x12) (fp.neg x5))) (fp.neg (fp.add RNE (fp.neg x6) (fp.mul RNE x16 x1)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x18 x16)) (fp.sub RNE (fp.div RNE x12 x15) (fp.div RNE x17 x8))) (fp.mul RNE (fp.neg (fp.add RNE x7 x9)) (fp.mul RNE (fp.neg x1) (fp.add RNE x11 x1)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x13 x20) (fp.sub RNE x17 x8)) (fp.div RNE (fp.sub RNE x7 x14) (fp.add RNE x21 x6))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x16) (fp.sub RNE x18 x3)) (fp.add RNE (fp.add RNE x7 x21) (fp.mul RNE x6 x1)))))
(check-sat)
