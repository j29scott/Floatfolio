(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.div RNE x14 x2) (fp.mul RNE x11 x6)) (fp.neg (fp.add RNE x6 x12))))
(assert (fp.lt (fp.add RNE (fp.neg x10) (fp.neg x11)) (fp.add RNE (fp.neg x12) (fp.neg x0))))
(assert (fp.leq (fp.div RNE (fp.neg x15) (fp.neg x15)) (fp.div RNE (fp.add RNE x13 x9) (fp.div RNE x3 x4))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x3 x15) (fp.div RNE x13 x4)) (fp.mul RNE (fp.neg x15) (fp.neg x1))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x13 x2) (fp.add RNE x11 x7)) (fp.mul RNE (fp.mul RNE x1 x2) (fp.mul RNE x1 x7))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x0 x11) (fp.add RNE x2 x1)) (fp.sub RNE (fp.neg x14) (fp.neg x0))))
(assert (fp.eq (fp.neg (fp.mul RNE x8 x6)) (fp.sub RNE (fp.add RNE x13 x13) (fp.mul RNE x2 x11))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x13 x2) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x14 x2) (fp.mul RNE x7 x5))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x3 x10) (fp.add RNE x6 x3)) (fp.add RNE (fp.div RNE x8 x14) (fp.add RNE x15 x3))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x7 x9) (fp.sub RNE x9 x15)) (fp.div RNE (fp.add RNE x6 x1) (fp.div RNE x0 x14))))
(assert (fp.lt (fp.div RNE (fp.div RNE x12 x0) (fp.mul RNE x15 x11)) (fp.neg (fp.neg x6))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x13 x10) (fp.add RNE x10 x9)) (fp.neg (fp.neg x7))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x7 x3) (fp.mul RNE x3 x9)) (fp.neg (fp.mul RNE x13 x10))))
(assert (fp.leq (fp.div RNE (fp.div RNE x1 x11) (fp.div RNE x3 x11)) (fp.sub RNE (fp.neg x2) (fp.add RNE x12 x5))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x13 x2) (fp.mul RNE x10 x7)) (fp.add RNE (fp.div RNE x6 x14) (fp.sub RNE x8 x10))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x9) (fp.mul RNE x7 x4)) (fp.div RNE (fp.div RNE x6 x3) (fp.add RNE x10 x4))))
(assert (fp.geq (fp.mul RNE (fp.neg x4) (fp.div RNE x2 x3)) (fp.div RNE (fp.mul RNE x12 x4) (fp.sub RNE x4 x9))))
(assert (fp.lt (fp.add RNE (fp.add RNE x5 x12) (fp.neg x14)) (fp.sub RNE (fp.add RNE x6 x14) (fp.div RNE x13 x12))))
(check-sat)
