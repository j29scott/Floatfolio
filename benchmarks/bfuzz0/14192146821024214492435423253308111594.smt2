(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.div RNE (fp.add RNE x4 x7) (fp.div RNE x5 x5))) (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x7) (fp.div RNE x2 x1)) (fp.div RNE (fp.mul RNE x7 x5) (fp.div RNE x7 x3)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg x6) (fp.div RNE x4 x2)) (fp.mul RNE (fp.div RNE x0 x7) (fp.sub RNE x5 x5))) (fp.mul RNE (fp.neg (fp.add RNE x7 x3)) (fp.mul RNE (fp.sub RNE x2 x3) (fp.add RNE x7 x2)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x2 x4) (fp.sub RNE x3 x3))) (fp.add RNE (fp.sub RNE (fp.div RNE x7 x6) (fp.mul RNE x4 x0)) (fp.div RNE (fp.neg x2) (fp.add RNE x2 x6)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE x0 x6) (fp.sub RNE x0 x2)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x7 x0))) (fp.sub RNE (fp.add RNE (fp.sub RNE x6 x1) (fp.neg x5)) (fp.div RNE (fp.mul RNE x0 x2) (fp.mul RNE x7 x1)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE x0 x5) (fp.sub RNE x5 x3))) (fp.sub RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x3 x0)) (fp.mul RNE (fp.sub RNE x5 x1) (fp.mul RNE x4 x1)))))
(check-sat)
