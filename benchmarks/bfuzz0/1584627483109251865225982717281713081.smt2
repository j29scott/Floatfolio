(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE x19 x17) (fp.mul RNE x17 x5))) (fp.div RNE (fp.add RNE (fp.mul RNE x2 x3) (fp.mul RNE x3 x19)) (fp.add RNE (fp.mul RNE x8 x7) (fp.div RNE x18 x19)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.div RNE x19 x13) (fp.mul RNE x9 x9)) (fp.add RNE (fp.add RNE x11 x3) (fp.add RNE x19 x12))) (fp.neg (fp.div RNE (fp.neg x8) (fp.mul RNE x13 x18)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x6 x15) (fp.sub RNE x13 x16))) (fp.mul RNE (fp.neg (fp.neg x1)) (fp.mul RNE (fp.add RNE x9 x9) (fp.add RNE x6 x2)))))
(check-sat)
