(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x8 x6)) (fp.div RNE (fp.neg x14) (fp.div RNE x14 x11))) (fp.div RNE (fp.mul RNE (fp.div RNE x13 x16) (fp.add RNE x14 x9)) (fp.sub RNE (fp.mul RNE x4 x4) (fp.sub RNE x12 x13)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.add RNE x15 x6) (fp.mul RNE x0 x3)) (fp.mul RNE (fp.div RNE x1 x12) (fp.add RNE x6 x13))) (fp.add RNE (fp.div RNE (fp.div RNE x14 x7) (fp.mul RNE x3 x6)) (fp.sub RNE (fp.sub RNE x2 x3) (fp.add RNE x7 x4)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE x14 x5) (fp.sub RNE x1 x2))) (fp.add RNE (fp.div RNE (fp.add RNE x13 x2) (fp.neg x0)) (fp.add RNE (fp.neg x10) (fp.mul RNE x3 x1)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x0 x7) (fp.sub RNE x11 x4)) (fp.sub RNE (fp.div RNE x11 x14) (fp.mul RNE x1 x4))) (fp.div RNE (fp.sub RNE (fp.neg x16) (fp.sub RNE x8 x12)) (fp.neg (fp.sub RNE x6 x5)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x13 x13) (fp.mul RNE x7 x6)) (fp.div RNE (fp.mul RNE x4 x14) (fp.sub RNE x6 x13))) (fp.add RNE (fp.sub RNE (fp.add RNE x1 x10) (fp.sub RNE x14 x16)) (fp.sub RNE (fp.add RNE x10 x6) (fp.add RNE x10 x8)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x1 x6)) (fp.mul RNE (fp.neg x16) (fp.mul RNE x9 x12))) (fp.div RNE (fp.neg (fp.add RNE x13 x12)) (fp.mul RNE (fp.neg x2) (fp.add RNE x5 x5)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.add RNE x3 x15) (fp.add RNE x0 x10))) (fp.neg (fp.sub RNE (fp.add RNE x6 x15) (fp.add RNE x12 x9)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x0) (fp.mul RNE x10 x10)) (fp.add RNE (fp.neg x10) (fp.sub RNE x9 x1))) (fp.div RNE (fp.mul RNE (fp.mul RNE x10 x6) (fp.sub RNE x0 x16)) (fp.neg (fp.neg x5)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE x16 x4)) (fp.add RNE (fp.sub RNE x6 x8) (fp.mul RNE x12 x8))) (fp.mul RNE (fp.neg (fp.add RNE x7 x3)) (fp.neg (fp.mul RNE x11 x6)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE x0 x9) (fp.mul RNE x2 x0)) (fp.mul RNE (fp.sub RNE x13 x14) (fp.sub RNE x3 x12))) (fp.neg (fp.div RNE (fp.sub RNE x8 x1) (fp.div RNE x1 x7)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.sub RNE x6 x13) (fp.add RNE x10 x7)) (fp.add RNE (fp.sub RNE x15 x10) (fp.div RNE x1 x4))) (fp.div RNE (fp.div RNE (fp.div RNE x15 x11) (fp.neg x13)) (fp.add RNE (fp.mul RNE x11 x16) (fp.div RNE x6 x5)))))
(check-sat)
