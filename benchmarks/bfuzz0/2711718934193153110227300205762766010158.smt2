(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.neg (fp.mul RNE x16 x7)) (fp.mul RNE (fp.neg x3) (fp.sub RNE x2 x15))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x18) (fp.sub RNE x6 x13)) (fp.mul RNE (fp.div RNE x17 x0) (fp.neg x24)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x11 x20) (fp.div RNE x21 x5)) (fp.sub RNE (fp.mul RNE x19 x5) (fp.div RNE x19 x4))) (fp.div RNE (fp.sub RNE (fp.add RNE x16 x5) (fp.sub RNE x3 x20)) (fp.neg (fp.div RNE x7 x14)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE x23 x4) (fp.sub RNE x6 x4)) (fp.sub RNE (fp.add RNE x19 x6) (fp.add RNE x21 x8))) (fp.sub RNE (fp.neg (fp.neg x15)) (fp.neg (fp.add RNE x19 x19)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.neg x18) (fp.sub RNE x10 x15)) (fp.div RNE (fp.neg x10) (fp.div RNE x0 x12))) (fp.sub RNE (fp.add RNE (fp.div RNE x17 x10) (fp.sub RNE x2 x12)) (fp.mul RNE (fp.div RNE x20 x18) (fp.add RNE x1 x1)))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x17 x18))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x13) (fp.mul RNE x2 x7)) (fp.add RNE (fp.mul RNE x11 x10) (fp.sub RNE x17 x1)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE x13 x21)) (fp.neg (fp.div RNE x14 x4))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x1 x3) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x18 x22) (fp.div RNE x10 x8)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x23) (fp.neg x19)) (fp.add RNE (fp.add RNE x23 x20) (fp.add RNE x22 x12))) (fp.neg (fp.mul RNE (fp.add RNE x9 x1) (fp.add RNE x11 x6)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x8 x8) (fp.mul RNE x6 x4)) (fp.sub RNE (fp.neg x0) (fp.div RNE x11 x11))) (fp.div RNE (fp.add RNE (fp.sub RNE x18 x13) (fp.neg x16)) (fp.neg (fp.add RNE x12 x18)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.div RNE x15 x8)) (fp.add RNE (fp.div RNE x24 x10) (fp.neg x17))) (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x19) (fp.sub RNE x0 x5)) (fp.sub RNE (fp.sub RNE x5 x20) (fp.add RNE x3 x7)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.div RNE x22 x14) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x21 x6) (fp.neg x16))) (fp.neg (fp.add RNE (fp.div RNE x4 x16) (fp.div RNE x10 x9)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x5 x13) (fp.sub RNE x13 x7))) (fp.neg (fp.neg (fp.mul RNE x22 x22)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x7 x15) (fp.add RNE x18 x3)) (fp.div RNE (fp.neg x15) (fp.div RNE x17 x22))) (fp.sub RNE (fp.add RNE (fp.neg x22) (fp.mul RNE x8 x23)) (fp.sub RNE (fp.add RNE x14 x13) (fp.sub RNE x9 x4)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.mul RNE x15 x24) (fp.neg x2)) (fp.div RNE (fp.sub RNE x8 x13) (fp.mul RNE x2 x7))) (fp.add RNE (fp.neg (fp.sub RNE x14 x11)) (fp.mul RNE (fp.div RNE x15 x14) (fp.neg x23)))))
(check-sat)
