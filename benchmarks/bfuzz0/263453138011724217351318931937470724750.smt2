(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE x5 x6) (fp.div RNE x3 x5)))
(assert (fp.gt (fp.sub RNE x4 x3) (fp.add RNE x6 x1)))
(assert (fp.eq (fp.div RNE x5 x2) (fp.mul RNE x3 x2)))
(assert (fp.gt (fp.add RNE x7 x7) (fp.div RNE x4 x1)))
(assert (fp.gt (fp.div RNE x7 x1) (fp.neg x1)))
(assert (fp.gt (fp.add RNE x2 x1) (fp.add RNE x6 x4)))
(assert (fp.geq (fp.sub RNE x5 x4) (fp.div RNE x2 x4)))
(assert (fp.eq (fp.div RNE x1 x4) (fp.neg x2)))
(assert (fp.leq (fp.sub RNE x1 x4) (fp.add RNE x1 x1)))
(assert (fp.geq (fp.mul RNE x4 x4) (fp.sub RNE x6 x4)))
(assert (fp.gt (fp.mul RNE x7 x0) (fp.mul RNE x7 x7)))
(assert (fp.gt (fp.add RNE x1 x2) (fp.neg x1)))
(assert (fp.geq (fp.mul RNE x7 x6) (fp.neg x5)))
(assert (fp.lt (fp.neg x6) (fp.mul RNE x7 x1)))
(check-sat)
