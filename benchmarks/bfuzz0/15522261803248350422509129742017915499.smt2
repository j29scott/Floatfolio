(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x19 x19) (fp.neg x15)) (fp.add RNE (fp.add RNE x11 x19) (fp.sub RNE x5 x19))))
(assert (fp.gt (fp.add RNE (fp.add RNE x5 x0) (fp.neg x14)) (fp.neg (fp.add RNE x4 x3))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x6 x9) (fp.div RNE x10 x1)) (fp.mul RNE (fp.add RNE x15 x11) (fp.add RNE x9 x10))))
(assert (fp.leq (fp.add RNE (fp.div RNE x0 x17) (fp.div RNE x19 x10)) (fp.mul RNE (fp.add RNE x8 x2) (fp.neg x1))))
(assert (fp.leq (fp.add RNE (fp.neg x19) (fp.add RNE x9 x0)) (fp.mul RNE (fp.div RNE x2 x11) (fp.mul RNE x3 x18))))
(assert (fp.leq (fp.neg (fp.mul RNE x6 x18)) (fp.mul RNE (fp.div RNE x17 x7) (fp.div RNE x2 x6))))
(assert (fp.gt (fp.div RNE (fp.add RNE x2 x17) (fp.div RNE x6 x13)) (fp.add RNE (fp.neg x11) (fp.neg x10))))
(assert (fp.leq (fp.neg (fp.add RNE x1 x19)) (fp.div RNE (fp.mul RNE x0 x14) (fp.neg x2))))
(assert (fp.lt (fp.sub RNE (fp.neg x5) (fp.sub RNE x8 x8)) (fp.div RNE (fp.neg x16) (fp.add RNE x19 x10))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x7 x2) (fp.mul RNE x18 x11)) (fp.sub RNE (fp.add RNE x13 x4) (fp.div RNE x2 x15))))
(assert (fp.geq (fp.add RNE (fp.div RNE x7 x2) (fp.add RNE x11 x13)) (fp.sub RNE (fp.neg x3) (fp.mul RNE x19 x3))))
(assert (fp.lt (fp.neg (fp.neg x14)) (fp.mul RNE (fp.sub RNE x9 x6) (fp.div RNE x2 x1))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x16 x0) (fp.sub RNE x18 x12)) (fp.mul RNE (fp.mul RNE x10 x1) (fp.neg x18))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x19 x0) (fp.neg x6)) (fp.div RNE (fp.div RNE x14 x4) (fp.add RNE x3 x10))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x4 x11) (fp.div RNE x1 x19)) (fp.add RNE (fp.mul RNE x14 x10) (fp.add RNE x11 x11))))
(check-sat)
