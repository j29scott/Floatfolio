(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x2) (fp.mul RNE x16 x16)) (fp.add RNE (fp.mul RNE x13 x14) (fp.mul RNE x11 x4))) (fp.neg (fp.div RNE (fp.div RNE x13 x2) (fp.add RNE x7 x4)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg x20) (fp.sub RNE x11 x1)) (fp.div RNE (fp.sub RNE x17 x20) (fp.sub RNE x3 x15))) (fp.mul RNE (fp.div RNE (fp.sub RNE x17 x2) (fp.neg x6)) (fp.neg (fp.div RNE x15 x15)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE x5 x6) (fp.sub RNE x11 x5)) (fp.neg (fp.add RNE x4 x15))) (fp.add RNE (fp.neg (fp.div RNE x20 x11)) (fp.mul RNE (fp.div RNE x14 x18) (fp.mul RNE x3 x18)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x17 x11) (fp.neg x0)) (fp.mul RNE (fp.div RNE x13 x10) (fp.mul RNE x2 x2))) (fp.div RNE (fp.sub RNE (fp.sub RNE x10 x19) (fp.add RNE x16 x8)) (fp.neg (fp.div RNE x8 x4)))))
(check-sat)
