(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg x3) (fp.neg x8)) (fp.sub RNE (fp.add RNE x5 x2) (fp.div RNE x10 x10))) (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x6) (fp.mul RNE x7 x9)) (fp.neg (fp.sub RNE x8 x9)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x4 x4)) (fp.add RNE (fp.neg x9) (fp.sub RNE x8 x5))) (fp.neg (fp.sub RNE (fp.mul RNE x2 x10) (fp.div RNE x3 x1)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x5 x2) (fp.mul RNE x9 x6))) (fp.mul RNE (fp.neg (fp.sub RNE x3 x0)) (fp.div RNE (fp.div RNE x4 x10) (fp.neg x10)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE x5 x10) (fp.div RNE x5 x4)) (fp.neg (fp.div RNE x8 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x4 x9) (fp.add RNE x6 x8)) (fp.div RNE (fp.sub RNE x10 x6) (fp.div RNE x10 x2)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x1))) (fp.sub RNE (fp.neg (fp.sub RNE x8 x9)) (fp.sub RNE (fp.neg x10) (fp.sub RNE x10 x9)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg x10) (fp.add RNE x9 x4)) (fp.add RNE (fp.sub RNE x9 x3) (fp.sub RNE x2 x1))) (fp.add RNE (fp.neg (fp.sub RNE x4 x10)) (fp.neg (fp.neg x5)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.sub RNE x9 x9) (fp.neg x9)) (fp.neg (fp.sub RNE x4 x5))) (fp.mul RNE (fp.neg (fp.mul RNE x6 x7)) (fp.neg (fp.sub RNE x10 x4)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.sub RNE x2 x6) (fp.div RNE x6 x4))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x0) (fp.mul RNE x0 x1)) (fp.add RNE (fp.div RNE x9 x2) (fp.neg x2)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x6 x7) (fp.sub RNE x10 x6)) (fp.mul RNE (fp.neg x3) (fp.mul RNE x5 x6))) (fp.mul RNE (fp.neg (fp.div RNE x9 x8)) (fp.sub RNE (fp.div RNE x7 x7) (fp.add RNE x2 x7)))))
(check-sat)
