(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.mul RNE x9 x6) (fp.add RNE x3 x10)) (fp.sub RNE (fp.neg x10) (fp.neg x5))))
(assert (fp.lt (fp.div RNE (fp.add RNE x10 x10) (fp.sub RNE x6 x6)) (fp.div RNE (fp.mul RNE x8 x2) (fp.sub RNE x7 x2))))
(assert (fp.leq (fp.div RNE (fp.div RNE x10 x12) (fp.mul RNE x5 x10)) (fp.neg (fp.mul RNE x4 x6))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x5 x10) (fp.neg x12)) (fp.neg (fp.add RNE x4 x6))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x9 x8) (fp.mul RNE x2 x3)) (fp.sub RNE (fp.add RNE x11 x1) (fp.sub RNE x3 x4))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x5 x4) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x10 x9) (fp.sub RNE x5 x1))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x8 x1) (fp.mul RNE x5 x2)) (fp.sub RNE (fp.add RNE x4 x4) (fp.sub RNE x7 x3))))
(assert (fp.eq (fp.neg (fp.neg x3)) (fp.mul RNE (fp.mul RNE x9 x2) (fp.neg x11))))
(assert (fp.leq (fp.sub RNE (fp.neg x5) (fp.sub RNE x7 x1)) (fp.div RNE (fp.div RNE x8 x4) (fp.mul RNE x7 x10))))
(assert (fp.eq (fp.neg (fp.mul RNE x12 x3)) (fp.mul RNE (fp.div RNE x5 x6) (fp.add RNE x4 x2))))
(assert (fp.geq (fp.neg (fp.add RNE x0 x10)) (fp.neg (fp.add RNE x3 x4))))
(assert (fp.gt (fp.neg (fp.add RNE x2 x9)) (fp.mul RNE (fp.add RNE x1 x3) (fp.div RNE x6 x10))))
(check-sat)
