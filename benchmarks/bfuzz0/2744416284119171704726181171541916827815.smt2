(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.sub RNE x6 x10) (fp.add RNE x3 x3)) (fp.neg (fp.add RNE x7 x9))) (fp.div RNE (fp.neg (fp.div RNE x1 x9)) (fp.div RNE (fp.add RNE x5 x9) (fp.sub RNE x10 x8)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.mul RNE x9 x8) (fp.div RNE x7 x10))) (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x4) (fp.sub RNE x3 x6)) (fp.neg (fp.div RNE x10 x1)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x4 x8) (fp.neg x9)) (fp.add RNE (fp.add RNE x2 x4) (fp.add RNE x5 x5))) (fp.neg (fp.div RNE (fp.sub RNE x7 x6) (fp.add RNE x8 x0)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.sub RNE x8 x8)) (fp.neg (fp.div RNE x1 x2))) (fp.div RNE (fp.neg (fp.sub RNE x4 x6)) (fp.sub RNE (fp.mul RNE x7 x10) (fp.div RNE x2 x4)))))
(check-sat)
