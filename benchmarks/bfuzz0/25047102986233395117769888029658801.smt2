(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x15 x16) (fp.mul RNE x8 x2)))
(assert (fp.lt (fp.add RNE x14 x0) (fp.add RNE x13 x9)))
(assert (fp.leq (fp.sub RNE x19 x12) (fp.sub RNE x16 x16)))
(assert (fp.geq (fp.neg x16) (fp.add RNE x8 x2)))
(assert (fp.gt (fp.sub RNE x14 x15) (fp.add RNE x14 x17)))
(assert (fp.gt (fp.div RNE x2 x9) (fp.neg x7)))
(assert (fp.leq (fp.mul RNE x9 x4) (fp.mul RNE x13 x1)))
(assert (fp.geq (fp.neg x13) (fp.sub RNE x12 x2)))
(assert (fp.lt (fp.neg x18) (fp.mul RNE x12 x5)))
(check-sat)
