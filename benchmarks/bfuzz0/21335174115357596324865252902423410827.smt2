(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.neg x0) (fp.mul RNE x1 x1)) (fp.neg (fp.neg x11))))
(assert (fp.geq (fp.add RNE (fp.div RNE x1 x6) (fp.mul RNE x5 x4)) (fp.add RNE (fp.div RNE x9 x7) (fp.add RNE x3 x10))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x5 x9) (fp.add RNE x6 x10)) (fp.mul RNE (fp.neg x2) (fp.add RNE x8 x6))))
(assert (fp.geq (fp.sub RNE (fp.neg x4) (fp.sub RNE x3 x6)) (fp.div RNE (fp.neg x2) (fp.div RNE x6 x11))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x10 x4) (fp.neg x10)) (fp.sub RNE (fp.sub RNE x1 x4) (fp.neg x1))))
(assert (fp.eq (fp.div RNE (fp.add RNE x8 x11) (fp.sub RNE x6 x1)) (fp.div RNE (fp.add RNE x5 x6) (fp.sub RNE x4 x8))))
(assert (fp.gt (fp.neg (fp.add RNE x8 x1)) (fp.add RNE (fp.div RNE x5 x4) (fp.sub RNE x2 x2))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x11 x2) (fp.sub RNE x4 x4)) (fp.neg (fp.mul RNE x2 x3))))
(check-sat)
