(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x5) (fp.add RNE x0 x6)) (fp.div RNE (fp.mul RNE x1 x1) (fp.div RNE x0 x3))) (fp.mul RNE (fp.div RNE (fp.add RNE x7 x6) (fp.sub RNE x8 x3)) (fp.div RNE (fp.add RNE x6 x0) (fp.add RNE x6 x6)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.neg x5)) (fp.add RNE (fp.add RNE x5 x1) (fp.mul RNE x0 x7))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x5 x8) (fp.sub RNE x3 x5)) (fp.sub RNE (fp.sub RNE x1 x0) (fp.mul RNE x6 x6))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x1) (fp.div RNE x7 x1)) (fp.div RNE (fp.add RNE x5 x5) (fp.neg x7))) (fp.sub RNE (fp.add RNE (fp.div RNE x0 x4) (fp.sub RNE x2 x5)) (fp.sub RNE (fp.add RNE x0 x6) (fp.sub RNE x7 x3)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.add RNE x0 x8) (fp.mul RNE x6 x1)) (fp.neg (fp.mul RNE x1 x8))))))
(check-sat)
