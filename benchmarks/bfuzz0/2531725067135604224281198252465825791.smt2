(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x0) (fp.sub RNE x3 x3)) (fp.add RNE (fp.add RNE x4 x11) (fp.neg x17))) (fp.sub RNE (fp.add RNE (fp.div RNE x11 x18) (fp.add RNE x13 x10)) (fp.neg (fp.sub RNE x7 x5)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x5) (fp.add RNE x10 x10)) (fp.add RNE (fp.add RNE x22 x1) (fp.sub RNE x20 x13))) (fp.add RNE (fp.sub RNE (fp.div RNE x10 x9) (fp.add RNE x6 x2)) (fp.neg (fp.add RNE x5 x5)))))
(check-sat)
