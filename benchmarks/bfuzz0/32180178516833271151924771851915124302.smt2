(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x1 x6) (fp.neg x11)))
(assert (fp.geq (fp.neg x4) (fp.sub RNE x10 x4)))
(assert (fp.lt (fp.sub RNE x11 x9) (fp.sub RNE x13 x10)))
(assert (fp.geq (fp.mul RNE x1 x8) (fp.div RNE x2 x12)))
(assert (fp.lt (fp.neg x7) (fp.add RNE x4 x5)))
(assert (fp.eq (fp.neg x0) (fp.neg x3)))
(assert (fp.leq (fp.sub RNE x4 x1) (fp.sub RNE x7 x6)))
(assert (fp.leq (fp.neg x12) (fp.sub RNE x8 x3)))
(assert (fp.gt (fp.mul RNE x8 x12) (fp.div RNE x11 x4)))
(assert (fp.eq (fp.neg x12) (fp.neg x13)))
(assert (fp.geq (fp.div RNE x3 x3) (fp.add RNE x0 x12)))
(assert (fp.leq (fp.mul RNE x12 x12) (fp.sub RNE x7 x11)))
(assert (fp.leq (fp.mul RNE x7 x1) (fp.div RNE x0 x8)))
(check-sat)
