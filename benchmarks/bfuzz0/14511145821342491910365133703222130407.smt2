(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.mul RNE x4 x10) (fp.div RNE x9 x5)) (fp.mul RNE (fp.add RNE x3 x4) (fp.div RNE x4 x5))))
(assert (fp.eq (fp.div RNE (fp.div RNE x10 x0) (fp.sub RNE x3 x8)) (fp.add RNE (fp.mul RNE x10 x7) (fp.div RNE x9 x5))))
(assert (fp.gt (fp.neg (fp.neg x6)) (fp.add RNE (fp.neg x2) (fp.div RNE x11 x10))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x5 x2) (fp.div RNE x9 x4)) (fp.neg (fp.mul RNE x5 x12))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x0 x7) (fp.sub RNE x8 x6)) (fp.neg (fp.sub RNE x4 x13))))
(assert (fp.leq (fp.neg (fp.mul RNE x10 x6)) (fp.mul RNE (fp.mul RNE x8 x10) (fp.neg x5))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x8) (fp.mul RNE x6 x3)) (fp.div RNE (fp.neg x6) (fp.neg x3))))
(check-sat)
