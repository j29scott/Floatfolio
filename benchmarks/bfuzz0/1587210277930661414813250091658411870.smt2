(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE x9 x6) (fp.add RNE x8 x7)) (fp.div RNE (fp.sub RNE x16 x14) (fp.add RNE x0 x13))))
(assert (fp.gt (fp.neg (fp.div RNE x17 x5)) (fp.neg (fp.mul RNE x17 x5))))
(assert (fp.eq (fp.neg (fp.neg x5)) (fp.add RNE (fp.add RNE x14 x2) (fp.div RNE x10 x17))))
(assert (fp.gt (fp.neg (fp.sub RNE x13 x7)) (fp.add RNE (fp.div RNE x13 x11) (fp.sub RNE x7 x2))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x18 x3) (fp.sub RNE x14 x19)) (fp.add RNE (fp.mul RNE x1 x7) (fp.mul RNE x0 x11))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x4 x0) (fp.neg x14)) (fp.neg (fp.sub RNE x1 x0))))
(assert (fp.lt (fp.neg (fp.sub RNE x11 x10)) (fp.div RNE (fp.div RNE x14 x5) (fp.add RNE x4 x1))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x18 x12) (fp.div RNE x9 x9)) (fp.mul RNE (fp.div RNE x7 x18) (fp.neg x15))))
(check-sat)
