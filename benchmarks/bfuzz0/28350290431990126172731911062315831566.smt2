(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE x12 x14) (fp.add RNE x12 x8)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x11 x11))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x6 x7) (fp.mul RNE x5 x10)) (fp.sub RNE (fp.add RNE x14 x13) (fp.div RNE x4 x5))))
(assert (fp.eq (fp.mul RNE (fp.neg x2) (fp.div RNE x12 x2)) (fp.mul RNE (fp.add RNE x12 x11) (fp.add RNE x6 x8))))
(assert (fp.leq (fp.div RNE (fp.add RNE x2 x0) (fp.div RNE x4 x10)) (fp.add RNE (fp.neg x10) (fp.add RNE x0 x3))))
(check-sat)
