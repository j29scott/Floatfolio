(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE x12 x3) (fp.neg x7)))
(assert (fp.lt (fp.sub RNE x13 x13) (fp.mul RNE x8 x5)))
(assert (fp.leq (fp.mul RNE x2 x10) (fp.mul RNE x12 x2)))
(assert (fp.geq (fp.neg x5) (fp.add RNE x3 x6)))
(assert (fp.lt (fp.div RNE x10 x5) (fp.sub RNE x0 x0)))
(assert (fp.lt (fp.div RNE x14 x14) (fp.sub RNE x6 x0)))
(assert (fp.gt (fp.mul RNE x12 x10) (fp.sub RNE x1 x10)))
(assert (fp.leq (fp.sub RNE x12 x11) (fp.div RNE x14 x13)))
(assert (fp.lt (fp.div RNE x9 x9) (fp.add RNE x12 x11)))
(assert (fp.gt (fp.neg x10) (fp.add RNE x6 x3)))
(check-sat)
