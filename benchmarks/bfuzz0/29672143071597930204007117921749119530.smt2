(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x0) (fp.div RNE x7 x12)))
(assert (fp.lt (fp.add RNE x1 x2) (fp.mul RNE x0 x7)))
(assert (fp.eq (fp.div RNE x9 x3) (fp.mul RNE x21 x10)))
(assert (fp.gt (fp.neg x15) (fp.sub RNE x12 x19)))
(assert (fp.gt (fp.sub RNE x6 x10) (fp.sub RNE x2 x9)))
(assert (fp.leq (fp.add RNE x7 x5) (fp.div RNE x13 x12)))
(assert (fp.lt (fp.div RNE x2 x13) (fp.div RNE x9 x0)))
(check-sat)
