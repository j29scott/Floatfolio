(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x13 x12) (fp.div RNE x2 x7)) (fp.add RNE (fp.neg x6) (fp.mul RNE x0 x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x9 x8) (fp.add RNE x2 x12)) (fp.mul RNE (fp.neg x21) (fp.sub RNE x8 x19)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x15 x18) (fp.sub RNE x6 x22)) (fp.add RNE (fp.mul RNE x17 x2) (fp.sub RNE x3 x16))) (fp.neg (fp.sub RNE (fp.sub RNE x20 x20) (fp.sub RNE x2 x21))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE (fp.add RNE x8 x17) (fp.neg x11))) (fp.mul RNE (fp.mul RNE (fp.neg x13) (fp.div RNE x9 x19)) (fp.mul RNE (fp.neg x17) (fp.mul RNE x4 x12)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.add RNE x6 x11) (fp.neg x22))) (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x0) (fp.sub RNE x8 x8)) (fp.neg (fp.div RNE x1 x13))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x8 x16)) (fp.neg (fp.mul RNE x1 x16)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.div RNE x13 x3) (fp.div RNE x22 x16)) (fp.add RNE (fp.add RNE x3 x22) (fp.sub RNE x4 x7))) (fp.div RNE (fp.mul RNE (fp.mul RNE x21 x21) (fp.sub RNE x2 x1)) (fp.neg (fp.mul RNE x14 x2))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x16 x6) (fp.mul RNE x17 x9)) (fp.mul RNE (fp.add RNE x6 x13) (fp.add RNE x13 x0))) (fp.mul RNE (fp.mul RNE (fp.div RNE x21 x18) (fp.add RNE x13 x21)) (fp.div RNE (fp.div RNE x15 x17) (fp.mul RNE x4 x20)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.sub RNE x21 x6) (fp.mul RNE x19 x9)) (fp.add RNE (fp.add RNE x13 x4) (fp.neg x15))) (fp.neg (fp.mul RNE (fp.neg x22) (fp.div RNE x5 x8))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg (fp.sub RNE x3 x21)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x22 x14))) (fp.div RNE (fp.div RNE (fp.mul RNE x17 x21) (fp.sub RNE x3 x19)) (fp.neg (fp.neg x22)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x7) (fp.neg x4)) (fp.add RNE (fp.neg x11) (fp.div RNE x10 x5))))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.neg (fp.sub RNE x16 x2)) (fp.add RNE (fp.sub RNE x6 x13) (fp.div RNE x13 x11))) (fp.div RNE (fp.div RNE (fp.neg x12) (fp.add RNE x10 x5)) (fp.neg (fp.mul RNE x6 x15)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x16 x5) (fp.sub RNE x19 x17)) (fp.add RNE (fp.div RNE x1 x2) (fp.sub RNE x18 x20))) (fp.add RNE (fp.div RNE (fp.sub RNE x5 x6) (fp.add RNE x17 x16)) (fp.neg (fp.add RNE x6 x17))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.mul RNE x10 x15)) (fp.mul RNE (fp.neg x19) (fp.div RNE x19 x11)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.div RNE x10 x15) (fp.neg x12))) (fp.div RNE (fp.div RNE (fp.mul RNE x6 x8) (fp.div RNE x3 x19)) (fp.sub RNE (fp.neg x21) (fp.mul RNE x0 x20))))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x20 x10) (fp.div RNE x9 x7)) (fp.div RNE (fp.sub RNE x13 x18) (fp.add RNE x22 x8))) (fp.div RNE (fp.mul RNE (fp.mul RNE x0 x14) (fp.mul RNE x1 x5)) (fp.div RNE (fp.add RNE x16 x16) (fp.div RNE x10 x5)))) (fp.add RNE (fp.add RNE (fp.neg (fp.add RNE x1 x22)) (fp.mul RNE (fp.add RNE x2 x3) (fp.neg x5))) (fp.neg (fp.div RNE (fp.mul RNE x11 x9) (fp.sub RNE x12 x10))))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x12 x17) (fp.neg x7)) (fp.add RNE (fp.mul RNE x18 x22) (fp.add RNE x7 x6))) (fp.div RNE (fp.div RNE (fp.mul RNE x14 x10) (fp.div RNE x1 x10)) (fp.div RNE (fp.mul RNE x2 x7) (fp.sub RNE x4 x11)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x20) (fp.add RNE x12 x13)) (fp.sub RNE (fp.neg x4) (fp.add RNE x13 x16))) (fp.mul RNE (fp.sub RNE (fp.div RNE x21 x17) (fp.sub RNE x15 x14)) (fp.neg (fp.sub RNE x14 x21))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE (fp.div RNE x3 x4) (fp.div RNE x12 x17)) (fp.div RNE (fp.mul RNE x22 x21) (fp.sub RNE x22 x8)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.neg x4) (fp.sub RNE x18 x2))) (fp.neg (fp.div RNE (fp.div RNE x6 x4) (fp.add RNE x4 x20))))))
(check-sat)
