(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE x3 x4) (fp.div RNE x6 x4)) (fp.add RNE (fp.sub RNE x4 x0) (fp.neg x6))))
(assert (fp.leq (fp.neg (fp.neg x6)) (fp.neg (fp.sub RNE x7 x6))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x1 x2) (fp.div RNE x6 x4)) (fp.add RNE (fp.neg x0) (fp.div RNE x2 x1))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x3 x4) (fp.sub RNE x0 x4)) (fp.mul RNE (fp.sub RNE x7 x0) (fp.div RNE x3 x7))))
(assert (fp.leq (fp.div RNE (fp.neg x2) (fp.add RNE x0 x2)) (fp.sub RNE (fp.mul RNE x5 x0) (fp.neg x6))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x0) (fp.sub RNE x2 x5)) (fp.sub RNE (fp.add RNE x3 x7) (fp.sub RNE x0 x4))))
(assert (fp.geq (fp.div RNE (fp.add RNE x1 x1) (fp.sub RNE x5 x2)) (fp.sub RNE (fp.neg x7) (fp.div RNE x3 x6))))
(check-sat)
