(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.sub RNE x7 x6) (fp.mul RNE x7 x6)) (fp.sub RNE (fp.sub RNE x5 x1) (fp.sub RNE x9 x9))))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x6) (fp.mul RNE x9 x10)) (fp.add RNE (fp.div RNE x8 x2) (fp.div RNE x10 x10))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x7 x6) (fp.sub RNE x2 x4)) (fp.neg (fp.add RNE x6 x5))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x0 x6) (fp.neg x5)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x6 x7))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x1 x7) (fp.sub RNE x4 x5)) (fp.sub RNE (fp.add RNE x1 x3) (fp.div RNE x5 x7))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x6 x4) (fp.neg x8)) (fp.mul RNE (fp.neg x1) (fp.neg x5))))
(assert (fp.eq (fp.div RNE (fp.add RNE x7 x7) (fp.add RNE x3 x1)) (fp.mul RNE (fp.sub RNE x9 x5) (fp.add RNE x8 x9))))
(check-sat)
