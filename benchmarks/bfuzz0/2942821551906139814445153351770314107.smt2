(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.sub RNE x5 x6)) (fp.div RNE (fp.add RNE x8 x2) (fp.neg x10)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.div RNE x6 x10)) (fp.div RNE (fp.div RNE x7 x3) (fp.sub RNE x6 x0))) (fp.add RNE (fp.add RNE (fp.div RNE x1 x7) (fp.add RNE x5 x2)) (fp.add RNE (fp.mul RNE x0 x1) (fp.neg x9))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x0 x6) (fp.mul RNE x5 x2)) (fp.neg (fp.sub RNE x8 x7))) (fp.div RNE (fp.add RNE (fp.sub RNE x0 x10) (fp.sub RNE x7 x3)) (fp.neg (fp.neg x1)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x4 x1) (fp.neg x0))) (fp.neg (fp.sub RNE (fp.mul RNE x9 x2) (fp.mul RNE x1 x10))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.neg x10) (fp.mul RNE x1 x1)) (fp.neg (fp.div RNE x6 x8))) (fp.neg (fp.mul RNE (fp.mul RNE x8 x6) (fp.add RNE x5 x6)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.sub RNE x5 x8) (fp.add RNE x8 x6))) (fp.neg (fp.add RNE (fp.neg x5) (fp.add RNE x8 x6))))))
(check-sat)
