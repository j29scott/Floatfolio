(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x0) (fp.div RNE x0 x2)))
(assert (fp.eq (fp.neg x2) (fp.add RNE x0 x3)))
(assert (fp.geq (fp.sub RNE x1 x3) (fp.mul RNE x1 x2)))
(assert (fp.leq (fp.mul RNE x5 x5) (fp.add RNE x4 x2)))
(assert (fp.lt (fp.neg x4) (fp.neg x6)))
(assert (fp.leq (fp.div RNE x6 x5) (fp.mul RNE x4 x0)))
(assert (fp.geq (fp.div RNE x1 x4) (fp.sub RNE x0 x5)))
(assert (fp.leq (fp.sub RNE x1 x2) (fp.add RNE x0 x5)))
(assert (fp.lt (fp.add RNE x1 x3) (fp.div RNE x1 x5)))
(assert (fp.gt (fp.add RNE x1 x6) (fp.sub RNE x5 x6)))
(assert (fp.eq (fp.sub RNE x5 x6) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x6 x4) (fp.mul RNE x2 x6)))
(assert (fp.eq (fp.sub RNE x5 x4) (fp.add RNE x3 x1)))
(assert (fp.eq (fp.mul RNE x1 x5) (fp.mul RNE x3 x0)))
(check-sat)
