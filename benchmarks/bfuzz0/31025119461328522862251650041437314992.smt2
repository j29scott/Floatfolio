(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x13) (fp.neg x0)) (fp.div RNE (fp.div RNE x13 x19) (fp.mul RNE x10 x4))) (fp.sub RNE (fp.div RNE (fp.sub RNE x0 x19) (fp.sub RNE x14 x14)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x20 x14)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.neg x2) (fp.div RNE x12 x20)) (fp.add RNE (fp.sub RNE x20 x5) (fp.sub RNE x15 x2))) (fp.mul RNE (fp.div RNE (fp.div RNE x19 x15) (fp.add RNE x3 x14)) (fp.neg (fp.sub RNE x17 x4)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x19 x18)) (fp.sub RNE (fp.add RNE x2 x9) (fp.neg x12))) (fp.sub RNE (fp.div RNE (fp.add RNE x10 x15) (fp.neg x10)) (fp.sub RNE (fp.neg x15) (fp.div RNE x2 x6)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg x19) (fp.neg x10))) (fp.neg (fp.div RNE (fp.mul RNE x14 x3) (fp.sub RNE x20 x4)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x5) (fp.neg x19)) (fp.sub RNE (fp.div RNE x11 x1) (fp.add RNE x11 x16))) (fp.sub RNE (fp.neg (fp.neg x9)) (fp.mul RNE (fp.mul RNE x6 x4) (fp.add RNE x15 x14)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x10) (fp.div RNE x16 x5)) (fp.div RNE (fp.mul RNE x9 x6) (fp.add RNE x1 x18))) (fp.add RNE (fp.div RNE (fp.neg x7) (fp.div RNE x17 x6)) (fp.div RNE (fp.neg x3) (fp.neg x0)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.div RNE x16 x0)) (fp.sub RNE (fp.div RNE x14 x3) (fp.mul RNE x12 x3))) (fp.mul RNE (fp.neg (fp.neg x16)) (fp.neg (fp.div RNE x15 x18)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x20) (fp.add RNE x2 x16)) (fp.sub RNE (fp.add RNE x8 x19) (fp.div RNE x8 x8))) (fp.mul RNE (fp.div RNE (fp.neg x5) (fp.neg x6)) (fp.neg (fp.sub RNE x2 x12)))))
(check-sat)
