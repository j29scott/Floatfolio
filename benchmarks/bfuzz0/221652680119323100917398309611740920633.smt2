(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.sub RNE x7 x19) (fp.neg x13)) (fp.sub RNE (fp.mul RNE x15 x1) (fp.div RNE x19 x13))) (fp.add RNE (fp.div RNE (fp.neg x20) (fp.div RNE x12 x14)) (fp.add RNE (fp.neg x14) (fp.div RNE x7 x8)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x9 x8) (fp.add RNE x2 x9)) (fp.neg (fp.mul RNE x16 x8))) (fp.neg (fp.add RNE (fp.add RNE x4 x15) (fp.mul RNE x12 x15)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg x15) (fp.add RNE x17 x3)) (fp.div RNE (fp.mul RNE x7 x4) (fp.neg x19))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x18 x20) (fp.neg x9)) (fp.mul RNE (fp.mul RNE x4 x17) (fp.mul RNE x4 x18)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE x19 x6) (fp.neg x11))) (fp.mul RNE (fp.div RNE (fp.mul RNE x19 x15) (fp.neg x11)) (fp.neg (fp.neg x7)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE x7 x8) (fp.add RNE x7 x6))) (fp.add RNE (fp.mul RNE (fp.neg x20) (fp.add RNE x9 x0)) (fp.add RNE (fp.div RNE x9 x5) (fp.mul RNE x5 x13)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x4) (fp.add RNE x6 x8)) (fp.neg (fp.neg x8))) (fp.sub RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x3 x20)) (fp.neg (fp.add RNE x8 x2)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x13) (fp.sub RNE x13 x12)) (fp.add RNE (fp.neg x9) (fp.sub RNE x7 x14))) (fp.mul RNE (fp.div RNE (fp.neg x12) (fp.neg x7)) (fp.sub RNE (fp.div RNE x2 x5) (fp.mul RNE x13 x19)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x15) (fp.neg x3)) (fp.neg (fp.div RNE x2 x19))) (fp.neg (fp.add RNE (fp.div RNE x9 x12) (fp.sub RNE x10 x4)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.div RNE x19 x15) (fp.mul RNE x6 x17)) (fp.add RNE (fp.div RNE x5 x1) (fp.add RNE x10 x14))) (fp.div RNE (fp.neg (fp.neg x18)) (fp.mul RNE (fp.neg x2) (fp.add RNE x2 x8)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.add RNE x15 x7)) (fp.neg (fp.neg x5))) (fp.sub RNE (fp.div RNE (fp.sub RNE x6 x13) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x7 x15) (fp.mul RNE x4 x17)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x2 x9) (fp.sub RNE x4 x3))) (fp.sub RNE (fp.div RNE (fp.div RNE x18 x0) (fp.add RNE x18 x16)) (fp.neg (fp.sub RNE x14 x17)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x7 x11) (fp.neg x3))) (fp.div RNE (fp.sub RNE (fp.div RNE x15 x17) (fp.add RNE x0 x3)) (fp.add RNE (fp.add RNE x6 x8) (fp.add RNE x11 x3)))))
(check-sat)
