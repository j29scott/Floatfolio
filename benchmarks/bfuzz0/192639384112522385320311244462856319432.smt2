(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.div RNE x1 x0) (fp.sub RNE x6 x2)) (fp.div RNE (fp.sub RNE x0 x10) (fp.div RNE x5 x5))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x1 x2) (fp.add RNE x2 x3)) (fp.div RNE (fp.div RNE x5 x5) (fp.div RNE x8 x4))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x1 x8) (fp.div RNE x7 x8)) (fp.sub RNE (fp.div RNE x9 x9) (fp.mul RNE x9 x10))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x2 x7) (fp.mul RNE x10 x7)) (fp.add RNE (fp.neg x3) (fp.add RNE x9 x4))))
(assert (fp.eq (fp.div RNE (fp.div RNE x1 x4) (fp.add RNE x0 x3)) (fp.add RNE (fp.neg x4) (fp.div RNE x0 x1))))
(assert (fp.geq (fp.add RNE (fp.add RNE x9 x7) (fp.neg x6)) (fp.neg (fp.sub RNE x4 x2))))
(check-sat)
