(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE x2 x11) (fp.mul RNE x10 x1)) (fp.neg (fp.sub RNE x2 x7))) (fp.div RNE (fp.mul RNE (fp.mul RNE x10 x4) (fp.sub RNE x2 x9)) (fp.div RNE (fp.add RNE x3 x3) (fp.neg x3)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.mul RNE x10 x4) (fp.mul RNE x9 x6)) (fp.neg (fp.neg x8))) (fp.neg (fp.add RNE (fp.div RNE x10 x2) (fp.sub RNE x0 x5)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x2 x5)) (fp.neg (fp.neg x0))) (fp.mul RNE (fp.add RNE (fp.mul RNE x11 x8) (fp.neg x4)) (fp.div RNE (fp.add RNE x9 x9) (fp.neg x0)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x9 x11) (fp.neg x7)) (fp.neg (fp.neg x10))) (fp.mul RNE (fp.div RNE (fp.add RNE x6 x9) (fp.sub RNE x10 x10)) (fp.sub RNE (fp.sub RNE x5 x11) (fp.mul RNE x0 x8)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE x7 x5) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x0 x0) (fp.mul RNE x11 x6))) (fp.mul RNE (fp.sub RNE (fp.div RNE x6 x4) (fp.mul RNE x3 x10)) (fp.sub RNE (fp.add RNE x10 x0) (fp.mul RNE x3 x3)))))
(check-sat)
