(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE (fp.neg x0) (fp.add RNE x5 x14)) (fp.add RNE (fp.neg x14) (fp.mul RNE x6 x14))) (fp.add RNE (fp.neg (fp.neg x8)) (fp.div RNE (fp.sub RNE x21 x13) (fp.div RNE x20 x2)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.add RNE x2 x16) (fp.div RNE x6 x23)) (fp.add RNE (fp.add RNE x12 x8) (fp.sub RNE x18 x16))) (fp.div RNE (fp.neg (fp.sub RNE x9 x0)) (fp.sub RNE (fp.add RNE x20 x4) (fp.add RNE x15 x6))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE (fp.sub RNE x8 x17) (fp.add RNE x17 x13)) (fp.sub RNE (fp.mul RNE x6 x13) (fp.sub RNE x14 x6)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.div RNE x9 x17) (fp.neg x23)) (fp.neg (fp.neg x13))) (fp.neg (fp.add RNE (fp.div RNE x23 x14) (fp.sub RNE x7 x22))))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x7 x16)) (fp.neg (fp.neg x17))) (fp.mul RNE (fp.mul RNE (fp.add RNE x19 x22) (fp.add RNE x11 x9)) (fp.neg (fp.add RNE x11 x15)))) (fp.neg (fp.sub RNE (fp.neg (fp.sub RNE x20 x1)) (fp.neg (fp.neg x21))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE (fp.neg x15) (fp.div RNE x22 x8)) (fp.div RNE (fp.neg x17) (fp.mul RNE x17 x7))) (fp.mul RNE (fp.mul RNE (fp.div RNE x5 x8) (fp.mul RNE x6 x7)) (fp.mul RNE (fp.sub RNE x6 x9) (fp.mul RNE x2 x22)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.div RNE x1 x9) (fp.div RNE x13 x7))) (fp.neg (fp.add RNE (fp.div RNE x6 x1) (fp.neg x4))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x8 x17) (fp.mul RNE x17 x8)) (fp.mul RNE (fp.neg x4) (fp.neg x18))) (fp.add RNE (fp.mul RNE (fp.add RNE x15 x10) (fp.div RNE x19 x19)) (fp.add RNE (fp.add RNE x15 x13) (fp.sub RNE x9 x10)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.div RNE x5 x14) (fp.neg x16)) (fp.neg (fp.sub RNE x4 x16))) (fp.div RNE (fp.neg (fp.mul RNE x14 x12)) (fp.neg (fp.sub RNE x17 x4))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x13 x2) (fp.add RNE x16 x9)) (fp.neg (fp.add RNE x8 x11))) (fp.neg (fp.add RNE (fp.sub RNE x21 x2) (fp.mul RNE x13 x0)))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.add RNE x22 x7) (fp.mul RNE x18 x8)) (fp.mul RNE (fp.add RNE x20 x17) (fp.sub RNE x4 x19))) (fp.add RNE (fp.neg (fp.mul RNE x8 x4)) (fp.mul RNE (fp.div RNE x4 x8) (fp.add RNE x19 x6))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x5) (fp.neg x3)) (fp.div RNE (fp.sub RNE x4 x13) (fp.add RNE x7 x5))) (fp.neg (fp.add RNE (fp.mul RNE x7 x20) (fp.sub RNE x22 x18)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.add RNE x8 x2) (fp.mul RNE x14 x2)) (fp.add RNE (fp.add RNE x13 x23) (fp.mul RNE x23 x22))) (fp.div RNE (fp.sub RNE (fp.div RNE x10 x22) (fp.div RNE x8 x19)) (fp.sub RNE (fp.add RNE x3 x15) (fp.mul RNE x3 x12))))))
(check-sat)
