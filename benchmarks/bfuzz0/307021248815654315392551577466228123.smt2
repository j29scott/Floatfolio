(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg x14) (fp.add RNE x4 x8)))
(assert (fp.eq (fp.add RNE x0 x12) (fp.neg x12)))
(assert (fp.leq (fp.neg x15) (fp.mul RNE x13 x16)))
(assert (fp.gt (fp.div RNE x12 x16) (fp.mul RNE x4 x6)))
(assert (fp.geq (fp.sub RNE x2 x1) (fp.neg x3)))
(assert (fp.leq (fp.add RNE x2 x14) (fp.mul RNE x15 x11)))
(assert (fp.geq (fp.neg x5) (fp.neg x8)))
(assert (fp.eq (fp.sub RNE x1 x15) (fp.div RNE x1 x1)))
(assert (fp.geq (fp.add RNE x6 x14) (fp.mul RNE x1 x3)))
(assert (fp.geq (fp.neg x10) (fp.neg x6)))
(assert (fp.geq (fp.sub RNE x7 x7) (fp.mul RNE x14 x13)))
(assert (fp.gt (fp.mul RNE x2 x16) (fp.mul RNE x0 x10)))
(assert (fp.leq (fp.mul RNE x0 x6) (fp.neg x15)))
(check-sat)
