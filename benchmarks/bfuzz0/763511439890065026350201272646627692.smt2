(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x6) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x18 x18) (fp.sub RNE x16 x3)))
(assert (fp.lt (fp.div RNE x7 x16) (fp.neg x9)))
(assert (fp.geq (fp.neg x9) (fp.neg x19)))
(assert (fp.leq (fp.add RNE x9 x12) (fp.neg x12)))
(assert (fp.leq (fp.mul RNE x7 x6) (fp.neg x5)))
(assert (fp.leq (fp.div RNE x9 x8) (fp.div RNE x0 x19)))
(assert (fp.gt (fp.mul RNE x5 x12) (fp.neg x2)))
(assert (fp.leq (fp.mul RNE x3 x9) (fp.neg x6)))
(assert (fp.gt (fp.mul RNE x20 x13) (fp.sub RNE x17 x16)))
(assert (fp.geq (fp.add RNE x5 x2) (fp.div RNE x20 x1)))
(assert (fp.eq (fp.neg x8) (fp.add RNE x9 x12)))
(assert (fp.eq (fp.sub RNE x20 x11) (fp.add RNE x10 x11)))
(check-sat)
