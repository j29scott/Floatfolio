(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x13 x8)) (fp.add RNE (fp.sub RNE x12 x5) (fp.sub RNE x19 x14))) (fp.sub RNE (fp.div RNE (fp.mul RNE x19 x6) (fp.sub RNE x9 x15)) (fp.sub RNE (fp.neg x11) (fp.sub RNE x15 x8)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x12 x22) (fp.neg x9)) (fp.mul RNE (fp.sub RNE x12 x1) (fp.div RNE x13 x9))) (fp.neg (fp.mul RNE (fp.div RNE x7 x0) (fp.neg x7)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE x17 x19) (fp.add RNE x22 x15)) (fp.add RNE (fp.neg x19) (fp.sub RNE x4 x16))) (fp.add RNE (fp.neg (fp.mul RNE x20 x10)) (fp.mul RNE (fp.sub RNE x16 x12) (fp.mul RNE x2 x2)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.mul RNE x2 x1) (fp.div RNE x9 x18)) (fp.neg (fp.add RNE x3 x13))) (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x3) (fp.add RNE x12 x2)) (fp.sub RNE (fp.div RNE x10 x18) (fp.mul RNE x22 x18)))))
(check-sat)
