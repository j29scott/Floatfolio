(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE x9 x2) (fp.div RNE x22 x13)) (fp.neg (fp.neg x3))) (fp.add RNE (fp.sub RNE (fp.neg x14) (fp.div RNE x22 x1)) (fp.add RNE (fp.div RNE x19 x4) (fp.mul RNE x19 x14)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x18 x15) (fp.div RNE x13 x4)) (fp.div RNE (fp.sub RNE x4 x14) (fp.neg x10))) (fp.sub RNE (fp.sub RNE (fp.add RNE x7 x5) (fp.div RNE x18 x21)) (fp.sub RNE (fp.add RNE x5 x23) (fp.sub RNE x8 x20)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.mul RNE x13 x4) (fp.neg x5)) (fp.neg (fp.sub RNE x9 x9))) (fp.mul RNE (fp.add RNE (fp.mul RNE x19 x15) (fp.sub RNE x0 x16)) (fp.mul RNE (fp.div RNE x10 x13) (fp.add RNE x15 x22)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.add RNE x4 x20) (fp.mul RNE x11 x9)) (fp.add RNE (fp.mul RNE x18 x15) (fp.sub RNE x1 x17))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x21 x11) (fp.mul RNE x11 x3)) (fp.mul RNE (fp.mul RNE x18 x5) (fp.add RNE x2 x11)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x18) (fp.mul RNE x4 x5))) (fp.div RNE (fp.mul RNE (fp.add RNE x18 x17) (fp.div RNE x1 x4)) (fp.neg (fp.neg x10)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE x9 x9) (fp.mul RNE x8 x13)) (fp.div RNE (fp.div RNE x11 x16) (fp.div RNE x19 x3))) (fp.neg (fp.neg (fp.div RNE x2 x13)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x15 x8) (fp.add RNE x5 x5)) (fp.sub RNE (fp.sub RNE x19 x20) (fp.neg x10))) (fp.neg (fp.div RNE (fp.neg x21) (fp.div RNE x22 x18)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x20 x21) (fp.mul RNE x23 x10))) (fp.mul RNE (fp.sub RNE (fp.div RNE x10 x1) (fp.mul RNE x20 x18)) (fp.add RNE (fp.neg x12) (fp.add RNE x1 x3)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.div RNE x14 x14)) (fp.neg (fp.neg x9))) (fp.neg (fp.neg (fp.add RNE x21 x21)))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE x13 x23))) (fp.add RNE (fp.mul RNE (fp.neg x7) (fp.mul RNE x8 x15)) (fp.add RNE (fp.neg x11) (fp.add RNE x3 x12)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.div RNE x11 x15) (fp.sub RNE x10 x18)) (fp.add RNE (fp.add RNE x15 x6) (fp.sub RNE x8 x3))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x6 x19) (fp.sub RNE x20 x4)) (fp.sub RNE (fp.mul RNE x23 x18) (fp.mul RNE x1 x2)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x6) (fp.mul RNE x9 x21)) (fp.neg (fp.div RNE x13 x18))) (fp.add RNE (fp.div RNE (fp.div RNE x23 x2) (fp.div RNE x14 x16)) (fp.sub RNE (fp.neg x11) (fp.neg x8)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE x12 x0) (fp.add RNE x0 x13)) (fp.mul RNE (fp.add RNE x1 x20) (fp.neg x13))) (fp.neg (fp.sub RNE (fp.add RNE x10 x1) (fp.mul RNE x20 x23)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x11) (fp.sub RNE x18 x14)) (fp.neg (fp.neg x4))) (fp.div RNE (fp.neg (fp.div RNE x18 x4)) (fp.div RNE (fp.neg x12) (fp.div RNE x16 x11)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE x8 x9) (fp.div RNE x14 x16)) (fp.neg (fp.div RNE x12 x13))) (fp.neg (fp.mul RNE (fp.mul RNE x7 x11) (fp.sub RNE x6 x21)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE x9 x7) (fp.sub RNE x1 x23)) (fp.div RNE (fp.sub RNE x19 x12) (fp.div RNE x6 x21))) (fp.neg (fp.sub RNE (fp.add RNE x11 x10) (fp.mul RNE x15 x22)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x2) (fp.mul RNE x23 x15)) (fp.sub RNE (fp.add RNE x20 x7) (fp.div RNE x1 x3))) (fp.div RNE (fp.neg (fp.add RNE x15 x20)) (fp.neg (fp.neg x6)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x2 x17) (fp.mul RNE x4 x5))) (fp.neg (fp.sub RNE (fp.add RNE x14 x20) (fp.sub RNE x23 x6)))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x19 x0))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x12) (fp.div RNE x19 x12)) (fp.add RNE (fp.neg x10) (fp.div RNE x4 x22)))))
(check-sat)
