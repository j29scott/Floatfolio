(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.add RNE x2 x4)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x0 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x8 x9) (fp.neg x9)) (fp.sub RNE (fp.neg x12) (fp.add RNE x7 x2))))
(assert (fp.eq (fp.div RNE (fp.add RNE x12 x11) (fp.mul RNE x2 x10)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x8 x9))))
(assert (fp.lt (fp.neg (fp.div RNE x11 x11)) (fp.add RNE (fp.sub RNE x0 x9) (fp.add RNE x6 x8))))
(assert (fp.gt (fp.div RNE (fp.neg x9) (fp.mul RNE x10 x1)) (fp.mul RNE (fp.div RNE x12 x10) (fp.add RNE x12 x3))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x4 x7) (fp.mul RNE x1 x5)) (fp.div RNE (fp.neg x9) (fp.div RNE x1 x10))))
(assert (fp.leq (fp.neg (fp.neg x8)) (fp.div RNE (fp.mul RNE x7 x2) (fp.div RNE x10 x3))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x3 x8) (fp.sub RNE x10 x12)) (fp.mul RNE (fp.div RNE x9 x6) (fp.neg x5))))
(assert (fp.eq (fp.neg (fp.neg x4)) (fp.neg (fp.neg x12))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x9 x9) (fp.mul RNE x6 x2)) (fp.div RNE (fp.sub RNE x5 x5) (fp.mul RNE x0 x1))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x9 x8) (fp.div RNE x10 x0)) (fp.sub RNE (fp.div RNE x9 x8) (fp.neg x12))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x10 x7) (fp.neg x5)) (fp.div RNE (fp.mul RNE x4 x9) (fp.sub RNE x11 x2))))
(assert (fp.gt (fp.neg (fp.mul RNE x7 x8)) (fp.div RNE (fp.div RNE x2 x11) (fp.sub RNE x4 x1))))
(check-sat)
