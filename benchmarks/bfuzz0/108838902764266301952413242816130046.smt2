(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.div RNE x11 x4) (fp.neg x9)) (fp.mul RNE (fp.add RNE x11 x12) (fp.add RNE x9 x2))) (fp.neg (fp.neg (fp.neg x13)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x6 x17) (fp.neg x1))) (fp.neg (fp.div RNE (fp.sub RNE x12 x5) (fp.sub RNE x15 x10)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg x19) (fp.sub RNE x6 x0)) (fp.add RNE (fp.sub RNE x9 x13) (fp.neg x20))) (fp.sub RNE (fp.add RNE (fp.neg x18) (fp.mul RNE x3 x8)) (fp.mul RNE (fp.neg x18) (fp.add RNE x16 x19)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x0 x1) (fp.mul RNE x6 x0)) (fp.neg (fp.neg x11))) (fp.div RNE (fp.sub RNE (fp.neg x18) (fp.add RNE x10 x6)) (fp.div RNE (fp.div RNE x18 x19) (fp.mul RNE x4 x4)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg x8)) (fp.mul RNE (fp.sub RNE x3 x16) (fp.neg x13))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x11) (fp.neg x11)) (fp.sub RNE (fp.add RNE x11 x0) (fp.sub RNE x7 x13)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.mul RNE x8 x5)) (fp.mul RNE (fp.mul RNE x18 x5) (fp.mul RNE x19 x1))) (fp.div RNE (fp.mul RNE (fp.sub RNE x18 x3) (fp.add RNE x8 x20)) (fp.sub RNE (fp.add RNE x5 x17) (fp.neg x10)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE x15 x9) (fp.div RNE x3 x9)) (fp.div RNE (fp.sub RNE x10 x6) (fp.add RNE x5 x1))) (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.mul RNE x1 x0)) (fp.mul RNE (fp.add RNE x10 x16) (fp.sub RNE x4 x7)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x19) (fp.sub RNE x15 x15)) (fp.neg (fp.div RNE x19 x2))) (fp.div RNE (fp.sub RNE (fp.neg x18) (fp.div RNE x19 x14)) (fp.sub RNE (fp.div RNE x13 x9) (fp.sub RNE x13 x6)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.div RNE x17 x17)) (fp.add RNE (fp.mul RNE x10 x6) (fp.neg x0))) (fp.sub RNE (fp.div RNE (fp.neg x6) (fp.div RNE x7 x14)) (fp.mul RNE (fp.sub RNE x7 x13) (fp.neg x0)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.add RNE x0 x5)) (fp.neg (fp.sub RNE x17 x20))) (fp.div RNE (fp.mul RNE (fp.add RNE x16 x6) (fp.sub RNE x4 x12)) (fp.sub RNE (fp.mul RNE x12 x17) (fp.sub RNE x0 x8)))))
(check-sat)
