(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE (fp.add RNE x0 x20) (fp.sub RNE x9 x7)) (fp.mul RNE (fp.neg x10) (fp.div RNE x5 x15))) (fp.mul RNE (fp.div RNE (fp.add RNE x21 x1) (fp.mul RNE x9 x18)) (fp.neg (fp.mul RNE x2 x23)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.mul RNE x0 x18) (fp.mul RNE x19 x12)) (fp.mul RNE (fp.sub RNE x14 x15) (fp.mul RNE x0 x17))) (fp.add RNE (fp.add RNE (fp.div RNE x17 x23) (fp.add RNE x4 x6)) (fp.sub RNE (fp.div RNE x22 x4) (fp.neg x12))))))
(check-sat)
