(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x10 x14) (fp.add RNE x4 x1)))
(assert (fp.gt (fp.mul RNE x8 x12) (fp.add RNE x4 x11)))
(assert (fp.geq (fp.add RNE x3 x6) (fp.add RNE x11 x1)))
(assert (fp.lt (fp.div RNE x14 x13) (fp.sub RNE x12 x10)))
(assert (fp.eq (fp.neg x11) (fp.add RNE x4 x2)))
(assert (fp.geq (fp.div RNE x6 x1) (fp.neg x11)))
(assert (fp.eq (fp.mul RNE x17 x10) (fp.add RNE x8 x8)))
(assert (fp.leq (fp.sub RNE x0 x13) (fp.add RNE x14 x15)))
(assert (fp.gt (fp.div RNE x2 x11) (fp.sub RNE x11 x9)))
(assert (fp.leq (fp.div RNE x2 x17) (fp.mul RNE x17 x0)))
(assert (fp.lt (fp.add RNE x15 x17) (fp.sub RNE x4 x3)))
(assert (fp.eq (fp.add RNE x8 x17) (fp.neg x14)))
(assert (fp.eq (fp.sub RNE x7 x15) (fp.mul RNE x13 x15)))
(assert (fp.lt (fp.neg x2) (fp.mul RNE x9 x5)))
(assert (fp.leq (fp.add RNE x16 x12) (fp.neg x4)))
(assert (fp.geq (fp.add RNE x15 x8) (fp.add RNE x7 x12)))
(assert (fp.lt (fp.div RNE x9 x3) (fp.div RNE x5 x3)))
(check-sat)
