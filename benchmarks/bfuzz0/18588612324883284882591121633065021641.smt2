(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.neg (fp.mul RNE (fp.mul RNE x9 x9) (fp.sub RNE x7 x9))) (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x6) (fp.add RNE x12 x2)) (fp.sub RNE (fp.neg x2) (fp.div RNE x14 x0)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE x4 x11) (fp.div RNE x14 x14)) (fp.sub RNE (fp.sub RNE x13 x3) (fp.neg x14))) (fp.add RNE (fp.sub RNE (fp.sub RNE x6 x2) (fp.mul RNE x12 x1)) (fp.neg (fp.add RNE x11 x9))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x6 x7) (fp.div RNE x13 x6))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x8 x10) (fp.sub RNE x7 x9)) (fp.sub RNE (fp.neg x4) (fp.neg x14)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.neg x6) (fp.neg x7)) (fp.div RNE (fp.sub RNE x6 x3) (fp.sub RNE x4 x11))) (fp.neg (fp.sub RNE (fp.add RNE x1 x9) (fp.mul RNE x5 x14))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.add RNE x4 x5) (fp.neg x5)) (fp.add RNE (fp.sub RNE x6 x8) (fp.mul RNE x14 x1))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x14 x0) (fp.add RNE x11 x3)) (fp.sub RNE (fp.mul RNE x3 x8) (fp.neg x3)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x9 x8) (fp.neg x4)) (fp.add RNE (fp.mul RNE x13 x6) (fp.add RNE x8 x3))) (fp.div RNE (fp.neg (fp.sub RNE x7 x11)) (fp.neg (fp.div RNE x8 x13))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg (fp.div RNE x3 x10))) (fp.div RNE (fp.neg (fp.div RNE x14 x12)) (fp.sub RNE (fp.div RNE x10 x3) (fp.neg x11)))) (fp.mul RNE (fp.neg (fp.neg (fp.add RNE x6 x9))) (fp.sub RNE (fp.div RNE (fp.add RNE x11 x1) (fp.add RNE x13 x14)) (fp.neg (fp.mul RNE x5 x1))))))
(check-sat)
