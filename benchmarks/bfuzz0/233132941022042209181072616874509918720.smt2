(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.div RNE x5 x9)) (fp.neg (fp.neg x10))))
(assert (fp.lt (fp.neg (fp.sub RNE x0 x7)) (fp.sub RNE (fp.sub RNE x18 x10) (fp.neg x12))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x17 x0) (fp.add RNE x13 x10)) (fp.add RNE (fp.neg x18) (fp.neg x15))))
(assert (fp.eq (fp.sub RNE (fp.neg x11) (fp.div RNE x7 x7)) (fp.mul RNE (fp.add RNE x18 x7) (fp.add RNE x10 x14))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x11 x8) (fp.add RNE x5 x0)) (fp.neg (fp.mul RNE x8 x5))))
(assert (fp.geq (fp.div RNE (fp.add RNE x5 x16) (fp.div RNE x7 x6)) (fp.mul RNE (fp.neg x13) (fp.neg x8))))
(assert (fp.lt (fp.add RNE (fp.add RNE x1 x1) (fp.mul RNE x15 x1)) (fp.neg (fp.add RNE x10 x4))))
(check-sat)
