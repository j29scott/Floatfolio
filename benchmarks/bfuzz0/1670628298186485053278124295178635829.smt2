(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x0 x0) (fp.neg x0)) (fp.add RNE (fp.div RNE x2 x2) (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x6 x1) (fp.div RNE x1 x0)) (fp.mul RNE (fp.add RNE x2 x1) (fp.add RNE x2 x5))))
(assert (fp.gt (fp.add RNE (fp.neg x1) (fp.sub RNE x6 x1)) (fp.div RNE (fp.sub RNE x6 x5) (fp.sub RNE x4 x3))))
(assert (fp.eq (fp.add RNE (fp.neg x3) (fp.mul RNE x2 x3)) (fp.div RNE (fp.div RNE x1 x0) (fp.mul RNE x6 x7))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x5 x3) (fp.neg x6)) (fp.neg (fp.div RNE x3 x1))))
(assert (fp.geq (fp.add RNE (fp.add RNE x7 x5) (fp.div RNE x7 x1)) (fp.neg (fp.neg x2))))
(assert (fp.eq (fp.neg (fp.sub RNE x6 x2)) (fp.sub RNE (fp.neg x1) (fp.add RNE x7 x2))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x1 x6) (fp.mul RNE x3 x6)) (fp.add RNE (fp.div RNE x6 x0) (fp.mul RNE x6 x6))))
(check-sat)
