(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE x7 x12) (fp.div RNE x3 x5)) (fp.mul RNE (fp.sub RNE x4 x3) (fp.add RNE x2 x4))) (fp.neg (fp.sub RNE (fp.neg x14) (fp.mul RNE x10 x0)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x14) (fp.div RNE x4 x7)) (fp.sub RNE (fp.add RNE x12 x3) (fp.add RNE x1 x15))) (fp.sub RNE (fp.mul RNE (fp.add RNE x14 x12) (fp.neg x10)) (fp.sub RNE (fp.add RNE x15 x1) (fp.add RNE x8 x15)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.mul RNE x3 x13) (fp.div RNE x7 x13))) (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.mul RNE x14 x10)) (fp.div RNE (fp.mul RNE x3 x10) (fp.add RNE x4 x6)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.add RNE x2 x14) (fp.add RNE x6 x1)) (fp.sub RNE (fp.div RNE x9 x9) (fp.neg x14))) (fp.neg (fp.sub RNE (fp.sub RNE x14 x4) (fp.add RNE x9 x7)))))
(check-sat)
