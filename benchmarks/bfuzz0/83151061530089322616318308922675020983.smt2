(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE x12 x1) (fp.div RNE x3 x9)) (fp.neg (fp.neg x4))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x5 x16) (fp.sub RNE x19 x21)) (fp.add RNE (fp.div RNE x7 x5) (fp.div RNE x8 x3))))
(assert (fp.leq (fp.add RNE (fp.div RNE x17 x3) (fp.add RNE x7 x5)) (fp.mul RNE (fp.mul RNE x7 x11) (fp.sub RNE x3 x3))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x19 x21) (fp.sub RNE x4 x18)) (fp.sub RNE (fp.neg x12) (fp.mul RNE x6 x8))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x7 x15) (fp.mul RNE x12 x15)) (fp.mul RNE (fp.add RNE x0 x20) (fp.mul RNE x1 x8))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x19 x1) (fp.sub RNE x14 x18)) (fp.neg (fp.neg x20))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x15 x19) (fp.sub RNE x11 x15)) (fp.sub RNE (fp.div RNE x16 x5) (fp.mul RNE x18 x19))))
(assert (fp.geq (fp.div RNE (fp.div RNE x8 x3) (fp.neg x9)) (fp.add RNE (fp.neg x1) (fp.div RNE x2 x17))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x13 x18) (fp.add RNE x11 x0)) (fp.sub RNE (fp.neg x19) (fp.add RNE x9 x8))))
(assert (fp.lt (fp.neg (fp.neg x11)) (fp.neg (fp.mul RNE x15 x7))))
(assert (fp.geq (fp.add RNE (fp.add RNE x6 x7) (fp.add RNE x0 x15)) (fp.neg (fp.sub RNE x3 x5))))
(assert (fp.eq (fp.add RNE (fp.neg x14) (fp.add RNE x6 x6)) (fp.neg (fp.div RNE x17 x20))))
(assert (fp.lt (fp.neg (fp.add RNE x0 x17)) (fp.neg (fp.mul RNE x18 x21))))
(check-sat)
