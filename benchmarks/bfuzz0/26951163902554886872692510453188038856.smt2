(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.neg x21)) (fp.mul RNE (fp.sub RNE x11 x11) (fp.div RNE x23 x19))))
(assert (fp.gt (fp.neg (fp.sub RNE x14 x15)) (fp.mul RNE (fp.add RNE x24 x0) (fp.mul RNE x6 x0))))
(assert (fp.lt (fp.neg (fp.mul RNE x7 x24)) (fp.neg (fp.div RNE x1 x17))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x3 x18) (fp.div RNE x20 x7)) (fp.sub RNE (fp.add RNE x1 x6) (fp.neg x19))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x1 x14) (fp.mul RNE x25 x10)) (fp.add RNE (fp.add RNE x6 x16) (fp.neg x24))))
(assert (fp.leq (fp.neg (fp.div RNE x24 x14)) (fp.neg (fp.div RNE x14 x16))))
(assert (fp.eq (fp.div RNE (fp.add RNE x20 x4) (fp.add RNE x1 x24)) (fp.div RNE (fp.sub RNE x17 x16) (fp.neg x9))))
(assert (fp.eq (fp.add RNE (fp.div RNE x0 x6) (fp.div RNE x10 x19)) (fp.neg (fp.add RNE x9 x2))))
(assert (fp.gt (fp.div RNE (fp.div RNE x3 x12) (fp.add RNE x1 x7)) (fp.add RNE (fp.neg x4) (fp.add RNE x21 x5))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x0 x5) (fp.add RNE x20 x1)) (fp.add RNE (fp.add RNE x11 x2) (fp.add RNE x26 x20))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x13 x7) (fp.neg x8)) (fp.neg (fp.div RNE x4 x20))))
(assert (fp.eq (fp.neg (fp.add RNE x21 x18)) (fp.add RNE (fp.add RNE x23 x19) (fp.sub RNE x17 x20))))
(assert (fp.gt (fp.sub RNE (fp.neg x23) (fp.neg x24)) (fp.sub RNE (fp.mul RNE x13 x6) (fp.add RNE x10 x0))))
(assert (fp.eq (fp.div RNE (fp.add RNE x19 x14) (fp.mul RNE x15 x9)) (fp.add RNE (fp.neg x10) (fp.div RNE x6 x26))))
(assert (fp.gt (fp.div RNE (fp.neg x3) (fp.div RNE x19 x5)) (fp.div RNE (fp.mul RNE x21 x5) (fp.neg x1))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x23 x12) (fp.mul RNE x1 x9)) (fp.div RNE (fp.sub RNE x16 x5) (fp.neg x17))))
(assert (fp.gt (fp.div RNE (fp.div RNE x12 x26) (fp.add RNE x23 x21)) (fp.add RNE (fp.div RNE x8 x19) (fp.sub RNE x16 x25))))
(assert (fp.geq (fp.sub RNE (fp.neg x13) (fp.sub RNE x15 x4)) (fp.neg (fp.mul RNE x23 x10))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x9 x7) (fp.mul RNE x16 x3)) (fp.div RNE (fp.sub RNE x16 x2) (fp.sub RNE x17 x1))))
(check-sat)
