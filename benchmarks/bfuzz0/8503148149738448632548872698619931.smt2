(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x2) (fp.neg x0)))
(assert (fp.geq (fp.neg x7) (fp.div RNE x10 x11)))
(assert (fp.geq (fp.neg x5) (fp.add RNE x7 x5)))
(assert (fp.eq (fp.neg x3) (fp.div RNE x1 x9)))
(assert (fp.lt (fp.sub RNE x4 x2) (fp.neg x8)))
(assert (fp.lt (fp.mul RNE x2 x2) (fp.sub RNE x5 x5)))
(assert (fp.eq (fp.add RNE x9 x3) (fp.add RNE x5 x10)))
(assert (fp.geq (fp.sub RNE x9 x1) (fp.neg x0)))
(assert (fp.gt (fp.add RNE x8 x6) (fp.div RNE x10 x4)))
(assert (fp.eq (fp.div RNE x4 x1) (fp.neg x11)))
(assert (fp.eq (fp.sub RNE x5 x4) (fp.mul RNE x7 x4)))
(assert (fp.geq (fp.sub RNE x0 x4) (fp.mul RNE x3 x11)))
(assert (fp.gt (fp.neg x1) (fp.neg x5)))
(assert (fp.eq (fp.add RNE x4 x3) (fp.sub RNE x7 x1)))
(assert (fp.eq (fp.add RNE x9 x11) (fp.sub RNE x10 x2)))
(assert (fp.leq (fp.add RNE x9 x10) (fp.mul RNE x0 x9)))
(assert (fp.gt (fp.div RNE x4 x7) (fp.sub RNE x7 x5)))
(assert (fp.leq (fp.sub RNE x1 x11) (fp.add RNE x4 x8)))
(assert (fp.leq (fp.add RNE x10 x10) (fp.neg x11)))
(assert (fp.leq (fp.mul RNE x11 x3) (fp.div RNE x8 x0)))
(check-sat)
