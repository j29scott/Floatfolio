(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x8 x5) (fp.sub RNE x18 x16)) (fp.add RNE (fp.add RNE x7 x10) (fp.mul RNE x0 x4))) (fp.neg (fp.sub RNE (fp.add RNE x3 x8) (fp.sub RNE x0 x1)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg x12) (fp.mul RNE x2 x4))) (fp.sub RNE (fp.div RNE (fp.mul RNE x13 x14) (fp.add RNE x0 x5)) (fp.add RNE (fp.mul RNE x13 x8) (fp.div RNE x6 x8)))))
(check-sat)
