(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.neg x5) (fp.div RNE x11 x5)) (fp.div RNE (fp.sub RNE x6 x0) (fp.add RNE x5 x11))))
(assert (fp.leq (fp.div RNE (fp.div RNE x3 x7) (fp.div RNE x10 x11)) (fp.add RNE (fp.sub RNE x11 x8) (fp.neg x0))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x2) (fp.div RNE x4 x5)) (fp.mul RNE (fp.div RNE x7 x1) (fp.mul RNE x9 x7))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x9 x4) (fp.sub RNE x4 x6)) (fp.neg (fp.div RNE x9 x4))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x4 x9) (fp.div RNE x2 x6)) (fp.add RNE (fp.mul RNE x9 x1) (fp.add RNE x10 x4))))
(assert (fp.lt (fp.neg (fp.neg x7)) (fp.add RNE (fp.mul RNE x6 x4) (fp.div RNE x9 x1))))
(assert (fp.gt (fp.mul RNE (fp.neg x7) (fp.mul RNE x1 x6)) (fp.div RNE (fp.sub RNE x4 x0) (fp.neg x5))))
(assert (fp.lt (fp.div RNE (fp.neg x2) (fp.sub RNE x2 x2)) (fp.div RNE (fp.sub RNE x1 x1) (fp.div RNE x10 x10))))
(assert (fp.geq (fp.neg (fp.mul RNE x4 x3)) (fp.div RNE (fp.add RNE x6 x10) (fp.sub RNE x9 x4))))
(assert (fp.geq (fp.mul RNE (fp.neg x0) (fp.sub RNE x4 x10)) (fp.add RNE (fp.add RNE x0 x8) (fp.mul RNE x3 x11))))
(assert (fp.gt (fp.add RNE (fp.div RNE x11 x9) (fp.div RNE x9 x6)) (fp.neg (fp.mul RNE x4 x2))))
(assert (fp.eq (fp.neg (fp.sub RNE x6 x0)) (fp.add RNE (fp.neg x5) (fp.sub RNE x2 x1))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x4 x6) (fp.div RNE x5 x4)) (fp.add RNE (fp.neg x8) (fp.sub RNE x8 x6))))
(assert (fp.lt (fp.div RNE (fp.add RNE x11 x10) (fp.div RNE x6 x10)) (fp.div RNE (fp.sub RNE x8 x11) (fp.sub RNE x1 x8))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x6 x3) (fp.add RNE x9 x2)) (fp.add RNE (fp.neg x7) (fp.sub RNE x7 x9))))
(check-sat)
