(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.div RNE (fp.div RNE (fp.sub RNE x19 x8) (fp.add RNE x20 x18)) (fp.add RNE (fp.add RNE x17 x4) (fp.neg x5)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x0 x13) (fp.add RNE x14 x10)) (fp.add RNE (fp.neg x14) (fp.sub RNE x7 x8))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.add RNE x13 x11)) (fp.mul RNE (fp.sub RNE x6 x11) (fp.neg x4))) (fp.sub RNE (fp.sub RNE (fp.div RNE x16 x8) (fp.neg x20)) (fp.neg (fp.mul RNE x1 x9)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.neg x9) (fp.mul RNE x9 x11)) (fp.div RNE (fp.div RNE x19 x18) (fp.neg x3))) (fp.neg (fp.neg (fp.mul RNE x6 x17))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.add RNE x1 x4)) (fp.sub RNE (fp.add RNE x7 x14) (fp.div RNE x12 x18))) (fp.add RNE (fp.neg (fp.mul RNE x19 x0)) (fp.div RNE (fp.div RNE x2 x3) (fp.div RNE x19 x19)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x8 x2) (fp.mul RNE x5 x3)) (fp.div RNE (fp.div RNE x8 x14) (fp.mul RNE x1 x8))) (fp.neg (fp.neg (fp.mul RNE x20 x6))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE (fp.add RNE x5 x0) (fp.mul RNE x2 x13)) (fp.sub RNE (fp.sub RNE x15 x0) (fp.sub RNE x0 x2)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.neg x10)) (fp.neg (fp.sub RNE x11 x3))) (fp.neg (fp.sub RNE (fp.neg x16) (fp.neg x12))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x8) (fp.neg x9)) (fp.sub RNE (fp.add RNE x5 x14) (fp.div RNE x15 x4))) (fp.add RNE (fp.div RNE (fp.sub RNE x16 x1) (fp.neg x16)) (fp.mul RNE (fp.mul RNE x16 x19) (fp.mul RNE x15 x3)))) (fp.div RNE (fp.neg (fp.div RNE (fp.mul RNE x14 x8) (fp.mul RNE x10 x19))) (fp.div RNE (fp.sub RNE (fp.mul RNE x12 x10) (fp.mul RNE x20 x11)) (fp.mul RNE (fp.sub RNE x0 x19) (fp.add RNE x20 x5))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE (fp.add RNE x14 x2) (fp.mul RNE x4 x17)) (fp.neg (fp.sub RNE x13 x1))) (fp.div RNE (fp.div RNE (fp.sub RNE x18 x16) (fp.div RNE x7 x13)) (fp.mul RNE (fp.sub RNE x6 x18) (fp.add RNE x7 x2)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x14 x14) (fp.add RNE x18 x5)) (fp.add RNE (fp.mul RNE x6 x7) (fp.div RNE x8 x16))) (fp.add RNE (fp.div RNE (fp.mul RNE x0 x12) (fp.div RNE x11 x4)) (fp.sub RNE (fp.add RNE x12 x19) (fp.sub RNE x16 x11))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.sub RNE (fp.add RNE x17 x3) (fp.add RNE x0 x4))) (fp.div RNE (fp.neg (fp.neg x7)) (fp.add RNE (fp.neg x1) (fp.add RNE x1 x18)))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x0 x20) (fp.add RNE x14 x7)) (fp.mul RNE (fp.neg x16) (fp.neg x8))) (fp.div RNE (fp.mul RNE (fp.add RNE x15 x19) (fp.div RNE x8 x10)) (fp.sub RNE (fp.sub RNE x9 x4) (fp.div RNE x16 x13))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x18 x12) (fp.sub RNE x10 x13)) (fp.neg (fp.add RNE x0 x18))) (fp.mul RNE (fp.sub RNE (fp.add RNE x16 x17) (fp.neg x16)) (fp.mul RNE (fp.sub RNE x1 x20) (fp.div RNE x6 x20)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.div RNE x18 x14)) (fp.add RNE (fp.add RNE x11 x9) (fp.add RNE x7 x11))) (fp.mul RNE (fp.neg (fp.div RNE x12 x9)) (fp.add RNE (fp.mul RNE x1 x14) (fp.neg x12))))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x0 x10) (fp.mul RNE x11 x0)))) (fp.div RNE (fp.neg (fp.add RNE (fp.div RNE x5 x7) (fp.div RNE x12 x19))) (fp.neg (fp.div RNE (fp.sub RNE x19 x8) (fp.mul RNE x0 x16))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x18 x15) (fp.mul RNE x9 x1)) (fp.mul RNE (fp.neg x9) (fp.add RNE x18 x2))) (fp.mul RNE (fp.div RNE (fp.neg x20) (fp.div RNE x2 x9)) (fp.neg (fp.sub RNE x13 x15)))) (fp.div RNE (fp.add RNE (fp.neg (fp.mul RNE x7 x1)) (fp.div RNE (fp.mul RNE x15 x12) (fp.mul RNE x3 x3))) (fp.div RNE (fp.neg (fp.neg x19)) (fp.div RNE (fp.neg x9) (fp.mul RNE x5 x14))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE (fp.mul RNE x18 x16) (fp.sub RNE x0 x12))) (fp.mul RNE (fp.add RNE (fp.neg x5) (fp.mul RNE x17 x11)) (fp.div RNE (fp.div RNE x1 x14) (fp.add RNE x3 x5)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.neg x7) (fp.div RNE x6 x4)) (fp.add RNE (fp.neg x11) (fp.sub RNE x3 x6))) (fp.div RNE (fp.div RNE (fp.neg x15) (fp.mul RNE x20 x19)) (fp.neg (fp.add RNE x15 x16))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE (fp.neg x4) (fp.div RNE x9 x1)) (fp.div RNE (fp.add RNE x0 x9) (fp.neg x2)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.add RNE x1 x13) (fp.neg x4)) (fp.sub RNE (fp.sub RNE x12 x18) (fp.mul RNE x2 x17))) (fp.div RNE (fp.mul RNE (fp.sub RNE x1 x5) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x12 x1) (fp.add RNE x15 x15))))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE (fp.neg x17) (fp.div RNE x6 x7)))) (fp.add RNE (fp.add RNE (fp.neg (fp.mul RNE x20 x20)) (fp.add RNE (fp.neg x19) (fp.sub RNE x20 x9))) (fp.div RNE (fp.sub RNE (fp.add RNE x7 x16) (fp.add RNE x19 x2)) (fp.add RNE (fp.div RNE x20 x4) (fp.neg x6))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.mul RNE x9 x9) (fp.add RNE x17 x3))) (fp.neg (fp.div RNE (fp.add RNE x8 x4) (fp.div RNE x0 x14)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x8 x5) (fp.div RNE x5 x10)) (fp.mul RNE (fp.neg x17) (fp.div RNE x16 x19))) (fp.neg (fp.add RNE (fp.add RNE x9 x1) (fp.add RNE x12 x16))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x7 x13)) (fp.add RNE (fp.sub RNE x12 x5) (fp.neg x15))) (fp.add RNE (fp.mul RNE (fp.add RNE x20 x12) (fp.add RNE x13 x14)) (fp.neg (fp.neg x6)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x4) (fp.add RNE x15 x12)) (fp.div RNE (fp.sub RNE x20 x12) (fp.div RNE x4 x8))) (fp.neg (fp.add RNE (fp.div RNE x20 x13) (fp.div RNE x15 x0))))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE (fp.mul RNE x9 x4) (fp.sub RNE x0 x19)) (fp.mul RNE (fp.neg x10) (fp.add RNE x16 x2)))) (fp.div RNE (fp.neg (fp.div RNE (fp.mul RNE x5 x2) (fp.sub RNE x9 x15))) (fp.mul RNE (fp.sub RNE (fp.neg x4) (fp.neg x6)) (fp.neg (fp.mul RNE x9 x11))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg (fp.neg x10)) (fp.neg (fp.mul RNE x18 x12))) (fp.add RNE (fp.sub RNE (fp.div RNE x4 x4) (fp.sub RNE x0 x16)) (fp.sub RNE (fp.mul RNE x12 x4) (fp.add RNE x3 x10)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x0 x7) (fp.sub RNE x14 x0)) (fp.mul RNE (fp.add RNE x11 x16) (fp.sub RNE x0 x6))) (fp.add RNE (fp.add RNE (fp.neg x13) (fp.div RNE x16 x4)) (fp.div RNE (fp.div RNE x16 x0) (fp.div RNE x7 x12))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x9 x2) (fp.sub RNE x16 x8)) (fp.sub RNE (fp.mul RNE x0 x0) (fp.neg x14))) (fp.sub RNE (fp.div RNE (fp.sub RNE x11 x9) (fp.mul RNE x4 x16)) (fp.sub RNE (fp.div RNE x5 x1) (fp.mul RNE x8 x11)))) (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x13 x4) (fp.add RNE x12 x18))) (fp.sub RNE (fp.neg (fp.neg x19)) (fp.mul RNE (fp.add RNE x18 x10) (fp.add RNE x3 x13))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x13 x15) (fp.sub RNE x6 x1)) (fp.sub RNE (fp.add RNE x11 x3) (fp.add RNE x17 x12))) (fp.neg (fp.sub RNE (fp.div RNE x6 x13) (fp.mul RNE x10 x9)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.sub RNE x17 x19) (fp.neg x8)) (fp.div RNE (fp.mul RNE x20 x13) (fp.add RNE x4 x13))))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE (fp.neg x18) (fp.neg x17))) (fp.mul RNE (fp.add RNE (fp.sub RNE x2 x18) (fp.mul RNE x4 x20)) (fp.sub RNE (fp.div RNE x7 x9) (fp.add RNE x4 x9)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x19 x5) (fp.sub RNE x13 x1)) (fp.neg (fp.add RNE x18 x12))))))
(check-sat)
