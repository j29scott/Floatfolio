(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x5 x1)) (fp.mul RNE (fp.mul RNE x0 x1) (fp.add RNE x5 x7))) (fp.sub RNE (fp.neg (fp.div RNE x10 x10)) (fp.neg (fp.neg x9)))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE x6 x0))) (fp.neg (fp.mul RNE (fp.neg x1) (fp.mul RNE x1 x10)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x10 x5) (fp.div RNE x10 x9)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x0 x5))) (fp.sub RNE (fp.mul RNE (fp.div RNE x1 x9) (fp.div RNE x7 x1)) (fp.sub RNE (fp.sub RNE x8 x7) (fp.mul RNE x3 x2)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE x9 x2) (fp.sub RNE x8 x10)) (fp.neg (fp.div RNE x6 x7))) (fp.neg (fp.mul RNE (fp.neg x10) (fp.neg x4)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.sub RNE x8 x6)) (fp.mul RNE (fp.sub RNE x3 x7) (fp.div RNE x4 x5))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x2 x2) (fp.add RNE x7 x0)) (fp.mul RNE (fp.div RNE x1 x9) (fp.mul RNE x6 x9)))))
(check-sat)
