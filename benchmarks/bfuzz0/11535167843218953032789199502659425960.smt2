(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg (fp.div RNE x12 x0)) (fp.div RNE (fp.sub RNE x15 x14) (fp.sub RNE x14 x12))) (fp.div RNE (fp.neg (fp.add RNE x6 x22)) (fp.div RNE (fp.div RNE x20 x0) (fp.add RNE x12 x8)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.add RNE x14 x4)) (fp.mul RNE (fp.div RNE x10 x9) (fp.neg x10))) (fp.div RNE (fp.add RNE (fp.div RNE x17 x15) (fp.neg x10)) (fp.add RNE (fp.neg x20) (fp.add RNE x6 x3))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE (fp.sub RNE x3 x10) (fp.div RNE x20 x23))) (fp.div RNE (fp.neg (fp.div RNE x17 x18)) (fp.mul RNE (fp.sub RNE x7 x7) (fp.div RNE x14 x0)))) (fp.neg (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x7) (fp.div RNE x1 x13)) (fp.neg (fp.sub RNE x23 x3))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg (fp.sub RNE x14 x20)) (fp.mul RNE (fp.neg x20) (fp.sub RNE x17 x21))) (fp.mul RNE (fp.div RNE (fp.mul RNE x16 x17) (fp.add RNE x8 x17)) (fp.add RNE (fp.sub RNE x21 x0) (fp.sub RNE x8 x10)))) (fp.div RNE (fp.neg (fp.sub RNE (fp.neg x15) (fp.neg x17))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x19)) (fp.neg (fp.add RNE x19 x2))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x20 x19) (fp.neg x11)) (fp.mul RNE (fp.add RNE x14 x11) (fp.div RNE x2 x7))) (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x20) (fp.mul RNE x12 x3)) (fp.sub RNE (fp.sub RNE x12 x23) (fp.neg x2)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.add RNE x13 x15) (fp.div RNE x10 x9))) (fp.mul RNE (fp.neg (fp.sub RNE x0 x14)) (fp.mul RNE (fp.add RNE x21 x8) (fp.sub RNE x23 x18))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE (fp.mul RNE x21 x12) (fp.div RNE x0 x3))) (fp.div RNE (fp.mul RNE (fp.mul RNE x13 x15) (fp.div RNE x0 x9)) (fp.neg (fp.add RNE x19 x18)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.mul RNE x21 x10)) (fp.sub RNE (fp.div RNE x15 x13) (fp.sub RNE x13 x3))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x23) (fp.neg x10)) (fp.div RNE (fp.div RNE x13 x15) (fp.sub RNE x16 x10))))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x5 x22) (fp.neg x9)) (fp.div RNE (fp.sub RNE x9 x8) (fp.neg x15))) (fp.add RNE (fp.div RNE (fp.sub RNE x3 x16) (fp.div RNE x22 x2)) (fp.sub RNE (fp.mul RNE x23 x19) (fp.add RNE x18 x7)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.neg x21) (fp.add RNE x5 x14)) (fp.add RNE (fp.neg x21) (fp.neg x23))))))
(check-sat)
