(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x5 x9) (fp.add RNE x5 x8)) (fp.neg (fp.mul RNE x10 x6))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x10 x3) (fp.mul RNE x7 x14)) (fp.mul RNE (fp.add RNE x2 x14) (fp.add RNE x12 x4))))
(assert (fp.eq (fp.neg (fp.div RNE x1 x14)) (fp.neg (fp.mul RNE x6 x8))))
(assert (fp.leq (fp.add RNE (fp.neg x11) (fp.neg x1)) (fp.add RNE (fp.neg x0) (fp.neg x6))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x4 x10) (fp.div RNE x10 x0)) (fp.add RNE (fp.mul RNE x13 x5) (fp.div RNE x0 x8))))
(assert (fp.geq (fp.neg (fp.neg x8)) (fp.neg (fp.mul RNE x2 x3))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x10 x1) (fp.add RNE x11 x12)) (fp.neg (fp.neg x14))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x13 x8) (fp.mul RNE x10 x7)) (fp.add RNE (fp.sub RNE x7 x9) (fp.sub RNE x9 x6))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x7 x7) (fp.mul RNE x10 x11)) (fp.div RNE (fp.mul RNE x4 x1) (fp.neg x0))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x11 x12) (fp.neg x2)) (fp.add RNE (fp.neg x2) (fp.sub RNE x0 x5))))
(assert (fp.eq (fp.div RNE (fp.add RNE x4 x7) (fp.div RNE x0 x4)) (fp.div RNE (fp.add RNE x3 x12) (fp.mul RNE x13 x13))))
(check-sat)
