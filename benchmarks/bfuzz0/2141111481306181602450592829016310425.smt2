(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x13) (fp.div RNE x2 x12)) (fp.add RNE (fp.add RNE x9 x2) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.neg x0) (fp.mul RNE x12 x8)) (fp.mul RNE (fp.neg x4) (fp.div RNE x10 x5))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x1 x7) (fp.neg x1)) (fp.mul RNE (fp.sub RNE x5 x11) (fp.neg x11))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x8 x5) (fp.div RNE x7 x3)) (fp.mul RNE (fp.add RNE x7 x9) (fp.mul RNE x5 x7))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x9 x1) (fp.neg x10)) (fp.neg (fp.div RNE x3 x11))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x10 x5) (fp.neg x0)) (fp.add RNE (fp.add RNE x9 x10) (fp.sub RNE x4 x13))))
(assert (fp.lt (fp.neg (fp.mul RNE x6 x7)) (fp.add RNE (fp.div RNE x4 x11) (fp.add RNE x11 x2))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x6 x9) (fp.sub RNE x10 x7)) (fp.add RNE (fp.neg x2) (fp.mul RNE x6 x12))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x9) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x12 x13) (fp.div RNE x7 x3))))
(assert (fp.geq (fp.mul RNE (fp.neg x8) (fp.neg x7)) (fp.neg (fp.mul RNE x6 x3))))
(assert (fp.lt (fp.neg (fp.div RNE x8 x7)) (fp.div RNE (fp.add RNE x11 x5) (fp.neg x4))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x11 x12) (fp.add RNE x4 x2)) (fp.mul RNE (fp.neg x11) (fp.div RNE x2 x0))))
(assert (fp.eq (fp.div RNE (fp.neg x12) (fp.add RNE x10 x13)) (fp.neg (fp.add RNE x9 x2))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x8 x3) (fp.sub RNE x8 x3)) (fp.div RNE (fp.neg x7) (fp.add RNE x10 x9))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x3 x8) (fp.add RNE x3 x2)) (fp.sub RNE (fp.neg x4) (fp.add RNE x7 x8))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x4 x3) (fp.sub RNE x5 x5)) (fp.add RNE (fp.div RNE x0 x12) (fp.mul RNE x13 x1))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x4 x9) (fp.add RNE x12 x0)) (fp.sub RNE (fp.mul RNE x13 x5) (fp.neg x8))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x4 x2) (fp.div RNE x4 x0)) (fp.neg (fp.neg x11))))
(assert (fp.lt (fp.add RNE (fp.div RNE x4 x12) (fp.neg x6)) (fp.mul RNE (fp.neg x8) (fp.neg x13))))
(assert (fp.lt (fp.neg (fp.neg x8)) (fp.neg (fp.sub RNE x13 x12))))
(check-sat)
