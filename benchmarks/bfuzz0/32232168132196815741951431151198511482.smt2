(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.add RNE x3 x0) (fp.div RNE x2 x2)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x3) (fp.neg x7)) (fp.mul RNE (fp.add RNE x6 x5) (fp.mul RNE x6 x1))) (fp.add RNE (fp.add RNE (fp.mul RNE x1 x6) (fp.div RNE x7 x7)) (fp.add RNE (fp.div RNE x5 x6) (fp.mul RNE x2 x1))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE (fp.add RNE x7 x5) (fp.sub RNE x7 x4)) (fp.sub RNE (fp.div RNE x5 x3) (fp.neg x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x3 x4) (fp.div RNE x4 x1)) (fp.mul RNE (fp.sub RNE x5 x5) (fp.sub RNE x1 x2)))) (fp.div RNE (fp.neg (fp.div RNE (fp.add RNE x3 x6) (fp.add RNE x5 x1))) (fp.sub RNE (fp.add RNE (fp.sub RNE x7 x7) (fp.mul RNE x2 x6)) (fp.div RNE (fp.mul RNE x7 x3) (fp.neg x3))))))
(check-sat)
