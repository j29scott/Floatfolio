(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.div RNE (fp.sub RNE x16 x1) (fp.mul RNE x19 x24)) (fp.sub RNE (fp.add RNE x17 x17) (fp.add RNE x11 x13))) (fp.mul RNE (fp.mul RNE (fp.neg x16) (fp.add RNE x2 x13)) (fp.neg (fp.add RNE x0 x8)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.add RNE x25 x10) (fp.div RNE x17 x3)) (fp.mul RNE (fp.sub RNE x7 x22) (fp.mul RNE x5 x26))) (fp.add RNE (fp.add RNE (fp.div RNE x18 x9) (fp.add RNE x22 x15)) (fp.mul RNE (fp.mul RNE x27 x11) (fp.neg x24))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.neg (fp.sub RNE x4 x14))) (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x8) (fp.add RNE x24 x19)) (fp.neg (fp.mul RNE x3 x10)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.mul RNE x2 x8) (fp.div RNE x16 x15))) (fp.div RNE (fp.neg (fp.sub RNE x24 x24)) (fp.mul RNE (fp.div RNE x5 x13) (fp.div RNE x20 x22))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE (fp.div RNE x9 x27) (fp.mul RNE x2 x12))) (fp.mul RNE (fp.mul RNE (fp.neg x14) (fp.add RNE x13 x21)) (fp.add RNE (fp.sub RNE x18 x26) (fp.add RNE x13 x26)))) (fp.neg (fp.add RNE (fp.neg (fp.neg x19)) (fp.sub RNE (fp.neg x1) (fp.add RNE x8 x3))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg (fp.mul RNE x12 x9)) (fp.sub RNE (fp.sub RNE x25 x6) (fp.div RNE x22 x23))) (fp.add RNE (fp.div RNE (fp.neg x26) (fp.mul RNE x19 x22)) (fp.mul RNE (fp.sub RNE x11 x5) (fp.neg x4)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x17 x11) (fp.neg x14)) (fp.add RNE (fp.neg x13) (fp.neg x12))) (fp.add RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x16 x8)) (fp.mul RNE (fp.add RNE x25 x9) (fp.div RNE x21 x0))))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.neg x19) (fp.add RNE x10 x19)) (fp.div RNE (fp.mul RNE x2 x26) (fp.div RNE x3 x3))) (fp.neg (fp.add RNE (fp.sub RNE x24 x3) (fp.add RNE x1 x4)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x23 x20)) (fp.mul RNE (fp.div RNE x10 x18) (fp.div RNE x4 x6))) (fp.add RNE (fp.neg (fp.sub RNE x0 x4)) (fp.add RNE (fp.neg x23) (fp.sub RNE x16 x2))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.sub RNE (fp.neg x19) (fp.div RNE x24 x20))) (fp.add RNE (fp.sub RNE (fp.neg x6) (fp.div RNE x5 x17)) (fp.div RNE (fp.div RNE x7 x9) (fp.mul RNE x12 x8)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x16 x4) (fp.div RNE x1 x21)) (fp.neg (fp.div RNE x5 x19))) (fp.mul RNE (fp.add RNE (fp.neg x15) (fp.add RNE x4 x19)) (fp.sub RNE (fp.sub RNE x17 x6) (fp.neg x5))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg (fp.add RNE x18 x19))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x18 x25) (fp.sub RNE x14 x18)) (fp.mul RNE (fp.add RNE x9 x7) (fp.sub RNE x3 x13)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x4) (fp.div RNE x7 x14)) (fp.sub RNE (fp.div RNE x13 x27) (fp.neg x7))) (fp.mul RNE (fp.div RNE (fp.mul RNE x21 x7) (fp.div RNE x3 x14)) (fp.div RNE (fp.div RNE x10 x17) (fp.neg x9))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.div RNE x20 x3) (fp.neg x22)) (fp.add RNE (fp.add RNE x24 x14) (fp.add RNE x15 x9))) (fp.neg (fp.div RNE (fp.neg x27) (fp.sub RNE x6 x19)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x12 x20) (fp.neg x9)) (fp.sub RNE (fp.div RNE x26 x9) (fp.div RNE x7 x4))) (fp.add RNE (fp.sub RNE (fp.div RNE x13 x3) (fp.neg x0)) (fp.div RNE (fp.mul RNE x14 x10) (fp.add RNE x11 x16))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x18 x25) (fp.mul RNE x7 x17)) (fp.mul RNE (fp.neg x21) (fp.div RNE x23 x19))) (fp.add RNE (fp.add RNE (fp.neg x9) (fp.sub RNE x24 x13)) (fp.mul RNE (fp.neg x11) (fp.add RNE x14 x8)))) (fp.add RNE (fp.add RNE (fp.neg (fp.add RNE x20 x8)) (fp.neg (fp.neg x10))) (fp.mul RNE (fp.mul RNE (fp.add RNE x26 x0) (fp.neg x20)) (fp.add RNE (fp.add RNE x22 x0) (fp.sub RNE x4 x22))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg (fp.neg x24)) (fp.add RNE (fp.add RNE x1 x26) (fp.div RNE x22 x4))) (fp.neg (fp.div RNE (fp.add RNE x27 x1) (fp.sub RNE x22 x8)))) (fp.neg (fp.div RNE (fp.div RNE (fp.neg x19) (fp.add RNE x13 x8)) (fp.sub RNE (fp.add RNE x18 x9) (fp.sub RNE x19 x6))))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE (fp.mul RNE x7 x10) (fp.neg x22)) (fp.add RNE (fp.div RNE x22 x14) (fp.add RNE x0 x8))) (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.div RNE x27 x6)) (fp.div RNE (fp.mul RNE x2 x17) (fp.sub RNE x0 x3)))) (fp.neg (fp.sub RNE (fp.neg (fp.mul RNE x15 x26)) (fp.div RNE (fp.neg x19) (fp.add RNE x17 x11))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg (fp.div RNE x15 x2))) (fp.add RNE (fp.neg (fp.add RNE x15 x1)) (fp.div RNE (fp.div RNE x13 x25) (fp.neg x13)))) (fp.neg (fp.div RNE (fp.neg (fp.add RNE x6 x19)) (fp.sub RNE (fp.div RNE x1 x11) (fp.div RNE x25 x10))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x19 x6) (fp.sub RNE x0 x17)) (fp.neg (fp.mul RNE x11 x25))) (fp.div RNE (fp.mul RNE (fp.add RNE x4 x12) (fp.div RNE x11 x3)) (fp.add RNE (fp.neg x2) (fp.sub RNE x5 x3)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.neg x2)) (fp.div RNE (fp.add RNE x17 x15) (fp.div RNE x0 x12))) (fp.div RNE (fp.neg (fp.mul RNE x8 x7)) (fp.add RNE (fp.add RNE x9 x5) (fp.neg x21))))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x27 x9) (fp.sub RNE x7 x18)) (fp.div RNE (fp.sub RNE x16 x21) (fp.add RNE x9 x9))) (fp.sub RNE (fp.div RNE (fp.neg x5) (fp.div RNE x21 x3)) (fp.sub RNE (fp.div RNE x25 x8) (fp.div RNE x14 x10)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x7 x26) (fp.div RNE x10 x18)) (fp.div RNE (fp.neg x4) (fp.mul RNE x21 x12))) (fp.add RNE (fp.mul RNE (fp.sub RNE x21 x13) (fp.neg x18)) (fp.add RNE (fp.div RNE x6 x18) (fp.neg x27))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE (fp.add RNE x24 x22) (fp.neg x19)) (fp.div RNE (fp.mul RNE x14 x11) (fp.div RNE x18 x26)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.div RNE x16 x26) (fp.div RNE x9 x11)) (fp.mul RNE (fp.sub RNE x13 x16) (fp.neg x9))) (fp.add RNE (fp.neg (fp.sub RNE x4 x25)) (fp.add RNE (fp.neg x13) (fp.mul RNE x11 x20))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x5) (fp.add RNE x3 x3)) (fp.div RNE (fp.neg x3) (fp.div RNE x25 x14)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x9 x2) (fp.mul RNE x8 x18)) (fp.sub RNE (fp.mul RNE x5 x0) (fp.div RNE x3 x10))) (fp.div RNE (fp.sub RNE (fp.mul RNE x25 x26) (fp.div RNE x26 x24)) (fp.add RNE (fp.sub RNE x19 x19) (fp.div RNE x13 x13))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x13 x7) (fp.add RNE x23 x7)) (fp.div RNE (fp.mul RNE x12 x11) (fp.mul RNE x19 x19))) (fp.sub RNE (fp.mul RNE (fp.add RNE x9 x26) (fp.neg x6)) (fp.div RNE (fp.div RNE x23 x12) (fp.add RNE x12 x22)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.div RNE x4 x17) (fp.mul RNE x2 x18)) (fp.mul RNE (fp.sub RNE x3 x7) (fp.neg x18))) (fp.sub RNE (fp.mul RNE (fp.neg x14) (fp.mul RNE x10 x3)) (fp.neg (fp.add RNE x14 x0))))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.div RNE (fp.neg x21) (fp.add RNE x15 x0)) (fp.mul RNE (fp.div RNE x1 x26) (fp.add RNE x5 x24))) (fp.sub RNE (fp.neg (fp.sub RNE x9 x4)) (fp.sub RNE (fp.neg x15) (fp.sub RNE x16 x5)))) (fp.neg (fp.neg (fp.add RNE (fp.neg x18) (fp.mul RNE x23 x20))))))
(check-sat)
