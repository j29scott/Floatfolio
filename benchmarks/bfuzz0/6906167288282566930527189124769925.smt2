(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.neg (fp.mul RNE x20 x12)) (fp.mul RNE (fp.add RNE x19 x9) (fp.sub RNE x18 x3))) (fp.mul RNE (fp.add RNE (fp.div RNE x7 x7) (fp.neg x17)) (fp.add RNE (fp.mul RNE x0 x17) (fp.mul RNE x5 x11)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x5 x0) (fp.add RNE x4 x11)) (fp.div RNE (fp.div RNE x15 x5) (fp.sub RNE x10 x15))) (fp.add RNE (fp.neg (fp.sub RNE x10 x19)) (fp.sub RNE (fp.div RNE x11 x19) (fp.div RNE x3 x11)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.neg x15) (fp.add RNE x14 x14)) (fp.neg (fp.sub RNE x8 x2))) (fp.mul RNE (fp.neg (fp.div RNE x9 x0)) (fp.add RNE (fp.add RNE x16 x11) (fp.add RNE x5 x16)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.add RNE x17 x2) (fp.sub RNE x11 x12)) (fp.div RNE (fp.sub RNE x5 x12) (fp.mul RNE x8 x16))) (fp.div RNE (fp.mul RNE (fp.div RNE x10 x20) (fp.sub RNE x10 x0)) (fp.sub RNE (fp.sub RNE x4 x13) (fp.div RNE x9 x6)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x2 x7)) (fp.add RNE (fp.sub RNE x14 x15) (fp.neg x10))) (fp.neg (fp.sub RNE (fp.sub RNE x0 x16) (fp.sub RNE x13 x6)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE x21 x11) (fp.add RNE x6 x14))) (fp.div RNE (fp.neg (fp.add RNE x19 x5)) (fp.mul RNE (fp.mul RNE x5 x10) (fp.add RNE x9 x15)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.mul RNE x11 x4) (fp.sub RNE x21 x1)) (fp.sub RNE (fp.neg x16) (fp.add RNE x0 x4))) (fp.sub RNE (fp.add RNE (fp.mul RNE x12 x12) (fp.add RNE x3 x19)) (fp.mul RNE (fp.sub RNE x11 x7) (fp.add RNE x21 x16)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x19) (fp.neg x17)) (fp.neg (fp.add RNE x5 x6))) (fp.neg (fp.sub RNE (fp.neg x13) (fp.neg x0)))))
(check-sat)
