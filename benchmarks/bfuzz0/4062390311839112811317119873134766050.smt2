(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.div RNE x7 x6) (fp.mul RNE x5 x11)) (fp.div RNE (fp.mul RNE x10 x8) (fp.sub RNE x3 x8))))
(assert (fp.gt (fp.div RNE (fp.div RNE x10 x6) (fp.sub RNE x6 x9)) (fp.add RNE (fp.sub RNE x10 x11) (fp.div RNE x7 x7))))
(assert (fp.geq (fp.div RNE (fp.neg x13) (fp.add RNE x1 x4)) (fp.neg (fp.mul RNE x3 x11))))
(assert (fp.lt (fp.div RNE (fp.neg x2) (fp.neg x7)) (fp.mul RNE (fp.neg x2) (fp.neg x10))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x4 x1) (fp.sub RNE x9 x1)) (fp.mul RNE (fp.sub RNE x2 x9) (fp.neg x15))))
(assert (fp.eq (fp.sub RNE (fp.neg x14) (fp.sub RNE x11 x8)) (fp.sub RNE (fp.mul RNE x13 x1) (fp.mul RNE x7 x1))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x2 x8) (fp.add RNE x9 x4)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x4 x9))))
(assert (fp.geq (fp.add RNE (fp.neg x10) (fp.mul RNE x9 x5)) (fp.neg (fp.sub RNE x7 x6))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x13 x4) (fp.add RNE x5 x2)) (fp.div RNE (fp.add RNE x12 x2) (fp.div RNE x4 x10))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x13 x13) (fp.div RNE x2 x5)) (fp.add RNE (fp.add RNE x12 x15) (fp.neg x13))))
(assert (fp.gt (fp.neg (fp.div RNE x11 x9)) (fp.add RNE (fp.add RNE x4 x13) (fp.add RNE x5 x5))))
(assert (fp.lt (fp.div RNE (fp.div RNE x7 x15) (fp.add RNE x2 x11)) (fp.add RNE (fp.mul RNE x14 x15) (fp.mul RNE x3 x2))))
(assert (fp.lt (fp.div RNE (fp.add RNE x6 x10) (fp.mul RNE x14 x0)) (fp.add RNE (fp.mul RNE x10 x0) (fp.add RNE x13 x11))))
(assert (fp.geq (fp.add RNE (fp.add RNE x1 x15) (fp.neg x7)) (fp.neg (fp.div RNE x8 x0))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x1 x6) (fp.neg x14)) (fp.add RNE (fp.mul RNE x0 x1) (fp.mul RNE x13 x6))))
(assert (fp.lt (fp.neg (fp.neg x2)) (fp.add RNE (fp.neg x13) (fp.sub RNE x13 x13))))
(assert (fp.lt (fp.div RNE (fp.add RNE x1 x10) (fp.div RNE x15 x6)) (fp.div RNE (fp.add RNE x1 x14) (fp.div RNE x15 x13))))
(assert (fp.leq (fp.neg (fp.mul RNE x12 x9)) (fp.neg (fp.sub RNE x9 x10))))
(assert (fp.leq (fp.mul RNE (fp.neg x15) (fp.div RNE x8 x2)) (fp.div RNE (fp.mul RNE x3 x7) (fp.div RNE x10 x2))))
(check-sat)
