(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE x21 x12) (fp.add RNE x0 x0)) (fp.div RNE (fp.add RNE x8 x8) (fp.div RNE x21 x19))) (fp.sub RNE (fp.div RNE (fp.sub RNE x13 x9) (fp.sub RNE x21 x10)) (fp.mul RNE (fp.mul RNE x17 x2) (fp.div RNE x7 x16)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x19 x7) (fp.mul RNE x2 x20))) (fp.div RNE (fp.div RNE (fp.add RNE x0 x4) (fp.neg x16)) (fp.sub RNE (fp.sub RNE x9 x19) (fp.sub RNE x13 x12)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.mul RNE x9 x5) (fp.div RNE x18 x6)) (fp.sub RNE (fp.add RNE x9 x7) (fp.neg x6))) (fp.neg (fp.sub RNE (fp.mul RNE x10 x6) (fp.mul RNE x16 x10)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.sub RNE x7 x12) (fp.sub RNE x15 x20))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x19) (fp.mul RNE x2 x7)) (fp.div RNE (fp.add RNE x11 x7) (fp.add RNE x5 x8)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x20 x0)) (fp.neg (fp.add RNE x11 x13))) (fp.div RNE (fp.div RNE (fp.add RNE x19 x1) (fp.div RNE x9 x1)) (fp.add RNE (fp.mul RNE x6 x12) (fp.div RNE x15 x18)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.add RNE x4 x2) (fp.mul RNE x0 x17))) (fp.div RNE (fp.add RNE (fp.sub RNE x10 x5) (fp.sub RNE x10 x0)) (fp.div RNE (fp.add RNE x1 x19) (fp.sub RNE x14 x21)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x16 x20) (fp.div RNE x17 x14)) (fp.sub RNE (fp.div RNE x10 x2) (fp.add RNE x12 x15))) (fp.add RNE (fp.div RNE (fp.add RNE x8 x8) (fp.sub RNE x1 x14)) (fp.sub RNE (fp.sub RNE x9 x6) (fp.add RNE x19 x13)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x14 x2) (fp.sub RNE x19 x12)) (fp.sub RNE (fp.mul RNE x1 x16) (fp.mul RNE x1 x6))) (fp.div RNE (fp.neg (fp.add RNE x14 x1)) (fp.mul RNE (fp.mul RNE x18 x6) (fp.neg x14)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x16) (fp.neg x5)) (fp.neg (fp.sub RNE x16 x21))) (fp.sub RNE (fp.neg (fp.div RNE x12 x19)) (fp.sub RNE (fp.div RNE x7 x7) (fp.mul RNE x15 x7)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x0 x1)) (fp.sub RNE (fp.mul RNE x15 x20) (fp.div RNE x21 x12))) (fp.neg (fp.sub RNE (fp.div RNE x6 x11) (fp.add RNE x8 x5)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x4) (fp.sub RNE x16 x5)) (fp.neg (fp.mul RNE x1 x8))) (fp.add RNE (fp.add RNE (fp.div RNE x18 x17) (fp.neg x17)) (fp.mul RNE (fp.add RNE x0 x15) (fp.sub RNE x9 x4)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.neg x1) (fp.add RNE x2 x5)) (fp.sub RNE (fp.add RNE x12 x4) (fp.add RNE x17 x9))) (fp.add RNE (fp.sub RNE (fp.neg x17) (fp.div RNE x17 x7)) (fp.neg (fp.sub RNE x0 x1)))))
(check-sat)
