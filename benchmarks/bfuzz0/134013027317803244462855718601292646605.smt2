(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x10 x5) (fp.add RNE x3 x13)) (fp.mul RNE (fp.neg x17) (fp.mul RNE x12 x14))) (fp.div RNE (fp.neg (fp.sub RNE x9 x15)) (fp.add RNE (fp.neg x3) (fp.mul RNE x8 x4)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.neg x7) (fp.neg x14))) (fp.neg (fp.add RNE (fp.div RNE x18 x18) (fp.div RNE x6 x16))))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x3) (fp.sub RNE x16 x5)) (fp.div RNE (fp.mul RNE x12 x7) (fp.neg x3))) (fp.mul RNE (fp.mul RNE (fp.add RNE x15 x16) (fp.div RNE x5 x15)) (fp.mul RNE (fp.neg x2) (fp.neg x1)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.div RNE x7 x11) (fp.mul RNE x15 x8)) (fp.mul RNE (fp.add RNE x2 x9) (fp.neg x8))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE (fp.div RNE x16 x8) (fp.div RNE x3 x1)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x16 x16)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.add RNE x17 x15) (fp.div RNE x1 x9)) (fp.div RNE (fp.div RNE x11 x5) (fp.div RNE x1 x11))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x5) (fp.mul RNE x15 x1)) (fp.add RNE (fp.div RNE x15 x3) (fp.neg x12))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x3 x10) (fp.div RNE x17 x12)) (fp.div RNE (fp.neg x4) (fp.sub RNE x10 x5))) (fp.add RNE (fp.neg (fp.neg x12)) (fp.add RNE (fp.add RNE x10 x16) (fp.sub RNE x15 x6)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.neg x3) (fp.div RNE x11 x2)) (fp.sub RNE (fp.neg x7) (fp.div RNE x11 x1))) (fp.div RNE (fp.sub RNE (fp.add RNE x18 x8) (fp.sub RNE x3 x12)) (fp.div RNE (fp.mul RNE x16 x5) (fp.add RNE x11 x6))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE (fp.add RNE x13 x18) (fp.add RNE x11 x4)) (fp.mul RNE (fp.neg x13) (fp.neg x1)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x4 x0) (fp.mul RNE x8 x0)) (fp.div RNE (fp.div RNE x4 x0) (fp.add RNE x7 x8))) (fp.div RNE (fp.sub RNE (fp.div RNE x7 x5) (fp.div RNE x15 x14)) (fp.mul RNE (fp.div RNE x15 x1) (fp.mul RNE x1 x8))))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE (fp.div RNE x2 x16) (fp.mul RNE x4 x1)) (fp.add RNE (fp.neg x1) (fp.sub RNE x18 x7))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x7)) (fp.neg (fp.neg x3)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE x18 x15) (fp.mul RNE x6 x9)) (fp.mul RNE (fp.sub RNE x8 x10) (fp.mul RNE x2 x7))) (fp.div RNE (fp.sub RNE (fp.add RNE x9 x8) (fp.neg x4)) (fp.add RNE (fp.sub RNE x9 x12) (fp.sub RNE x8 x15))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE (fp.sub RNE x8 x0) (fp.sub RNE x9 x7)) (fp.add RNE (fp.add RNE x1 x11) (fp.mul RNE x12 x3))) (fp.add RNE (fp.div RNE (fp.neg x16) (fp.neg x3)) (fp.neg (fp.neg x2)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x18) (fp.add RNE x0 x7)) (fp.add RNE (fp.neg x5) (fp.div RNE x11 x2))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x12 x6) (fp.neg x6)) (fp.add RNE (fp.add RNE x3 x6) (fp.add RNE x15 x1))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE (fp.add RNE x12 x4) (fp.add RNE x4 x12))) (fp.sub RNE (fp.neg (fp.div RNE x10 x10)) (fp.add RNE (fp.mul RNE x5 x14) (fp.sub RNE x17 x13)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.div RNE x13 x11) (fp.add RNE x4 x13)) (fp.neg (fp.neg x14))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x8) (fp.mul RNE x5 x6)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x13 x9))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE (fp.sub RNE x17 x5) (fp.div RNE x18 x18)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x4 x9)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.div RNE x8 x0) (fp.div RNE x8 x8)) (fp.mul RNE (fp.div RNE x11 x9) (fp.add RNE x14 x6))) (fp.mul RNE (fp.add RNE (fp.div RNE x18 x5) (fp.mul RNE x10 x6)) (fp.mul RNE (fp.sub RNE x7 x2) (fp.neg x5))))))
(check-sat)
