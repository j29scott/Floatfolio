(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x10 x11) (fp.div RNE x13 x11)) (fp.sub RNE (fp.sub RNE x8 x8) (fp.add RNE x9 x8))))
(assert (fp.lt (fp.div RNE (fp.neg x5) (fp.add RNE x8 x0)) (fp.sub RNE (fp.mul RNE x13 x2) (fp.mul RNE x13 x5))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x8 x5) (fp.div RNE x12 x4)) (fp.div RNE (fp.mul RNE x8 x8) (fp.div RNE x11 x9))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x9 x0) (fp.sub RNE x9 x11)) (fp.sub RNE (fp.add RNE x5 x10) (fp.mul RNE x1 x8))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x0 x2) (fp.neg x11)) (fp.neg (fp.div RNE x0 x12))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x0 x11) (fp.sub RNE x2 x11)) (fp.mul RNE (fp.sub RNE x6 x13) (fp.div RNE x11 x1))))
(assert (fp.eq (fp.div RNE (fp.div RNE x4 x2) (fp.div RNE x7 x7)) (fp.sub RNE (fp.div RNE x10 x7) (fp.div RNE x3 x6))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x7 x1) (fp.sub RNE x11 x11)) (fp.add RNE (fp.add RNE x2 x8) (fp.add RNE x8 x13))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x7 x3) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x3 x4) (fp.div RNE x8 x3))))
(check-sat)
