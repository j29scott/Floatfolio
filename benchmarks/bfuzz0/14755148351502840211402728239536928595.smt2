(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE x4 x6)) (fp.mul RNE (fp.add RNE x6 x12) (fp.mul RNE x5 x5))) (fp.mul RNE (fp.neg (fp.sub RNE x12 x10)) (fp.neg (fp.add RNE x0 x6)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.neg x4) (fp.add RNE x10 x9)) (fp.mul RNE (fp.add RNE x12 x4) (fp.div RNE x8 x4))) (fp.add RNE (fp.sub RNE (fp.add RNE x4 x7) (fp.mul RNE x4 x12)) (fp.add RNE (fp.sub RNE x11 x10) (fp.sub RNE x4 x4)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE x8 x1)) (fp.add RNE (fp.div RNE x6 x2) (fp.sub RNE x0 x5))) (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x6) (fp.div RNE x0 x5)) (fp.sub RNE (fp.sub RNE x4 x8) (fp.mul RNE x8 x4)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.mul RNE x9 x6) (fp.add RNE x10 x7)) (fp.add RNE (fp.div RNE x0 x12) (fp.mul RNE x3 x11))) (fp.sub RNE (fp.sub RNE (fp.neg x2) (fp.div RNE x9 x3)) (fp.sub RNE (fp.neg x3) (fp.neg x10)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x8 x4)) (fp.mul RNE (fp.sub RNE x2 x3) (fp.div RNE x7 x4))) (fp.div RNE (fp.add RNE (fp.mul RNE x0 x7) (fp.neg x3)) (fp.div RNE (fp.neg x0) (fp.neg x2)))))
(assert (fp.geq (fp.neg (fp.neg (fp.add RNE x4 x0))) (fp.mul RNE (fp.add RNE (fp.add RNE x0 x3) (fp.add RNE x0 x6)) (fp.add RNE (fp.div RNE x5 x11) (fp.sub RNE x4 x4)))))
(check-sat)
