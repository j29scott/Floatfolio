(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x3 x7))) (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.add RNE x16 x3)) (fp.mul RNE (fp.mul RNE x10 x4) (fp.add RNE x18 x11)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.mul RNE x17 x17) (fp.neg x16)) (fp.div RNE (fp.div RNE x19 x4) (fp.sub RNE x16 x6))) (fp.sub RNE (fp.neg (fp.mul RNE x4 x13)) (fp.neg (fp.mul RNE x11 x11)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE x12 x2) (fp.add RNE x18 x20)) (fp.add RNE (fp.div RNE x20 x1) (fp.neg x8))) (fp.add RNE (fp.div RNE (fp.neg x4) (fp.div RNE x10 x6)) (fp.div RNE (fp.neg x19) (fp.neg x13)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x6 x9)) (fp.add RNE (fp.neg x19) (fp.sub RNE x9 x17))) (fp.sub RNE (fp.add RNE (fp.add RNE x11 x10) (fp.div RNE x0 x10)) (fp.neg (fp.mul RNE x16 x20)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x15 x2) (fp.sub RNE x0 x11)) (fp.neg (fp.add RNE x16 x17))) (fp.sub RNE (fp.neg (fp.div RNE x6 x11)) (fp.div RNE (fp.neg x7) (fp.div RNE x13 x13)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.add RNE x12 x15)) (fp.add RNE (fp.div RNE x10 x5) (fp.neg x15))) (fp.div RNE (fp.add RNE (fp.div RNE x4 x8) (fp.add RNE x16 x1)) (fp.mul RNE (fp.mul RNE x4 x5) (fp.neg x6)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x12) (fp.neg x7)) (fp.neg (fp.div RNE x5 x17))) (fp.add RNE (fp.mul RNE (fp.mul RNE x8 x7) (fp.add RNE x10 x15)) (fp.div RNE (fp.div RNE x16 x0) (fp.sub RNE x9 x14)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg x6)) (fp.add RNE (fp.div RNE x2 x5) (fp.mul RNE x8 x12))) (fp.neg (fp.add RNE (fp.add RNE x15 x16) (fp.sub RNE x8 x6)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.div RNE x18 x10) (fp.sub RNE x8 x3))) (fp.add RNE (fp.sub RNE (fp.neg x14) (fp.sub RNE x6 x13)) (fp.mul RNE (fp.mul RNE x13 x1) (fp.sub RNE x12 x2)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.sub RNE x0 x5) (fp.sub RNE x5 x13))) (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x2) (fp.div RNE x4 x7)) (fp.neg (fp.neg x13)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.div RNE x2 x1) (fp.mul RNE x4 x17)) (fp.mul RNE (fp.add RNE x6 x9) (fp.add RNE x9 x13))) (fp.sub RNE (fp.neg (fp.sub RNE x12 x15)) (fp.sub RNE (fp.add RNE x5 x4) (fp.sub RNE x18 x4)))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x2 x19))) (fp.neg (fp.mul RNE (fp.mul RNE x14 x2) (fp.neg x17)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE x1 x12) (fp.add RNE x10 x6)) (fp.div RNE (fp.div RNE x19 x16) (fp.sub RNE x19 x12))) (fp.sub RNE (fp.add RNE (fp.div RNE x1 x5) (fp.div RNE x1 x6)) (fp.add RNE (fp.sub RNE x18 x15) (fp.div RNE x9 x20)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x6 x19) (fp.div RNE x17 x17)) (fp.sub RNE (fp.neg x0) (fp.sub RNE x6 x19))) (fp.neg (fp.sub RNE (fp.div RNE x3 x16) (fp.mul RNE x19 x12)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x3 x20) (fp.mul RNE x11 x20)) (fp.sub RNE (fp.mul RNE x1 x5) (fp.add RNE x6 x2))) (fp.neg (fp.sub RNE (fp.neg x1) (fp.neg x13)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x16 x18)) (fp.add RNE (fp.div RNE x4 x13) (fp.sub RNE x6 x18))) (fp.div RNE (fp.div RNE (fp.mul RNE x20 x7) (fp.div RNE x6 x18)) (fp.mul RNE (fp.div RNE x13 x14) (fp.div RNE x16 x12)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x11) (fp.sub RNE x2 x3)) (fp.neg (fp.div RNE x6 x4))) (fp.sub RNE (fp.neg (fp.add RNE x18 x8)) (fp.add RNE (fp.add RNE x10 x5) (fp.add RNE x12 x10)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg x16) (fp.div RNE x3 x1)) (fp.div RNE (fp.add RNE x10 x3) (fp.add RNE x14 x0))) (fp.mul RNE (fp.add RNE (fp.add RNE x11 x2) (fp.div RNE x5 x16)) (fp.add RNE (fp.mul RNE x18 x6) (fp.mul RNE x1 x2)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.sub RNE x16 x11) (fp.sub RNE x14 x4)) (fp.div RNE (fp.sub RNE x3 x3) (fp.sub RNE x1 x2))) (fp.sub RNE (fp.sub RNE (fp.add RNE x3 x9) (fp.neg x5)) (fp.sub RNE (fp.div RNE x4 x20) (fp.mul RNE x15 x14)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.sub RNE x1 x8) (fp.add RNE x8 x2)) (fp.add RNE (fp.neg x0) (fp.sub RNE x12 x9))) (fp.sub RNE (fp.neg (fp.div RNE x1 x9)) (fp.add RNE (fp.neg x15) (fp.add RNE x13 x16)))))
(check-sat)
