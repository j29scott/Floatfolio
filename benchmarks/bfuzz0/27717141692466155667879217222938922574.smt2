(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE x9 x0) (fp.mul RNE x19 x20)))
(assert (fp.eq (fp.sub RNE x15 x16) (fp.mul RNE x19 x15)))
(assert (fp.gt (fp.add RNE x4 x13) (fp.neg x7)))
(assert (fp.geq (fp.neg x6) (fp.neg x4)))
(assert (fp.lt (fp.neg x19) (fp.neg x19)))
(assert (fp.lt (fp.mul RNE x14 x4) (fp.sub RNE x18 x17)))
(assert (fp.leq (fp.sub RNE x6 x7) (fp.sub RNE x17 x13)))
(assert (fp.leq (fp.mul RNE x17 x0) (fp.div RNE x0 x9)))
(assert (fp.geq (fp.add RNE x5 x3) (fp.neg x15)))
(check-sat)
