(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x10 x17) (fp.div RNE x4 x15)) (fp.sub RNE (fp.div RNE x19 x8) (fp.add RNE x2 x7))) (fp.sub RNE (fp.neg (fp.div RNE x16 x14)) (fp.neg (fp.add RNE x2 x20)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x8 x19)) (fp.sub RNE (fp.mul RNE x5 x12) (fp.add RNE x3 x3))) (fp.mul RNE (fp.neg (fp.add RNE x5 x11)) (fp.mul RNE (fp.mul RNE x11 x11) (fp.neg x10)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x15 x17) (fp.sub RNE x7 x4)) (fp.div RNE (fp.neg x4) (fp.neg x10))) (fp.div RNE (fp.add RNE (fp.mul RNE x0 x5) (fp.neg x13)) (fp.neg (fp.mul RNE x3 x20)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.sub RNE x0 x2) (fp.mul RNE x17 x5)) (fp.add RNE (fp.div RNE x18 x12) (fp.div RNE x17 x16))) (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x13) (fp.mul RNE x15 x1)) (fp.neg (fp.sub RNE x9 x7)))))
(check-sat)
