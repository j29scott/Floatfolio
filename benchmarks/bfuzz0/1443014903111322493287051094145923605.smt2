(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x7) (fp.neg x8)))
(assert (fp.geq (fp.div RNE x8 x9) (fp.mul RNE x8 x8)))
(assert (fp.leq (fp.add RNE x6 x7) (fp.sub RNE x6 x1)))
(assert (fp.gt (fp.add RNE x2 x5) (fp.neg x1)))
(assert (fp.eq (fp.div RNE x10 x6) (fp.sub RNE x2 x7)))
(assert (fp.lt (fp.neg x1) (fp.neg x2)))
(assert (fp.gt (fp.neg x10) (fp.mul RNE x6 x10)))
(assert (fp.geq (fp.add RNE x4 x5) (fp.div RNE x10 x0)))
(assert (fp.leq (fp.neg x6) (fp.div RNE x8 x6)))
(assert (fp.gt (fp.sub RNE x0 x0) (fp.add RNE x7 x5)))
(assert (fp.gt (fp.neg x7) (fp.sub RNE x9 x5)))
(assert (fp.eq (fp.add RNE x2 x4) (fp.sub RNE x9 x8)))
(assert (fp.gt (fp.mul RNE x7 x9) (fp.div RNE x2 x3)))
(check-sat)
