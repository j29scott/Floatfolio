(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg x2) (fp.sub RNE x5 x5)) (fp.mul RNE (fp.add RNE x4 x7) (fp.sub RNE x5 x7))) (fp.div RNE (fp.neg (fp.add RNE x0 x3)) (fp.add RNE (fp.div RNE x13 x1) (fp.mul RNE x8 x0)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg x14) (fp.sub RNE x0 x1))) (fp.div RNE (fp.neg (fp.sub RNE x15 x14)) (fp.sub RNE (fp.sub RNE x3 x12) (fp.add RNE x1 x9)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x11 x12) (fp.mul RNE x15 x15)) (fp.neg (fp.mul RNE x1 x2))) (fp.sub RNE (fp.add RNE (fp.add RNE x10 x14) (fp.neg x15)) (fp.add RNE (fp.add RNE x0 x12) (fp.mul RNE x9 x13)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x6) (fp.add RNE x15 x1)) (fp.mul RNE (fp.neg x4) (fp.div RNE x3 x14))) (fp.mul RNE (fp.div RNE (fp.mul RNE x14 x11) (fp.div RNE x4 x9)) (fp.div RNE (fp.mul RNE x5 x4) (fp.mul RNE x6 x9)))))
(check-sat)
