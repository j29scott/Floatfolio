(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x7 x4) (fp.sub RNE x3 x11)) (fp.div RNE (fp.mul RNE x10 x5) (fp.div RNE x4 x2))) (fp.neg (fp.neg (fp.mul RNE x8 x10)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x7) (fp.sub RNE x7 x2)) (fp.add RNE (fp.sub RNE x6 x5) (fp.div RNE x10 x2))) (fp.add RNE (fp.mul RNE (fp.add RNE x2 x5) (fp.neg x8)) (fp.neg (fp.sub RNE x7 x6)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.div RNE x10 x11) (fp.sub RNE x2 x6))) (fp.div RNE (fp.neg (fp.add RNE x10 x5)) (fp.mul RNE (fp.sub RNE x3 x5) (fp.neg x6)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x2 x0) (fp.neg x11)) (fp.add RNE (fp.neg x10) (fp.neg x3))) (fp.sub RNE (fp.add RNE (fp.div RNE x3 x6) (fp.add RNE x5 x10)) (fp.add RNE (fp.neg x7) (fp.sub RNE x3 x0)))))
(check-sat)
