(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x3 x14) (fp.div RNE x13 x6)))
(assert (fp.eq (fp.mul RNE x9 x6) (fp.add RNE x3 x10)))
(assert (fp.gt (fp.neg x7) (fp.neg x11)))
(assert (fp.gt (fp.sub RNE x14 x3) (fp.add RNE x3 x15)))
(assert (fp.eq (fp.neg x8) (fp.neg x12)))
(assert (fp.leq (fp.sub RNE x9 x0) (fp.div RNE x8 x2)))
(assert (fp.gt (fp.add RNE x2 x1) (fp.mul RNE x13 x4)))
(assert (fp.lt (fp.neg x13) (fp.mul RNE x5 x0)))
(assert (fp.lt (fp.mul RNE x6 x15) (fp.neg x12)))
(assert (fp.geq (fp.mul RNE x4 x14) (fp.neg x6)))
(check-sat)
