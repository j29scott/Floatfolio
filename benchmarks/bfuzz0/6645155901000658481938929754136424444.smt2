(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.sub RNE x1 x7)) (fp.neg (fp.neg x13))) (fp.div RNE (fp.sub RNE (fp.sub RNE x8 x11) (fp.add RNE x6 x2)) (fp.neg (fp.add RNE x3 x5)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.sub RNE x7 x3) (fp.neg x11)) (fp.div RNE (fp.sub RNE x6 x11) (fp.add RNE x6 x13))) (fp.mul RNE (fp.add RNE (fp.add RNE x7 x2) (fp.sub RNE x8 x14)) (fp.mul RNE (fp.add RNE x4 x12) (fp.div RNE x9 x0)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE x6 x14) (fp.div RNE x0 x10)) (fp.sub RNE (fp.neg x13) (fp.mul RNE x5 x0))) (fp.div RNE (fp.sub RNE (fp.add RNE x3 x9) (fp.div RNE x5 x6)) (fp.sub RNE (fp.sub RNE x12 x12) (fp.sub RNE x1 x8)))))
(check-sat)
