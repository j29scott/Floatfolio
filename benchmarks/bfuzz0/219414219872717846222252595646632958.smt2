(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE x7 x10) (fp.sub RNE x0 x3)) (fp.sub RNE (fp.div RNE x2 x6) (fp.sub RNE x2 x2))))
(assert (fp.geq (fp.mul RNE (fp.neg x2) (fp.div RNE x4 x11)) (fp.sub RNE (fp.sub RNE x8 x0) (fp.add RNE x2 x2))))
(assert (fp.gt (fp.add RNE (fp.add RNE x5 x7) (fp.div RNE x0 x6)) (fp.sub RNE (fp.neg x0) (fp.div RNE x11 x3))))
(assert (fp.gt (fp.neg (fp.div RNE x3 x5)) (fp.mul RNE (fp.neg x2) (fp.div RNE x9 x0))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x5 x11) (fp.sub RNE x10 x5)) (fp.mul RNE (fp.add RNE x5 x2) (fp.mul RNE x7 x2))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x7 x2) (fp.mul RNE x1 x11)) (fp.mul RNE (fp.sub RNE x6 x1) (fp.mul RNE x1 x4))))
(assert (fp.leq (fp.sub RNE (fp.neg x5) (fp.sub RNE x10 x9)) (fp.add RNE (fp.sub RNE x1 x11) (fp.mul RNE x0 x4))))
(assert (fp.gt (fp.neg (fp.add RNE x3 x2)) (fp.div RNE (fp.neg x11) (fp.sub RNE x10 x5))))
(check-sat)
