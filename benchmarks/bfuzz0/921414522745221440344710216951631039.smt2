(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE x5 x0) (fp.mul RNE x6 x4)) (fp.neg (fp.div RNE x8 x6))))
(assert (fp.eq (fp.neg (fp.sub RNE x7 x2)) (fp.mul RNE (fp.add RNE x2 x0) (fp.div RNE x2 x3))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x8 x8) (fp.neg x0)) (fp.add RNE (fp.sub RNE x4 x7) (fp.neg x7))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x2 x8) (fp.neg x3)) (fp.add RNE (fp.div RNE x8 x0) (fp.sub RNE x7 x1))))
(assert (fp.eq (fp.neg (fp.neg x3)) (fp.div RNE (fp.add RNE x8 x7) (fp.neg x7))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x6 x0) (fp.neg x0)) (fp.sub RNE (fp.add RNE x7 x0) (fp.div RNE x1 x1))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x2)) (fp.mul RNE (fp.div RNE x3 x3) (fp.mul RNE x3 x3))))
(assert (fp.geq (fp.neg (fp.neg x0)) (fp.mul RNE (fp.mul RNE x1 x5) (fp.div RNE x4 x8))))
(assert (fp.gt (fp.add RNE (fp.neg x7) (fp.neg x0)) (fp.add RNE (fp.div RNE x4 x6) (fp.add RNE x1 x1))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x3 x6) (fp.neg x8)) (fp.add RNE (fp.mul RNE x5 x4) (fp.div RNE x3 x8))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x4 x8) (fp.neg x3)) (fp.sub RNE (fp.div RNE x8 x7) (fp.sub RNE x2 x2))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x4 x7) (fp.sub RNE x6 x3)) (fp.div RNE (fp.sub RNE x6 x2) (fp.neg x1))))
(assert (fp.lt (fp.div RNE (fp.neg x7) (fp.sub RNE x1 x5)) (fp.sub RNE (fp.add RNE x5 x5) (fp.sub RNE x5 x5))))
(assert (fp.eq (fp.sub RNE (fp.neg x6) (fp.div RNE x5 x7)) (fp.add RNE (fp.div RNE x6 x0) (fp.sub RNE x0 x3))))
(check-sat)
