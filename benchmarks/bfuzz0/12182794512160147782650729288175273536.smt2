(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x13 x6) (fp.add RNE x7 x4)) (fp.sub RNE (fp.sub RNE x2 x11) (fp.div RNE x11 x10))) (fp.mul RNE (fp.neg (fp.mul RNE x6 x5)) (fp.div RNE (fp.sub RNE x6 x8) (fp.add RNE x11 x4)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x14) (fp.add RNE x9 x9)) (fp.div RNE (fp.div RNE x14 x13) (fp.add RNE x0 x1))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x7 x2) (fp.neg x4)) (fp.add RNE (fp.sub RNE x6 x0) (fp.sub RNE x8 x10))) (fp.div RNE (fp.neg (fp.add RNE x8 x15)) (fp.sub RNE (fp.add RNE x5 x12) (fp.div RNE x15 x13)))) (fp.div RNE (fp.add RNE (fp.neg (fp.add RNE x5 x8)) (fp.sub RNE (fp.sub RNE x10 x0) (fp.div RNE x5 x15))) (fp.add RNE (fp.add RNE (fp.add RNE x10 x3) (fp.div RNE x10 x15)) (fp.div RNE (fp.div RNE x4 x2) (fp.mul RNE x13 x4))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x13 x2) (fp.mul RNE x9 x10)) (fp.add RNE (fp.mul RNE x7 x15) (fp.div RNE x0 x6))) (fp.sub RNE (fp.neg (fp.sub RNE x10 x8)) (fp.mul RNE (fp.mul RNE x6 x8) (fp.mul RNE x12 x0)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.add RNE x3 x14)) (fp.sub RNE (fp.div RNE x9 x2) (fp.mul RNE x12 x3))) (fp.sub RNE (fp.neg (fp.sub RNE x8 x0)) (fp.neg (fp.neg x14))))))
(check-sat)
