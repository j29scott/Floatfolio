(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg (fp.mul RNE x16 x6)) (fp.div RNE (fp.sub RNE x15 x13) (fp.add RNE x2 x2))) (fp.neg (fp.sub RNE (fp.add RNE x16 x4) (fp.add RNE x6 x16)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x9 x7) (fp.mul RNE x6 x6)) (fp.add RNE (fp.sub RNE x1 x7) (fp.add RNE x6 x11))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x13) (fp.neg x8)) (fp.add RNE (fp.div RNE x4 x4) (fp.div RNE x16 x12))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.add RNE (fp.div RNE x1 x6) (fp.sub RNE x3 x11)) (fp.sub RNE (fp.neg x8) (fp.sub RNE x5 x15))) (fp.div RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x6 x3)) (fp.mul RNE (fp.add RNE x14 x9) (fp.mul RNE x5 x11)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.div RNE x2 x3) (fp.add RNE x2 x8))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x10 x16) (fp.add RNE x7 x4)) (fp.sub RNE (fp.sub RNE x10 x6) (fp.neg x10))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg (fp.add RNE x4 x1)) (fp.div RNE (fp.sub RNE x4 x5) (fp.div RNE x12 x5)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.div RNE x0 x5)) (fp.div RNE (fp.mul RNE x7 x15) (fp.mul RNE x11 x12))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x4 x14) (fp.div RNE x8 x16)) (fp.add RNE (fp.mul RNE x11 x10) (fp.div RNE x8 x10))) (fp.neg (fp.neg (fp.neg x8)))) (fp.mul RNE (fp.neg (fp.neg (fp.div RNE x2 x2))) (fp.add RNE (fp.neg (fp.add RNE x2 x15)) (fp.neg (fp.add RNE x9 x3))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x7) (fp.div RNE x9 x10)) (fp.div RNE (fp.sub RNE x2 x1) (fp.div RNE x13 x7))) (fp.div RNE (fp.neg (fp.mul RNE x13 x0)) (fp.neg (fp.sub RNE x7 x6)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x1) (fp.sub RNE x11 x15)) (fp.mul RNE (fp.mul RNE x2 x1) (fp.neg x14))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x2 x7)) (fp.mul RNE (fp.sub RNE x13 x2) (fp.add RNE x5 x1)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x16 x8) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x14 x4) (fp.div RNE x7 x2))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg (fp.sub RNE x16 x9))) (fp.neg (fp.add RNE (fp.div RNE x11 x15) (fp.sub RNE x5 x6)))) (fp.div RNE (fp.add RNE (fp.neg (fp.neg x11)) (fp.sub RNE (fp.mul RNE x13 x8) (fp.div RNE x2 x5))) (fp.neg (fp.div RNE (fp.add RNE x8 x6) (fp.sub RNE x5 x13))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.div RNE (fp.neg x2) (fp.mul RNE x3 x3)) (fp.neg (fp.div RNE x12 x14))) (fp.mul RNE (fp.div RNE (fp.add RNE x16 x6) (fp.sub RNE x11 x7)) (fp.sub RNE (fp.div RNE x5 x3) (fp.div RNE x10 x7)))) (fp.neg (fp.div RNE (fp.add RNE (fp.sub RNE x1 x15) (fp.neg x4)) (fp.div RNE (fp.add RNE x7 x7) (fp.mul RNE x5 x5))))))
(check-sat)
