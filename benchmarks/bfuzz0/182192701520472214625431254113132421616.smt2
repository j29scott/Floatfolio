(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE x10 x9) (fp.sub RNE x3 x6)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x10 x0))) (fp.add RNE (fp.div RNE (fp.sub RNE x2 x10) (fp.add RNE x6 x7)) (fp.neg (fp.add RNE x5 x3)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.sub RNE x3 x7) (fp.add RNE x13 x10)) (fp.mul RNE (fp.mul RNE x2 x2) (fp.mul RNE x1 x11))) (fp.neg (fp.mul RNE (fp.add RNE x2 x11) (fp.sub RNE x0 x9)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x7 x2) (fp.div RNE x4 x13))) (fp.div RNE (fp.neg (fp.sub RNE x11 x10)) (fp.add RNE (fp.add RNE x2 x13) (fp.mul RNE x1 x10)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x8 x9) (fp.add RNE x8 x1)) (fp.add RNE (fp.mul RNE x10 x13) (fp.neg x1))) (fp.neg (fp.mul RNE (fp.mul RNE x5 x8) (fp.neg x3)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.mul RNE x7 x10) (fp.div RNE x6 x13))) (fp.neg (fp.div RNE (fp.div RNE x3 x2) (fp.sub RNE x11 x13)))))
(check-sat)
