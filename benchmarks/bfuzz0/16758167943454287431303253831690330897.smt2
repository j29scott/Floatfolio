(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE x18 x14) (fp.sub RNE x2 x9)) (fp.sub RNE (fp.add RNE x9 x18) (fp.div RNE x13 x2))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x8 x12) (fp.mul RNE x2 x13)) (fp.sub RNE (fp.sub RNE x2 x11) (fp.mul RNE x9 x5))))
(assert (fp.gt (fp.add RNE (fp.add RNE x4 x1) (fp.div RNE x13 x11)) (fp.div RNE (fp.div RNE x5 x17) (fp.mul RNE x7 x18))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x13 x11) (fp.mul RNE x2 x0)) (fp.sub RNE (fp.sub RNE x16 x7) (fp.div RNE x11 x1))))
(assert (fp.gt (fp.neg (fp.mul RNE x8 x18)) (fp.div RNE (fp.add RNE x13 x18) (fp.div RNE x9 x5))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x0 x4) (fp.div RNE x5 x16)) (fp.add RNE (fp.sub RNE x5 x4) (fp.mul RNE x12 x18))))
(assert (fp.eq (fp.neg (fp.add RNE x2 x13)) (fp.neg (fp.div RNE x2 x9))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x13 x15) (fp.neg x10)) (fp.div RNE (fp.sub RNE x15 x3) (fp.div RNE x7 x3))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x12 x6) (fp.mul RNE x15 x5)) (fp.mul RNE (fp.neg x18) (fp.div RNE x12 x11))))
(assert (fp.eq (fp.neg (fp.neg x5)) (fp.neg (fp.div RNE x15 x7))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x2 x16) (fp.sub RNE x10 x5)) (fp.div RNE (fp.div RNE x0 x10) (fp.add RNE x12 x0))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x4 x4) (fp.neg x9)) (fp.mul RNE (fp.neg x13) (fp.sub RNE x15 x17))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x16) (fp.sub RNE x6 x8)) (fp.neg (fp.mul RNE x16 x2))))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x15) (fp.add RNE x16 x3)) (fp.neg (fp.sub RNE x0 x2))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x12 x13) (fp.sub RNE x0 x6)) (fp.neg (fp.neg x18))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x1 x13) (fp.add RNE x6 x14)) (fp.mul RNE (fp.div RNE x15 x7) (fp.mul RNE x10 x2))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x7 x17) (fp.mul RNE x6 x2)) (fp.add RNE (fp.mul RNE x3 x8) (fp.neg x6))))
(check-sat)
