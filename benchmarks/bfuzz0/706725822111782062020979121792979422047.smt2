(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x4 x2) (fp.sub RNE x0 x4)) (fp.add RNE (fp.sub RNE x10 x0) (fp.sub RNE x0 x1))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x8 x3) (fp.mul RNE x3 x1)) (fp.sub RNE (fp.mul RNE x12 x10) (fp.add RNE x3 x8))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x3 x4) (fp.mul RNE x6 x10)) (fp.mul RNE (fp.mul RNE x0 x14) (fp.mul RNE x6 x5))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x9 x7) (fp.mul RNE x3 x10)) (fp.sub RNE (fp.add RNE x14 x4) (fp.div RNE x11 x14))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x2 x7) (fp.div RNE x12 x4)) (fp.add RNE (fp.neg x6) (fp.sub RNE x1 x0))))
(assert (fp.gt (fp.neg (fp.mul RNE x7 x1)) (fp.neg (fp.add RNE x7 x12))))
(assert (fp.lt (fp.div RNE (fp.neg x8) (fp.sub RNE x1 x10)) (fp.mul RNE (fp.add RNE x10 x11) (fp.sub RNE x11 x9))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x8) (fp.mul RNE x13 x0)) (fp.neg (fp.add RNE x6 x11))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x13 x3) (fp.sub RNE x4 x13)) (fp.mul RNE (fp.mul RNE x11 x8) (fp.sub RNE x14 x2))))
(assert (fp.lt (fp.add RNE (fp.neg x2) (fp.add RNE x5 x0)) (fp.add RNE (fp.div RNE x4 x13) (fp.sub RNE x11 x2))))
(check-sat)
