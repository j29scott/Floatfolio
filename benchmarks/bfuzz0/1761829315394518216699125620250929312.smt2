(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x8) (fp.mul RNE x3 x12)) (fp.add RNE (fp.sub RNE x0 x0) (fp.neg x5))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x0 x4) (fp.div RNE x1 x2)) (fp.mul RNE (fp.div RNE x11 x10) (fp.sub RNE x8 x3))))
(assert (fp.geq (fp.add RNE (fp.neg x4) (fp.neg x2)) (fp.neg (fp.sub RNE x6 x4))))
(assert (fp.eq (fp.neg (fp.mul RNE x8 x0)) (fp.div RNE (fp.neg x2) (fp.sub RNE x1 x5))))
(assert (fp.eq (fp.add RNE (fp.div RNE x1 x1) (fp.neg x7)) (fp.sub RNE (fp.add RNE x5 x4) (fp.div RNE x5 x5))))
(check-sat)
