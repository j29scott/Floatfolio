(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x8) (fp.add RNE x4 x1)) (fp.div RNE (fp.add RNE x1 x8) (fp.sub RNE x1 x6))) (fp.mul RNE (fp.neg (fp.mul RNE x8 x3)) (fp.div RNE (fp.neg x6) (fp.div RNE x1 x4)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x6) (fp.neg x7)) (fp.sub RNE (fp.add RNE x9 x7) (fp.neg x6))) (fp.sub RNE (fp.neg (fp.mul RNE x5 x7)) (fp.div RNE (fp.mul RNE x5 x3) (fp.sub RNE x4 x6))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x7) (fp.add RNE x7 x2)) (fp.mul RNE (fp.mul RNE x2 x3) (fp.div RNE x1 x9))) (fp.add RNE (fp.add RNE (fp.add RNE x4 x8) (fp.add RNE x0 x6)) (fp.mul RNE (fp.div RNE x5 x0) (fp.div RNE x0 x1)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x2) (fp.add RNE x1 x3)) (fp.mul RNE (fp.sub RNE x0 x4) (fp.sub RNE x3 x7))) (fp.add RNE (fp.mul RNE (fp.sub RNE x6 x9) (fp.sub RNE x3 x4)) (fp.mul RNE (fp.neg x6) (fp.neg x2))))))
(check-sat)
