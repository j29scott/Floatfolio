(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x20 x20) (fp.neg x10)) (fp.sub RNE (fp.sub RNE x20 x14) (fp.div RNE x13 x14))) (fp.sub RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x21 x12)) (fp.neg (fp.add RNE x15 x19)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.mul RNE x14 x19) (fp.sub RNE x14 x19)) (fp.div RNE (fp.div RNE x16 x15) (fp.neg x16))) (fp.neg (fp.mul RNE (fp.add RNE x3 x22) (fp.mul RNE x15 x9)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x12 x15) (fp.sub RNE x24 x16)) (fp.sub RNE (fp.add RNE x13 x21) (fp.mul RNE x2 x12))) (fp.div RNE (fp.div RNE (fp.div RNE x5 x7) (fp.mul RNE x13 x24)) (fp.mul RNE (fp.mul RNE x0 x5) (fp.add RNE x17 x25)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.mul RNE x12 x5)) (fp.mul RNE (fp.div RNE x25 x3) (fp.sub RNE x25 x14))) (fp.mul RNE (fp.neg (fp.sub RNE x8 x23)) (fp.neg (fp.neg x24)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE x15 x5) (fp.neg x14)) (fp.neg (fp.add RNE x4 x13))) (fp.sub RNE (fp.mul RNE (fp.neg x0) (fp.add RNE x14 x5)) (fp.sub RNE (fp.mul RNE x3 x10) (fp.div RNE x21 x3)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.sub RNE x5 x10)) (fp.add RNE (fp.div RNE x15 x4) (fp.neg x12))) (fp.add RNE (fp.div RNE (fp.add RNE x5 x16) (fp.div RNE x10 x8)) (fp.neg (fp.neg x5)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE x6 x6) (fp.div RNE x4 x9))) (fp.sub RNE (fp.add RNE (fp.add RNE x18 x24) (fp.div RNE x2 x11)) (fp.neg (fp.div RNE x14 x23)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x1 x23) (fp.div RNE x10 x17)) (fp.add RNE (fp.add RNE x6 x3) (fp.sub RNE x4 x9))) (fp.mul RNE (fp.div RNE (fp.sub RNE x8 x1) (fp.neg x6)) (fp.add RNE (fp.mul RNE x25 x23) (fp.sub RNE x0 x2)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x4 x2) (fp.neg x16)) (fp.mul RNE (fp.add RNE x17 x4) (fp.div RNE x9 x10))) (fp.sub RNE (fp.sub RNE (fp.neg x19) (fp.sub RNE x21 x11)) (fp.mul RNE (fp.neg x18) (fp.neg x21)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE x6 x23) (fp.mul RNE x23 x15)) (fp.add RNE (fp.div RNE x21 x21) (fp.mul RNE x21 x5))) (fp.sub RNE (fp.neg (fp.mul RNE x25 x6)) (fp.mul RNE (fp.sub RNE x25 x2) (fp.sub RNE x5 x17)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE x4 x18) (fp.div RNE x3 x13)) (fp.div RNE (fp.div RNE x12 x22) (fp.mul RNE x3 x23))) (fp.sub RNE (fp.neg (fp.div RNE x5 x5)) (fp.div RNE (fp.neg x12) (fp.div RNE x3 x16)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE x6 x22) (fp.sub RNE x8 x6)) (fp.sub RNE (fp.mul RNE x0 x11) (fp.div RNE x4 x3))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x12 x22) (fp.div RNE x16 x5)) (fp.neg (fp.sub RNE x2 x16)))))
(check-sat)
