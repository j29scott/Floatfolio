(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.add RNE x9 x4) (fp.div RNE x24 x14)) (fp.sub RNE (fp.sub RNE x18 x18) (fp.neg x0))) (fp.div RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x12 x9)) (fp.mul RNE (fp.div RNE x22 x8) (fp.neg x22)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x0 x16) (fp.mul RNE x24 x20)) (fp.mul RNE (fp.add RNE x1 x14) (fp.div RNE x5 x18))) (fp.sub RNE (fp.div RNE (fp.sub RNE x24 x11) (fp.add RNE x12 x8)) (fp.add RNE (fp.div RNE x19 x20) (fp.add RNE x9 x10)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x12 x5) (fp.mul RNE x1 x20))) (fp.sub RNE (fp.div RNE (fp.mul RNE x0 x21) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x20 x18) (fp.div RNE x16 x12)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x18 x22) (fp.neg x2)) (fp.mul RNE (fp.sub RNE x23 x4) (fp.div RNE x4 x16))) (fp.neg (fp.neg (fp.mul RNE x2 x9)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x16) (fp.sub RNE x23 x24)) (fp.mul RNE (fp.mul RNE x18 x9) (fp.add RNE x16 x7))) (fp.neg (fp.div RNE (fp.sub RNE x1 x6) (fp.neg x14)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x6) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x7 x1) (fp.mul RNE x22 x12))) (fp.div RNE (fp.sub RNE (fp.sub RNE x24 x24) (fp.add RNE x0 x8)) (fp.mul RNE (fp.add RNE x7 x23) (fp.neg x8)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x3 x4)) (fp.sub RNE (fp.div RNE x14 x6) (fp.sub RNE x19 x10))) (fp.neg (fp.add RNE (fp.neg x22) (fp.add RNE x3 x7)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x9 x3)) (fp.neg (fp.neg x7))) (fp.sub RNE (fp.div RNE (fp.neg x21) (fp.sub RNE x14 x24)) (fp.mul RNE (fp.sub RNE x2 x10) (fp.sub RNE x22 x1)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg x20) (fp.sub RNE x1 x23))) (fp.neg (fp.div RNE (fp.neg x23) (fp.sub RNE x10 x19)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.div RNE x5 x7) (fp.mul RNE x11 x3)) (fp.add RNE (fp.sub RNE x7 x20) (fp.div RNE x17 x2))) (fp.mul RNE (fp.add RNE (fp.mul RNE x9 x18) (fp.neg x3)) (fp.div RNE (fp.neg x19) (fp.div RNE x1 x16)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x1) (fp.neg x11)) (fp.sub RNE (fp.add RNE x24 x17) (fp.mul RNE x7 x9))) (fp.add RNE (fp.neg (fp.neg x3)) (fp.neg (fp.add RNE x14 x12)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x13) (fp.mul RNE x18 x5))) (fp.neg (fp.add RNE (fp.sub RNE x0 x5) (fp.div RNE x7 x12)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.neg x14) (fp.mul RNE x24 x10)) (fp.neg (fp.mul RNE x19 x4))) (fp.sub RNE (fp.add RNE (fp.neg x24) (fp.neg x9)) (fp.mul RNE (fp.neg x5) (fp.sub RNE x5 x20)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x16 x2) (fp.div RNE x12 x14)) (fp.mul RNE (fp.neg x2) (fp.add RNE x6 x8))) (fp.add RNE (fp.mul RNE (fp.sub RNE x5 x21) (fp.sub RNE x23 x23)) (fp.add RNE (fp.sub RNE x16 x16) (fp.mul RNE x20 x11)))))
(check-sat)
