(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE x8 x4) (fp.add RNE x5 x8)) (fp.neg (fp.div RNE x4 x1))))
(assert (fp.eq (fp.div RNE (fp.div RNE x8 x6) (fp.sub RNE x2 x2)) (fp.add RNE (fp.mul RNE x1 x8) (fp.add RNE x5 x3))))
(assert (fp.lt (fp.add RNE (fp.add RNE x6 x2) (fp.mul RNE x8 x6)) (fp.add RNE (fp.mul RNE x3 x0) (fp.add RNE x3 x8))))
(assert (fp.gt (fp.neg (fp.add RNE x0 x2)) (fp.neg (fp.div RNE x3 x7))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x0 x1) (fp.neg x1)) (fp.mul RNE (fp.div RNE x3 x6) (fp.sub RNE x6 x0))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x0 x1) (fp.div RNE x2 x2)) (fp.sub RNE (fp.add RNE x4 x2) (fp.sub RNE x6 x7))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x7 x2) (fp.add RNE x5 x2)) (fp.div RNE (fp.neg x3) (fp.div RNE x1 x5))))
(assert (fp.geq (fp.neg (fp.mul RNE x0 x2)) (fp.sub RNE (fp.mul RNE x6 x2) (fp.neg x3))))
(assert (fp.geq (fp.add RNE (fp.add RNE x8 x1) (fp.neg x7)) (fp.neg (fp.mul RNE x1 x5))))
(assert (fp.eq (fp.neg (fp.add RNE x6 x8)) (fp.add RNE (fp.sub RNE x2 x4) (fp.neg x4))))
(check-sat)
