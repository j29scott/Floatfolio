(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE x2 x8)) (fp.neg (fp.div RNE x1 x8))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x1 x7) (fp.sub RNE x1 x10)) (fp.neg (fp.mul RNE x10 x1))))
(assert (fp.geq (fp.add RNE (fp.neg x6) (fp.sub RNE x9 x9)) (fp.sub RNE (fp.add RNE x7 x1) (fp.neg x4))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x4 x1) (fp.add RNE x10 x5)) (fp.neg (fp.div RNE x2 x2))))
(assert (fp.leq (fp.mul RNE (fp.neg x2) (fp.add RNE x10 x8)) (fp.sub RNE (fp.neg x9) (fp.add RNE x3 x1))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x3 x7) (fp.add RNE x4 x9)) (fp.mul RNE (fp.div RNE x8 x10) (fp.div RNE x0 x6))))
(assert (fp.leq (fp.div RNE (fp.add RNE x8 x10) (fp.div RNE x5 x9)) (fp.sub RNE (fp.sub RNE x6 x2) (fp.mul RNE x2 x2))))
(check-sat)
