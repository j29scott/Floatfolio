(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x16 x16) (fp.sub RNE x10 x14)))
(assert (fp.geq (fp.neg x16) (fp.div RNE x14 x9)))
(assert (fp.geq (fp.sub RNE x10 x23) (fp.div RNE x2 x18)))
(assert (fp.geq (fp.div RNE x3 x1) (fp.sub RNE x19 x22)))
(assert (fp.geq (fp.sub RNE x2 x11) (fp.mul RNE x19 x21)))
(assert (fp.lt (fp.sub RNE x9 x7) (fp.add RNE x13 x18)))
(assert (fp.gt (fp.neg x11) (fp.add RNE x10 x16)))
(assert (fp.leq (fp.add RNE x3 x23) (fp.add RNE x15 x6)))
(assert (fp.geq (fp.div RNE x4 x6) (fp.neg x20)))
(check-sat)
