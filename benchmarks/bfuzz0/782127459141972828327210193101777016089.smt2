(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.neg x18) (fp.mul RNE x1 x12)) (fp.add RNE (fp.div RNE x23 x15) (fp.sub RNE x8 x9))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x24 x24) (fp.add RNE x20 x15)) (fp.neg (fp.div RNE x11 x8))))
(assert (fp.leq (fp.neg (fp.add RNE x6 x7)) (fp.add RNE (fp.mul RNE x4 x17) (fp.neg x23))))
(assert (fp.eq (fp.div RNE (fp.add RNE x9 x10) (fp.mul RNE x15 x4)) (fp.neg (fp.add RNE x21 x17))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x24 x24) (fp.add RNE x11 x18)) (fp.add RNE (fp.add RNE x18 x17) (fp.div RNE x20 x6))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x0 x13) (fp.mul RNE x5 x16)) (fp.mul RNE (fp.mul RNE x19 x6) (fp.div RNE x15 x23))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x7 x6) (fp.mul RNE x0 x6)) (fp.sub RNE (fp.neg x5) (fp.div RNE x8 x24))))
(assert (fp.eq (fp.div RNE (fp.neg x4) (fp.add RNE x22 x13)) (fp.neg (fp.add RNE x17 x10))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x3 x9) (fp.mul RNE x1 x20)) (fp.add RNE (fp.add RNE x21 x20) (fp.neg x5))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x7 x19) (fp.neg x2)) (fp.add RNE (fp.neg x7) (fp.mul RNE x23 x6))))
(assert (fp.leq (fp.neg (fp.mul RNE x17 x18)) (fp.div RNE (fp.div RNE x9 x24) (fp.div RNE x17 x8))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x7 x1) (fp.mul RNE x21 x19)) (fp.mul RNE (fp.neg x19) (fp.div RNE x14 x8))))
(assert (fp.gt (fp.neg (fp.div RNE x21 x21)) (fp.mul RNE (fp.mul RNE x3 x11) (fp.sub RNE x2 x16))))
(assert (fp.geq (fp.add RNE (fp.add RNE x17 x5) (fp.sub RNE x8 x16)) (fp.add RNE (fp.div RNE x0 x1) (fp.div RNE x18 x19))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x21 x21) (fp.mul RNE x16 x6)) (fp.neg (fp.neg x22))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x4 x13) (fp.add RNE x21 x19)) (fp.sub RNE (fp.mul RNE x11 x4) (fp.div RNE x3 x24))))
(check-sat)
