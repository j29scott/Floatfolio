(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE x8 x9) (fp.div RNE x7 x11)))
(assert (fp.gt (fp.add RNE x0 x1) (fp.add RNE x12 x3)))
(assert (fp.lt (fp.neg x9) (fp.div RNE x15 x6)))
(assert (fp.leq (fp.div RNE x11 x20) (fp.div RNE x6 x1)))
(assert (fp.leq (fp.div RNE x1 x19) (fp.neg x19)))
(assert (fp.lt (fp.add RNE x6 x14) (fp.sub RNE x0 x8)))
(assert (fp.gt (fp.add RNE x20 x13) (fp.neg x17)))
(assert (fp.lt (fp.mul RNE x2 x10) (fp.sub RNE x19 x5)))
(assert (fp.lt (fp.neg x2) (fp.add RNE x1 x13)))
(assert (fp.lt (fp.sub RNE x15 x15) (fp.mul RNE x6 x13)))
(assert (fp.lt (fp.mul RNE x1 x0) (fp.div RNE x15 x1)))
(assert (fp.leq (fp.mul RNE x18 x19) (fp.div RNE x20 x14)))
(assert (fp.eq (fp.neg x9) (fp.div RNE x18 x12)))
(assert (fp.geq (fp.sub RNE x17 x16) (fp.add RNE x17 x13)))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x6 x8)))
(assert (fp.geq (fp.add RNE x11 x5) (fp.mul RNE x4 x0)))
(assert (fp.leq (fp.sub RNE x17 x0) (fp.add RNE x16 x13)))
(assert (fp.geq (fp.mul RNE x19 x11) (fp.add RNE x3 x1)))
(check-sat)
