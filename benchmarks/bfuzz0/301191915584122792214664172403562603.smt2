(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.sub RNE x7 x6)) (fp.mul RNE (fp.div RNE x17 x12) (fp.div RNE x6 x12))) (fp.sub RNE (fp.div RNE (fp.add RNE x8 x0) (fp.neg x11)) (fp.neg (fp.mul RNE x6 x10)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x9))) (fp.add RNE (fp.sub RNE (fp.mul RNE x4 x10) (fp.add RNE x16 x5)) (fp.neg (fp.sub RNE x11 x11)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x17 x1) (fp.mul RNE x2 x3))) (fp.neg (fp.div RNE (fp.neg x11) (fp.div RNE x14 x15)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x12 x2) (fp.mul RNE x0 x14)) (fp.neg (fp.add RNE x5 x11))) (fp.div RNE (fp.div RNE (fp.neg x7) (fp.sub RNE x8 x14)) (fp.div RNE (fp.sub RNE x7 x0) (fp.add RNE x0 x8)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x0 x5) (fp.sub RNE x15 x9)) (fp.add RNE (fp.mul RNE x6 x3) (fp.add RNE x0 x10))) (fp.div RNE (fp.div RNE (fp.div RNE x3 x15) (fp.mul RNE x1 x2)) (fp.sub RNE (fp.sub RNE x13 x4) (fp.sub RNE x7 x1)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x0 x14) (fp.add RNE x16 x8)) (fp.add RNE (fp.neg x17) (fp.neg x12))) (fp.add RNE (fp.add RNE (fp.sub RNE x13 x15) (fp.div RNE x0 x11)) (fp.div RNE (fp.neg x4) (fp.div RNE x15 x11)))))
(check-sat)
