(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.div RNE x2 x13)) (fp.add RNE (fp.sub RNE x18 x15) (fp.neg x15))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x2 x0) (fp.add RNE x3 x5)) (fp.div RNE (fp.mul RNE x18 x2) (fp.div RNE x11 x6))))
(assert (fp.gt (fp.div RNE (fp.add RNE x17 x18) (fp.mul RNE x9 x11)) (fp.neg (fp.neg x2))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x0 x16) (fp.div RNE x14 x14)) (fp.sub RNE (fp.mul RNE x12 x11) (fp.div RNE x5 x7))))
(assert (fp.leq (fp.add RNE (fp.div RNE x17 x7) (fp.add RNE x7 x11)) (fp.add RNE (fp.neg x6) (fp.sub RNE x3 x18))))
(assert (fp.lt (fp.sub RNE (fp.neg x14) (fp.neg x5)) (fp.neg (fp.add RNE x13 x8))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x11 x5) (fp.div RNE x17 x16)) (fp.div RNE (fp.sub RNE x4 x6) (fp.mul RNE x15 x18))))
(assert (fp.lt (fp.add RNE (fp.div RNE x7 x1) (fp.add RNE x4 x14)) (fp.neg (fp.neg x9))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x7 x8) (fp.add RNE x16 x11)) (fp.mul RNE (fp.div RNE x14 x7) (fp.div RNE x5 x2))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x17 x4) (fp.sub RNE x8 x9)) (fp.neg (fp.add RNE x12 x11))))
(assert (fp.gt (fp.neg (fp.add RNE x15 x15)) (fp.neg (fp.div RNE x4 x15))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x14 x15) (fp.div RNE x2 x9)) (fp.div RNE (fp.sub RNE x14 x9) (fp.neg x18))))
(assert (fp.geq (fp.neg (fp.neg x14)) (fp.sub RNE (fp.neg x3) (fp.neg x5))))
(check-sat)
