(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.div RNE x9 x11) (fp.div RNE x7 x7)) (fp.mul RNE (fp.add RNE x10 x7) (fp.div RNE x5 x10))))
(assert (fp.eq (fp.div RNE (fp.add RNE x0 x2) (fp.neg x0)) (fp.add RNE (fp.mul RNE x14 x2) (fp.sub RNE x6 x12))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x0 x8) (fp.div RNE x10 x11)) (fp.div RNE (fp.sub RNE x14 x12) (fp.neg x5))))
(assert (fp.eq (fp.neg (fp.neg x0)) (fp.neg (fp.div RNE x8 x0))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x14 x14) (fp.add RNE x10 x8)) (fp.add RNE (fp.sub RNE x7 x9) (fp.mul RNE x12 x14))))
(assert (fp.eq (fp.add RNE (fp.div RNE x12 x3) (fp.add RNE x14 x0)) (fp.sub RNE (fp.sub RNE x2 x13) (fp.neg x3))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x3 x8) (fp.mul RNE x1 x0)) (fp.div RNE (fp.sub RNE x2 x7) (fp.add RNE x14 x8))))
(assert (fp.lt (fp.div RNE (fp.neg x14) (fp.sub RNE x8 x0)) (fp.sub RNE (fp.add RNE x2 x4) (fp.mul RNE x4 x6))))
(assert (fp.geq (fp.neg (fp.neg x14)) (fp.neg (fp.div RNE x4 x13))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x12 x6) (fp.add RNE x1 x3)) (fp.neg (fp.sub RNE x10 x9))))
(assert (fp.leq (fp.neg (fp.neg x5)) (fp.add RNE (fp.neg x3) (fp.div RNE x4 x14))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x9 x7) (fp.sub RNE x11 x1)) (fp.div RNE (fp.add RNE x9 x7) (fp.neg x14))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x3 x0) (fp.sub RNE x13 x13)) (fp.add RNE (fp.sub RNE x5 x14) (fp.sub RNE x10 x4))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x4 x13) (fp.neg x8)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x10 x9))))
(assert (fp.eq (fp.div RNE (fp.div RNE x14 x1) (fp.neg x14)) (fp.neg (fp.neg x13))))
(assert (fp.lt (fp.add RNE (fp.neg x4) (fp.add RNE x0 x1)) (fp.mul RNE (fp.div RNE x9 x1) (fp.add RNE x3 x3))))
(assert (fp.geq (fp.sub RNE (fp.neg x14) (fp.add RNE x14 x2)) (fp.div RNE (fp.div RNE x2 x0) (fp.add RNE x9 x9))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x5 x0) (fp.mul RNE x11 x9)) (fp.neg (fp.neg x11))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x5 x9) (fp.div RNE x10 x11)) (fp.add RNE (fp.mul RNE x6 x11) (fp.sub RNE x2 x12))))
(assert (fp.gt (fp.neg (fp.neg x2)) (fp.mul RNE (fp.sub RNE x1 x13) (fp.sub RNE x8 x14))))
(check-sat)
