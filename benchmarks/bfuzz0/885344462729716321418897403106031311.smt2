(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x5) (fp.neg x9)))
(assert (fp.geq (fp.neg x7) (fp.sub RNE x2 x2)))
(assert (fp.leq (fp.mul RNE x6 x0) (fp.div RNE x4 x9)))
(assert (fp.eq (fp.sub RNE x3 x1) (fp.sub RNE x0 x9)))
(assert (fp.lt (fp.mul RNE x6 x3) (fp.add RNE x0 x8)))
(assert (fp.eq (fp.mul RNE x1 x0) (fp.neg x2)))
(assert (fp.lt (fp.div RNE x4 x4) (fp.sub RNE x7 x7)))
(assert (fp.gt (fp.neg x2) (fp.neg x7)))
(assert (fp.geq (fp.div RNE x4 x2) (fp.add RNE x4 x2)))
(assert (fp.geq (fp.neg x8) (fp.add RNE x7 x10)))
(assert (fp.geq (fp.mul RNE x8 x8) (fp.mul RNE x7 x7)))
(check-sat)
