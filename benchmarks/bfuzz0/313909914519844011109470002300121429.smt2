(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x6) (fp.mul RNE x9 x9)) (fp.mul RNE (fp.add RNE x9 x5) (fp.neg x4))) (fp.neg (fp.div RNE (fp.mul RNE x12 x8) (fp.neg x18)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x7 x10) (fp.add RNE x19 x0)) (fp.mul RNE (fp.add RNE x11 x10) (fp.mul RNE x0 x16))) (fp.div RNE (fp.neg (fp.neg x17)) (fp.neg (fp.mul RNE x3 x9)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x19 x5) (fp.add RNE x4 x16)) (fp.sub RNE (fp.add RNE x18 x18) (fp.mul RNE x13 x2))) (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x5 x13)) (fp.sub RNE (fp.neg x14) (fp.div RNE x7 x6)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x17) (fp.sub RNE x19 x4)) (fp.neg (fp.mul RNE x11 x16))) (fp.div RNE (fp.div RNE (fp.add RNE x14 x3) (fp.mul RNE x6 x10)) (fp.neg (fp.mul RNE x19 x1)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x18 x6) (fp.sub RNE x9 x9)) (fp.add RNE (fp.sub RNE x0 x15) (fp.add RNE x15 x14))) (fp.add RNE (fp.sub RNE (fp.sub RNE x19 x12) (fp.sub RNE x5 x1)) (fp.div RNE (fp.mul RNE x10 x12) (fp.mul RNE x11 x8)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x19 x7)) (fp.sub RNE (fp.div RNE x4 x5) (fp.div RNE x15 x0))) (fp.neg (fp.add RNE (fp.neg x13) (fp.add RNE x19 x16)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.mul RNE x7 x3) (fp.div RNE x14 x7)) (fp.div RNE (fp.neg x18) (fp.add RNE x5 x12))) (fp.mul RNE (fp.neg (fp.div RNE x7 x15)) (fp.sub RNE (fp.sub RNE x0 x6) (fp.mul RNE x0 x12)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x13 x17)) (fp.neg (fp.div RNE x0 x17))) (fp.sub RNE (fp.sub RNE (fp.add RNE x9 x2) (fp.neg x15)) (fp.sub RNE (fp.add RNE x2 x14) (fp.div RNE x19 x19)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.mul RNE x7 x19) (fp.add RNE x17 x1)) (fp.div RNE (fp.sub RNE x6 x2) (fp.neg x17))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x5) (fp.mul RNE x19 x2)) (fp.add RNE (fp.add RNE x2 x7) (fp.add RNE x6 x3)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE x4 x18) (fp.div RNE x8 x15))) (fp.div RNE (fp.neg (fp.add RNE x17 x7)) (fp.neg (fp.add RNE x13 x10)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x15) (fp.sub RNE x19 x15)) (fp.neg (fp.div RNE x17 x8))) (fp.neg (fp.div RNE (fp.mul RNE x18 x16) (fp.add RNE x4 x16)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x3 x3) (fp.neg x10)) (fp.sub RNE (fp.add RNE x6 x10) (fp.add RNE x4 x4))) (fp.div RNE (fp.neg (fp.sub RNE x2 x11)) (fp.div RNE (fp.mul RNE x14 x11) (fp.mul RNE x9 x9)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.mul RNE x4 x10)) (fp.sub RNE (fp.add RNE x19 x4) (fp.add RNE x10 x19))) (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x19) (fp.neg x4)) (fp.neg (fp.neg x18)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x5) (fp.div RNE x19 x11)) (fp.sub RNE (fp.div RNE x8 x6) (fp.neg x7))) (fp.add RNE (fp.div RNE (fp.sub RNE x14 x8) (fp.sub RNE x19 x14)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x7 x12)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x0)) (fp.neg (fp.add RNE x4 x11))) (fp.sub RNE (fp.mul RNE (fp.neg x18) (fp.add RNE x0 x12)) (fp.neg (fp.add RNE x9 x16)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.add RNE x18 x7) (fp.add RNE x13 x7)) (fp.div RNE (fp.div RNE x12 x12) (fp.mul RNE x1 x12))) (fp.add RNE (fp.sub RNE (fp.sub RNE x13 x10) (fp.mul RNE x0 x1)) (fp.neg (fp.div RNE x19 x12)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x7 x0) (fp.sub RNE x5 x13)) (fp.neg (fp.add RNE x14 x18))) (fp.sub RNE (fp.mul RNE (fp.add RNE x11 x1) (fp.add RNE x7 x12)) (fp.mul RNE (fp.sub RNE x19 x9) (fp.neg x18)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x15) (fp.div RNE x3 x17)) (fp.div RNE (fp.div RNE x9 x13) (fp.sub RNE x2 x7))) (fp.mul RNE (fp.add RNE (fp.sub RNE x19 x9) (fp.div RNE x5 x16)) (fp.sub RNE (fp.sub RNE x6 x13) (fp.div RNE x13 x19)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x5 x18) (fp.add RNE x14 x8))) (fp.sub RNE (fp.div RNE (fp.add RNE x7 x13) (fp.mul RNE x18 x3)) (fp.neg (fp.add RNE x11 x13)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x6 x6) (fp.neg x19)) (fp.sub RNE (fp.neg x9) (fp.mul RNE x6 x4))) (fp.mul RNE (fp.neg (fp.div RNE x18 x16)) (fp.add RNE (fp.neg x16) (fp.div RNE x16 x6)))))
(check-sat)
