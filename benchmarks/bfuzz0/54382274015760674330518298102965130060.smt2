(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE (fp.div RNE x3 x10) (fp.neg x10)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.add RNE x0 x11) (fp.add RNE x5 x2))) (fp.div RNE (fp.mul RNE (fp.div RNE x2 x0) (fp.div RNE x1 x2)) (fp.mul RNE (fp.sub RNE x10 x7) (fp.div RNE x11 x10))))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE (fp.add RNE x12 x3) (fp.div RNE x11 x1)) (fp.sub RNE (fp.neg x13) (fp.mul RNE x3 x5))) (fp.mul RNE (fp.sub RNE (fp.add RNE x13 x3) (fp.div RNE x3 x9)) (fp.add RNE (fp.mul RNE x4 x0) (fp.sub RNE x13 x13)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x10 x10) (fp.div RNE x0 x4)) (fp.neg (fp.sub RNE x2 x5))) (fp.sub RNE (fp.add RNE (fp.sub RNE x10 x13) (fp.neg x0)) (fp.div RNE (fp.div RNE x5 x4) (fp.mul RNE x6 x11))))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE (fp.neg x4) (fp.div RNE x10 x10)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x10) (fp.sub RNE x13 x6)) (fp.sub RNE (fp.div RNE x2 x3) (fp.neg x1))) (fp.sub RNE (fp.add RNE (fp.add RNE x13 x7) (fp.div RNE x4 x9)) (fp.mul RNE (fp.neg x12) (fp.mul RNE x12 x4))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x0) (fp.div RNE x7 x3)) (fp.mul RNE (fp.neg x10) (fp.sub RNE x2 x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x13 x0) (fp.sub RNE x9 x4)) (fp.sub RNE (fp.neg x13) (fp.div RNE x11 x0)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.mul RNE x7 x5) (fp.div RNE x0 x13)) (fp.sub RNE (fp.mul RNE x13 x4) (fp.div RNE x5 x5))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE (fp.sub RNE x4 x3) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x10 x10) (fp.div RNE x13 x12))) (fp.div RNE (fp.sub RNE (fp.mul RNE x0 x10) (fp.mul RNE x7 x11)) (fp.sub RNE (fp.mul RNE x2 x7) (fp.mul RNE x3 x13)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x10) (fp.neg x11)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x6 x4))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x6) (fp.mul RNE x1 x9)) (fp.sub RNE (fp.div RNE x5 x9) (fp.neg x1))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.neg (fp.neg x2)) (fp.mul RNE (fp.mul RNE x5 x8) (fp.add RNE x2 x0)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.mul RNE x9 x5)) (fp.sub RNE (fp.neg x7) (fp.neg x1))) (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x11) (fp.neg x7)) (fp.add RNE (fp.neg x4) (fp.neg x8))))))
(check-sat)
