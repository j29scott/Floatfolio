(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.add RNE (fp.sub RNE x16 x2) (fp.div RNE x3 x19))))
(assert (fp.gt (fp.neg (fp.neg x15)) (fp.add RNE (fp.div RNE x18 x16) (fp.add RNE x19 x2))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x8 x18) (fp.add RNE x7 x5)) (fp.sub RNE (fp.neg x17) (fp.mul RNE x11 x0))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x0 x19) (fp.neg x1)) (fp.mul RNE (fp.div RNE x6 x19) (fp.add RNE x7 x6))))
(assert (fp.eq (fp.sub RNE (fp.neg x0) (fp.div RNE x14 x10)) (fp.neg (fp.neg x8))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x0 x2) (fp.mul RNE x11 x20)) (fp.add RNE (fp.mul RNE x2 x11) (fp.neg x0))))
(assert (fp.gt (fp.neg (fp.mul RNE x1 x20)) (fp.add RNE (fp.add RNE x3 x6) (fp.neg x3))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x3 x7) (fp.div RNE x7 x16)) (fp.mul RNE (fp.neg x15) (fp.add RNE x9 x20))))
(assert (fp.lt (fp.neg (fp.mul RNE x7 x12)) (fp.sub RNE (fp.mul RNE x4 x9) (fp.div RNE x2 x5))))
(assert (fp.leq (fp.div RNE (fp.add RNE x4 x19) (fp.sub RNE x0 x12)) (fp.sub RNE (fp.add RNE x2 x17) (fp.div RNE x1 x17))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x15 x7) (fp.mul RNE x11 x14)) (fp.add RNE (fp.add RNE x10 x16) (fp.sub RNE x11 x4))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x16 x6) (fp.div RNE x8 x20)) (fp.div RNE (fp.mul RNE x18 x11) (fp.mul RNE x16 x0))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x1 x4) (fp.add RNE x9 x11)) (fp.add RNE (fp.div RNE x11 x17) (fp.mul RNE x12 x3))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x16 x7) (fp.sub RNE x8 x18)) (fp.mul RNE (fp.sub RNE x13 x5) (fp.neg x13))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x2 x6) (fp.sub RNE x18 x17)) (fp.div RNE (fp.sub RNE x17 x19) (fp.add RNE x12 x14))))
(check-sat)
