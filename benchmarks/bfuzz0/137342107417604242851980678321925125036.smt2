(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.div RNE x0 x4) (fp.sub RNE x5 x7)) (fp.neg (fp.sub RNE x4 x0))))
(assert (fp.gt (fp.add RNE (fp.div RNE x9 x1) (fp.neg x9)) (fp.neg (fp.div RNE x10 x3))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x10 x4) (fp.mul RNE x1 x9)) (fp.add RNE (fp.add RNE x1 x2) (fp.add RNE x6 x8))))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x7) (fp.neg x4)) (fp.mul RNE (fp.div RNE x10 x4) (fp.neg x9))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x0 x1) (fp.add RNE x0 x8)) (fp.sub RNE (fp.sub RNE x10 x0) (fp.div RNE x6 x10))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x0 x8) (fp.div RNE x3 x3)) (fp.sub RNE (fp.sub RNE x9 x6) (fp.neg x8))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x0 x10) (fp.neg x8)) (fp.div RNE (fp.neg x1) (fp.div RNE x7 x10))))
(assert (fp.gt (fp.neg (fp.mul RNE x8 x5)) (fp.sub RNE (fp.sub RNE x0 x3) (fp.mul RNE x9 x10))))
(check-sat)
