(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.add RNE x7 x5) (fp.mul RNE x4 x3)) (fp.add RNE (fp.mul RNE x2 x2) (fp.mul RNE x0 x4))))
(assert (fp.gt (fp.neg (fp.mul RNE x7 x7)) (fp.neg (fp.add RNE x1 x9))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x6 x9) (fp.sub RNE x5 x7)) (fp.add RNE (fp.add RNE x8 x1) (fp.add RNE x9 x9))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x4 x2) (fp.sub RNE x8 x6)) (fp.div RNE (fp.sub RNE x0 x2) (fp.mul RNE x9 x9))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x1) (fp.add RNE x6 x7)) (fp.add RNE (fp.mul RNE x9 x2) (fp.mul RNE x6 x9))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x7 x6) (fp.add RNE x0 x7)) (fp.div RNE (fp.div RNE x1 x1) (fp.neg x8))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x9 x8) (fp.add RNE x2 x4)) (fp.neg (fp.sub RNE x6 x6))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x5 x1) (fp.div RNE x6 x9)) (fp.add RNE (fp.sub RNE x0 x6) (fp.mul RNE x3 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x8 x2)) (fp.sub RNE (fp.neg x7) (fp.sub RNE x5 x2))))
(check-sat)
