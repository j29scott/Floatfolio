(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE (fp.neg x6) (fp.neg x13)) (fp.add RNE (fp.sub RNE x21 x6) (fp.div RNE x11 x20)))) (fp.add RNE (fp.add RNE (fp.neg (fp.neg x1)) (fp.mul RNE (fp.mul RNE x19 x6) (fp.sub RNE x2 x2))) (fp.mul RNE (fp.add RNE (fp.sub RNE x21 x3) (fp.div RNE x7 x9)) (fp.add RNE (fp.add RNE x13 x9) (fp.add RNE x3 x21))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE (fp.add RNE x12 x2) (fp.mul RNE x7 x3)) (fp.mul RNE (fp.neg x5) (fp.neg x17)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.neg x8) (fp.div RNE x15 x7)) (fp.div RNE (fp.add RNE x22 x2) (fp.add RNE x3 x2))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE (fp.div RNE x12 x14) (fp.sub RNE x8 x1)) (fp.neg (fp.sub RNE x17 x13)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.sub RNE x4 x1) (fp.sub RNE x13 x15))) (fp.mul RNE (fp.mul RNE (fp.div RNE x19 x18) (fp.neg x17)) (fp.sub RNE (fp.neg x1) (fp.neg x9))))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.neg (fp.sub RNE x22 x18)) (fp.sub RNE (fp.mul RNE x17 x20) (fp.add RNE x13 x22))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x7 x18) (fp.add RNE x19 x9)) (fp.neg (fp.div RNE x1 x19)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x13 x10) (fp.add RNE x18 x15))) (fp.sub RNE (fp.div RNE (fp.neg x2) (fp.div RNE x11 x8)) (fp.mul RNE (fp.neg x11) (fp.add RNE x10 x20))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x3) (fp.mul RNE x3 x8)) (fp.neg (fp.sub RNE x21 x0)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.div RNE x13 x10)) (fp.mul RNE (fp.neg x10) (fp.sub RNE x9 x18))) (fp.mul RNE (fp.sub RNE (fp.neg x6) (fp.neg x17)) (fp.sub RNE (fp.sub RNE x8 x17) (fp.neg x16))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg (fp.neg x21))) (fp.add RNE (fp.add RNE (fp.add RNE x12 x19) (fp.sub RNE x8 x3)) (fp.add RNE (fp.mul RNE x4 x2) (fp.sub RNE x10 x12)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x14 x15) (fp.mul RNE x22 x19)) (fp.neg (fp.add RNE x6 x21))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x18 x15) (fp.mul RNE x20 x12)) (fp.mul RNE (fp.mul RNE x9 x9) (fp.add RNE x21 x13))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE (fp.div RNE x16 x6) (fp.sub RNE x5 x17)) (fp.div RNE (fp.add RNE x5 x7) (fp.neg x2)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.sub RNE x11 x14) (fp.neg x1))) (fp.add RNE (fp.neg (fp.sub RNE x3 x15)) (fp.div RNE (fp.mul RNE x1 x6) (fp.add RNE x3 x2))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.neg (fp.mul RNE x9 x8)) (fp.neg (fp.div RNE x3 x1))) (fp.sub RNE (fp.neg (fp.sub RNE x16 x11)) (fp.mul RNE (fp.sub RNE x16 x21) (fp.neg x22)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.add RNE x5 x15) (fp.div RNE x7 x3)) (fp.div RNE (fp.add RNE x2 x15) (fp.sub RNE x12 x14))) (fp.div RNE (fp.neg (fp.div RNE x9 x14)) (fp.sub RNE (fp.neg x11) (fp.neg x11))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x12)) (fp.add RNE (fp.neg x20) (fp.div RNE x20 x21))) (fp.sub RNE (fp.neg (fp.neg x2)) (fp.sub RNE (fp.neg x8) (fp.neg x2)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.neg x19) (fp.neg x16)) (fp.add RNE (fp.mul RNE x18 x18) (fp.mul RNE x19 x17))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg (fp.neg x20)) (fp.mul RNE (fp.neg x5) (fp.neg x2)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.sub RNE x8 x21) (fp.sub RNE x14 x17))) (fp.div RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x17 x10)) (fp.add RNE (fp.mul RNE x8 x1) (fp.sub RNE x11 x6))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x9 x3)) (fp.div RNE (fp.sub RNE x21 x21) (fp.mul RNE x3 x4))) (fp.sub RNE (fp.add RNE (fp.mul RNE x2 x17) (fp.mul RNE x8 x1)) (fp.sub RNE (fp.div RNE x21 x21) (fp.div RNE x16 x16)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x7 x12) (fp.div RNE x1 x9)) (fp.sub RNE (fp.mul RNE x12 x15) (fp.mul RNE x13 x21))) (fp.neg (fp.add RNE (fp.neg x7) (fp.sub RNE x10 x8))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE (fp.sub RNE x7 x4) (fp.neg x20)) (fp.add RNE (fp.sub RNE x22 x17) (fp.mul RNE x6 x14)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x11 x22) (fp.add RNE x9 x9)) (fp.sub RNE (fp.mul RNE x15 x20) (fp.sub RNE x5 x12))) (fp.add RNE (fp.add RNE (fp.sub RNE x18 x12) (fp.div RNE x2 x8)) (fp.mul RNE (fp.sub RNE x5 x8) (fp.neg x0))))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE (fp.neg x20) (fp.neg x15)) (fp.neg (fp.add RNE x4 x20))) (fp.neg (fp.add RNE (fp.sub RNE x0 x22) (fp.sub RNE x2 x2)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x3 x0) (fp.add RNE x7 x9)) (fp.neg (fp.div RNE x0 x15))) (fp.div RNE (fp.sub RNE (fp.neg x14) (fp.sub RNE x7 x9)) (fp.add RNE (fp.sub RNE x9 x14) (fp.neg x1))))))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE (fp.neg x15) (fp.sub RNE x20 x18)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.neg x10) (fp.mul RNE x22 x5))) (fp.neg (fp.add RNE (fp.mul RNE x20 x14) (fp.sub RNE x19 x19))))))
(check-sat)
