(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE x16 x9) (fp.add RNE x13 x9)) (fp.add RNE (fp.sub RNE x12 x16) (fp.mul RNE x12 x10))) (fp.div RNE (fp.add RNE (fp.add RNE x8 x0) (fp.sub RNE x15 x13)) (fp.sub RNE (fp.sub RNE x8 x10) (fp.mul RNE x2 x13)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x11 x13) (fp.div RNE x12 x15)) (fp.mul RNE (fp.neg x12) (fp.add RNE x2 x4))) (fp.div RNE (fp.add RNE (fp.neg x10) (fp.add RNE x0 x4)) (fp.neg (fp.div RNE x4 x4)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.neg x3)) (fp.mul RNE (fp.neg x0) (fp.div RNE x12 x10))) (fp.neg (fp.mul RNE (fp.sub RNE x7 x11) (fp.div RNE x3 x6)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x10 x10)) (fp.div RNE (fp.sub RNE x4 x6) (fp.sub RNE x8 x10))) (fp.div RNE (fp.mul RNE (fp.add RNE x9 x10) (fp.mul RNE x11 x16)) (fp.neg (fp.div RNE x16 x7)))))
(check-sat)
