(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE x17 x20)) (fp.add RNE (fp.add RNE x5 x7) (fp.sub RNE x22 x0))))
(assert (fp.eq (fp.neg (fp.div RNE x16 x14)) (fp.mul RNE (fp.div RNE x7 x2) (fp.div RNE x9 x13))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x5 x0) (fp.div RNE x1 x11)) (fp.mul RNE (fp.mul RNE x15 x8) (fp.add RNE x18 x19))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x22 x16) (fp.add RNE x22 x7)) (fp.add RNE (fp.mul RNE x13 x0) (fp.sub RNE x15 x19))))
(assert (fp.geq (fp.add RNE (fp.add RNE x0 x8) (fp.neg x2)) (fp.add RNE (fp.sub RNE x7 x11) (fp.sub RNE x22 x14))))
(assert (fp.geq (fp.add RNE (fp.neg x12) (fp.mul RNE x21 x3)) (fp.sub RNE (fp.neg x4) (fp.div RNE x0 x8))))
(assert (fp.lt (fp.div RNE (fp.add RNE x12 x12) (fp.div RNE x20 x1)) (fp.div RNE (fp.add RNE x7 x10) (fp.neg x18))))
(assert (fp.geq (fp.neg (fp.neg x2)) (fp.neg (fp.add RNE x11 x12))))
(assert (fp.eq (fp.neg (fp.add RNE x10 x21)) (fp.sub RNE (fp.add RNE x2 x7) (fp.add RNE x16 x19))))
(assert (fp.lt (fp.sub RNE (fp.neg x5) (fp.div RNE x2 x0)) (fp.sub RNE (fp.div RNE x15 x11) (fp.div RNE x13 x19))))
(assert (fp.eq (fp.div RNE (fp.div RNE x17 x17) (fp.sub RNE x9 x3)) (fp.add RNE (fp.add RNE x8 x10) (fp.sub RNE x4 x3))))
(assert (fp.gt (fp.mul RNE (fp.neg x7) (fp.div RNE x0 x17)) (fp.add RNE (fp.mul RNE x13 x19) (fp.sub RNE x2 x1))))
(assert (fp.lt (fp.add RNE (fp.div RNE x18 x13) (fp.neg x3)) (fp.div RNE (fp.sub RNE x19 x10) (fp.add RNE x16 x7))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x1 x15) (fp.mul RNE x14 x7)) (fp.mul RNE (fp.mul RNE x5 x10) (fp.neg x0))))
(assert (fp.leq (fp.sub RNE (fp.neg x2) (fp.mul RNE x12 x3)) (fp.div RNE (fp.mul RNE x12 x10) (fp.mul RNE x9 x10))))
(assert (fp.geq (fp.add RNE (fp.div RNE x13 x1) (fp.sub RNE x11 x12)) (fp.neg (fp.add RNE x13 x15))))
(assert (fp.lt (fp.neg (fp.add RNE x20 x19)) (fp.neg (fp.sub RNE x15 x18))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x13 x5) (fp.add RNE x8 x21)) (fp.div RNE (fp.neg x17) (fp.mul RNE x17 x0))))
(assert (fp.gt (fp.neg (fp.neg x3)) (fp.sub RNE (fp.sub RNE x7 x9) (fp.neg x12))))
(check-sat)
