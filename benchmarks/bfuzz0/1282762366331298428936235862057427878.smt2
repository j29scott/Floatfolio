(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.mul RNE x2 x11) (fp.neg x9)) (fp.add RNE (fp.mul RNE x3 x4) (fp.add RNE x4 x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x10 x10) (fp.add RNE x1 x3)) (fp.mul RNE (fp.neg x4) (fp.add RNE x3 x0))))
(assert (fp.geq (fp.sub RNE (fp.neg x11) (fp.sub RNE x11 x2)) (fp.neg (fp.neg x9))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x2 x9) (fp.add RNE x0 x11)) (fp.sub RNE (fp.div RNE x3 x8) (fp.add RNE x5 x9))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x1 x7) (fp.mul RNE x2 x5)) (fp.neg (fp.mul RNE x4 x10))))
(assert (fp.leq (fp.neg (fp.sub RNE x9 x5)) (fp.sub RNE (fp.add RNE x9 x7) (fp.neg x10))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x6 x1) (fp.neg x2)) (fp.sub RNE (fp.neg x4) (fp.add RNE x5 x1))))
(check-sat)
