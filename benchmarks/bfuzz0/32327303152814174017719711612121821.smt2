(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x1 x8) (fp.sub RNE x6 x8)))
(assert (fp.gt (fp.neg x3) (fp.mul RNE x6 x8)))
(assert (fp.geq (fp.add RNE x6 x4) (fp.neg x8)))
(assert (fp.leq (fp.div RNE x7 x1) (fp.sub RNE x0 x5)))
(assert (fp.gt (fp.sub RNE x2 x7) (fp.add RNE x8 x1)))
(assert (fp.geq (fp.neg x3) (fp.add RNE x5 x3)))
(assert (fp.geq (fp.add RNE x3 x2) (fp.sub RNE x1 x6)))
(assert (fp.eq (fp.mul RNE x5 x0) (fp.sub RNE x9 x8)))
(assert (fp.leq (fp.add RNE x1 x0) (fp.mul RNE x1 x5)))
(assert (fp.eq (fp.add RNE x9 x8) (fp.neg x4)))
(assert (fp.gt (fp.add RNE x0 x9) (fp.add RNE x8 x3)))
(assert (fp.eq (fp.neg x2) (fp.neg x9)))
(assert (fp.leq (fp.div RNE x7 x3) (fp.div RNE x1 x0)))
(assert (fp.lt (fp.neg x10) (fp.add RNE x10 x9)))
(assert (fp.gt (fp.mul RNE x5 x7) (fp.div RNE x6 x1)))
(check-sat)
