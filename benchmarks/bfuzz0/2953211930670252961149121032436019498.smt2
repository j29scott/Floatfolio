(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE x9 x14) (fp.add RNE x12 x0)))
(assert (fp.eq (fp.neg x14) (fp.neg x12)))
(assert (fp.eq (fp.sub RNE x7 x6) (fp.neg x10)))
(assert (fp.eq (fp.mul RNE x2 x6) (fp.add RNE x0 x14)))
(assert (fp.eq (fp.sub RNE x3 x6) (fp.div RNE x1 x8)))
(assert (fp.geq (fp.add RNE x2 x9) (fp.add RNE x11 x2)))
(assert (fp.geq (fp.neg x13) (fp.add RNE x13 x3)))
(assert (fp.leq (fp.neg x3) (fp.neg x1)))
(assert (fp.geq (fp.add RNE x0 x12) (fp.sub RNE x4 x4)))
(assert (fp.leq (fp.mul RNE x10 x5) (fp.div RNE x8 x12)))
(check-sat)
