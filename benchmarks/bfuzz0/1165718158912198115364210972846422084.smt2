(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x0 x7) (fp.neg x5)) (fp.neg (fp.mul RNE x2 x13))))
(assert (fp.gt (fp.neg (fp.mul RNE x0 x3)) (fp.add RNE (fp.sub RNE x0 x2) (fp.neg x7))))
(assert (fp.geq (fp.neg (fp.mul RNE x5 x12)) (fp.sub RNE (fp.sub RNE x9 x0) (fp.sub RNE x9 x0))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x8 x6) (fp.mul RNE x12 x13)) (fp.div RNE (fp.mul RNE x5 x4) (fp.add RNE x7 x2))))
(assert (fp.leq (fp.div RNE (fp.add RNE x4 x10) (fp.neg x0)) (fp.div RNE (fp.neg x5) (fp.div RNE x6 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x13)) (fp.sub RNE (fp.neg x2) (fp.neg x10))))
(assert (fp.geq (fp.neg (fp.mul RNE x2 x3)) (fp.sub RNE (fp.add RNE x10 x4) (fp.sub RNE x12 x13))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x13 x3) (fp.neg x11)) (fp.div RNE (fp.sub RNE x2 x6) (fp.neg x1))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x3 x2) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x0 x3) (fp.div RNE x10 x11))))
(assert (fp.lt (fp.div RNE (fp.neg x5) (fp.sub RNE x9 x10)) (fp.mul RNE (fp.mul RNE x4 x10) (fp.div RNE x11 x1))))
(assert (fp.lt (fp.add RNE (fp.neg x1) (fp.div RNE x6 x8)) (fp.div RNE (fp.add RNE x8 x0) (fp.div RNE x4 x4))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x8 x5) (fp.div RNE x1 x10)) (fp.neg (fp.neg x4))))
(assert (fp.leq (fp.div RNE (fp.div RNE x3 x8) (fp.div RNE x2 x10)) (fp.div RNE (fp.div RNE x13 x9) (fp.add RNE x10 x13))))
(assert (fp.gt (fp.mul RNE (fp.neg x12) (fp.neg x4)) (fp.sub RNE (fp.neg x13) (fp.div RNE x7 x12))))
(assert (fp.eq (fp.div RNE (fp.div RNE x11 x7) (fp.neg x9)) (fp.mul RNE (fp.mul RNE x3 x5) (fp.neg x4))))
(assert (fp.eq (fp.div RNE (fp.add RNE x0 x11) (fp.sub RNE x13 x3)) (fp.add RNE (fp.div RNE x8 x10) (fp.neg x8))))
(assert (fp.lt (fp.sub RNE (fp.neg x13) (fp.sub RNE x1 x11)) (fp.neg (fp.div RNE x0 x6))))
(assert (fp.leq (fp.neg (fp.mul RNE x1 x4)) (fp.add RNE (fp.add RNE x12 x2) (fp.neg x1))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.sub RNE x12 x2)) (fp.add RNE (fp.div RNE x10 x4) (fp.mul RNE x4 x6))))
(check-sat)
