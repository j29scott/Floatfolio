(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x21)) (fp.mul RNE (fp.neg x19) (fp.mul RNE x0 x21))) (fp.add RNE (fp.div RNE (fp.neg x10) (fp.neg x1)) (fp.mul RNE (fp.sub RNE x21 x4) (fp.sub RNE x11 x10)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.div RNE x14 x4) (fp.div RNE x19 x10)) (fp.mul RNE (fp.add RNE x2 x0) (fp.mul RNE x6 x0))) (fp.add RNE (fp.div RNE (fp.sub RNE x20 x20) (fp.neg x0)) (fp.div RNE (fp.sub RNE x10 x9) (fp.sub RNE x10 x0))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.neg x18) (fp.add RNE x6 x8)) (fp.neg (fp.sub RNE x16 x17))) (fp.neg (fp.div RNE (fp.add RNE x18 x18) (fp.mul RNE x3 x9)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x3 x21)) (fp.add RNE (fp.add RNE x9 x21) (fp.div RNE x16 x14))))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg (fp.neg x7)))) (fp.neg (fp.neg (fp.add RNE (fp.sub RNE x14 x17) (fp.add RNE x16 x5))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE x0 x8)) (fp.add RNE (fp.sub RNE x1 x7) (fp.neg x12))) (fp.sub RNE (fp.add RNE (fp.mul RNE x10 x7) (fp.sub RNE x0 x2)) (fp.mul RNE (fp.div RNE x6 x19) (fp.sub RNE x7 x16)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.add RNE x6 x3) (fp.div RNE x17 x20))) (fp.sub RNE (fp.add RNE (fp.mul RNE x18 x13) (fp.div RNE x19 x19)) (fp.mul RNE (fp.sub RNE x10 x19) (fp.neg x20))))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE (fp.neg x2) (fp.neg x2)))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.add RNE x17 x15) (fp.neg x21)) (fp.add RNE (fp.add RNE x13 x12) (fp.div RNE x4 x4))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x5 x8) (fp.add RNE x16 x4)) (fp.neg (fp.add RNE x14 x19))))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.mul RNE (fp.sub RNE x1 x8) (fp.add RNE x19 x10)) (fp.neg (fp.add RNE x3 x15)))) (fp.neg (fp.div RNE (fp.neg (fp.neg x11)) (fp.sub RNE (fp.neg x20) (fp.add RNE x7 x21))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg (fp.sub RNE x21 x5))) (fp.neg (fp.neg (fp.add RNE x1 x11)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x6) (fp.sub RNE x15 x2)) (fp.add RNE (fp.sub RNE x4 x0) (fp.sub RNE x7 x9))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x17 x14) (fp.mul RNE x9 x13)) (fp.div RNE (fp.sub RNE x3 x11) (fp.div RNE x14 x7))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg (fp.sub RNE x0 x7))) (fp.add RNE (fp.div RNE (fp.div RNE x1 x4) (fp.mul RNE x3 x15)) (fp.neg (fp.neg x0)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x20) (fp.mul RNE x15 x8)) (fp.add RNE (fp.div RNE x1 x20) (fp.mul RNE x7 x0))) (fp.div RNE (fp.add RNE (fp.sub RNE x13 x8) (fp.neg x20)) (fp.add RNE (fp.add RNE x10 x0) (fp.mul RNE x9 x6))))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg (fp.add RNE x21 x15)) (fp.mul RNE (fp.sub RNE x10 x14) (fp.div RNE x15 x15))) (fp.mul RNE (fp.neg (fp.mul RNE x6 x3)) (fp.sub RNE (fp.sub RNE x0 x3) (fp.sub RNE x21 x5)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x19) (fp.div RNE x0 x12)) (fp.div RNE (fp.add RNE x18 x12) (fp.neg x18))) (fp.div RNE (fp.div RNE (fp.mul RNE x7 x1) (fp.add RNE x7 x2)) (fp.div RNE (fp.add RNE x11 x21) (fp.sub RNE x17 x12))))))
(check-sat)
