(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x8 x10)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x3 x8))) (fp.div RNE (fp.neg (fp.sub RNE x5 x2)) (fp.neg (fp.mul RNE x3 x0)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.add RNE x1 x10)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x4 x11))) (fp.mul RNE (fp.mul RNE (fp.add RNE x17 x14) (fp.mul RNE x7 x14)) (fp.mul RNE (fp.add RNE x17 x7) (fp.mul RNE x12 x2)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE x8 x0) (fp.mul RNE x0 x4)) (fp.neg (fp.sub RNE x3 x6))) (fp.add RNE (fp.add RNE (fp.neg x11) (fp.sub RNE x5 x17)) (fp.mul RNE (fp.div RNE x6 x9) (fp.mul RNE x10 x7)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.mul RNE x1 x17) (fp.mul RNE x16 x7)) (fp.sub RNE (fp.sub RNE x11 x14) (fp.div RNE x2 x2))) (fp.div RNE (fp.mul RNE (fp.add RNE x15 x1) (fp.div RNE x17 x14)) (fp.div RNE (fp.add RNE x10 x6) (fp.sub RNE x6 x11)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg x9) (fp.mul RNE x13 x8))) (fp.sub RNE (fp.div RNE (fp.neg x4) (fp.add RNE x2 x6)) (fp.div RNE (fp.mul RNE x15 x18) (fp.neg x6)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x9))) (fp.mul RNE (fp.neg (fp.add RNE x2 x4)) (fp.mul RNE (fp.div RNE x7 x18) (fp.add RNE x8 x18)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.div RNE x13 x5) (fp.mul RNE x17 x15)) (fp.mul RNE (fp.mul RNE x10 x17) (fp.add RNE x1 x8))) (fp.sub RNE (fp.div RNE (fp.neg x8) (fp.mul RNE x11 x18)) (fp.add RNE (fp.neg x4) (fp.neg x2)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x4 x6) (fp.mul RNE x2 x3)) (fp.add RNE (fp.mul RNE x9 x15) (fp.add RNE x15 x15))) (fp.add RNE (fp.add RNE (fp.add RNE x15 x4) (fp.sub RNE x18 x9)) (fp.sub RNE (fp.div RNE x8 x0) (fp.div RNE x10 x7)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x18 x17) (fp.add RNE x1 x12))) (fp.add RNE (fp.sub RNE (fp.add RNE x7 x17) (fp.mul RNE x17 x16)) (fp.mul RNE (fp.neg x14) (fp.div RNE x7 x4)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE x14 x18) (fp.sub RNE x14 x4)) (fp.mul RNE (fp.add RNE x18 x15) (fp.div RNE x17 x10))) (fp.neg (fp.add RNE (fp.neg x17) (fp.add RNE x8 x6)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE x8 x17) (fp.add RNE x16 x3))) (fp.div RNE (fp.neg (fp.sub RNE x0 x6)) (fp.mul RNE (fp.div RNE x17 x13) (fp.add RNE x1 x4)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x9) (fp.mul RNE x5 x2)) (fp.neg (fp.div RNE x9 x0))) (fp.div RNE (fp.add RNE (fp.div RNE x17 x16) (fp.neg x7)) (fp.div RNE (fp.add RNE x8 x15) (fp.neg x12)))))
(check-sat)
