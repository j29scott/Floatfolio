(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x2 x12) (fp.sub RNE x10 x25))) (fp.mul RNE (fp.add RNE (fp.div RNE x15 x25) (fp.mul RNE x21 x9)) (fp.mul RNE (fp.sub RNE x20 x20) (fp.sub RNE x2 x4)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x25 x27) (fp.mul RNE x13 x12)) (fp.neg (fp.div RNE x6 x19))) (fp.mul RNE (fp.mul RNE (fp.add RNE x7 x8) (fp.add RNE x11 x16)) (fp.mul RNE (fp.mul RNE x12 x7) (fp.div RNE x20 x4)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.mul RNE x25 x27) (fp.div RNE x9 x17)) (fp.add RNE (fp.neg x24) (fp.sub RNE x6 x22))) (fp.neg (fp.sub RNE (fp.mul RNE x15 x18) (fp.mul RNE x27 x10)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x20 x17) (fp.mul RNE x23 x25)) (fp.add RNE (fp.sub RNE x26 x21) (fp.sub RNE x19 x17))) (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x27) (fp.mul RNE x22 x25)) (fp.sub RNE (fp.mul RNE x9 x2) (fp.div RNE x24 x4)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg x25) (fp.div RNE x23 x20)) (fp.add RNE (fp.add RNE x9 x18) (fp.sub RNE x14 x11))) (fp.mul RNE (fp.sub RNE (fp.add RNE x26 x16) (fp.div RNE x14 x5)) (fp.sub RNE (fp.sub RNE x24 x10) (fp.div RNE x20 x3)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x0 x26)) (fp.neg (fp.div RNE x19 x25))) (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.add RNE x9 x15)) (fp.sub RNE (fp.add RNE x26 x11) (fp.neg x28)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.mul RNE x11 x10) (fp.sub RNE x22 x21))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x20 x2) (fp.add RNE x20 x23)) (fp.div RNE (fp.div RNE x26 x20) (fp.add RNE x0 x27)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x3 x10) (fp.neg x2)) (fp.add RNE (fp.sub RNE x5 x17) (fp.sub RNE x4 x23))) (fp.div RNE (fp.div RNE (fp.sub RNE x2 x26) (fp.sub RNE x18 x16)) (fp.add RNE (fp.neg x13) (fp.add RNE x26 x11)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE x26 x8) (fp.neg x12)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x21 x21))) (fp.neg (fp.neg (fp.neg x6)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.add RNE x25 x4) (fp.add RNE x24 x11)) (fp.neg (fp.div RNE x14 x6))) (fp.neg (fp.add RNE (fp.add RNE x6 x11) (fp.div RNE x20 x25)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x9) (fp.neg x5)) (fp.div RNE (fp.mul RNE x11 x18) (fp.add RNE x17 x22))) (fp.add RNE (fp.add RNE (fp.add RNE x18 x11) (fp.neg x3)) (fp.sub RNE (fp.add RNE x25 x2) (fp.mul RNE x20 x6)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x1 x13) (fp.div RNE x10 x3)) (fp.sub RNE (fp.div RNE x27 x5) (fp.mul RNE x16 x5))) (fp.neg (fp.div RNE (fp.mul RNE x5 x21) (fp.add RNE x8 x16)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x4 x18) (fp.sub RNE x28 x13))) (fp.add RNE (fp.div RNE (fp.sub RNE x1 x0) (fp.mul RNE x14 x23)) (fp.sub RNE (fp.add RNE x1 x25) (fp.add RNE x28 x11)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x11 x21) (fp.div RNE x15 x16)) (fp.add RNE (fp.add RNE x20 x0) (fp.mul RNE x12 x2))) (fp.neg (fp.mul RNE (fp.neg x26) (fp.sub RNE x13 x14)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE x15 x27) (fp.add RNE x23 x0)) (fp.add RNE (fp.mul RNE x2 x5) (fp.add RNE x9 x15))) (fp.neg (fp.mul RNE (fp.mul RNE x11 x2) (fp.div RNE x1 x4)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE x26 x4) (fp.neg x6))) (fp.sub RNE (fp.neg (fp.div RNE x14 x1)) (fp.sub RNE (fp.sub RNE x13 x5) (fp.neg x16)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE x7 x26) (fp.sub RNE x7 x8)) (fp.neg (fp.sub RNE x22 x21))) (fp.add RNE (fp.mul RNE (fp.neg x26) (fp.sub RNE x19 x26)) (fp.mul RNE (fp.add RNE x6 x12) (fp.mul RNE x9 x28)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.neg x25) (fp.div RNE x15 x23))) (fp.div RNE (fp.mul RNE (fp.mul RNE x24 x19) (fp.div RNE x6 x16)) (fp.add RNE (fp.sub RNE x12 x2) (fp.div RNE x9 x7)))))
(check-sat)
