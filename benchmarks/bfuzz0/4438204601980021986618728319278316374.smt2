(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x5 x2) (fp.neg x0)))
(assert (fp.lt (fp.sub RNE x2 x6) (fp.neg x5)))
(assert (fp.gt (fp.sub RNE x2 x7) (fp.div RNE x4 x5)))
(assert (fp.gt (fp.div RNE x2 x1) (fp.div RNE x8 x6)))
(assert (fp.eq (fp.sub RNE x2 x4) (fp.mul RNE x6 x0)))
(assert (fp.gt (fp.div RNE x5 x5) (fp.sub RNE x0 x7)))
(assert (fp.leq (fp.div RNE x4 x6) (fp.add RNE x0 x8)))
(assert (fp.gt (fp.neg x1) (fp.mul RNE x8 x4)))
(assert (fp.geq (fp.div RNE x3 x3) (fp.mul RNE x6 x1)))
(assert (fp.geq (fp.sub RNE x6 x1) (fp.add RNE x8 x2)))
(assert (fp.eq (fp.add RNE x1 x1) (fp.div RNE x1 x2)))
(assert (fp.eq (fp.add RNE x5 x4) (fp.neg x8)))
(assert (fp.lt (fp.sub RNE x4 x5) (fp.add RNE x5 x8)))
(assert (fp.eq (fp.neg x6) (fp.neg x5)))
(assert (fp.geq (fp.div RNE x4 x8) (fp.mul RNE x3 x6)))
(assert (fp.gt (fp.div RNE x8 x4) (fp.neg x3)))
(assert (fp.leq (fp.div RNE x6 x4) (fp.div RNE x4 x6)))
(check-sat)
