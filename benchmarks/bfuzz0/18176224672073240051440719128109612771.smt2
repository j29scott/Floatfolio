(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE (fp.sub RNE x17 x1) (fp.neg x0)) (fp.neg (fp.sub RNE x17 x19)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.neg x19)) (fp.div RNE (fp.add RNE x6 x2) (fp.sub RNE x16 x6))) (fp.add RNE (fp.div RNE (fp.mul RNE x2 x5) (fp.mul RNE x0 x4)) (fp.div RNE (fp.div RNE x20 x5) (fp.div RNE x6 x19))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x6 x10) (fp.neg x12)) (fp.mul RNE (fp.add RNE x3 x2) (fp.add RNE x10 x14))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x10 x18) (fp.div RNE x7 x2)) (fp.mul RNE (fp.div RNE x0 x2) (fp.div RNE x3 x5)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.add RNE x7 x2) (fp.neg x4))) (fp.sub RNE (fp.div RNE (fp.sub RNE x17 x13) (fp.add RNE x6 x3)) (fp.div RNE (fp.div RNE x11 x8) (fp.neg x19))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x4 x5) (fp.mul RNE x12 x18)) (fp.add RNE (fp.div RNE x18 x4) (fp.div RNE x2 x12))) (fp.add RNE (fp.div RNE (fp.div RNE x7 x3) (fp.sub RNE x11 x11)) (fp.sub RNE (fp.mul RNE x16 x0) (fp.sub RNE x3 x0)))) (fp.sub RNE (fp.neg (fp.neg (fp.div RNE x5 x3))) (fp.add RNE (fp.div RNE (fp.add RNE x16 x9) (fp.add RNE x16 x15)) (fp.mul RNE (fp.mul RNE x5 x1) (fp.add RNE x6 x4))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE (fp.div RNE x9 x4) (fp.mul RNE x4 x19)) (fp.mul RNE (fp.div RNE x12 x12) (fp.neg x3)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x16 x5) (fp.neg x13)) (fp.mul RNE (fp.mul RNE x4 x17) (fp.sub RNE x6 x0))) (fp.neg (fp.sub RNE (fp.add RNE x11 x18) (fp.sub RNE x2 x8))))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE (fp.mul RNE x5 x15) (fp.mul RNE x6 x16)) (fp.add RNE (fp.div RNE x2 x1) (fp.sub RNE x20 x17)))) (fp.neg (fp.div RNE (fp.div RNE (fp.sub RNE x5 x5) (fp.mul RNE x14 x10)) (fp.sub RNE (fp.sub RNE x5 x19) (fp.add RNE x1 x18))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x3) (fp.div RNE x9 x5)) (fp.add RNE (fp.div RNE x18 x14) (fp.div RNE x17 x16))) (fp.neg (fp.add RNE (fp.sub RNE x15 x12) (fp.sub RNE x5 x14)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.div RNE x14 x3) (fp.add RNE x10 x0)) (fp.neg (fp.sub RNE x1 x17))) (fp.sub RNE (fp.neg (fp.sub RNE x9 x1)) (fp.sub RNE (fp.div RNE x18 x3) (fp.neg x1))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE (fp.neg x20) (fp.add RNE x20 x1)) (fp.neg (fp.mul RNE x12 x6)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x18) (fp.mul RNE x13 x9)) (fp.div RNE (fp.add RNE x1 x12) (fp.sub RNE x11 x20))) (fp.neg (fp.neg (fp.sub RNE x17 x0))))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.mul RNE (fp.div RNE x14 x10) (fp.div RNE x14 x9))) (fp.mul RNE (fp.div RNE (fp.add RNE x6 x2) (fp.sub RNE x18 x16)) (fp.div RNE (fp.add RNE x9 x10) (fp.neg x7)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.neg x16) (fp.neg x7)) (fp.neg (fp.neg x2))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE (fp.add RNE x19 x7) (fp.div RNE x10 x3)) (fp.div RNE (fp.div RNE x14 x20) (fp.sub RNE x19 x16)))) (fp.neg (fp.neg (fp.add RNE (fp.sub RNE x3 x18) (fp.add RNE x2 x14))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x7 x7) (fp.neg x15)) (fp.mul RNE (fp.div RNE x1 x2) (fp.neg x18))) (fp.add RNE (fp.add RNE (fp.add RNE x3 x10) (fp.neg x3)) (fp.sub RNE (fp.neg x4) (fp.mul RNE x12 x13)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.add RNE x3 x1)) (fp.div RNE (fp.mul RNE x20 x18) (fp.sub RNE x12 x17))) (fp.div RNE (fp.mul RNE (fp.sub RNE x2 x17) (fp.add RNE x3 x8)) (fp.add RNE (fp.mul RNE x13 x20) (fp.div RNE x8 x5))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE (fp.mul RNE x16 x3) (fp.mul RNE x5 x12)) (fp.add RNE (fp.mul RNE x20 x7) (fp.neg x9)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.neg x1)) (fp.sub RNE (fp.div RNE x18 x10) (fp.sub RNE x10 x11))) (fp.add RNE (fp.neg (fp.sub RNE x12 x19)) (fp.div RNE (fp.neg x17) (fp.add RNE x19 x13))))))
(check-sat)
