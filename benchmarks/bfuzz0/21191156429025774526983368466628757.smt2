(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x9) (fp.div RNE x10 x9)))
(assert (fp.lt (fp.neg x6) (fp.neg x3)))
(assert (fp.geq (fp.add RNE x2 x7) (fp.add RNE x11 x3)))
(assert (fp.eq (fp.mul RNE x8 x5) (fp.mul RNE x5 x4)))
(assert (fp.lt (fp.neg x5) (fp.add RNE x9 x6)))
(assert (fp.geq (fp.add RNE x9 x3) (fp.mul RNE x9 x2)))
(assert (fp.eq (fp.mul RNE x2 x12) (fp.neg x1)))
(assert (fp.lt (fp.sub RNE x0 x5) (fp.sub RNE x7 x7)))
(assert (fp.geq (fp.neg x9) (fp.sub RNE x6 x1)))
(assert (fp.geq (fp.sub RNE x1 x8) (fp.add RNE x2 x3)))
(assert (fp.lt (fp.div RNE x0 x2) (fp.div RNE x7 x7)))
(assert (fp.leq (fp.div RNE x4 x7) (fp.mul RNE x7 x0)))
(assert (fp.gt (fp.div RNE x9 x11) (fp.div RNE x12 x1)))
(assert (fp.lt (fp.neg x3) (fp.div RNE x10 x7)))
(assert (fp.eq (fp.sub RNE x7 x1) (fp.sub RNE x3 x5)))
(assert (fp.geq (fp.neg x8) (fp.sub RNE x2 x12)))
(check-sat)
