(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x2 x3) (fp.div RNE x3 x8)))
(assert (fp.eq (fp.neg x3) (fp.sub RNE x2 x2)))
(assert (fp.geq (fp.mul RNE x5 x7) (fp.neg x23)))
(assert (fp.lt (fp.sub RNE x26 x4) (fp.sub RNE x13 x18)))
(assert (fp.geq (fp.div RNE x23 x19) (fp.add RNE x20 x14)))
(assert (fp.leq (fp.div RNE x17 x18) (fp.mul RNE x3 x14)))
(assert (fp.leq (fp.mul RNE x16 x5) (fp.mul RNE x21 x7)))
(assert (fp.geq (fp.mul RNE x21 x26) (fp.mul RNE x18 x7)))
(assert (fp.eq (fp.sub RNE x5 x10) (fp.neg x12)))
(assert (fp.lt (fp.add RNE x24 x20) (fp.sub RNE x1 x18)))
(assert (fp.eq (fp.sub RNE x25 x16) (fp.sub RNE x20 x25)))
(assert (fp.eq (fp.mul RNE x5 x5) (fp.div RNE x24 x17)))
(assert (fp.leq (fp.div RNE x27 x27) (fp.add RNE x1 x23)))
(assert (fp.lt (fp.div RNE x14 x18) (fp.div RNE x17 x1)))
(assert (fp.gt (fp.add RNE x26 x4) (fp.mul RNE x17 x11)))
(assert (fp.gt (fp.sub RNE x27 x17) (fp.div RNE x9 x5)))
(assert (fp.geq (fp.add RNE x2 x18) (fp.mul RNE x27 x6)))
(assert (fp.eq (fp.div RNE x0 x21) (fp.neg x17)))
(assert (fp.geq (fp.mul RNE x26 x11) (fp.mul RNE x21 x19)))
(check-sat)
