(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x0 x11) (fp.sub RNE x8 x12)) (fp.div RNE (fp.sub RNE x11 x0) (fp.div RNE x1 x11))) (fp.add RNE (fp.mul RNE (fp.add RNE x11 x6) (fp.div RNE x14 x2)) (fp.neg (fp.add RNE x4 x0)))) (fp.neg (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.sub RNE x6 x10)) (fp.add RNE (fp.add RNE x13 x6) (fp.sub RNE x7 x9))))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x15 x15) (fp.add RNE x14 x14)) (fp.neg (fp.div RNE x5 x8))) (fp.div RNE (fp.add RNE (fp.sub RNE x3 x15) (fp.neg x3)) (fp.div RNE (fp.add RNE x1 x5) (fp.neg x1)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x1 x1) (fp.div RNE x14 x5)) (fp.neg (fp.div RNE x3 x11))) (fp.mul RNE (fp.add RNE (fp.neg x15) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x5 x0) (fp.mul RNE x14 x2))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE (fp.mul RNE x15 x11) (fp.neg x8)) (fp.add RNE (fp.sub RNE x7 x6) (fp.sub RNE x1 x9))) (fp.mul RNE (fp.neg (fp.mul RNE x4 x14)) (fp.div RNE (fp.mul RNE x3 x4) (fp.add RNE x11 x15)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x9 x3) (fp.neg x8)) (fp.mul RNE (fp.add RNE x15 x14) (fp.neg x3))) (fp.add RNE (fp.neg (fp.sub RNE x0 x15)) (fp.mul RNE (fp.div RNE x13 x15) (fp.div RNE x2 x12))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE (fp.mul RNE x13 x4) (fp.sub RNE x2 x4)) (fp.sub RNE (fp.mul RNE x9 x4) (fp.neg x11)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.mul RNE x12 x1) (fp.div RNE x7 x13))) (fp.add RNE (fp.neg (fp.add RNE x3 x14)) (fp.div RNE (fp.mul RNE x5 x11) (fp.add RNE x6 x8))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x9 x9) (fp.sub RNE x12 x4)) (fp.sub RNE (fp.div RNE x8 x2) (fp.sub RNE x6 x9))) (fp.mul RNE (fp.div RNE (fp.mul RNE x0 x3) (fp.add RNE x0 x7)) (fp.add RNE (fp.sub RNE x7 x1) (fp.sub RNE x7 x7)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x2 x2) (fp.sub RNE x12 x11)) (fp.sub RNE (fp.sub RNE x8 x13) (fp.add RNE x9 x0))) (fp.neg (fp.neg (fp.neg x3))))))
(check-sat)
