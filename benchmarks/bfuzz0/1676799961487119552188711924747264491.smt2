(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.mul RNE x8 x7)) (fp.neg (fp.div RNE x11 x8))))
(assert (fp.lt (fp.neg (fp.add RNE x6 x4)) (fp.div RNE (fp.sub RNE x10 x1) (fp.mul RNE x7 x2))))
(assert (fp.leq (fp.mul RNE (fp.neg x1) (fp.neg x11)) (fp.add RNE (fp.mul RNE x1 x0) (fp.add RNE x7 x0))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x9 x11) (fp.div RNE x1 x0)) (fp.sub RNE (fp.sub RNE x11 x2) (fp.div RNE x7 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x2 x7) (fp.div RNE x7 x6)) (fp.neg (fp.neg x9))))
(assert (fp.geq (fp.add RNE (fp.add RNE x9 x4) (fp.sub RNE x8 x9)) (fp.sub RNE (fp.sub RNE x7 x0) (fp.mul RNE x8 x11))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x5 x1) (fp.sub RNE x7 x9)) (fp.div RNE (fp.add RNE x6 x5) (fp.neg x0))))
(assert (fp.gt (fp.neg (fp.neg x6)) (fp.div RNE (fp.sub RNE x3 x9) (fp.neg x8))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x7 x6) (fp.add RNE x5 x6)) (fp.add RNE (fp.div RNE x4 x2) (fp.neg x4))))
(assert (fp.lt (fp.add RNE (fp.div RNE x1 x6) (fp.mul RNE x8 x2)) (fp.mul RNE (fp.neg x10) (fp.neg x3))))
(assert (fp.leq (fp.div RNE (fp.neg x6) (fp.add RNE x9 x1)) (fp.add RNE (fp.div RNE x9 x10) (fp.sub RNE x4 x10))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x11 x9) (fp.div RNE x4 x2)) (fp.mul RNE (fp.div RNE x7 x5) (fp.neg x9))))
(assert (fp.gt (fp.mul RNE (fp.neg x9) (fp.sub RNE x6 x6)) (fp.sub RNE (fp.sub RNE x5 x0) (fp.mul RNE x10 x3))))
(assert (fp.gt (fp.div RNE (fp.neg x4) (fp.neg x8)) (fp.add RNE (fp.add RNE x0 x4) (fp.neg x5))))
(check-sat)
