(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.div RNE x7 x9) (fp.mul RNE x7 x7)) (fp.div RNE (fp.div RNE x0 x1) (fp.neg x4))))
(assert (fp.eq (fp.neg (fp.add RNE x3 x6)) (fp.add RNE (fp.sub RNE x7 x0) (fp.sub RNE x6 x2))))
(assert (fp.lt (fp.div RNE (fp.neg x5) (fp.div RNE x7 x6)) (fp.add RNE (fp.mul RNE x8 x7) (fp.mul RNE x12 x2))))
(assert (fp.geq (fp.add RNE (fp.add RNE x14 x11) (fp.add RNE x5 x7)) (fp.add RNE (fp.mul RNE x2 x0) (fp.div RNE x9 x8))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x3 x12) (fp.sub RNE x13 x6)) (fp.neg (fp.div RNE x6 x12))))
(assert (fp.gt (fp.mul RNE (fp.neg x5) (fp.add RNE x9 x4)) (fp.div RNE (fp.add RNE x10 x11) (fp.mul RNE x10 x6))))
(check-sat)
