(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE x11 x8))) (fp.div RNE (fp.neg (fp.div RNE x6 x12)) (fp.mul RNE (fp.sub RNE x4 x2) (fp.add RNE x2 x9)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x6 x12) (fp.sub RNE x12 x1)) (fp.add RNE (fp.neg x14) (fp.mul RNE x5 x10))) (fp.add RNE (fp.add RNE (fp.div RNE x11 x3) (fp.add RNE x12 x13)) (fp.mul RNE (fp.div RNE x14 x2) (fp.neg x12)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE x13 x4) (fp.add RNE x11 x11))) (fp.add RNE (fp.add RNE (fp.add RNE x9 x11) (fp.sub RNE x5 x10)) (fp.mul RNE (fp.sub RNE x12 x7) (fp.sub RNE x1 x12)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x14 x7) (fp.add RNE x0 x9))) (fp.neg (fp.add RNE (fp.div RNE x9 x10) (fp.add RNE x0 x5)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x9) (fp.sub RNE x7 x6)) (fp.neg (fp.div RNE x13 x1))) (fp.mul RNE (fp.sub RNE (fp.add RNE x13 x6) (fp.neg x7)) (fp.div RNE (fp.mul RNE x13 x9) (fp.add RNE x4 x10)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x13 x6) (fp.add RNE x1 x8))) (fp.add RNE (fp.div RNE (fp.div RNE x11 x1) (fp.sub RNE x10 x0)) (fp.mul RNE (fp.mul RNE x14 x5) (fp.div RNE x7 x11)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE x8 x0) (fp.neg x12)) (fp.mul RNE (fp.add RNE x0 x2) (fp.mul RNE x0 x6))) (fp.mul RNE (fp.neg (fp.sub RNE x0 x11)) (fp.neg (fp.sub RNE x1 x5)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.div RNE x3 x4) (fp.mul RNE x14 x9)) (fp.sub RNE (fp.add RNE x12 x12) (fp.add RNE x2 x2))) (fp.neg (fp.neg (fp.div RNE x11 x5)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x11 x4) (fp.div RNE x14 x0)) (fp.div RNE (fp.mul RNE x4 x14) (fp.neg x2))) (fp.neg (fp.sub RNE (fp.add RNE x13 x7) (fp.div RNE x3 x1)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE x8 x2) (fp.div RNE x14 x9)) (fp.add RNE (fp.add RNE x4 x8) (fp.div RNE x3 x12))) (fp.sub RNE (fp.neg (fp.mul RNE x13 x7)) (fp.mul RNE (fp.sub RNE x8 x6) (fp.mul RNE x13 x9)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg x11) (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.neg x6) (fp.add RNE x14 x2)) (fp.div RNE (fp.mul RNE x9 x1) (fp.neg x8)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.neg x11) (fp.div RNE x3 x13)) (fp.neg (fp.mul RNE x0 x4))) (fp.div RNE (fp.div RNE (fp.neg x7) (fp.neg x10)) (fp.neg (fp.sub RNE x4 x7)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x7 x14) (fp.add RNE x7 x14)) (fp.mul RNE (fp.sub RNE x6 x12) (fp.div RNE x1 x5))) (fp.mul RNE (fp.div RNE (fp.sub RNE x5 x13) (fp.neg x1)) (fp.neg (fp.add RNE x1 x6)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE x0 x4) (fp.div RNE x10 x13)) (fp.div RNE (fp.add RNE x7 x1) (fp.neg x14))) (fp.mul RNE (fp.mul RNE (fp.div RNE x11 x14) (fp.sub RNE x9 x8)) (fp.mul RNE (fp.add RNE x4 x13) (fp.div RNE x0 x13)))))
(check-sat)
