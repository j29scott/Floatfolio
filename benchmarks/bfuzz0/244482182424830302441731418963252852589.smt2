(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE x9 x3) (fp.neg x6)))
(assert (fp.leq (fp.neg x4) (fp.add RNE x4 x4)))
(assert (fp.leq (fp.sub RNE x5 x1) (fp.sub RNE x3 x9)))
(assert (fp.leq (fp.add RNE x5 x3) (fp.sub RNE x4 x1)))
(assert (fp.leq (fp.sub RNE x5 x0) (fp.neg x4)))
(assert (fp.gt (fp.mul RNE x1 x7) (fp.sub RNE x1 x5)))
(assert (fp.eq (fp.add RNE x5 x7) (fp.mul RNE x1 x0)))
(assert (fp.leq (fp.neg x5) (fp.div RNE x5 x5)))
(assert (fp.lt (fp.div RNE x2 x8) (fp.mul RNE x9 x7)))
(assert (fp.leq (fp.add RNE x4 x6) (fp.neg x10)))
(assert (fp.leq (fp.div RNE x10 x9) (fp.neg x3)))
(assert (fp.geq (fp.div RNE x3 x2) (fp.sub RNE x1 x6)))
(assert (fp.leq (fp.add RNE x6 x10) (fp.div RNE x8 x4)))
(check-sat)
