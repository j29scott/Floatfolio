(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.neg (fp.sub RNE x7 x6)) (fp.add RNE (fp.mul RNE x17 x17) (fp.div RNE x22 x22))) (fp.mul RNE (fp.add RNE (fp.div RNE x21 x6) (fp.neg x13)) (fp.div RNE (fp.neg x8) (fp.div RNE x19 x3)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x20 x18)) (fp.div RNE (fp.add RNE x13 x15) (fp.div RNE x15 x0))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x0) (fp.add RNE x16 x12)) (fp.neg (fp.mul RNE x9 x3)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE x11 x2) (fp.mul RNE x20 x2)) (fp.sub RNE (fp.add RNE x2 x5) (fp.mul RNE x18 x6))) (fp.mul RNE (fp.div RNE (fp.sub RNE x0 x14) (fp.neg x1)) (fp.mul RNE (fp.sub RNE x19 x8) (fp.mul RNE x4 x18)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x16 x22) (fp.add RNE x2 x11)) (fp.mul RNE (fp.div RNE x20 x4) (fp.sub RNE x1 x14))) (fp.add RNE (fp.add RNE (fp.mul RNE x4 x3) (fp.neg x4)) (fp.neg (fp.sub RNE x17 x21)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x15) (fp.div RNE x17 x14)) (fp.add RNE (fp.sub RNE x7 x4) (fp.div RNE x12 x3))) (fp.div RNE (fp.sub RNE (fp.div RNE x21 x11) (fp.div RNE x0 x7)) (fp.add RNE (fp.neg x16) (fp.div RNE x20 x10)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x15 x15)) (fp.add RNE (fp.sub RNE x18 x12) (fp.neg x13))) (fp.neg (fp.sub RNE (fp.sub RNE x12 x20) (fp.neg x2)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.add RNE x11 x18) (fp.div RNE x8 x9)) (fp.sub RNE (fp.neg x8) (fp.div RNE x1 x1))) (fp.sub RNE (fp.neg (fp.add RNE x18 x2)) (fp.neg (fp.div RNE x13 x11)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x14) (fp.mul RNE x2 x12)) (fp.sub RNE (fp.add RNE x19 x13) (fp.sub RNE x1 x4))) (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.add RNE x6 x2)) (fp.sub RNE (fp.sub RNE x8 x17) (fp.sub RNE x7 x12)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x18 x8) (fp.mul RNE x20 x11)) (fp.sub RNE (fp.neg x15) (fp.add RNE x0 x21))) (fp.neg (fp.neg (fp.sub RNE x13 x5)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x15 x8) (fp.add RNE x19 x0)) (fp.div RNE (fp.sub RNE x14 x12) (fp.div RNE x6 x5))) (fp.mul RNE (fp.sub RNE (fp.div RNE x7 x0) (fp.div RNE x20 x13)) (fp.sub RNE (fp.sub RNE x21 x14) (fp.sub RNE x4 x17)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg x3) (fp.sub RNE x12 x10))) (fp.neg (fp.mul RNE (fp.div RNE x7 x10) (fp.sub RNE x0 x17)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE x15 x7) (fp.mul RNE x6 x15))) (fp.div RNE (fp.div RNE (fp.sub RNE x18 x2) (fp.sub RNE x18 x18)) (fp.div RNE (fp.mul RNE x1 x4) (fp.sub RNE x16 x22)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.sub RNE x0 x6) (fp.div RNE x0 x22)) (fp.mul RNE (fp.mul RNE x5 x19) (fp.add RNE x2 x7))) (fp.sub RNE (fp.mul RNE (fp.div RNE x14 x3) (fp.sub RNE x7 x13)) (fp.mul RNE (fp.div RNE x0 x18) (fp.neg x17)))))
(check-sat)
