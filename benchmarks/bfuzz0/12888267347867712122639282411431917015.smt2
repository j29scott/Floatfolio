(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.div RNE x0 x15) (fp.mul RNE x8 x4)) (fp.add RNE (fp.sub RNE x4 x15) (fp.mul RNE x8 x8))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x11 x2) (fp.sub RNE x10 x4)) (fp.add RNE (fp.sub RNE x2 x9) (fp.div RNE x3 x10))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x13 x12) (fp.sub RNE x5 x8)) (fp.add RNE (fp.mul RNE x14 x13) (fp.div RNE x7 x3))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x10)) (fp.neg (fp.add RNE x7 x0))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x2 x0) (fp.mul RNE x2 x3)) (fp.div RNE (fp.add RNE x13 x5) (fp.div RNE x13 x6))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x10 x8) (fp.mul RNE x1 x4)) (fp.sub RNE (fp.add RNE x14 x1) (fp.mul RNE x10 x2))))
(assert (fp.geq (fp.add RNE (fp.neg x2) (fp.add RNE x6 x12)) (fp.mul RNE (fp.neg x7) (fp.neg x3))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x14 x14) (fp.add RNE x13 x4)) (fp.neg (fp.mul RNE x0 x3))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x15 x0) (fp.sub RNE x7 x16)) (fp.div RNE (fp.div RNE x12 x8) (fp.mul RNE x8 x12))))
(assert (fp.geq (fp.add RNE (fp.div RNE x7 x11) (fp.div RNE x1 x11)) (fp.neg (fp.add RNE x16 x2))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x12 x3) (fp.mul RNE x3 x15)) (fp.div RNE (fp.div RNE x12 x12) (fp.div RNE x0 x16))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x12 x12) (fp.add RNE x7 x0)) (fp.mul RNE (fp.div RNE x12 x13) (fp.mul RNE x13 x6))))
(check-sat)
