(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.mul RNE (fp.neg x8) (fp.neg x11)) (fp.add RNE (fp.neg x12) (fp.sub RNE x16 x16))) (fp.div RNE (fp.add RNE (fp.add RNE x13 x13) (fp.sub RNE x6 x7)) (fp.sub RNE (fp.neg x6) (fp.add RNE x2 x14)))) (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x14 x14) (fp.neg x9))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.div RNE (fp.add RNE x13 x14) (fp.mul RNE x10 x0)) (fp.mul RNE (fp.neg x6) (fp.div RNE x9 x0))) (fp.add RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x5 x6)) (fp.sub RNE (fp.mul RNE x2 x8) (fp.div RNE x2 x5)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x4 x8) (fp.neg x4)) (fp.sub RNE (fp.div RNE x6 x12) (fp.neg x8))) (fp.neg (fp.mul RNE (fp.sub RNE x11 x11) (fp.div RNE x2 x4))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x2 x15)) (fp.neg (fp.div RNE x13 x4))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x8) (fp.mul RNE x7 x7)) (fp.sub RNE (fp.add RNE x10 x7) (fp.neg x2)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.sub RNE x8 x10) (fp.sub RNE x14 x6))) (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.div RNE x9 x16)) (fp.sub RNE (fp.add RNE x7 x12) (fp.add RNE x0 x10))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x0 x10) (fp.add RNE x1 x13)) (fp.mul RNE (fp.sub RNE x5 x8) (fp.neg x4))) (fp.neg (fp.add RNE (fp.sub RNE x9 x0) (fp.mul RNE x12 x15)))) (fp.div RNE (fp.neg (fp.div RNE (fp.div RNE x11 x14) (fp.div RNE x0 x6))) (fp.add RNE (fp.sub RNE (fp.sub RNE x14 x0) (fp.add RNE x8 x15)) (fp.neg (fp.mul RNE x15 x14))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.sub RNE (fp.div RNE x14 x12) (fp.sub RNE x6 x4)) (fp.neg (fp.add RNE x2 x4))) (fp.neg (fp.div RNE (fp.neg x3) (fp.sub RNE x8 x3)))) (fp.neg (fp.add RNE (fp.div RNE (fp.neg x4) (fp.mul RNE x9 x6)) (fp.add RNE (fp.sub RNE x3 x3) (fp.mul RNE x14 x9))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x1 x6) (fp.add RNE x12 x10)) (fp.neg (fp.neg x13))) (fp.mul RNE (fp.sub RNE (fp.neg x16) (fp.div RNE x9 x10)) (fp.mul RNE (fp.neg x10) (fp.mul RNE x6 x3)))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.neg x14) (fp.div RNE x8 x13)) (fp.sub RNE (fp.div RNE x6 x10) (fp.mul RNE x10 x12))) (fp.neg (fp.add RNE (fp.neg x6) (fp.neg x5))))))
(check-sat)
