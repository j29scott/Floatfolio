(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE x9 x4) (fp.div RNE x11 x10)))
(assert (fp.geq (fp.add RNE x4 x1) (fp.neg x8)))
(assert (fp.eq (fp.mul RNE x17 x6) (fp.add RNE x0 x12)))
(assert (fp.geq (fp.add RNE x13 x8) (fp.sub RNE x13 x9)))
(assert (fp.gt (fp.div RNE x11 x1) (fp.neg x3)))
(assert (fp.eq (fp.div RNE x9 x19) (fp.mul RNE x11 x6)))
(assert (fp.geq (fp.add RNE x8 x2) (fp.sub RNE x18 x8)))
(assert (fp.gt (fp.mul RNE x10 x4) (fp.sub RNE x3 x14)))
(check-sat)
