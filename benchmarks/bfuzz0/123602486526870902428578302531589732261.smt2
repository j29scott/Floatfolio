(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.mul RNE x20 x13) (fp.mul RNE x4 x13)) (fp.neg (fp.mul RNE x23 x15))) (fp.sub RNE (fp.neg (fp.mul RNE x21 x2)) (fp.mul RNE (fp.add RNE x12 x16) (fp.div RNE x2 x18)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.mul RNE x17 x20) (fp.add RNE x0 x0)) (fp.sub RNE (fp.mul RNE x1 x12) (fp.sub RNE x18 x17))) (fp.mul RNE (fp.add RNE (fp.neg x18) (fp.div RNE x13 x23)) (fp.mul RNE (fp.add RNE x2 x20) (fp.mul RNE x15 x6)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE x15 x13) (fp.mul RNE x17 x0)) (fp.sub RNE (fp.neg x8) (fp.mul RNE x18 x22))) (fp.div RNE (fp.neg (fp.div RNE x7 x22)) (fp.neg (fp.mul RNE x14 x4)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.neg x1) (fp.mul RNE x17 x12)) (fp.sub RNE (fp.div RNE x14 x19) (fp.add RNE x18 x19))) (fp.sub RNE (fp.sub RNE (fp.add RNE x22 x5) (fp.div RNE x0 x2)) (fp.sub RNE (fp.neg x15) (fp.mul RNE x15 x11)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x17 x10) (fp.mul RNE x4 x1)) (fp.add RNE (fp.add RNE x17 x10) (fp.sub RNE x6 x2))) (fp.div RNE (fp.sub RNE (fp.div RNE x4 x20) (fp.sub RNE x16 x18)) (fp.sub RNE (fp.div RNE x7 x21) (fp.add RNE x2 x21)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE x9 x2)) (fp.mul RNE (fp.div RNE x0 x15) (fp.sub RNE x0 x6))) (fp.neg (fp.div RNE (fp.add RNE x13 x13) (fp.sub RNE x2 x23)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE x5 x12)) (fp.add RNE (fp.neg x13) (fp.mul RNE x7 x2))) (fp.div RNE (fp.div RNE (fp.add RNE x20 x9) (fp.neg x9)) (fp.neg (fp.add RNE x7 x1)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.div RNE x12 x15) (fp.div RNE x12 x3)) (fp.sub RNE (fp.div RNE x12 x12) (fp.div RNE x17 x6))) (fp.sub RNE (fp.mul RNE (fp.div RNE x20 x21) (fp.mul RNE x6 x17)) (fp.div RNE (fp.sub RNE x1 x19) (fp.mul RNE x18 x12)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x4 x17) (fp.add RNE x8 x20)) (fp.mul RNE (fp.mul RNE x9 x8) (fp.mul RNE x23 x22))) (fp.add RNE (fp.neg (fp.add RNE x21 x1)) (fp.sub RNE (fp.add RNE x0 x18) (fp.add RNE x1 x20)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.sub RNE x15 x9) (fp.sub RNE x14 x17)) (fp.add RNE (fp.add RNE x17 x11) (fp.mul RNE x18 x19))) (fp.div RNE (fp.add RNE (fp.mul RNE x21 x21) (fp.mul RNE x2 x3)) (fp.div RNE (fp.div RNE x0 x5) (fp.add RNE x22 x18)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE x17 x1) (fp.div RNE x7 x3)) (fp.add RNE (fp.mul RNE x14 x11) (fp.div RNE x15 x19))) (fp.sub RNE (fp.neg (fp.neg x16)) (fp.sub RNE (fp.add RNE x3 x13) (fp.div RNE x11 x17)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg x23) (fp.sub RNE x14 x3))) (fp.neg (fp.add RNE (fp.mul RNE x20 x15) (fp.neg x21)))))
(assert (fp.lt (fp.neg (fp.neg (fp.sub RNE x5 x15))) (fp.mul RNE (fp.div RNE (fp.neg x11) (fp.sub RNE x10 x8)) (fp.sub RNE (fp.div RNE x8 x17) (fp.div RNE x8 x0)))))
(assert (fp.geq (fp.neg (fp.neg (fp.sub RNE x6 x19))) (fp.add RNE (fp.sub RNE (fp.sub RNE x17 x6) (fp.neg x13)) (fp.sub RNE (fp.neg x5) (fp.add RNE x12 x3)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x18 x23) (fp.div RNE x1 x1)) (fp.sub RNE (fp.mul RNE x21 x14) (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.add RNE x2 x19) (fp.neg x20)) (fp.add RNE (fp.div RNE x1 x1) (fp.add RNE x1 x11)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x1 x20) (fp.sub RNE x6 x10)) (fp.neg (fp.sub RNE x2 x9))) (fp.add RNE (fp.neg (fp.div RNE x13 x0)) (fp.add RNE (fp.div RNE x2 x9) (fp.mul RNE x13 x17)))))
(check-sat)
