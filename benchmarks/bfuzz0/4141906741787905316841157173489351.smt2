(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.sub RNE x10 x6) (fp.div RNE x12 x12)) (fp.sub RNE (fp.div RNE x8 x6) (fp.div RNE x8 x6))) (fp.add RNE (fp.add RNE (fp.div RNE x14 x11) (fp.add RNE x0 x14)) (fp.neg (fp.add RNE x7 x8)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.neg x7) (fp.mul RNE x12 x10)) (fp.div RNE (fp.mul RNE x12 x2) (fp.neg x6))) (fp.sub RNE (fp.add RNE (fp.mul RNE x4 x7) (fp.div RNE x2 x0)) (fp.div RNE (fp.mul RNE x9 x14) (fp.add RNE x5 x13)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x12 x4) (fp.sub RNE x1 x10))) (fp.mul RNE (fp.sub RNE (fp.add RNE x13 x6) (fp.add RNE x9 x0)) (fp.neg (fp.add RNE x10 x2)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x1 x5)) (fp.sub RNE (fp.mul RNE x6 x14) (fp.sub RNE x10 x0))) (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.neg x1)) (fp.neg (fp.mul RNE x10 x11)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.div RNE x13 x2)) (fp.sub RNE (fp.add RNE x4 x3) (fp.mul RNE x8 x11))) (fp.sub RNE (fp.div RNE (fp.add RNE x8 x2) (fp.sub RNE x1 x10)) (fp.neg (fp.add RNE x14 x11)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.mul RNE x6 x3)) (fp.add RNE (fp.mul RNE x7 x10) (fp.add RNE x12 x7))) (fp.add RNE (fp.div RNE (fp.sub RNE x6 x7) (fp.div RNE x11 x9)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x7 x5)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE x10 x12)) (fp.div RNE (fp.neg x11) (fp.mul RNE x2 x5))) (fp.neg (fp.div RNE (fp.add RNE x6 x10) (fp.sub RNE x8 x7)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.div RNE x11 x8) (fp.add RNE x5 x6))) (fp.add RNE (fp.div RNE (fp.div RNE x5 x13) (fp.mul RNE x9 x13)) (fp.neg (fp.div RNE x7 x3)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.neg x7) (fp.neg x10))) (fp.add RNE (fp.add RNE (fp.div RNE x1 x14) (fp.div RNE x9 x1)) (fp.sub RNE (fp.sub RNE x1 x9) (fp.add RNE x11 x10)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x11) (fp.sub RNE x14 x9)) (fp.add RNE (fp.div RNE x6 x10) (fp.add RNE x5 x8))) (fp.neg (fp.mul RNE (fp.mul RNE x1 x9) (fp.div RNE x9 x1)))))
(check-sat)
