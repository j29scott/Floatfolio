(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x1) (fp.div RNE x9 x0)) (fp.neg (fp.add RNE x8 x9))) (fp.mul RNE (fp.neg (fp.sub RNE x3 x8)) (fp.div RNE (fp.div RNE x5 x2) (fp.add RNE x11 x9)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.add RNE x1 x9)) (fp.add RNE (fp.neg x2) (fp.sub RNE x6 x4))) (fp.add RNE (fp.sub RNE (fp.add RNE x12 x2) (fp.add RNE x0 x10)) (fp.div RNE (fp.add RNE x7 x8) (fp.div RNE x4 x11)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x12) (fp.mul RNE x1 x7)) (fp.add RNE (fp.neg x7) (fp.add RNE x3 x4))) (fp.neg (fp.mul RNE (fp.add RNE x4 x1) (fp.div RNE x7 x5)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x3) (fp.neg x7)) (fp.mul RNE (fp.div RNE x9 x8) (fp.mul RNE x8 x11))) (fp.mul RNE (fp.neg (fp.add RNE x0 x6)) (fp.mul RNE (fp.div RNE x8 x4) (fp.neg x5)))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg x12))) (fp.neg (fp.div RNE (fp.sub RNE x12 x12) (fp.add RNE x7 x9)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x5 x5) (fp.mul RNE x6 x0)) (fp.add RNE (fp.sub RNE x3 x8) (fp.mul RNE x4 x7))) (fp.neg (fp.sub RNE (fp.add RNE x10 x0) (fp.neg x12)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x10 x8) (fp.add RNE x0 x3))) (fp.add RNE (fp.neg (fp.div RNE x9 x6)) (fp.mul RNE (fp.add RNE x5 x5) (fp.mul RNE x6 x0)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.sub RNE x6 x3) (fp.sub RNE x3 x4)) (fp.mul RNE (fp.neg x6) (fp.div RNE x12 x8))) (fp.sub RNE (fp.div RNE (fp.sub RNE x4 x2) (fp.div RNE x1 x8)) (fp.mul RNE (fp.mul RNE x8 x3) (fp.sub RNE x11 x3)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x1 x2)) (fp.mul RNE (fp.add RNE x6 x5) (fp.mul RNE x7 x7))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x10 x11) (fp.div RNE x4 x1)) (fp.neg (fp.mul RNE x3 x6)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x10 x2) (fp.neg x2)) (fp.add RNE (fp.mul RNE x11 x4) (fp.div RNE x10 x0))) (fp.sub RNE (fp.add RNE (fp.mul RNE x8 x7) (fp.mul RNE x8 x10)) (fp.mul RNE (fp.div RNE x5 x11) (fp.mul RNE x8 x11)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x12 x3) (fp.div RNE x5 x7)) (fp.sub RNE (fp.div RNE x11 x5) (fp.add RNE x8 x9))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x7) (fp.neg x5)) (fp.neg (fp.mul RNE x5 x8)))))
(check-sat)
