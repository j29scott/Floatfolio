(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x10 x5) (fp.add RNE x11 x15)) (fp.div RNE (fp.neg x14) (fp.div RNE x10 x10))) (fp.sub RNE (fp.neg (fp.mul RNE x0 x4)) (fp.mul RNE (fp.div RNE x13 x1) (fp.neg x3)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.div RNE x3 x1) (fp.neg x15)) (fp.neg (fp.div RNE x9 x8))) (fp.div RNE (fp.neg (fp.sub RNE x9 x10)) (fp.mul RNE (fp.add RNE x1 x3) (fp.sub RNE x7 x10)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x11) (fp.sub RNE x2 x12)) (fp.mul RNE (fp.add RNE x7 x1) (fp.add RNE x7 x8))) (fp.div RNE (fp.mul RNE (fp.div RNE x5 x0) (fp.sub RNE x0 x4)) (fp.div RNE (fp.div RNE x9 x15) (fp.sub RNE x2 x12)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE x11 x9) (fp.sub RNE x2 x7))) (fp.mul RNE (fp.neg (fp.div RNE x12 x5)) (fp.neg (fp.mul RNE x2 x3)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x1) (fp.neg x13)) (fp.mul RNE (fp.sub RNE x9 x11) (fp.mul RNE x9 x13))) (fp.neg (fp.div RNE (fp.neg x0) (fp.sub RNE x2 x14)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x7 x10) (fp.sub RNE x11 x5))) (fp.add RNE (fp.div RNE (fp.div RNE x13 x13) (fp.div RNE x11 x4)) (fp.neg (fp.div RNE x3 x4)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.div RNE x0 x10)) (fp.sub RNE (fp.add RNE x9 x3) (fp.neg x8))) (fp.mul RNE (fp.div RNE (fp.div RNE x9 x3) (fp.div RNE x3 x6)) (fp.mul RNE (fp.mul RNE x9 x8) (fp.mul RNE x11 x10)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x3 x9) (fp.neg x10)) (fp.add RNE (fp.add RNE x11 x10) (fp.div RNE x3 x2))) (fp.mul RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x15 x5)) (fp.add RNE (fp.neg x15) (fp.div RNE x3 x1)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE x5 x0) (fp.add RNE x14 x10)) (fp.mul RNE (fp.neg x10) (fp.neg x4))) (fp.add RNE (fp.mul RNE (fp.add RNE x2 x0) (fp.neg x2)) (fp.div RNE (fp.neg x1) (fp.mul RNE x12 x1)))))
(check-sat)
