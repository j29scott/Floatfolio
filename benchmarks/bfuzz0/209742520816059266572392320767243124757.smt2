(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.div RNE x2 x3) (fp.neg x9)) (fp.div RNE (fp.mul RNE x0 x1) (fp.mul RNE x13 x5))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x13 x8) (fp.sub RNE x0 x13)) (fp.neg (fp.mul RNE x6 x12))))
(assert (fp.lt (fp.div RNE (fp.neg x9) (fp.mul RNE x11 x6)) (fp.add RNE (fp.add RNE x5 x0) (fp.div RNE x5 x8))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x0 x8) (fp.div RNE x1 x0)) (fp.neg (fp.mul RNE x2 x4))))
(assert (fp.eq (fp.sub RNE (fp.neg x9) (fp.div RNE x1 x4)) (fp.div RNE (fp.add RNE x9 x8) (fp.sub RNE x12 x9))))
(check-sat)
