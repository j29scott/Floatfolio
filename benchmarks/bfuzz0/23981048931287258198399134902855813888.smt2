(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.neg x11) (fp.add RNE x10 x0)) (fp.sub RNE (fp.mul RNE x7 x1) (fp.sub RNE x4 x8))))
(assert (fp.gt (fp.mul RNE (fp.neg x8) (fp.div RNE x0 x0)) (fp.neg (fp.add RNE x6 x3))))
(assert (fp.geq (fp.sub RNE (fp.neg x8) (fp.div RNE x8 x1)) (fp.mul RNE (fp.neg x2) (fp.add RNE x3 x9))))
(assert (fp.geq (fp.neg (fp.mul RNE x3 x2)) (fp.neg (fp.div RNE x1 x6))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x5 x9) (fp.sub RNE x10 x2)) (fp.div RNE (fp.mul RNE x0 x9) (fp.div RNE x3 x4))))
(assert (fp.geq (fp.add RNE (fp.add RNE x2 x8) (fp.div RNE x3 x5)) (fp.add RNE (fp.mul RNE x2 x4) (fp.div RNE x4 x10))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x4 x9) (fp.div RNE x9 x9)) (fp.sub RNE (fp.sub RNE x3 x8) (fp.add RNE x10 x5))))
(check-sat)
