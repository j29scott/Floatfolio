(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg (fp.neg x4))) (fp.neg (fp.mul RNE (fp.mul RNE x2 x2) (fp.neg x3)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.div RNE x0 x2) (fp.sub RNE x0 x0)) (fp.add RNE (fp.add RNE x1 x4) (fp.div RNE x3 x4))) (fp.neg (fp.div RNE (fp.mul RNE x4 x3) (fp.div RNE x3 x4))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x2 x3) (fp.mul RNE x4 x1)) (fp.neg (fp.add RNE x1 x2))) (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x1) (fp.neg x2)) (fp.div RNE (fp.sub RNE x1 x2) (fp.neg x3)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.add RNE x1 x4) (fp.sub RNE x4 x4)) (fp.mul RNE (fp.mul RNE x3 x1) (fp.add RNE x4 x0))) (fp.add RNE (fp.add RNE (fp.sub RNE x2 x2) (fp.add RNE x2 x4)) (fp.mul RNE (fp.add RNE x4 x1) (fp.sub RNE x0 x0))))))
(check-sat)
