(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.sub RNE x15 x16) (fp.sub RNE x16 x12))) (fp.div RNE (fp.mul RNE (fp.mul RNE x15 x11) (fp.div RNE x5 x7)) (fp.div RNE (fp.sub RNE x17 x17) (fp.sub RNE x18 x5)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x15 x9) (fp.add RNE x3 x8)) (fp.mul RNE (fp.mul RNE x16 x17) (fp.add RNE x11 x17))) (fp.div RNE (fp.add RNE (fp.neg x4) (fp.add RNE x17 x11)) (fp.sub RNE (fp.sub RNE x16 x9) (fp.add RNE x17 x8)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg x5)) (fp.mul RNE (fp.mul RNE x0 x18) (fp.neg x3))) (fp.div RNE (fp.neg (fp.div RNE x7 x7)) (fp.add RNE (fp.mul RNE x2 x7) (fp.add RNE x1 x10)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x6 x11) (fp.div RNE x0 x6)) (fp.mul RNE (fp.mul RNE x13 x6) (fp.add RNE x0 x3))) (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x7) (fp.sub RNE x16 x18)) (fp.add RNE (fp.mul RNE x16 x0) (fp.mul RNE x10 x2)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x16) (fp.mul RNE x3 x15)) (fp.add RNE (fp.mul RNE x10 x3) (fp.sub RNE x18 x7))) (fp.div RNE (fp.add RNE (fp.add RNE x15 x4) (fp.div RNE x11 x18)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x7 x13)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x8 x16) (fp.neg x9)) (fp.add RNE (fp.add RNE x0 x11) (fp.neg x14))) (fp.add RNE (fp.div RNE (fp.sub RNE x5 x11) (fp.add RNE x5 x1)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x7 x13)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.div RNE x3 x7) (fp.add RNE x7 x17)) (fp.sub RNE (fp.neg x8) (fp.div RNE x0 x9))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x11 x3) (fp.neg x7)) (fp.neg (fp.div RNE x11 x4)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE x2 x11) (fp.mul RNE x14 x7)) (fp.mul RNE (fp.sub RNE x5 x10) (fp.add RNE x3 x0))) (fp.neg (fp.add RNE (fp.div RNE x17 x7) (fp.neg x4)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x11) (fp.div RNE x10 x18)) (fp.sub RNE (fp.neg x5) (fp.neg x3))) (fp.mul RNE (fp.mul RNE (fp.neg x12) (fp.sub RNE x3 x12)) (fp.add RNE (fp.div RNE x18 x17) (fp.neg x12)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x7 x6) (fp.mul RNE x10 x17))) (fp.add RNE (fp.mul RNE (fp.div RNE x5 x18) (fp.neg x18)) (fp.div RNE (fp.mul RNE x6 x2) (fp.mul RNE x1 x10)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.div RNE x3 x15) (fp.sub RNE x16 x9)) (fp.neg (fp.add RNE x15 x12))) (fp.add RNE (fp.mul RNE (fp.div RNE x1 x6) (fp.sub RNE x4 x1)) (fp.mul RNE (fp.sub RNE x8 x2) (fp.neg x13)))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE x8 x10))) (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x11) (fp.neg x0)) (fp.mul RNE (fp.add RNE x12 x8) (fp.neg x4)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x0 x12)) (fp.div RNE (fp.div RNE x3 x14) (fp.add RNE x13 x11))) (fp.sub RNE (fp.div RNE (fp.mul RNE x17 x2) (fp.neg x9)) (fp.mul RNE (fp.add RNE x8 x8) (fp.neg x17)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE x1 x5) (fp.neg x16)) (fp.mul RNE (fp.add RNE x11 x7) (fp.add RNE x3 x9))) (fp.add RNE (fp.mul RNE (fp.mul RNE x12 x14) (fp.div RNE x4 x17)) (fp.add RNE (fp.mul RNE x6 x15) (fp.mul RNE x17 x17)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.div RNE x2 x9) (fp.neg x9)) (fp.add RNE (fp.neg x1) (fp.mul RNE x16 x15))) (fp.sub RNE (fp.add RNE (fp.sub RNE x15 x13) (fp.add RNE x11 x15)) (fp.neg (fp.neg x13)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x6) (fp.sub RNE x4 x0)) (fp.div RNE (fp.div RNE x8 x4) (fp.sub RNE x7 x13))) (fp.neg (fp.sub RNE (fp.sub RNE x2 x1) (fp.mul RNE x16 x10)))))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE x0 x12))) (fp.neg (fp.sub RNE (fp.sub RNE x16 x14) (fp.mul RNE x9 x16)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.div RNE x11 x3) (fp.sub RNE x17 x7)) (fp.sub RNE (fp.sub RNE x7 x11) (fp.neg x13))) (fp.add RNE (fp.sub RNE (fp.add RNE x7 x17) (fp.sub RNE x11 x5)) (fp.mul RNE (fp.add RNE x16 x11) (fp.add RNE x8 x10)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg x14) (fp.mul RNE x18 x8)) (fp.add RNE (fp.neg x13) (fp.add RNE x0 x0))) (fp.mul RNE (fp.div RNE (fp.mul RNE x14 x0) (fp.div RNE x2 x5)) (fp.neg (fp.neg x17)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x11 x5) (fp.sub RNE x5 x15)) (fp.div RNE (fp.sub RNE x5 x14) (fp.div RNE x8 x14))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x12) (fp.neg x10)) (fp.sub RNE (fp.add RNE x4 x6) (fp.div RNE x16 x16)))))
(check-sat)
