(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.mul RNE x7 x4) (fp.mul RNE x18 x4)) (fp.sub RNE (fp.neg x9) (fp.mul RNE x17 x1))))
(assert (fp.leq (fp.neg (fp.add RNE x7 x11)) (fp.sub RNE (fp.add RNE x12 x19) (fp.mul RNE x14 x9))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x14 x7) (fp.neg x14)) (fp.mul RNE (fp.neg x19) (fp.sub RNE x6 x8))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x13 x18) (fp.add RNE x10 x15)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x3 x19))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x6 x11) (fp.mul RNE x19 x1)) (fp.neg (fp.div RNE x8 x1))))
(assert (fp.geq (fp.div RNE (fp.div RNE x13 x14) (fp.sub RNE x0 x9)) (fp.add RNE (fp.div RNE x19 x17) (fp.mul RNE x16 x14))))
(assert (fp.geq (fp.div RNE (fp.div RNE x11 x8) (fp.neg x14)) (fp.mul RNE (fp.add RNE x2 x16) (fp.neg x16))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x4 x17) (fp.mul RNE x11 x3)) (fp.add RNE (fp.add RNE x12 x5) (fp.neg x6))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x3 x19) (fp.add RNE x10 x0)) (fp.neg (fp.add RNE x1 x12))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x8 x9) (fp.mul RNE x0 x19)) (fp.mul RNE (fp.mul RNE x19 x8) (fp.add RNE x14 x2))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x15 x9) (fp.div RNE x7 x15)) (fp.div RNE (fp.neg x4) (fp.mul RNE x16 x7))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x3 x5) (fp.add RNE x15 x15)) (fp.div RNE (fp.mul RNE x1 x17) (fp.neg x3))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x6 x0) (fp.mul RNE x10 x6)) (fp.neg (fp.add RNE x5 x16))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x14 x16) (fp.add RNE x6 x10)) (fp.neg (fp.sub RNE x0 x9))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x16 x17) (fp.sub RNE x7 x3)) (fp.neg (fp.sub RNE x16 x15))))
(check-sat)
