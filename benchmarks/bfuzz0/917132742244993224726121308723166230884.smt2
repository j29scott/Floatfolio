(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x20) (fp.sub RNE x12 x23)))
(assert (fp.geq (fp.neg x15) (fp.neg x20)))
(assert (fp.lt (fp.div RNE x18 x8) (fp.mul RNE x14 x14)))
(assert (fp.geq (fp.add RNE x18 x0) (fp.sub RNE x11 x12)))
(assert (fp.gt (fp.add RNE x5 x10) (fp.add RNE x2 x22)))
(assert (fp.leq (fp.add RNE x17 x7) (fp.neg x6)))
(assert (fp.gt (fp.add RNE x9 x2) (fp.mul RNE x17 x17)))
(assert (fp.geq (fp.add RNE x4 x11) (fp.sub RNE x17 x10)))
(assert (fp.gt (fp.add RNE x18 x11) (fp.div RNE x24 x19)))
(assert (fp.geq (fp.mul RNE x3 x23) (fp.div RNE x10 x0)))
(assert (fp.gt (fp.neg x6) (fp.mul RNE x3 x13)))
(assert (fp.leq (fp.add RNE x23 x6) (fp.sub RNE x16 x23)))
(assert (fp.geq (fp.sub RNE x8 x21) (fp.neg x2)))
(assert (fp.gt (fp.add RNE x14 x6) (fp.neg x16)))
(assert (fp.lt (fp.add RNE x21 x8) (fp.sub RNE x8 x20)))
(assert (fp.gt (fp.add RNE x10 x2) (fp.sub RNE x3 x24)))
(assert (fp.gt (fp.mul RNE x21 x21) (fp.add RNE x23 x14)))
(assert (fp.lt (fp.sub RNE x21 x9) (fp.div RNE x20 x14)))
(check-sat)
