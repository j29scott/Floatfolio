(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x0 x17) (fp.add RNE x6 x1)))
(assert (fp.geq (fp.neg x4) (fp.mul RNE x7 x20)))
(assert (fp.eq (fp.div RNE x22 x5) (fp.add RNE x16 x13)))
(assert (fp.leq (fp.neg x10) (fp.neg x2)))
(assert (fp.geq (fp.sub RNE x8 x21) (fp.neg x2)))
(assert (fp.leq (fp.sub RNE x13 x19) (fp.add RNE x10 x4)))
(assert (fp.geq (fp.div RNE x12 x4) (fp.add RNE x1 x8)))
(assert (fp.lt (fp.mul RNE x3 x16) (fp.div RNE x0 x18)))
(assert (fp.leq (fp.sub RNE x19 x16) (fp.sub RNE x15 x13)))
(assert (fp.eq (fp.mul RNE x12 x16) (fp.neg x22)))
(assert (fp.eq (fp.sub RNE x20 x20) (fp.sub RNE x21 x15)))
(assert (fp.geq (fp.add RNE x17 x7) (fp.div RNE x8 x4)))
(assert (fp.leq (fp.mul RNE x10 x12) (fp.div RNE x9 x15)))
(assert (fp.gt (fp.sub RNE x17 x5) (fp.sub RNE x22 x7)))
(assert (fp.lt (fp.add RNE x14 x3) (fp.add RNE x21 x17)))
(assert (fp.leq (fp.neg x2) (fp.div RNE x10 x22)))
(check-sat)
