(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.neg x3) (fp.sub RNE x4 x6)) (fp.add RNE (fp.mul RNE x3 x2) (fp.div RNE x7 x2))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x13 x12) (fp.mul RNE x4 x10)) (fp.mul RNE (fp.neg x16) (fp.neg x4))))
(assert (fp.eq (fp.div RNE (fp.neg x11) (fp.sub RNE x19 x5)) (fp.add RNE (fp.mul RNE x8 x3) (fp.mul RNE x7 x13))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x19 x8) (fp.div RNE x4 x3)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x15 x7) (fp.sub RNE x5 x0)) (fp.neg (fp.mul RNE x8 x18))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x7 x5) (fp.div RNE x3 x15)) (fp.add RNE (fp.neg x2) (fp.mul RNE x14 x15))))
(assert (fp.lt (fp.add RNE (fp.div RNE x5 x13) (fp.div RNE x9 x5)) (fp.mul RNE (fp.div RNE x14 x2) (fp.neg x10))))
(assert (fp.geq (fp.neg (fp.sub RNE x8 x14)) (fp.neg (fp.add RNE x0 x5))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x18 x13) (fp.neg x8)) (fp.add RNE (fp.add RNE x16 x15) (fp.neg x11))))
(assert (fp.gt (fp.div RNE (fp.neg x0) (fp.add RNE x1 x11)) (fp.neg (fp.add RNE x16 x10))))
(check-sat)
