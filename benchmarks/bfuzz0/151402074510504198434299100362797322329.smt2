(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.neg (fp.mul RNE x2 x3)) (fp.div RNE (fp.div RNE x14 x3) (fp.div RNE x14 x4))) (fp.neg (fp.mul RNE (fp.div RNE x9 x8) (fp.div RNE x13 x15)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x0 x2) (fp.add RNE x0 x7)) (fp.sub RNE (fp.sub RNE x2 x8) (fp.add RNE x8 x9))) (fp.mul RNE (fp.add RNE (fp.sub RNE x9 x2) (fp.sub RNE x5 x0)) (fp.sub RNE (fp.sub RNE x6 x3) (fp.div RNE x13 x3)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x3 x15) (fp.neg x11)) (fp.sub RNE (fp.sub RNE x4 x1) (fp.div RNE x13 x5))) (fp.mul RNE (fp.neg (fp.neg x13)) (fp.mul RNE (fp.div RNE x0 x0) (fp.mul RNE x13 x11)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.mul RNE x10 x11)) (fp.add RNE (fp.mul RNE x15 x10) (fp.add RNE x1 x6))) (fp.neg (fp.neg (fp.mul RNE x11 x7)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x7) (fp.add RNE x6 x11)) (fp.mul RNE (fp.neg x15) (fp.neg x15))) (fp.add RNE (fp.add RNE (fp.mul RNE x5 x2) (fp.neg x2)) (fp.sub RNE (fp.sub RNE x15 x8) (fp.neg x3)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x2 x7) (fp.neg x0))) (fp.neg (fp.neg (fp.neg x1)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x4))) (fp.mul RNE (fp.mul RNE (fp.neg x6) (fp.mul RNE x13 x12)) (fp.div RNE (fp.add RNE x1 x2) (fp.neg x8)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE x6 x3) (fp.div RNE x0 x12)) (fp.mul RNE (fp.div RNE x0 x9) (fp.div RNE x2 x9))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x6 x14) (fp.div RNE x1 x12)) (fp.add RNE (fp.sub RNE x8 x5) (fp.div RNE x1 x5)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE x9 x4) (fp.sub RNE x11 x7))) (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.mul RNE x0 x11)) (fp.sub RNE (fp.add RNE x3 x9) (fp.add RNE x1 x13)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x7) (fp.mul RNE x1 x0)) (fp.sub RNE (fp.mul RNE x13 x8) (fp.add RNE x2 x10))) (fp.add RNE (fp.div RNE (fp.neg x1) (fp.mul RNE x8 x15)) (fp.sub RNE (fp.sub RNE x15 x2) (fp.sub RNE x11 x14)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x14 x15) (fp.mul RNE x0 x15)) (fp.neg (fp.neg x2))) (fp.div RNE (fp.add RNE (fp.div RNE x12 x6) (fp.mul RNE x12 x2)) (fp.add RNE (fp.add RNE x5 x9) (fp.sub RNE x9 x9)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x5 x8)) (fp.neg (fp.add RNE x5 x9))) (fp.neg (fp.neg (fp.neg x1)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE x2 x11) (fp.sub RNE x11 x8)) (fp.sub RNE (fp.add RNE x5 x11) (fp.mul RNE x13 x7))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x7 x1) (fp.sub RNE x2 x13)) (fp.div RNE (fp.div RNE x1 x2) (fp.neg x15)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.mul RNE x12 x11) (fp.sub RNE x4 x11)) (fp.mul RNE (fp.add RNE x1 x1) (fp.mul RNE x3 x0))) (fp.add RNE (fp.div RNE (fp.div RNE x15 x10) (fp.sub RNE x10 x6)) (fp.add RNE (fp.mul RNE x7 x7) (fp.add RNE x1 x4)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg x6)) (fp.neg (fp.div RNE x12 x0))) (fp.neg (fp.div RNE (fp.sub RNE x1 x3) (fp.div RNE x12 x6)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.add RNE x4 x14) (fp.neg x9)) (fp.add RNE (fp.mul RNE x15 x2) (fp.div RNE x8 x15))) (fp.add RNE (fp.sub RNE (fp.mul RNE x9 x7) (fp.neg x3)) (fp.add RNE (fp.sub RNE x9 x6) (fp.div RNE x13 x5)))))
(check-sat)
