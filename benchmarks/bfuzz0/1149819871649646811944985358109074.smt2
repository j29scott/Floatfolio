(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE x7 x6) (fp.div RNE x4 x5)))
(assert (fp.eq (fp.div RNE x4 x3) (fp.sub RNE x0 x2)))
(assert (fp.leq (fp.mul RNE x4 x2) (fp.sub RNE x1 x2)))
(assert (fp.lt (fp.mul RNE x2 x0) (fp.add RNE x5 x6)))
(assert (fp.gt (fp.div RNE x1 x10) (fp.sub RNE x7 x9)))
(assert (fp.eq (fp.add RNE x3 x5) (fp.add RNE x7 x4)))
(assert (fp.leq (fp.neg x7) (fp.add RNE x0 x4)))
(assert (fp.gt (fp.neg x10) (fp.mul RNE x3 x1)))
(assert (fp.gt (fp.add RNE x4 x9) (fp.add RNE x5 x0)))
(assert (fp.leq (fp.mul RNE x4 x1) (fp.sub RNE x0 x7)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x0 x0)))
(assert (fp.lt (fp.sub RNE x0 x0) (fp.div RNE x6 x3)))
(assert (fp.lt (fp.div RNE x6 x8) (fp.add RNE x3 x1)))
(assert (fp.eq (fp.add RNE x1 x3) (fp.sub RNE x10 x4)))
(assert (fp.leq (fp.mul RNE x3 x3) (fp.neg x0)))
(assert (fp.lt (fp.add RNE x4 x10) (fp.div RNE x3 x7)))
(check-sat)
