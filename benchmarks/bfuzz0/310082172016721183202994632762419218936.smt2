(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.div RNE x10 x14)) (fp.sub RNE (fp.add RNE x9 x11) (fp.div RNE x0 x4))))
(assert (fp.eq (fp.add RNE (fp.add RNE x1 x6) (fp.mul RNE x11 x3)) (fp.sub RNE (fp.mul RNE x4 x5) (fp.sub RNE x7 x14))))
(assert (fp.leq (fp.neg (fp.neg x6)) (fp.add RNE (fp.mul RNE x2 x1) (fp.div RNE x14 x12))))
(assert (fp.gt (fp.neg (fp.add RNE x13 x9)) (fp.div RNE (fp.neg x0) (fp.mul RNE x2 x10))))
(assert (fp.leq (fp.mul RNE (fp.neg x13) (fp.mul RNE x1 x15)) (fp.div RNE (fp.mul RNE x8 x7) (fp.neg x2))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x8 x0) (fp.add RNE x14 x8)) (fp.mul RNE (fp.mul RNE x13 x16) (fp.div RNE x13 x13))))
(assert (fp.lt (fp.neg (fp.add RNE x13 x2)) (fp.mul RNE (fp.sub RNE x13 x11) (fp.mul RNE x16 x13))))
(assert (fp.leq (fp.neg (fp.sub RNE x16 x4)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x12 x8) (fp.mul RNE x14 x7)) (fp.add RNE (fp.neg x0) (fp.sub RNE x16 x4))))
(assert (fp.leq (fp.neg (fp.sub RNE x0 x3)) (fp.mul RNE (fp.sub RNE x6 x8) (fp.add RNE x3 x2))))
(assert (fp.eq (fp.neg (fp.add RNE x5 x3)) (fp.neg (fp.sub RNE x2 x14))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x9 x4) (fp.div RNE x0 x13)) (fp.add RNE (fp.add RNE x4 x0) (fp.mul RNE x2 x9))))
(assert (fp.lt (fp.neg (fp.mul RNE x12 x7)) (fp.mul RNE (fp.mul RNE x16 x5) (fp.neg x12))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x15 x16) (fp.div RNE x3 x5)) (fp.sub RNE (fp.neg x8) (fp.add RNE x8 x10))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x2 x13) (fp.neg x6)) (fp.neg (fp.sub RNE x10 x14))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x13 x6) (fp.add RNE x0 x6)) (fp.neg (fp.add RNE x3 x13))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x3 x9) (fp.mul RNE x15 x15)) (fp.mul RNE (fp.mul RNE x2 x13) (fp.add RNE x2 x4))))
(assert (fp.eq (fp.neg (fp.neg x0)) (fp.div RNE (fp.div RNE x14 x9) (fp.mul RNE x6 x12))))
(assert (fp.eq (fp.add RNE (fp.neg x7) (fp.add RNE x2 x12)) (fp.mul RNE (fp.add RNE x11 x0) (fp.sub RNE x12 x3))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x15) (fp.neg x13)) (fp.div RNE (fp.div RNE x16 x16) (fp.neg x15))))
(check-sat)
