(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x4 x14) (fp.add RNE x7 x15)))
(assert (fp.eq (fp.div RNE x5 x10) (fp.add RNE x0 x1)))
(assert (fp.leq (fp.div RNE x15 x5) (fp.mul RNE x2 x17)))
(assert (fp.lt (fp.neg x15) (fp.add RNE x11 x4)))
(assert (fp.eq (fp.add RNE x9 x1) (fp.sub RNE x8 x17)))
(assert (fp.lt (fp.div RNE x5 x2) (fp.neg x12)))
(assert (fp.eq (fp.div RNE x14 x1) (fp.div RNE x14 x7)))
(assert (fp.leq (fp.sub RNE x4 x4) (fp.neg x8)))
(assert (fp.eq (fp.neg x17) (fp.add RNE x11 x5)))
(assert (fp.leq (fp.add RNE x12 x17) (fp.div RNE x16 x17)))
(assert (fp.lt (fp.add RNE x17 x11) (fp.div RNE x0 x1)))
(assert (fp.geq (fp.add RNE x1 x14) (fp.add RNE x4 x6)))
(assert (fp.leq (fp.sub RNE x16 x17) (fp.add RNE x4 x0)))
(check-sat)
