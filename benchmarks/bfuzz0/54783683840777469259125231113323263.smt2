(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x10 x1) (fp.neg x22)) (fp.mul RNE (fp.mul RNE x20 x9) (fp.mul RNE x10 x11))) (fp.add RNE (fp.sub RNE (fp.add RNE x9 x19) (fp.div RNE x7 x9)) (fp.sub RNE (fp.mul RNE x9 x11) (fp.div RNE x20 x15)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.div RNE x10 x12) (fp.neg x4)) (fp.sub RNE (fp.div RNE x9 x7) (fp.mul RNE x8 x21))) (fp.sub RNE (fp.mul RNE (fp.add RNE x20 x7) (fp.sub RNE x0 x7)) (fp.neg (fp.neg x19))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x13) (fp.add RNE x11 x21)) (fp.sub RNE (fp.neg x21) (fp.neg x6)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.neg x15) (fp.sub RNE x11 x23)) (fp.neg (fp.div RNE x11 x4))) (fp.mul RNE (fp.mul RNE (fp.neg x11) (fp.sub RNE x20 x2)) (fp.add RNE (fp.sub RNE x24 x5) (fp.add RNE x19 x1))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE (fp.sub RNE x4 x19) (fp.div RNE x24 x23))) (fp.mul RNE (fp.add RNE (fp.neg x18) (fp.add RNE x7 x19)) (fp.neg (fp.neg x16)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x15 x23)) (fp.div RNE (fp.mul RNE x19 x6) (fp.mul RNE x2 x9))) (fp.neg (fp.add RNE (fp.sub RNE x12 x12) (fp.mul RNE x4 x5))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x11 x20) (fp.neg x3)) (fp.add RNE (fp.mul RNE x2 x18) (fp.div RNE x7 x0))) (fp.add RNE (fp.mul RNE (fp.neg x13) (fp.mul RNE x15 x15)) (fp.mul RNE (fp.sub RNE x19 x19) (fp.add RNE x17 x13)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x7 x12) (fp.add RNE x11 x1)) (fp.div RNE (fp.div RNE x17 x6) (fp.add RNE x16 x9))) (fp.sub RNE (fp.mul RNE (fp.div RNE x1 x6) (fp.div RNE x17 x15)) (fp.mul RNE (fp.mul RNE x10 x14) (fp.neg x9))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.add RNE x22 x16) (fp.neg x11)) (fp.add RNE (fp.add RNE x7 x11) (fp.mul RNE x24 x22)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.sub RNE x19 x6) (fp.sub RNE x8 x3))) (fp.mul RNE (fp.sub RNE (fp.div RNE x22 x16) (fp.add RNE x8 x10)) (fp.sub RNE (fp.neg x22) (fp.div RNE x14 x2))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg (fp.add RNE x6 x14)) (fp.div RNE (fp.neg x1) (fp.mul RNE x23 x10)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.sub RNE x22 x6) (fp.add RNE x19 x3)) (fp.add RNE (fp.div RNE x14 x12) (fp.mul RNE x0 x17))) (fp.add RNE (fp.sub RNE (fp.sub RNE x23 x21) (fp.neg x15)) (fp.sub RNE (fp.add RNE x21 x20) (fp.sub RNE x17 x17))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE (fp.div RNE x23 x20) (fp.neg x0))) (fp.sub RNE (fp.add RNE (fp.neg x10) (fp.sub RNE x10 x24)) (fp.div RNE (fp.mul RNE x3 x23) (fp.mul RNE x24 x22)))) (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x5 x3) (fp.add RNE x24 x2))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x21 x11)) (fp.mul RNE (fp.neg x20) (fp.neg x21))) (fp.mul RNE (fp.div RNE (fp.sub RNE x15 x12) (fp.sub RNE x4 x12)) (fp.neg (fp.mul RNE x24 x20)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x10 x10) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x1 x23) (fp.add RNE x24 x3))) (fp.div RNE (fp.neg (fp.add RNE x19 x8)) (fp.neg (fp.add RNE x22 x20))))))
(check-sat)
