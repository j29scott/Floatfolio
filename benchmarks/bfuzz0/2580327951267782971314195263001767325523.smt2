(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.add RNE (fp.neg x21) (fp.neg x3)) (fp.sub RNE (fp.div RNE x11 x20) (fp.mul RNE x6 x12))) (fp.div RNE (fp.div RNE (fp.neg x20) (fp.add RNE x10 x22)) (fp.div RNE (fp.div RNE x22 x20) (fp.mul RNE x12 x14)))) (fp.div RNE (fp.neg (fp.add RNE (fp.add RNE x3 x15) (fp.div RNE x5 x10))) (fp.add RNE (fp.neg (fp.mul RNE x11 x13)) (fp.neg (fp.add RNE x12 x7))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.add RNE (fp.div RNE x5 x13) (fp.add RNE x3 x15)) (fp.mul RNE (fp.neg x23) (fp.sub RNE x9 x3)))) (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x3 x11) (fp.neg x17)) (fp.add RNE (fp.add RNE x15 x20) (fp.sub RNE x0 x13))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg (fp.mul RNE x21 x21)) (fp.div RNE (fp.mul RNE x17 x6) (fp.sub RNE x7 x20)))) (fp.mul RNE (fp.neg (fp.neg (fp.neg x22))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x22 x0) (fp.mul RNE x6 x11)) (fp.div RNE (fp.sub RNE x0 x0) (fp.mul RNE x4 x20))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x10 x18) (fp.neg x20)) (fp.mul RNE (fp.mul RNE x3 x12) (fp.add RNE x3 x16))) (fp.mul RNE (fp.neg (fp.sub RNE x13 x20)) (fp.sub RNE (fp.div RNE x19 x13) (fp.neg x4)))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x23) (fp.add RNE x3 x7)) (fp.sub RNE (fp.mul RNE x11 x22) (fp.div RNE x6 x5))) (fp.add RNE (fp.neg (fp.mul RNE x15 x23)) (fp.mul RNE (fp.div RNE x13 x16) (fp.neg x5))))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x22) (fp.add RNE x8 x22)) (fp.div RNE (fp.add RNE x0 x3) (fp.neg x7))) (fp.add RNE (fp.mul RNE (fp.add RNE x8 x8) (fp.mul RNE x15 x8)) (fp.sub RNE (fp.sub RNE x4 x1) (fp.add RNE x13 x2)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x23) (fp.sub RNE x15 x12)) (fp.div RNE (fp.mul RNE x7 x17) (fp.mul RNE x22 x9))) (fp.div RNE (fp.neg (fp.add RNE x17 x14)) (fp.div RNE (fp.mul RNE x17 x15) (fp.add RNE x9 x2))))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x17 x1)) (fp.sub RNE (fp.sub RNE x16 x19) (fp.mul RNE x16 x10)))) (fp.add RNE (fp.neg (fp.neg (fp.div RNE x19 x16))) (fp.mul RNE (fp.sub RNE (fp.add RNE x23 x13) (fp.div RNE x7 x11)) (fp.add RNE (fp.sub RNE x11 x23) (fp.add RNE x7 x20))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x19 x20) (fp.add RNE x1 x15)) (fp.neg (fp.mul RNE x10 x22))) (fp.mul RNE (fp.neg (fp.mul RNE x16 x2)) (fp.neg (fp.neg x4)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x7 x19) (fp.mul RNE x3 x5)) (fp.neg (fp.div RNE x3 x0))) (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x4) (fp.div RNE x10 x8)) (fp.sub RNE (fp.sub RNE x23 x12) (fp.sub RNE x9 x4))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg (fp.div RNE x9 x21)) (fp.add RNE (fp.mul RNE x8 x5) (fp.add RNE x11 x2))) (fp.add RNE (fp.neg (fp.mul RNE x13 x4)) (fp.neg (fp.mul RNE x13 x13)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.div RNE x18 x7) (fp.mul RNE x5 x23)) (fp.add RNE (fp.add RNE x2 x0) (fp.mul RNE x17 x10))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x16 x4) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x12 x10) (fp.sub RNE x14 x5))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.add RNE x2 x2) (fp.mul RNE x4 x10)) (fp.mul RNE (fp.mul RNE x0 x11) (fp.sub RNE x18 x22))) (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x14) (fp.sub RNE x8 x8)) (fp.add RNE (fp.sub RNE x8 x9) (fp.add RNE x9 x7)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.div RNE x12 x10) (fp.add RNE x11 x9))) (fp.div RNE (fp.add RNE (fp.div RNE x0 x5) (fp.mul RNE x22 x6)) (fp.sub RNE (fp.mul RNE x18 x9) (fp.sub RNE x12 x16))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.add RNE (fp.add RNE x16 x22) (fp.mul RNE x23 x23)) (fp.neg (fp.mul RNE x16 x21)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.div RNE x0 x15) (fp.div RNE x23 x21)) (fp.neg (fp.div RNE x7 x20))) (fp.mul RNE (fp.neg (fp.mul RNE x18 x22)) (fp.mul RNE (fp.neg x19) (fp.add RNE x6 x11))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.mul RNE x1 x8)) (fp.mul RNE (fp.neg x22) (fp.sub RNE x5 x6))) (fp.div RNE (fp.add RNE (fp.mul RNE x3 x18) (fp.add RNE x11 x18)) (fp.div RNE (fp.add RNE x18 x6) (fp.div RNE x13 x23)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.sub RNE x1 x8)) (fp.add RNE (fp.mul RNE x22 x19) (fp.sub RNE x22 x14))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x10 x2) (fp.neg x12)) (fp.div RNE (fp.sub RNE x22 x0) (fp.sub RNE x23 x4))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE (fp.div RNE x8 x3) (fp.sub RNE x14 x5))) (fp.neg (fp.mul RNE (fp.sub RNE x8 x7) (fp.add RNE x20 x23)))) (fp.sub RNE (fp.div RNE (fp.add RNE (fp.div RNE x3 x5) (fp.add RNE x11 x0)) (fp.add RNE (fp.add RNE x0 x15) (fp.sub RNE x4 x8))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x14) (fp.div RNE x22 x19)) (fp.neg (fp.sub RNE x2 x19))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.add RNE x0 x2) (fp.sub RNE x7 x8)) (fp.neg (fp.sub RNE x20 x0))) (fp.add RNE (fp.sub RNE (fp.add RNE x8 x5) (fp.neg x8)) (fp.neg (fp.sub RNE x2 x9)))) (fp.neg (fp.neg (fp.neg (fp.mul RNE x13 x14))))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE (fp.mul RNE x17 x13) (fp.mul RNE x6 x7))) (fp.mul RNE (fp.add RNE (fp.sub RNE x16 x12) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x21 x3) (fp.neg x2)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x13 x12) (fp.mul RNE x0 x17)) (fp.neg (fp.neg x10))) (fp.neg (fp.add RNE (fp.div RNE x0 x11) (fp.neg x21))))))
(assert (fp.lt (fp.neg (fp.neg (fp.sub RNE (fp.mul RNE x20 x23) (fp.sub RNE x22 x9)))) (fp.add RNE (fp.neg (fp.neg (fp.mul RNE x16 x9))) (fp.div RNE (fp.sub RNE (fp.div RNE x6 x21) (fp.add RNE x11 x22)) (fp.sub RNE (fp.neg x20) (fp.sub RNE x0 x12))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x17 x14) (fp.neg x2)) (fp.div RNE (fp.add RNE x20 x2) (fp.mul RNE x12 x20))) (fp.div RNE (fp.mul RNE (fp.div RNE x8 x18) (fp.add RNE x11 x7)) (fp.mul RNE (fp.add RNE x14 x10) (fp.mul RNE x22 x18)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.mul RNE x20 x12) (fp.div RNE x5 x13)) (fp.mul RNE (fp.div RNE x12 x21) (fp.mul RNE x14 x15))) (fp.add RNE (fp.neg (fp.neg x0)) (fp.mul RNE (fp.add RNE x16 x2) (fp.mul RNE x3 x16))))))
(check-sat)
