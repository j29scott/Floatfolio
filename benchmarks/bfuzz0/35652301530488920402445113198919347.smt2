(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE x27 x7)) (fp.div RNE (fp.add RNE x24 x8) (fp.add RNE x4 x12))))
(assert (fp.geq (fp.div RNE (fp.div RNE x24 x16) (fp.mul RNE x7 x6)) (fp.mul RNE (fp.add RNE x14 x4) (fp.div RNE x0 x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x27) (fp.mul RNE x7 x16)) (fp.div RNE (fp.add RNE x7 x9) (fp.sub RNE x26 x3))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x21 x19) (fp.neg x5)) (fp.div RNE (fp.sub RNE x18 x9) (fp.mul RNE x6 x12))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x21 x20) (fp.div RNE x14 x2)) (fp.add RNE (fp.add RNE x23 x22) (fp.sub RNE x9 x26))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x6 x26) (fp.add RNE x20 x25)) (fp.sub RNE (fp.mul RNE x24 x23) (fp.sub RNE x22 x16))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x12 x0) (fp.add RNE x3 x1)) (fp.sub RNE (fp.add RNE x2 x7) (fp.add RNE x24 x24))))
(assert (fp.geq (fp.div RNE (fp.add RNE x15 x7) (fp.neg x16)) (fp.div RNE (fp.sub RNE x24 x11) (fp.sub RNE x7 x5))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x14 x0) (fp.add RNE x8 x16)) (fp.div RNE (fp.div RNE x20 x16) (fp.add RNE x4 x7))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x11 x19) (fp.add RNE x21 x2)) (fp.sub RNE (fp.div RNE x1 x3) (fp.neg x17))))
(assert (fp.geq (fp.neg (fp.add RNE x19 x25)) (fp.mul RNE (fp.neg x11) (fp.mul RNE x9 x0))))
(assert (fp.eq (fp.neg (fp.add RNE x3 x12)) (fp.sub RNE (fp.sub RNE x4 x8) (fp.mul RNE x13 x2))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x21 x14) (fp.mul RNE x18 x11)) (fp.add RNE (fp.add RNE x1 x6) (fp.mul RNE x21 x17))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x7 x19) (fp.sub RNE x0 x0)) (fp.add RNE (fp.add RNE x1 x7) (fp.neg x22))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x3 x5) (fp.mul RNE x0 x16)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x20 x15))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x26 x10) (fp.neg x20)) (fp.mul RNE (fp.mul RNE x23 x2) (fp.add RNE x18 x11))))
(check-sat)
