(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.neg x9) (fp.div RNE x3 x2)) (fp.add RNE (fp.add RNE x6 x4) (fp.mul RNE x9 x0))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x0 x1) (fp.sub RNE x0 x10)) (fp.mul RNE (fp.neg x6) (fp.mul RNE x8 x3))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x10 x1) (fp.sub RNE x1 x2)) (fp.div RNE (fp.neg x4) (fp.mul RNE x0 x9))))
(assert (fp.leq (fp.neg (fp.add RNE x3 x6)) (fp.mul RNE (fp.sub RNE x10 x10) (fp.mul RNE x5 x5))))
(assert (fp.eq (fp.neg (fp.mul RNE x0 x0)) (fp.add RNE (fp.add RNE x8 x5) (fp.sub RNE x9 x8))))
(assert (fp.leq (fp.add RNE (fp.neg x1) (fp.mul RNE x5 x8)) (fp.sub RNE (fp.div RNE x4 x6) (fp.div RNE x0 x10))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x4 x9) (fp.sub RNE x5 x3)) (fp.neg (fp.sub RNE x0 x3))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x9 x4) (fp.neg x9)) (fp.div RNE (fp.add RNE x7 x3) (fp.div RNE x5 x0))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x10 x9) (fp.div RNE x3 x0)) (fp.mul RNE (fp.div RNE x1 x0) (fp.sub RNE x2 x7))))
(check-sat)
