(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x8 x15) (fp.div RNE x15 x12)) (fp.div RNE (fp.div RNE x0 x16) (fp.div RNE x0 x7))) (fp.neg (fp.add RNE (fp.div RNE x16 x8) (fp.sub RNE x0 x11)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x1 x7) (fp.sub RNE x10 x10)) (fp.neg (fp.neg x0))) (fp.sub RNE (fp.add RNE (fp.mul RNE x15 x5) (fp.add RNE x3 x15)) (fp.add RNE (fp.div RNE x0 x3) (fp.sub RNE x16 x12)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.neg x16) (fp.neg x0)) (fp.div RNE (fp.sub RNE x6 x4) (fp.add RNE x11 x1))) (fp.add RNE (fp.neg (fp.add RNE x8 x4)) (fp.add RNE (fp.add RNE x3 x15) (fp.sub RNE x1 x6)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.mul RNE x4 x11) (fp.sub RNE x14 x2)) (fp.div RNE (fp.add RNE x16 x6) (fp.neg x12))) (fp.mul RNE (fp.neg (fp.mul RNE x10 x16)) (fp.sub RNE (fp.add RNE x16 x16) (fp.sub RNE x0 x13)))))
(check-sat)
