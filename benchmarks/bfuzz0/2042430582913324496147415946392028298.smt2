(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE x5 x7)) (fp.sub RNE (fp.div RNE x19 x22) (fp.mul RNE x3 x17))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x20 x6) (fp.sub RNE x9 x14)) (fp.add RNE (fp.add RNE x0 x23) (fp.sub RNE x1 x4))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x9 x20) (fp.div RNE x13 x3)) (fp.div RNE (fp.mul RNE x3 x1) (fp.neg x1))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x24 x0) (fp.neg x6)) (fp.div RNE (fp.neg x19) (fp.mul RNE x18 x16))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x21 x20) (fp.neg x10)) (fp.add RNE (fp.div RNE x24 x3) (fp.neg x17))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x21 x20) (fp.mul RNE x19 x10)) (fp.neg (fp.neg x11))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x17 x2) (fp.div RNE x18 x0)) (fp.sub RNE (fp.div RNE x18 x7) (fp.mul RNE x8 x15))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x12 x11) (fp.add RNE x18 x22)) (fp.mul RNE (fp.mul RNE x18 x13) (fp.div RNE x9 x20))))
(assert (fp.gt (fp.neg (fp.mul RNE x23 x17)) (fp.mul RNE (fp.add RNE x23 x23) (fp.mul RNE x15 x17))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x14 x19) (fp.mul RNE x2 x1)) (fp.div RNE (fp.sub RNE x5 x17) (fp.div RNE x15 x1))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x6 x17) (fp.sub RNE x20 x11)) (fp.add RNE (fp.mul RNE x11 x9) (fp.neg x9))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x3 x5) (fp.div RNE x0 x15)) (fp.add RNE (fp.div RNE x21 x1) (fp.div RNE x6 x19))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x18 x13) (fp.mul RNE x11 x5)) (fp.div RNE (fp.sub RNE x16 x5) (fp.add RNE x15 x10))))
(assert (fp.leq (fp.div RNE (fp.neg x15) (fp.sub RNE x4 x20)) (fp.sub RNE (fp.div RNE x16 x5) (fp.div RNE x23 x6))))
(assert (fp.geq (fp.mul RNE (fp.neg x16) (fp.mul RNE x15 x5)) (fp.mul RNE (fp.mul RNE x13 x11) (fp.neg x19))))
(assert (fp.eq (fp.neg (fp.div RNE x24 x9)) (fp.sub RNE (fp.sub RNE x3 x7) (fp.add RNE x0 x20))))
(assert (fp.gt (fp.div RNE (fp.add RNE x4 x17) (fp.sub RNE x23 x12)) (fp.div RNE (fp.neg x10) (fp.mul RNE x23 x12))))
(assert (fp.gt (fp.add RNE (fp.div RNE x12 x0) (fp.sub RNE x3 x11)) (fp.mul RNE (fp.neg x0) (fp.div RNE x22 x16))))
(check-sat)
