(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x1 x3) (fp.neg x3)) (fp.div RNE (fp.add RNE x0 x10) (fp.neg x10))) (fp.add RNE (fp.sub RNE (fp.div RNE x1 x10) (fp.neg x6)) (fp.sub RNE (fp.neg x9) (fp.div RNE x4 x7)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.mul RNE x2 x10) (fp.add RNE x2 x7))) (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x9 x5)) (fp.mul RNE (fp.mul RNE x5 x10) (fp.add RNE x9 x2)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x2 x9) (fp.div RNE x9 x3)) (fp.div RNE (fp.mul RNE x3 x11) (fp.div RNE x10 x6))) (fp.mul RNE (fp.sub RNE (fp.div RNE x5 x6) (fp.mul RNE x9 x6)) (fp.neg (fp.div RNE x6 x4)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x1) (fp.sub RNE x10 x9)) (fp.neg (fp.sub RNE x4 x0))) (fp.sub RNE (fp.sub RNE (fp.neg x1) (fp.div RNE x2 x11)) (fp.div RNE (fp.div RNE x11 x8) (fp.add RNE x10 x3)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x8 x11) (fp.div RNE x1 x3)) (fp.mul RNE (fp.div RNE x9 x7) (fp.add RNE x7 x6))) (fp.div RNE (fp.neg (fp.div RNE x2 x11)) (fp.mul RNE (fp.mul RNE x11 x0) (fp.sub RNE x3 x10)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE x5 x3) (fp.div RNE x3 x2)) (fp.neg (fp.mul RNE x1 x9))) (fp.add RNE (fp.sub RNE (fp.sub RNE x10 x6) (fp.div RNE x2 x9)) (fp.sub RNE (fp.mul RNE x5 x9) (fp.neg x11)))))
(check-sat)
