(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x4) (fp.div RNE x3 x6)))
(assert (fp.gt (fp.neg x12) (fp.sub RNE x2 x6)))
(assert (fp.gt (fp.div RNE x1 x0) (fp.neg x12)))
(assert (fp.gt (fp.mul RNE x11 x10) (fp.div RNE x10 x0)))
(assert (fp.lt (fp.sub RNE x2 x7) (fp.div RNE x9 x3)))
(assert (fp.leq (fp.add RNE x4 x3) (fp.mul RNE x5 x3)))
(assert (fp.eq (fp.neg x2) (fp.sub RNE x4 x3)))
(assert (fp.eq (fp.neg x12) (fp.sub RNE x8 x6)))
(assert (fp.leq (fp.add RNE x4 x9) (fp.add RNE x6 x1)))
(assert (fp.eq (fp.sub RNE x9 x8) (fp.mul RNE x0 x13)))
(assert (fp.gt (fp.mul RNE x0 x8) (fp.neg x12)))
(assert (fp.leq (fp.add RNE x0 x4) (fp.div RNE x5 x7)))
(assert (fp.leq (fp.mul RNE x6 x9) (fp.sub RNE x5 x5)))
(assert (fp.geq (fp.sub RNE x8 x12) (fp.mul RNE x10 x10)))
(assert (fp.geq (fp.div RNE x5 x7) (fp.add RNE x9 x6)))
(assert (fp.leq (fp.div RNE x12 x2) (fp.mul RNE x7 x3)))
(check-sat)
