(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.mul RNE x3 x9)) (fp.div RNE (fp.mul RNE x12 x5) (fp.mul RNE x10 x11))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x7 x2) (fp.mul RNE x3 x13)) (fp.add RNE (fp.sub RNE x10 x2) (fp.div RNE x2 x6))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x2 x5) (fp.neg x0)) (fp.add RNE (fp.sub RNE x9 x5) (fp.sub RNE x3 x12))))
(assert (fp.geq (fp.div RNE (fp.div RNE x4 x10) (fp.neg x8)) (fp.sub RNE (fp.neg x4) (fp.mul RNE x8 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x3) (fp.mul RNE x9 x2)) (fp.div RNE (fp.mul RNE x6 x12) (fp.div RNE x13 x1))))
(assert (fp.leq (fp.neg (fp.sub RNE x10 x1)) (fp.sub RNE (fp.neg x5) (fp.add RNE x2 x8))))
(assert (fp.geq (fp.div RNE (fp.neg x5) (fp.neg x4)) (fp.sub RNE (fp.neg x11) (fp.div RNE x5 x0))))
(assert (fp.geq (fp.neg (fp.mul RNE x8 x10)) (fp.mul RNE (fp.div RNE x8 x7) (fp.sub RNE x10 x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x5 x0) (fp.add RNE x12 x6)) (fp.add RNE (fp.add RNE x5 x0) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.neg x4) (fp.sub RNE x5 x3)) (fp.sub RNE (fp.div RNE x2 x9) (fp.neg x11))))
(assert (fp.geq (fp.neg (fp.add RNE x10 x2)) (fp.neg (fp.sub RNE x7 x10))))
(assert (fp.gt (fp.neg (fp.neg x10)) (fp.mul RNE (fp.neg x10) (fp.div RNE x11 x10))))
(assert (fp.leq (fp.neg (fp.neg x11)) (fp.add RNE (fp.mul RNE x3 x8) (fp.sub RNE x3 x3))))
(assert (fp.leq (fp.neg (fp.add RNE x9 x13)) (fp.mul RNE (fp.div RNE x2 x5) (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.neg x5) (fp.sub RNE x12 x3)) (fp.sub RNE (fp.mul RNE x7 x10) (fp.neg x0))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x0 x11) (fp.div RNE x12 x9)) (fp.sub RNE (fp.add RNE x5 x1) (fp.div RNE x10 x0))))
(assert (fp.leq (fp.div RNE (fp.neg x3) (fp.div RNE x6 x3)) (fp.add RNE (fp.mul RNE x2 x0) (fp.neg x11))))
(assert (fp.eq (fp.neg (fp.div RNE x13 x11)) (fp.add RNE (fp.div RNE x1 x3) (fp.sub RNE x10 x4))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x6 x11) (fp.sub RNE x0 x0)) (fp.div RNE (fp.neg x1) (fp.div RNE x13 x7))))
(check-sat)
