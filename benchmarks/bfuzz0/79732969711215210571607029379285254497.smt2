(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x7 x2) (fp.add RNE x12 x4)))
(assert (fp.lt (fp.div RNE x12 x5) (fp.add RNE x11 x2)))
(assert (fp.eq (fp.neg x12) (fp.mul RNE x12 x5)))
(assert (fp.eq (fp.neg x1) (fp.add RNE x4 x3)))
(assert (fp.leq (fp.add RNE x8 x13) (fp.div RNE x8 x10)))
(assert (fp.eq (fp.add RNE x1 x6) (fp.div RNE x6 x7)))
(assert (fp.eq (fp.mul RNE x8 x6) (fp.neg x12)))
(assert (fp.leq (fp.mul RNE x1 x7) (fp.div RNE x0 x1)))
(assert (fp.geq (fp.mul RNE x8 x13) (fp.sub RNE x8 x6)))
(assert (fp.gt (fp.div RNE x1 x6) (fp.div RNE x12 x3)))
(assert (fp.lt (fp.sub RNE x3 x12) (fp.add RNE x8 x3)))
(assert (fp.geq (fp.div RNE x3 x6) (fp.sub RNE x11 x7)))
(assert (fp.gt (fp.div RNE x13 x0) (fp.add RNE x2 x2)))
(assert (fp.leq (fp.neg x1) (fp.add RNE x10 x4)))
(assert (fp.leq (fp.div RNE x10 x13) (fp.neg x0)))
(assert (fp.eq (fp.mul RNE x6 x3) (fp.div RNE x1 x0)))
(assert (fp.eq (fp.sub RNE x11 x12) (fp.add RNE x4 x9)))
(assert (fp.lt (fp.div RNE x13 x7) (fp.div RNE x1 x0)))
(check-sat)
