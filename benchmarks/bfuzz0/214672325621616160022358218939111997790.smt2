(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x13 x12) (fp.neg x3)))
(assert (fp.eq (fp.sub RNE x1 x14) (fp.sub RNE x1 x15)))
(assert (fp.eq (fp.sub RNE x9 x5) (fp.sub RNE x11 x8)))
(assert (fp.geq (fp.mul RNE x6 x12) (fp.add RNE x11 x0)))
(assert (fp.gt (fp.sub RNE x0 x2) (fp.div RNE x13 x13)))
(assert (fp.lt (fp.mul RNE x7 x0) (fp.div RNE x13 x4)))
(assert (fp.eq (fp.sub RNE x7 x9) (fp.div RNE x7 x3)))
(assert (fp.lt (fp.add RNE x14 x11) (fp.div RNE x12 x12)))
(check-sat)
