(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.mul RNE x20 x7) (fp.div RNE x19 x3))) (fp.sub RNE (fp.div RNE (fp.add RNE x13 x17) (fp.add RNE x12 x14)) (fp.div RNE (fp.sub RNE x18 x21) (fp.div RNE x12 x14)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x10 x13) (fp.add RNE x5 x8)) (fp.neg (fp.div RNE x1 x5))) (fp.mul RNE (fp.div RNE (fp.sub RNE x10 x23) (fp.div RNE x17 x2)) (fp.add RNE (fp.add RNE x20 x15) (fp.div RNE x11 x18)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.mul RNE x10 x3) (fp.neg x20)) (fp.sub RNE (fp.sub RNE x22 x1) (fp.div RNE x12 x6))) (fp.neg (fp.neg (fp.neg x5)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x13 x3) (fp.add RNE x9 x17)) (fp.neg (fp.neg x3))) (fp.sub RNE (fp.add RNE (fp.add RNE x15 x16) (fp.neg x12)) (fp.add RNE (fp.sub RNE x6 x23) (fp.neg x14)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x20 x1) (fp.mul RNE x3 x3))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x0 x20) (fp.mul RNE x0 x12)) (fp.div RNE (fp.mul RNE x23 x22) (fp.mul RNE x1 x24)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x1 x16) (fp.sub RNE x9 x3)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x6 x17))) (fp.div RNE (fp.div RNE (fp.add RNE x13 x6) (fp.div RNE x11 x16)) (fp.div RNE (fp.sub RNE x23 x14) (fp.div RNE x18 x18)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE x15 x19) (fp.sub RNE x1 x8)) (fp.mul RNE (fp.div RNE x23 x12) (fp.sub RNE x9 x17))) (fp.add RNE (fp.add RNE (fp.mul RNE x2 x8) (fp.mul RNE x10 x22)) (fp.add RNE (fp.sub RNE x17 x10) (fp.sub RNE x19 x17)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x2)) (fp.div RNE (fp.sub RNE x19 x6) (fp.neg x3))) (fp.div RNE (fp.add RNE (fp.add RNE x14 x23) (fp.div RNE x3 x19)) (fp.add RNE (fp.div RNE x19 x0) (fp.add RNE x18 x24)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x18 x21) (fp.sub RNE x0 x12))) (fp.neg (fp.mul RNE (fp.div RNE x2 x23) (fp.add RNE x14 x21)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.mul RNE x12 x8) (fp.sub RNE x9 x22)) (fp.neg (fp.div RNE x7 x15))) (fp.add RNE (fp.add RNE (fp.sub RNE x12 x6) (fp.add RNE x18 x17)) (fp.sub RNE (fp.div RNE x4 x7) (fp.div RNE x16 x5)))))
(check-sat)
