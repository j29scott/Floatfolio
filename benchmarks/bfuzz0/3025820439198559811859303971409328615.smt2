(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.add RNE x9 x6) (fp.sub RNE x9 x0)) (fp.neg (fp.mul RNE x1 x4))))
(assert (fp.geq (fp.div RNE (fp.add RNE x3 x4) (fp.div RNE x6 x9)) (fp.div RNE (fp.div RNE x3 x2) (fp.sub RNE x2 x2))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x8 x3) (fp.sub RNE x1 x8)) (fp.mul RNE (fp.add RNE x9 x0) (fp.mul RNE x7 x7))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x5 x8) (fp.neg x6)) (fp.add RNE (fp.mul RNE x5 x6) (fp.sub RNE x9 x5))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x1 x0) (fp.sub RNE x7 x0)) (fp.neg (fp.neg x6))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x6 x8) (fp.add RNE x6 x5)) (fp.div RNE (fp.add RNE x6 x4) (fp.div RNE x6 x8))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x6) (fp.neg x3)) (fp.mul RNE (fp.add RNE x5 x1) (fp.mul RNE x0 x8))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x7 x0) (fp.add RNE x0 x7)) (fp.neg (fp.sub RNE x9 x4))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x7 x8) (fp.add RNE x8 x4)) (fp.add RNE (fp.neg x4) (fp.div RNE x0 x1))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x4) (fp.div RNE x1 x6)) (fp.div RNE (fp.div RNE x6 x1) (fp.mul RNE x6 x3))))
(assert (fp.lt (fp.div RNE (fp.div RNE x7 x7) (fp.sub RNE x1 x7)) (fp.sub RNE (fp.add RNE x4 x3) (fp.add RNE x8 x4))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x9 x2) (fp.add RNE x8 x3)) (fp.mul RNE (fp.div RNE x0 x4) (fp.neg x2))))
(assert (fp.eq (fp.neg (fp.neg x1)) (fp.mul RNE (fp.neg x2) (fp.div RNE x0 x6))))
(assert (fp.geq (fp.neg (fp.mul RNE x2 x7)) (fp.mul RNE (fp.sub RNE x7 x0) (fp.add RNE x6 x4))))
(assert (fp.eq (fp.neg (fp.neg x5)) (fp.add RNE (fp.sub RNE x8 x2) (fp.add RNE x2 x6))))
(assert (fp.gt (fp.neg (fp.neg x8)) (fp.div RNE (fp.sub RNE x9 x9) (fp.mul RNE x8 x2))))
(assert (fp.leq (fp.neg (fp.mul RNE x5 x4)) (fp.neg (fp.neg x1))))
(assert (fp.leq (fp.div RNE (fp.add RNE x8 x5) (fp.add RNE x5 x5)) (fp.sub RNE (fp.mul RNE x5 x4) (fp.mul RNE x9 x5))))
(assert (fp.lt (fp.neg (fp.mul RNE x7 x4)) (fp.add RNE (fp.mul RNE x1 x9) (fp.div RNE x0 x9))))
(assert (fp.gt (fp.neg (fp.neg x8)) (fp.neg (fp.add RNE x1 x0))))
(check-sat)
