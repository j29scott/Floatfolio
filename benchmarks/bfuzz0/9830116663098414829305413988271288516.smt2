(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE x9 x10) (fp.add RNE x6 x12)) (fp.div RNE (fp.div RNE x18 x22) (fp.neg x18))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x13 x15) (fp.sub RNE x1 x4)) (fp.sub RNE (fp.div RNE x16 x22) (fp.neg x22)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.mul RNE x3 x11)) (fp.neg (fp.add RNE x19 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x10 x8) (fp.div RNE x9 x19)) (fp.neg (fp.add RNE x21 x13)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x14 x19) (fp.div RNE x3 x2)) (fp.sub RNE (fp.sub RNE x10 x6) (fp.neg x3))) (fp.div RNE (fp.neg (fp.mul RNE x2 x3)) (fp.add RNE (fp.neg x7) (fp.neg x20)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x23) (fp.mul RNE x4 x2)) (fp.sub RNE (fp.neg x9) (fp.add RNE x16 x17))) (fp.neg (fp.mul RNE (fp.neg x4) (fp.mul RNE x1 x18)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.add RNE x4 x21) (fp.div RNE x1 x0)) (fp.add RNE (fp.sub RNE x0 x7) (fp.neg x0))) (fp.div RNE (fp.neg (fp.mul RNE x10 x10)) (fp.mul RNE (fp.add RNE x18 x23) (fp.mul RNE x12 x0)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.neg x12) (fp.div RNE x19 x0)) (fp.add RNE (fp.mul RNE x4 x15) (fp.sub RNE x10 x19))) (fp.mul RNE (fp.div RNE (fp.div RNE x18 x4) (fp.neg x16)) (fp.sub RNE (fp.div RNE x19 x6) (fp.mul RNE x10 x17)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.mul RNE x9 x11)) (fp.neg (fp.sub RNE x12 x8))) (fp.neg (fp.sub RNE (fp.mul RNE x20 x3) (fp.mul RNE x1 x15)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x1 x14) (fp.mul RNE x13 x8)) (fp.add RNE (fp.neg x0) (fp.sub RNE x5 x20))) (fp.neg (fp.add RNE (fp.add RNE x6 x1) (fp.add RNE x21 x8)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x12) (fp.add RNE x8 x14)) (fp.add RNE (fp.neg x12) (fp.mul RNE x10 x10))) (fp.neg (fp.add RNE (fp.mul RNE x0 x17) (fp.sub RNE x1 x5)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.add RNE x8 x22) (fp.add RNE x0 x9)) (fp.neg (fp.div RNE x10 x16))) (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x18) (fp.sub RNE x9 x20)) (fp.sub RNE (fp.div RNE x19 x20) (fp.mul RNE x19 x20)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.mul RNE x23 x18) (fp.div RNE x0 x0)) (fp.mul RNE (fp.div RNE x2 x18) (fp.mul RNE x22 x7))) (fp.div RNE (fp.neg (fp.sub RNE x2 x0)) (fp.add RNE (fp.add RNE x8 x7) (fp.add RNE x2 x10)))))
(check-sat)
