(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x4 x18) (fp.div RNE x12 x12)) (fp.add RNE (fp.neg x12) (fp.neg x11))) (fp.div RNE (fp.neg (fp.div RNE x3 x0)) (fp.div RNE (fp.sub RNE x10 x9) (fp.neg x18)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE x3 x9) (fp.div RNE x19 x7)) (fp.sub RNE (fp.add RNE x16 x10) (fp.mul RNE x1 x13))) (fp.neg (fp.mul RNE (fp.add RNE x2 x12) (fp.sub RNE x2 x10)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x6 x4) (fp.add RNE x10 x9)) (fp.sub RNE (fp.div RNE x13 x17) (fp.neg x6))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x3 x3) (fp.sub RNE x11 x12)) (fp.mul RNE (fp.sub RNE x5 x15) (fp.sub RNE x16 x19)))))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE x3 x18))) (fp.div RNE (fp.div RNE (fp.mul RNE x16 x18) (fp.add RNE x9 x16)) (fp.mul RNE (fp.div RNE x1 x14) (fp.add RNE x9 x8)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x5) (fp.sub RNE x10 x13)) (fp.sub RNE (fp.add RNE x15 x6) (fp.neg x6))) (fp.mul RNE (fp.add RNE (fp.add RNE x7 x13) (fp.sub RNE x19 x1)) (fp.sub RNE (fp.sub RNE x15 x4) (fp.div RNE x7 x16)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.mul RNE x17 x14) (fp.neg x1)) (fp.neg (fp.sub RNE x5 x17))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x14) (fp.mul RNE x11 x19)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x1 x8) (fp.neg x12)) (fp.neg (fp.mul RNE x2 x14))) (fp.sub RNE (fp.add RNE (fp.mul RNE x14 x13) (fp.mul RNE x13 x12)) (fp.neg (fp.add RNE x13 x17)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x7) (fp.neg x6)) (fp.mul RNE (fp.sub RNE x6 x1) (fp.div RNE x8 x4))) (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x11) (fp.div RNE x5 x2)) (fp.add RNE (fp.sub RNE x12 x10) (fp.add RNE x6 x11)))))
(check-sat)
