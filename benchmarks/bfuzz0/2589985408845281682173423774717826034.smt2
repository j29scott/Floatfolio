(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.neg (fp.mul RNE x2 x18))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x18 x1) (fp.add RNE x16 x11)) (fp.sub RNE (fp.add RNE x1 x8) (fp.mul RNE x9 x13)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x7 x8) (fp.mul RNE x8 x15)) (fp.div RNE (fp.add RNE x18 x0) (fp.neg x15))) (fp.neg (fp.sub RNE (fp.div RNE x14 x4) (fp.mul RNE x1 x8)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.add RNE x16 x9) (fp.add RNE x9 x9)) (fp.add RNE (fp.sub RNE x6 x10) (fp.sub RNE x0 x5))) (fp.sub RNE (fp.add RNE (fp.add RNE x8 x4) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x0 x9) (fp.div RNE x12 x14)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE x7 x0) (fp.mul RNE x13 x2))) (fp.add RNE (fp.neg (fp.div RNE x16 x10)) (fp.neg (fp.neg x17)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x10) (fp.mul RNE x4 x4)) (fp.sub RNE (fp.add RNE x6 x12) (fp.neg x5))) (fp.mul RNE (fp.neg (fp.add RNE x3 x9)) (fp.div RNE (fp.add RNE x11 x13) (fp.neg x9)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE x3 x12)) (fp.add RNE (fp.neg x12) (fp.neg x12))) (fp.neg (fp.sub RNE (fp.neg x1) (fp.mul RNE x8 x9)))))
(check-sat)
