(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x19 x24) (fp.mul RNE x25 x10)) (fp.neg (fp.div RNE x17 x5))) (fp.neg (fp.div RNE (fp.mul RNE x10 x5) (fp.sub RNE x15 x20)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x10 x21) (fp.mul RNE x2 x4)) (fp.neg (fp.div RNE x20 x20))) (fp.sub RNE (fp.add RNE (fp.div RNE x18 x2) (fp.add RNE x20 x26)) (fp.div RNE (fp.neg x8) (fp.div RNE x1 x8))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.mul RNE x15 x24) (fp.add RNE x16 x1)) (fp.add RNE (fp.add RNE x7 x4) (fp.neg x26)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.sub RNE x14 x12)) (fp.sub RNE (fp.div RNE x26 x0) (fp.neg x13))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x23) (fp.div RNE x3 x23)) (fp.add RNE (fp.neg x26) (fp.mul RNE x6 x3))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg (fp.mul RNE x1 x11)) (fp.div RNE (fp.neg x10) (fp.add RNE x17 x3))) (fp.neg (fp.sub RNE (fp.add RNE x13 x4) (fp.mul RNE x17 x16)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.neg x20) (fp.add RNE x21 x0))) (fp.sub RNE (fp.div RNE (fp.sub RNE x2 x18) (fp.neg x4)) (fp.sub RNE (fp.neg x5) (fp.add RNE x1 x11))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x15 x9) (fp.sub RNE x8 x8)) (fp.neg (fp.neg x25))) (fp.mul RNE (fp.sub RNE (fp.add RNE x7 x0) (fp.mul RNE x24 x22)) (fp.mul RNE (fp.sub RNE x8 x9) (fp.mul RNE x1 x2)))) (fp.add RNE (fp.neg (fp.neg (fp.mul RNE x2 x14))) (fp.add RNE (fp.add RNE (fp.mul RNE x6 x21) (fp.mul RNE x18 x18)) (fp.div RNE (fp.sub RNE x1 x11) (fp.mul RNE x9 x25))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.neg x19)) (fp.div RNE (fp.add RNE x21 x9) (fp.add RNE x15 x21)))) (fp.add RNE (fp.div RNE (fp.neg (fp.mul RNE x19 x7)) (fp.div RNE (fp.div RNE x10 x4) (fp.mul RNE x15 x22))) (fp.mul RNE (fp.div RNE (fp.add RNE x13 x6) (fp.div RNE x16 x10)) (fp.div RNE (fp.mul RNE x23 x5) (fp.neg x22))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x17 x4) (fp.sub RNE x16 x1)) (fp.div RNE (fp.div RNE x25 x25) (fp.neg x19))) (fp.div RNE (fp.neg (fp.sub RNE x0 x8)) (fp.div RNE (fp.sub RNE x17 x22) (fp.sub RNE x18 x21)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x24 x19) (fp.neg x14)) (fp.neg (fp.div RNE x2 x20))) (fp.div RNE (fp.div RNE (fp.add RNE x26 x26) (fp.div RNE x6 x15)) (fp.sub RNE (fp.mul RNE x12 x25) (fp.sub RNE x7 x19))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x10 x19) (fp.mul RNE x9 x20)) (fp.mul RNE (fp.mul RNE x4 x8) (fp.mul RNE x6 x24))) (fp.add RNE (fp.neg (fp.add RNE x21 x20)) (fp.add RNE (fp.mul RNE x8 x15) (fp.mul RNE x20 x3)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.mul RNE x17 x19) (fp.add RNE x16 x15)) (fp.sub RNE (fp.neg x5) (fp.neg x4))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE (fp.neg x12) (fp.div RNE x25 x25)) (fp.neg (fp.add RNE x13 x16)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.neg x4) (fp.add RNE x7 x21)) (fp.mul RNE (fp.sub RNE x2 x7) (fp.sub RNE x16 x6))) (fp.div RNE (fp.mul RNE (fp.mul RNE x7 x2) (fp.neg x20)) (fp.add RNE (fp.mul RNE x17 x6) (fp.div RNE x0 x15))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg (fp.div RNE x6 x25)) (fp.add RNE (fp.neg x1) (fp.add RNE x12 x24))) (fp.sub RNE (fp.sub RNE (fp.div RNE x20 x14) (fp.neg x23)) (fp.mul RNE (fp.div RNE x21 x6) (fp.mul RNE x4 x17)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.add RNE x18 x5) (fp.sub RNE x25 x15)) (fp.div RNE (fp.neg x5) (fp.neg x14))) (fp.neg (fp.neg (fp.add RNE x2 x7))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.add RNE x20 x0) (fp.div RNE x10 x0)) (fp.add RNE (fp.mul RNE x21 x25) (fp.div RNE x0 x15))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x21) (fp.div RNE x20 x22)) (fp.mul RNE (fp.mul RNE x18 x17) (fp.neg x8)))) (fp.neg (fp.div RNE (fp.add RNE (fp.mul RNE x8 x6) (fp.add RNE x9 x16)) (fp.sub RNE (fp.add RNE x0 x2) (fp.add RNE x1 x22))))))
(check-sat)
