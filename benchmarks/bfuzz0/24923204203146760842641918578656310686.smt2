(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg (fp.neg x3)) (fp.neg (fp.sub RNE x11 x1)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.div RNE x20 x18) (fp.add RNE x10 x0)) (fp.mul RNE (fp.add RNE x23 x5) (fp.sub RNE x21 x11))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.neg (fp.add RNE x23 x4))) (fp.sub RNE (fp.neg (fp.neg x19)) (fp.sub RNE (fp.mul RNE x24 x18) (fp.neg x16)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.neg x14) (fp.sub RNE x0 x2)) (fp.div RNE (fp.sub RNE x24 x24) (fp.sub RNE x5 x15))) (fp.neg (fp.add RNE (fp.div RNE x11 x15) (fp.sub RNE x1 x5))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg (fp.add RNE x1 x10))) (fp.mul RNE (fp.div RNE (fp.neg x10) (fp.div RNE x2 x7)) (fp.neg (fp.sub RNE x9 x18)))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x11 x24)) (fp.mul RNE (fp.add RNE x20 x9) (fp.neg x10))) (fp.sub RNE (fp.mul RNE (fp.neg x23) (fp.sub RNE x21 x4)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x14 x1))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x10 x24) (fp.sub RNE x9 x8)) (fp.add RNE (fp.div RNE x7 x23) (fp.add RNE x5 x16)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.mul RNE x0 x23)) (fp.neg (fp.sub RNE x3 x2))) (fp.mul RNE (fp.sub RNE (fp.div RNE x8 x15) (fp.div RNE x13 x12)) (fp.sub RNE (fp.sub RNE x11 x11) (fp.neg x18))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE (fp.neg x3) (fp.neg x3)) (fp.neg (fp.sub RNE x13 x12)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.div RNE x15 x24) (fp.add RNE x2 x14)) (fp.mul RNE (fp.add RNE x16 x7) (fp.mul RNE x11 x23))) (fp.mul RNE (fp.add RNE (fp.add RNE x22 x16) (fp.mul RNE x13 x22)) (fp.sub RNE (fp.sub RNE x6 x13) (fp.mul RNE x21 x13))))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x7) (fp.mul RNE x21 x16)) (fp.sub RNE (fp.sub RNE x22 x13) (fp.div RNE x16 x21)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.add RNE x3 x2)) (fp.div RNE (fp.div RNE x17 x0) (fp.add RNE x5 x10))) (fp.neg (fp.neg (fp.div RNE x5 x8))))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.neg x18) (fp.add RNE x2 x0)) (fp.neg (fp.neg x21))) (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x23) (fp.mul RNE x24 x17)) (fp.sub RNE (fp.div RNE x22 x23) (fp.mul RNE x6 x0)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.div RNE x6 x6) (fp.add RNE x3 x3)) (fp.neg (fp.div RNE x19 x0))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x4 x1) (fp.div RNE x4 x19)) (fp.mul RNE (fp.sub RNE x16 x3) (fp.neg x0))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE (fp.div RNE x4 x18) (fp.div RNE x19 x9)) (fp.sub RNE (fp.div RNE x4 x3) (fp.neg x17)))) (fp.neg (fp.neg (fp.sub RNE (fp.neg x19) (fp.add RNE x16 x17))))))
(check-sat)
