(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE x0 x2) (fp.div RNE x0 x3)) (fp.neg (fp.div RNE x11 x4))) (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x0) (fp.sub RNE x4 x7)) (fp.div RNE (fp.add RNE x6 x5) (fp.neg x5)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.div RNE x3 x11) (fp.mul RNE x9 x11)) (fp.mul RNE (fp.sub RNE x0 x1) (fp.sub RNE x4 x10))) (fp.sub RNE (fp.add RNE (fp.div RNE x2 x4) (fp.add RNE x7 x2)) (fp.div RNE (fp.sub RNE x4 x5) (fp.add RNE x5 x10)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x0 x5) (fp.sub RNE x8 x1))) (fp.div RNE (fp.mul RNE (fp.mul RNE x9 x10) (fp.add RNE x2 x5)) (fp.neg (fp.div RNE x0 x2)))))
(check-sat)
