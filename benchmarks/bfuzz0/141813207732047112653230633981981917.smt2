(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x1 x3)) (fp.div RNE (fp.div RNE x6 x3) (fp.mul RNE x11 x4)))) (fp.sub RNE (fp.neg (fp.neg (fp.div RNE x8 x3))) (fp.add RNE (fp.div RNE (fp.sub RNE x5 x4) (fp.sub RNE x4 x5)) (fp.sub RNE (fp.sub RNE x9 x9) (fp.sub RNE x6 x7))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x11 x11) (fp.neg x0)) (fp.div RNE (fp.mul RNE x4 x10) (fp.mul RNE x10 x6)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x3 x9) (fp.mul RNE x7 x0)) (fp.div RNE (fp.sub RNE x2 x3) (fp.neg x8))) (fp.neg (fp.div RNE (fp.sub RNE x4 x3) (fp.mul RNE x0 x9))))))
(check-sat)
