(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.neg x13) (fp.add RNE x18 x20)) (fp.div RNE (fp.neg x20) (fp.div RNE x6 x5))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x21 x2) (fp.mul RNE x4 x12)) (fp.sub RNE (fp.mul RNE x14 x8) (fp.div RNE x17 x5))))
(assert (fp.lt (fp.neg (fp.add RNE x5 x2)) (fp.neg (fp.mul RNE x11 x20))))
(assert (fp.lt (fp.mul RNE (fp.neg x14) (fp.div RNE x12 x17)) (fp.add RNE (fp.neg x17) (fp.neg x17))))
(assert (fp.geq (fp.div RNE (fp.add RNE x4 x12) (fp.mul RNE x5 x6)) (fp.div RNE (fp.neg x14) (fp.neg x10))))
(assert (fp.eq (fp.mul RNE (fp.neg x11) (fp.mul RNE x19 x11)) (fp.sub RNE (fp.sub RNE x0 x7) (fp.add RNE x10 x4))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x14 x17) (fp.neg x6)) (fp.neg (fp.add RNE x10 x12))))
(assert (fp.lt (fp.div RNE (fp.add RNE x14 x9) (fp.sub RNE x7 x13)) (fp.sub RNE (fp.sub RNE x20 x5) (fp.neg x21))))
(assert (fp.leq (fp.add RNE (fp.add RNE x1 x21) (fp.mul RNE x17 x5)) (fp.div RNE (fp.div RNE x3 x12) (fp.mul RNE x21 x10))))
(check-sat)
