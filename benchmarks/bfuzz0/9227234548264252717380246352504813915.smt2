(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.mul RNE x8 x0) (fp.div RNE x0 x12)) (fp.mul RNE (fp.add RNE x16 x10) (fp.add RNE x20 x12))))
(assert (fp.gt (fp.add RNE (fp.neg x20) (fp.mul RNE x3 x4)) (fp.sub RNE (fp.div RNE x16 x5) (fp.sub RNE x9 x13))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x11 x14) (fp.div RNE x3 x12)) (fp.sub RNE (fp.neg x16) (fp.div RNE x8 x17))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x17 x10) (fp.sub RNE x18 x6)) (fp.mul RNE (fp.add RNE x16 x8) (fp.mul RNE x3 x5))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x3 x18) (fp.add RNE x2 x16)) (fp.mul RNE (fp.sub RNE x10 x9) (fp.sub RNE x6 x1))))
(assert (fp.gt (fp.div RNE (fp.div RNE x2 x14) (fp.add RNE x18 x2)) (fp.mul RNE (fp.div RNE x8 x9) (fp.neg x5))))
(assert (fp.eq (fp.neg (fp.sub RNE x9 x7)) (fp.div RNE (fp.neg x12) (fp.sub RNE x13 x20))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x19 x3) (fp.add RNE x11 x13)) (fp.neg (fp.add RNE x7 x20))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x3 x1) (fp.neg x9)) (fp.neg (fp.mul RNE x20 x8))))
(assert (fp.lt (fp.mul RNE (fp.neg x14) (fp.sub RNE x13 x17)) (fp.neg (fp.sub RNE x12 x0))))
(assert (fp.leq (fp.neg (fp.neg x0)) (fp.neg (fp.neg x9))))
(assert (fp.geq (fp.add RNE (fp.add RNE x3 x11) (fp.div RNE x7 x20)) (fp.add RNE (fp.add RNE x3 x11) (fp.add RNE x13 x11))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x4 x18) (fp.add RNE x18 x5)) (fp.div RNE (fp.add RNE x9 x7) (fp.mul RNE x3 x5))))
(assert (fp.leq (fp.neg (fp.add RNE x17 x6)) (fp.mul RNE (fp.mul RNE x0 x17) (fp.sub RNE x11 x6))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x7 x12) (fp.div RNE x8 x4)) (fp.mul RNE (fp.mul RNE x8 x7) (fp.div RNE x9 x5))))
(check-sat)
