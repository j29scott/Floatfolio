(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.neg x9) (fp.div RNE x13 x22)) (fp.sub RNE (fp.sub RNE x1 x6) (fp.sub RNE x10 x22))) (fp.div RNE (fp.mul RNE (fp.add RNE x24 x2) (fp.sub RNE x13 x9)) (fp.div RNE (fp.mul RNE x22 x10) (fp.div RNE x11 x3)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x3 x8) (fp.div RNE x9 x17)) (fp.sub RNE (fp.div RNE x13 x2) (fp.mul RNE x15 x20))) (fp.add RNE (fp.div RNE (fp.add RNE x9 x11) (fp.mul RNE x0 x18)) (fp.add RNE (fp.sub RNE x0 x20) (fp.mul RNE x20 x1)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE x23 x9) (fp.sub RNE x7 x22)) (fp.neg (fp.neg x18))) (fp.add RNE (fp.mul RNE (fp.sub RNE x21 x15) (fp.div RNE x22 x21)) (fp.neg (fp.mul RNE x16 x11)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x10) (fp.mul RNE x9 x12)) (fp.sub RNE (fp.add RNE x5 x3) (fp.sub RNE x7 x18))) (fp.div RNE (fp.neg (fp.neg x9)) (fp.mul RNE (fp.add RNE x0 x5) (fp.add RNE x24 x12)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x18 x15) (fp.neg x23)) (fp.sub RNE (fp.neg x2) (fp.neg x14))) (fp.neg (fp.sub RNE (fp.add RNE x14 x1) (fp.add RNE x17 x15)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE x10 x10)) (fp.neg (fp.sub RNE x5 x12))) (fp.mul RNE (fp.mul RNE (fp.add RNE x13 x8) (fp.add RNE x20 x9)) (fp.neg (fp.neg x21)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.div RNE x3 x9)) (fp.mul RNE (fp.neg x0) (fp.add RNE x6 x9))) (fp.neg (fp.add RNE (fp.add RNE x17 x2) (fp.mul RNE x4 x12)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.sub RNE x22 x10) (fp.add RNE x20 x21)) (fp.add RNE (fp.sub RNE x17 x7) (fp.sub RNE x10 x1))) (fp.neg (fp.neg (fp.div RNE x10 x19)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.mul RNE x7 x22)) (fp.neg (fp.sub RNE x1 x14))) (fp.add RNE (fp.add RNE (fp.div RNE x24 x18) (fp.div RNE x11 x21)) (fp.add RNE (fp.sub RNE x22 x1) (fp.div RNE x10 x4)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE x16 x4) (fp.div RNE x23 x10)) (fp.div RNE (fp.div RNE x8 x19) (fp.mul RNE x15 x6))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 x2) (fp.add RNE x5 x4)) (fp.mul RNE (fp.sub RNE x13 x12) (fp.neg x7)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.mul RNE x9 x11) (fp.add RNE x16 x14)) (fp.neg (fp.neg x6))) (fp.add RNE (fp.div RNE (fp.sub RNE x23 x4) (fp.div RNE x19 x2)) (fp.div RNE (fp.neg x4) (fp.div RNE x1 x22)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x14)) (fp.div RNE (fp.neg x10) (fp.mul RNE x4 x0))) (fp.add RNE (fp.sub RNE (fp.div RNE x7 x19) (fp.mul RNE x4 x17)) (fp.sub RNE (fp.div RNE x18 x7) (fp.add RNE x21 x12)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x9) (fp.sub RNE x16 x3)) (fp.neg (fp.div RNE x8 x1))) (fp.sub RNE (fp.div RNE (fp.sub RNE x23 x8) (fp.neg x21)) (fp.sub RNE (fp.sub RNE x16 x14) (fp.sub RNE x6 x7)))))
(check-sat)
