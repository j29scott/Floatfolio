(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.sub RNE x8 x12)) (fp.mul RNE (fp.sub RNE x2 x12) (fp.mul RNE x8 x12))) (fp.neg (fp.add RNE (fp.div RNE x1 x15) (fp.div RNE x0 x9)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x8 x1) (fp.sub RNE x4 x6))) (fp.mul RNE (fp.neg (fp.mul RNE x9 x3)) (fp.sub RNE (fp.neg x1) (fp.add RNE x8 x14)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x14 x15) (fp.add RNE x11 x15)) (fp.mul RNE (fp.div RNE x14 x9) (fp.neg x6))) (fp.sub RNE (fp.add RNE (fp.div RNE x0 x12) (fp.add RNE x2 x11)) (fp.sub RNE (fp.mul RNE x14 x4) (fp.sub RNE x5 x4)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x8)) (fp.mul RNE (fp.sub RNE x1 x5) (fp.neg x4))) (fp.div RNE (fp.mul RNE (fp.neg x8) (fp.add RNE x8 x8)) (fp.neg (fp.div RNE x5 x5)))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.div RNE x8 x4) (fp.add RNE x1 x14)) (fp.add RNE (fp.div RNE x12 x11) (fp.mul RNE x3 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x9 x4) (fp.mul RNE x3 x1)) (fp.add RNE (fp.add RNE x9 x10) (fp.neg x11)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.neg x7)) (fp.sub RNE (fp.add RNE x5 x10) (fp.sub RNE x12 x6))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x10 x12) (fp.sub RNE x13 x11)) (fp.mul RNE (fp.sub RNE x8 x1) (fp.div RNE x5 x15)))))
(check-sat)
