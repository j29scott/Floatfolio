(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE x8 x4) (fp.div RNE x9 x11)))
(assert (fp.eq (fp.neg x10) (fp.div RNE x10 x11)))
(assert (fp.geq (fp.mul RNE x10 x5) (fp.sub RNE x12 x9)))
(assert (fp.leq (fp.mul RNE x5 x0) (fp.div RNE x0 x11)))
(assert (fp.gt (fp.add RNE x2 x0) (fp.neg x7)))
(assert (fp.geq (fp.div RNE x11 x7) (fp.add RNE x10 x12)))
(assert (fp.leq (fp.div RNE x10 x5) (fp.div RNE x6 x1)))
(assert (fp.geq (fp.mul RNE x6 x6) (fp.div RNE x1 x6)))
(assert (fp.lt (fp.add RNE x1 x8) (fp.mul RNE x4 x11)))
(assert (fp.leq (fp.mul RNE x12 x3) (fp.neg x0)))
(assert (fp.leq (fp.sub RNE x3 x3) (fp.neg x11)))
(check-sat)
