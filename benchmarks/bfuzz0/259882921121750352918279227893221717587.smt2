(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x1 x3) (fp.div RNE x3 x3)))
(assert (fp.gt (fp.neg x0) (fp.neg x1)))
(assert (fp.geq (fp.add RNE x4 x1) (fp.div RNE x4 x3)))
(assert (fp.geq (fp.div RNE x5 x3) (fp.mul RNE x4 x4)))
(assert (fp.leq (fp.neg x3) (fp.div RNE x3 x2)))
(assert (fp.gt (fp.neg x1) (fp.sub RNE x5 x1)))
(assert (fp.lt (fp.sub RNE x3 x3) (fp.add RNE x4 x1)))
(assert (fp.leq (fp.mul RNE x5 x0) (fp.sub RNE x4 x1)))
(assert (fp.eq (fp.neg x5) (fp.sub RNE x5 x3)))
(assert (fp.leq (fp.div RNE x4 x4) (fp.add RNE x5 x0)))
(assert (fp.leq (fp.add RNE x3 x3) (fp.add RNE x3 x2)))
(assert (fp.gt (fp.sub RNE x3 x0) (fp.mul RNE x0 x3)))
(assert (fp.leq (fp.neg x2) (fp.sub RNE x2 x2)))
(assert (fp.lt (fp.div RNE x2 x1) (fp.div RNE x0 x4)))
(check-sat)
