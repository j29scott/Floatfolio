(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x0 x4) (fp.neg x3)))
(assert (fp.gt (fp.mul RNE x19 x18) (fp.mul RNE x7 x16)))
(assert (fp.gt (fp.sub RNE x2 x4) (fp.div RNE x5 x5)))
(assert (fp.gt (fp.add RNE x13 x4) (fp.sub RNE x6 x13)))
(assert (fp.leq (fp.div RNE x6 x11) (fp.add RNE x7 x8)))
(assert (fp.gt (fp.neg x6) (fp.div RNE x7 x20)))
(assert (fp.leq (fp.neg x19) (fp.add RNE x10 x14)))
(assert (fp.eq (fp.sub RNE x12 x15) (fp.mul RNE x7 x18)))
(assert (fp.geq (fp.div RNE x0 x16) (fp.sub RNE x12 x10)))
(assert (fp.leq (fp.add RNE x9 x18) (fp.mul RNE x14 x19)))
(check-sat)
