(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x4 x10) (fp.mul RNE x10 x5)) (fp.mul RNE (fp.mul RNE x7 x11) (fp.neg x3))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x9 x8) (fp.sub RNE x8 x11)) (fp.div RNE (fp.add RNE x6 x9) (fp.div RNE x2 x3))))
(assert (fp.leq (fp.div RNE (fp.neg x8) (fp.mul RNE x1 x8)) (fp.mul RNE (fp.div RNE x10 x10) (fp.add RNE x11 x4))))
(assert (fp.geq (fp.sub RNE (fp.neg x0) (fp.mul RNE x5 x9)) (fp.add RNE (fp.neg x1) (fp.mul RNE x4 x5))))
(assert (fp.leq (fp.neg (fp.mul RNE x10 x10)) (fp.add RNE (fp.mul RNE x4 x7) (fp.mul RNE x6 x11))))
(assert (fp.gt (fp.div RNE (fp.div RNE x1 x9) (fp.mul RNE x11 x7)) (fp.add RNE (fp.sub RNE x5 x8) (fp.mul RNE x6 x10))))
(assert (fp.eq (fp.neg (fp.mul RNE x11 x0)) (fp.neg (fp.add RNE x1 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x10 x5) (fp.div RNE x2 x2)) (fp.sub RNE (fp.add RNE x0 x7) (fp.sub RNE x1 x9))))
(check-sat)
