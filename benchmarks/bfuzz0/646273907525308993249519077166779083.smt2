(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x3 x11) (fp.div RNE x7 x6)))
(assert (fp.leq (fp.sub RNE x0 x7) (fp.div RNE x6 x0)))
(assert (fp.gt (fp.div RNE x11 x6) (fp.sub RNE x0 x3)))
(assert (fp.gt (fp.sub RNE x3 x4) (fp.sub RNE x8 x3)))
(assert (fp.leq (fp.neg x8) (fp.div RNE x12 x6)))
(assert (fp.lt (fp.div RNE x8 x3) (fp.div RNE x6 x12)))
(assert (fp.leq (fp.div RNE x5 x8) (fp.add RNE x4 x10)))
(assert (fp.lt (fp.neg x3) (fp.add RNE x6 x11)))
(assert (fp.geq (fp.div RNE x1 x10) (fp.add RNE x7 x4)))
(assert (fp.geq (fp.sub RNE x5 x6) (fp.mul RNE x3 x3)))
(assert (fp.gt (fp.neg x5) (fp.mul RNE x9 x0)))
(assert (fp.eq (fp.add RNE x6 x4) (fp.div RNE x4 x11)))
(assert (fp.eq (fp.mul RNE x6 x9) (fp.div RNE x9 x3)))
(assert (fp.gt (fp.mul RNE x3 x5) (fp.add RNE x12 x7)))
(assert (fp.lt (fp.neg x8) (fp.neg x10)))
(assert (fp.leq (fp.sub RNE x11 x1) (fp.sub RNE x8 x8)))
(assert (fp.lt (fp.add RNE x7 x12) (fp.mul RNE x5 x2)))
(assert (fp.leq (fp.add RNE x3 x10) (fp.div RNE x2 x1)))
(assert (fp.eq (fp.sub RNE x11 x3) (fp.div RNE x5 x0)))
(assert (fp.lt (fp.div RNE x3 x1) (fp.mul RNE x11 x0)))
(check-sat)
