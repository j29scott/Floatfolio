(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x8 x7) (fp.neg x6)) (fp.add RNE (fp.sub RNE x11 x7) (fp.div RNE x2 x11))) (fp.div RNE (fp.neg (fp.mul RNE x8 x12)) (fp.mul RNE (fp.div RNE x8 x1) (fp.neg x6)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x9 x8) (fp.mul RNE x5 x11)) (fp.div RNE (fp.add RNE x1 x0) (fp.sub RNE x1 x7))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x1) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x5 x3) (fp.sub RNE x6 x7))))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE (fp.mul RNE x7 x0) (fp.sub RNE x10 x8)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x0 x12) (fp.add RNE x4 x11))) (fp.mul RNE (fp.neg (fp.div RNE x11 x11)) (fp.div RNE (fp.neg x6) (fp.mul RNE x4 x11))))))
(check-sat)
