(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x4) (fp.mul RNE x2 x0)) (fp.mul RNE (fp.mul RNE x8 x0) (fp.mul RNE x7 x1))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x8 x7) (fp.sub RNE x6 x5)) (fp.mul RNE (fp.neg x1) (fp.add RNE x4 x8))))
(assert (fp.geq (fp.add RNE (fp.neg x3) (fp.add RNE x6 x1)) (fp.div RNE (fp.div RNE x1 x3) (fp.neg x4))))
(assert (fp.geq (fp.neg (fp.mul RNE x4 x8)) (fp.add RNE (fp.mul RNE x1 x6) (fp.mul RNE x1 x1))))
(assert (fp.geq (fp.div RNE (fp.div RNE x7 x5) (fp.add RNE x7 x0)) (fp.neg (fp.sub RNE x7 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x6 x8) (fp.sub RNE x4 x3)) (fp.neg (fp.mul RNE x8 x8))))
(check-sat)
