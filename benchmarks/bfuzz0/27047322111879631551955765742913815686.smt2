(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg x13) (fp.neg x7)) (fp.div RNE (fp.sub RNE x0 x4) (fp.add RNE x5 x3))) (fp.div RNE (fp.mul RNE (fp.add RNE x10 x1) (fp.mul RNE x8 x5)) (fp.add RNE (fp.add RNE x10 x9) (fp.neg x11)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x7 x5) (fp.sub RNE x2 x11)) (fp.add RNE (fp.mul RNE x8 x2) (fp.div RNE x4 x10))) (fp.sub RNE (fp.add RNE (fp.div RNE x10 x10) (fp.mul RNE x10 x13)) (fp.sub RNE (fp.add RNE x3 x10) (fp.div RNE x7 x1)))))
(check-sat)
