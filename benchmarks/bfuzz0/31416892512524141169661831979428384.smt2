(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x16 x18)) (fp.sub RNE (fp.sub RNE x1 x10) (fp.neg x22))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x9) (fp.add RNE x15 x15)) (fp.div RNE (fp.mul RNE x17 x5) (fp.neg x17)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.div RNE x3 x1)) (fp.neg (fp.add RNE x15 x3))) (fp.div RNE (fp.div RNE (fp.sub RNE x18 x5) (fp.div RNE x3 x8)) (fp.add RNE (fp.sub RNE x22 x20) (fp.sub RNE x5 x13)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg x18) (fp.neg x18)) (fp.mul RNE (fp.sub RNE x22 x19) (fp.mul RNE x5 x5))) (fp.div RNE (fp.div RNE (fp.mul RNE x8 x15) (fp.add RNE x1 x18)) (fp.sub RNE (fp.add RNE x6 x6) (fp.add RNE x0 x13)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x5 x18) (fp.neg x16)) (fp.neg (fp.mul RNE x8 x10))) (fp.div RNE (fp.add RNE (fp.sub RNE x3 x15) (fp.div RNE x15 x17)) (fp.mul RNE (fp.mul RNE x1 x10) (fp.mul RNE x9 x7)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x13 x1) (fp.neg x18)) (fp.div RNE (fp.add RNE x4 x17) (fp.div RNE x17 x13))) (fp.div RNE (fp.sub RNE (fp.add RNE x9 x18) (fp.neg x18)) (fp.add RNE (fp.add RNE x9 x6) (fp.sub RNE x2 x8)))))
(check-sat)
