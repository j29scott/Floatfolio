(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x26) (fp.mul RNE x10 x10)) (fp.mul RNE (fp.mul RNE x2 x4) (fp.mul RNE x18 x9))) (fp.neg (fp.add RNE (fp.mul RNE x6 x13) (fp.neg x20)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.add RNE x10 x12)) (fp.div RNE (fp.add RNE x4 x25) (fp.add RNE x18 x24))) (fp.neg (fp.div RNE (fp.sub RNE x1 x9) (fp.sub RNE x22 x4)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.div RNE x0 x19)) (fp.div RNE (fp.add RNE x17 x4) (fp.neg x18))) (fp.sub RNE (fp.sub RNE (fp.neg x11) (fp.add RNE x3 x23)) (fp.neg (fp.neg x16)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.sub RNE x6 x20) (fp.div RNE x26 x18))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x0 x11) (fp.sub RNE x5 x12)) (fp.neg (fp.mul RNE x19 x2)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.sub RNE x11 x13) (fp.neg x22))) (fp.add RNE (fp.neg (fp.mul RNE x13 x6)) (fp.neg (fp.neg x10)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x12 x16) (fp.div RNE x7 x3))) (fp.add RNE (fp.neg (fp.sub RNE x7 x6)) (fp.div RNE (fp.neg x26) (fp.sub RNE x23 x25)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x26) (fp.neg x20)) (fp.div RNE (fp.neg x0) (fp.div RNE x0 x1))) (fp.add RNE (fp.sub RNE (fp.div RNE x15 x1) (fp.div RNE x18 x10)) (fp.sub RNE (fp.neg x3) (fp.add RNE x0 x23)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg x16) (fp.sub RNE x7 x5)) (fp.sub RNE (fp.add RNE x7 x5) (fp.neg x13))) (fp.sub RNE (fp.div RNE (fp.add RNE x24 x26) (fp.mul RNE x23 x22)) (fp.add RNE (fp.div RNE x5 x26) (fp.div RNE x12 x10)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.mul RNE x24 x18) (fp.add RNE x16 x4)) (fp.sub RNE (fp.div RNE x23 x8) (fp.sub RNE x4 x22))) (fp.add RNE (fp.sub RNE (fp.mul RNE x5 x24) (fp.mul RNE x3 x15)) (fp.div RNE (fp.sub RNE x19 x6) (fp.neg x0)))))
(check-sat)
