(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x25 x0)) (fp.mul RNE (fp.add RNE x23 x15) (fp.neg x0))) (fp.mul RNE (fp.mul RNE (fp.add RNE x20 x19) (fp.div RNE x26 x24)) (fp.add RNE (fp.div RNE x7 x0) (fp.neg x4)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.neg x11) (fp.neg x7)) (fp.mul RNE (fp.div RNE x16 x1) (fp.sub RNE x2 x15))) (fp.div RNE (fp.div RNE (fp.mul RNE x10 x18) (fp.add RNE x26 x11)) (fp.div RNE (fp.add RNE x1 x5) (fp.div RNE x15 x5))))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x22 x14) (fp.sub RNE x25 x12)) (fp.mul RNE (fp.mul RNE x3 x21) (fp.div RNE x21 x2))) (fp.mul RNE (fp.add RNE (fp.neg x13) (fp.add RNE x25 x14)) (fp.neg (fp.mul RNE x10 x3)))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.neg x17) (fp.add RNE x13 x14)) (fp.mul RNE (fp.div RNE x4 x21) (fp.sub RNE x18 x12))) (fp.div RNE (fp.neg (fp.mul RNE x26 x21)) (fp.add RNE (fp.neg x5) (fp.mul RNE x20 x9))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE (fp.sub RNE x6 x9) (fp.div RNE x1 x17)) (fp.neg (fp.neg x12)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x15 x9) (fp.mul RNE x10 x26)) (fp.sub RNE (fp.neg x10) (fp.mul RNE x7 x23))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x19 x2) (fp.div RNE x15 x25)) (fp.div RNE (fp.add RNE x1 x9) (fp.div RNE x19 x15))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x17 x8) (fp.add RNE x22 x7)) (fp.mul RNE (fp.div RNE x17 x3) (fp.div RNE x4 x6))) (fp.mul RNE (fp.neg (fp.div RNE x15 x26)) (fp.add RNE (fp.mul RNE x15 x10) (fp.sub RNE x21 x5)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x8 x6) (fp.sub RNE x4 x8)) (fp.add RNE (fp.add RNE x13 x21) (fp.mul RNE x4 x19))) (fp.neg (fp.neg (fp.div RNE x4 x26))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.add RNE x14 x24) (fp.mul RNE x16 x3)) (fp.mul RNE (fp.neg x25) (fp.sub RNE x17 x5))) (fp.mul RNE (fp.mul RNE (fp.neg x18) (fp.mul RNE x12 x3)) (fp.add RNE (fp.neg x16) (fp.sub RNE x9 x23)))) (fp.div RNE (fp.neg (fp.neg (fp.mul RNE x19 x15))) (fp.div RNE (fp.sub RNE (fp.neg x23) (fp.div RNE x22 x20)) (fp.sub RNE (fp.sub RNE x0 x8) (fp.add RNE x12 x2))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x8 x6) (fp.neg x1)) (fp.add RNE (fp.mul RNE x10 x12) (fp.mul RNE x5 x5))) (fp.add RNE (fp.neg (fp.div RNE x26 x19)) (fp.mul RNE (fp.add RNE x21 x15) (fp.sub RNE x26 x7)))) (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x23 x18)) (fp.div RNE (fp.mul RNE x8 x4) (fp.mul RNE x23 x18))) (fp.sub RNE (fp.mul RNE (fp.neg x10) (fp.neg x17)) (fp.neg (fp.neg x0))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x0 x20) (fp.neg x0)) (fp.add RNE (fp.neg x3) (fp.add RNE x12 x1))) (fp.div RNE (fp.mul RNE (fp.neg x19) (fp.div RNE x11 x12)) (fp.add RNE (fp.div RNE x12 x16) (fp.div RNE x20 x9)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.div RNE x17 x15) (fp.neg x0)) (fp.mul RNE (fp.neg x22) (fp.add RNE x16 x1))) (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x8) (fp.neg x14)) (fp.mul RNE (fp.div RNE x4 x16) (fp.add RNE x3 x17))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x9 x22) (fp.add RNE x16 x18)) (fp.neg (fp.sub RNE x21 x24))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x6 x13) (fp.add RNE x19 x11)) (fp.div RNE (fp.div RNE x5 x8) (fp.neg x8)))) (fp.neg (fp.neg (fp.add RNE (fp.add RNE x16 x2) (fp.add RNE x21 x24))))))
(check-sat)
