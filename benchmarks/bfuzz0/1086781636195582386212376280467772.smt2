(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.mul RNE x2 x7) (fp.div RNE x3 x1)) (fp.div RNE (fp.sub RNE x9 x9) (fp.div RNE x2 x4))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x6) (fp.div RNE x4 x1)) (fp.neg (fp.sub RNE x5 x8))))
(assert (fp.eq (fp.neg (fp.neg x9)) (fp.add RNE (fp.mul RNE x2 x2) (fp.sub RNE x5 x7))))
(assert (fp.leq (fp.add RNE (fp.add RNE x8 x8) (fp.sub RNE x5 x2)) (fp.div RNE (fp.sub RNE x6 x2) (fp.neg x0))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x2 x3) (fp.add RNE x7 x4)) (fp.add RNE (fp.neg x8) (fp.div RNE x8 x5))))
(assert (fp.eq (fp.neg (fp.neg x7)) (fp.mul RNE (fp.neg x9) (fp.mul RNE x1 x8))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x5 x6) (fp.div RNE x2 x1)) (fp.sub RNE (fp.div RNE x4 x7) (fp.add RNE x4 x9))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x5 x2) (fp.sub RNE x1 x5)) (fp.sub RNE (fp.div RNE x5 x1) (fp.neg x2))))
(assert (fp.eq (fp.neg (fp.div RNE x7 x3)) (fp.neg (fp.mul RNE x6 x9))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x1 x7) (fp.mul RNE x8 x1)) (fp.neg (fp.div RNE x7 x2))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x3 x3) (fp.mul RNE x5 x6)) (fp.add RNE (fp.add RNE x1 x1) (fp.neg x9))))
(assert (fp.gt (fp.sub RNE (fp.neg x3) (fp.neg x3)) (fp.div RNE (fp.div RNE x5 x1) (fp.add RNE x2 x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x0) (fp.div RNE x0 x6)) (fp.div RNE (fp.div RNE x9 x1) (fp.add RNE x3 x8))))
(assert (fp.eq (fp.neg (fp.neg x2)) (fp.sub RNE (fp.mul RNE x7 x8) (fp.add RNE x0 x6))))
(assert (fp.leq (fp.neg (fp.add RNE x0 x3)) (fp.sub RNE (fp.div RNE x1 x9) (fp.mul RNE x2 x1))))
(check-sat)
