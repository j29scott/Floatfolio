(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.mul RNE x5 x6)) (fp.sub RNE (fp.neg x5) (fp.add RNE x15 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x1 x13) (fp.add RNE x7 x1)) (fp.sub RNE (fp.neg x0) (fp.div RNE x2 x16))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x4 x3) (fp.add RNE x4 x2)) (fp.neg (fp.div RNE x4 x0))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x0 x1) (fp.neg x12)) (fp.add RNE (fp.sub RNE x8 x13) (fp.mul RNE x2 x9))))
(assert (fp.eq (fp.neg (fp.add RNE x13 x8)) (fp.add RNE (fp.add RNE x6 x1) (fp.add RNE x15 x10))))
(assert (fp.eq (fp.mul RNE (fp.neg x3) (fp.sub RNE x14 x10)) (fp.div RNE (fp.div RNE x0 x10) (fp.div RNE x9 x14))))
(assert (fp.eq (fp.neg (fp.neg x8)) (fp.add RNE (fp.add RNE x13 x15) (fp.add RNE x2 x2))))
(assert (fp.eq (fp.neg (fp.sub RNE x7 x8)) (fp.mul RNE (fp.add RNE x12 x14) (fp.mul RNE x13 x11))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x9 x9) (fp.div RNE x15 x4)) (fp.sub RNE (fp.mul RNE x12 x4) (fp.div RNE x10 x2))))
(check-sat)
