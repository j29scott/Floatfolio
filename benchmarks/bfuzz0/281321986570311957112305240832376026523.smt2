(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE x3 x3) (fp.neg x1)))
(assert (fp.geq (fp.mul RNE x1 x3) (fp.neg x3)))
(assert (fp.gt (fp.add RNE x7 x0) (fp.neg x3)))
(assert (fp.geq (fp.mul RNE x0 x0) (fp.sub RNE x7 x0)))
(assert (fp.lt (fp.mul RNE x0 x5) (fp.sub RNE x5 x0)))
(assert (fp.geq (fp.mul RNE x1 x0) (fp.mul RNE x7 x2)))
(assert (fp.lt (fp.mul RNE x2 x3) (fp.div RNE x0 x5)))
(assert (fp.lt (fp.neg x1) (fp.div RNE x4 x0)))
(assert (fp.leq (fp.mul RNE x5 x5) (fp.div RNE x7 x1)))
(assert (fp.lt (fp.neg x1) (fp.mul RNE x4 x7)))
(assert (fp.geq (fp.div RNE x2 x6) (fp.sub RNE x3 x3)))
(assert (fp.geq (fp.neg x0) (fp.div RNE x6 x4)))
(assert (fp.gt (fp.sub RNE x6 x2) (fp.mul RNE x3 x3)))
(assert (fp.geq (fp.div RNE x6 x0) (fp.mul RNE x2 x7)))
(assert (fp.leq (fp.sub RNE x6 x3) (fp.mul RNE x6 x3)))
(assert (fp.eq (fp.mul RNE x6 x5) (fp.sub RNE x3 x0)))
(assert (fp.geq (fp.div RNE x7 x5) (fp.neg x7)))
(check-sat)
