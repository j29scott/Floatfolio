(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x4) (fp.sub RNE x1 x13)))
(assert (fp.lt (fp.mul RNE x11 x7) (fp.sub RNE x10 x12)))
(assert (fp.geq (fp.add RNE x11 x4) (fp.div RNE x1 x7)))
(assert (fp.eq (fp.sub RNE x5 x3) (fp.div RNE x6 x8)))
(assert (fp.eq (fp.mul RNE x8 x9) (fp.sub RNE x10 x12)))
(assert (fp.geq (fp.div RNE x7 x2) (fp.sub RNE x11 x9)))
(assert (fp.geq (fp.mul RNE x13 x3) (fp.add RNE x0 x6)))
(assert (fp.gt (fp.mul RNE x9 x8) (fp.add RNE x11 x0)))
(assert (fp.lt (fp.div RNE x5 x9) (fp.mul RNE x3 x13)))
(check-sat)
