(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x11) (fp.neg x8)) (fp.div RNE (fp.add RNE x4 x9) (fp.mul RNE x1 x9))) (fp.div RNE (fp.add RNE (fp.sub RNE x4 x1) (fp.sub RNE x6 x10)) (fp.sub RNE (fp.add RNE x10 x9) (fp.mul RNE x11 x9)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg x7) (fp.sub RNE x2 x7)) (fp.add RNE (fp.div RNE x0 x9) (fp.sub RNE x8 x7))) (fp.sub RNE (fp.neg (fp.div RNE x9 x2)) (fp.sub RNE (fp.add RNE x5 x0) (fp.div RNE x9 x4)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.mul RNE x11 x2) (fp.mul RNE x6 x3)) (fp.neg (fp.sub RNE x0 x3))) (fp.div RNE (fp.sub RNE (fp.mul RNE x6 x6) (fp.mul RNE x8 x9)) (fp.mul RNE (fp.sub RNE x3 x8) (fp.div RNE x8 x7)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE x10 x8) (fp.add RNE x10 x10))) (fp.div RNE (fp.add RNE (fp.sub RNE x0 x11) (fp.div RNE x8 x9)) (fp.neg (fp.mul RNE x8 x3)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE x4 x8)) (fp.neg (fp.mul RNE x2 x6))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x9) (fp.sub RNE x3 x10)) (fp.mul RNE (fp.mul RNE x1 x8) (fp.add RNE x7 x5)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.div RNE x1 x9) (fp.neg x6))) (fp.sub RNE (fp.neg (fp.add RNE x5 x7)) (fp.neg (fp.neg x7)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.add RNE x3 x0)) (fp.div RNE (fp.add RNE x6 x0) (fp.div RNE x2 x11))) (fp.mul RNE (fp.div RNE (fp.mul RNE x1 x11) (fp.mul RNE x2 x3)) (fp.mul RNE (fp.add RNE x8 x11) (fp.add RNE x6 x6)))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x7 x5))) (fp.neg (fp.add RNE (fp.sub RNE x11 x1) (fp.add RNE x0 x1)))))
(check-sat)
