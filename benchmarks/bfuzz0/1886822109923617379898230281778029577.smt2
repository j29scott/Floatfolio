(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.neg (fp.neg (fp.div RNE x5 x15)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x0 x7) (fp.sub RNE x18 x11)) (fp.mul RNE (fp.mul RNE x9 x4) (fp.sub RNE x7 x7))) (fp.add RNE (fp.sub RNE (fp.div RNE x16 x19) (fp.mul RNE x19 x11)) (fp.div RNE (fp.sub RNE x8 x4) (fp.div RNE x0 x10))))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x18 x11) (fp.div RNE x6 x8)) (fp.neg (fp.sub RNE x22 x1))) (fp.neg (fp.add RNE (fp.mul RNE x17 x8) (fp.mul RNE x7 x7)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.sub RNE x8 x3) (fp.sub RNE x17 x0)) (fp.div RNE (fp.mul RNE x17 x21) (fp.div RNE x0 x13))) (fp.add RNE (fp.add RNE (fp.add RNE x18 x0) (fp.div RNE x3 x17)) (fp.sub RNE (fp.add RNE x10 x21) (fp.sub RNE x0 x19))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.neg (fp.mul RNE x15 x5)) (fp.add RNE (fp.mul RNE x21 x4) (fp.div RNE x14 x3))) (fp.mul RNE (fp.neg (fp.neg x6)) (fp.add RNE (fp.add RNE x17 x0) (fp.add RNE x16 x17)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.sub RNE x7 x1) (fp.sub RNE x3 x4)) (fp.sub RNE (fp.mul RNE x7 x2) (fp.sub RNE x0 x11))) (fp.mul RNE (fp.div RNE (fp.add RNE x1 x14) (fp.mul RNE x19 x3)) (fp.add RNE (fp.add RNE x22 x20) (fp.div RNE x1 x4))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE (fp.neg x7) (fp.neg x18)) (fp.add RNE (fp.add RNE x7 x15) (fp.neg x8)))) (fp.neg (fp.add RNE (fp.neg (fp.neg x11)) (fp.neg (fp.mul RNE x16 x5))))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x17 x13)) (fp.div RNE (fp.add RNE x12 x9) (fp.add RNE x9 x4))) (fp.sub RNE (fp.div RNE (fp.neg x21) (fp.mul RNE x18 x6)) (fp.sub RNE (fp.add RNE x16 x10) (fp.add RNE x9 x6)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.neg x13) (fp.div RNE x5 x11)) (fp.add RNE (fp.div RNE x21 x21) (fp.add RNE x17 x18))) (fp.sub RNE (fp.div RNE (fp.add RNE x0 x6) (fp.mul RNE x13 x20)) (fp.mul RNE (fp.add RNE x22 x19) (fp.add RNE x10 x0))))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE (fp.add RNE x4 x11) (fp.div RNE x4 x12)) (fp.add RNE (fp.neg x14) (fp.mul RNE x17 x13))) (fp.add RNE (fp.sub RNE (fp.mul RNE x0 x8) (fp.sub RNE x8 x20)) (fp.neg (fp.sub RNE x7 x15)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x4) (fp.add RNE x1 x17)) (fp.mul RNE (fp.div RNE x20 x8) (fp.mul RNE x19 x18))) (fp.div RNE (fp.mul RNE (fp.neg x22) (fp.div RNE x17 x4)) (fp.neg (fp.sub RNE x16 x7))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x18 x12) (fp.sub RNE x10 x15)) (fp.neg (fp.add RNE x19 x7))) (fp.div RNE (fp.add RNE (fp.neg x19) (fp.mul RNE x20 x4)) (fp.mul RNE (fp.add RNE x12 x13) (fp.sub RNE x2 x7)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x12 x14) (fp.mul RNE x7 x19)) (fp.mul RNE (fp.add RNE x20 x7) (fp.div RNE x7 x19))) (fp.sub RNE (fp.sub RNE (fp.div RNE x18 x13) (fp.div RNE x13 x10)) (fp.add RNE (fp.mul RNE x1 x11) (fp.mul RNE x3 x8))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg (fp.add RNE x4 x1)) (fp.neg (fp.add RNE x4 x5))) (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x8) (fp.add RNE x0 x16)) (fp.div RNE (fp.mul RNE x10 x12) (fp.add RNE x9 x0)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x21 x0) (fp.mul RNE x4 x22)) (fp.sub RNE (fp.mul RNE x2 x16) (fp.sub RNE x13 x19))) (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x17) (fp.add RNE x17 x15)) (fp.neg (fp.mul RNE x9 x18))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x11 x11) (fp.sub RNE x4 x17)) (fp.div RNE (fp.add RNE x7 x7) (fp.neg x2))) (fp.neg (fp.div RNE (fp.neg x19) (fp.mul RNE x16 x13)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.mul RNE x9 x10)) (fp.sub RNE (fp.div RNE x17 x3) (fp.div RNE x8 x4))) (fp.sub RNE (fp.neg (fp.div RNE x16 x4)) (fp.add RNE (fp.add RNE x6 x15) (fp.add RNE x13 x16))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE (fp.neg x14) (fp.neg x3)) (fp.div RNE (fp.add RNE x5 x10) (fp.sub RNE x13 x13)))) (fp.div RNE (fp.sub RNE (fp.add RNE (fp.div RNE x18 x19) (fp.mul RNE x17 x12)) (fp.div RNE (fp.div RNE x20 x0) (fp.div RNE x1 x15))) (fp.div RNE (fp.add RNE (fp.neg x21) (fp.div RNE x18 x19)) (fp.div RNE (fp.neg x20) (fp.add RNE x1 x2))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x4 x8) (fp.mul RNE x20 x0)) (fp.mul RNE (fp.sub RNE x16 x15) (fp.sub RNE x5 x6)))) (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x22 x17) (fp.add RNE x9 x3))) (fp.mul RNE (fp.mul RNE (fp.div RNE x11 x9) (fp.mul RNE x12 x8)) (fp.neg (fp.sub RNE x12 x17))))))
(check-sat)
