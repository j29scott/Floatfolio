(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.div RNE x11 x1) (fp.neg x7)) (fp.div RNE (fp.mul RNE x6 x3) (fp.neg x1))))
(assert (fp.lt (fp.add RNE (fp.div RNE x1 x7) (fp.add RNE x13 x14)) (fp.sub RNE (fp.sub RNE x13 x14) (fp.add RNE x8 x0))))
(assert (fp.geq (fp.neg (fp.sub RNE x5 x9)) (fp.sub RNE (fp.div RNE x12 x2) (fp.div RNE x9 x13))))
(assert (fp.lt (fp.div RNE (fp.neg x12) (fp.div RNE x4 x2)) (fp.sub RNE (fp.mul RNE x10 x10) (fp.sub RNE x14 x6))))
(check-sat)
