(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE x13 x12) (fp.mul RNE x2 x6)) (fp.add RNE (fp.add RNE x15 x22) (fp.sub RNE x5 x10))) (fp.sub RNE (fp.sub RNE (fp.add RNE x13 x6) (fp.div RNE x8 x6)) (fp.mul RNE (fp.neg x2) (fp.add RNE x8 x6)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x10) (fp.add RNE x13 x2)) (fp.div RNE (fp.sub RNE x6 x0) (fp.mul RNE x12 x13))) (fp.mul RNE (fp.neg (fp.neg x20)) (fp.add RNE (fp.sub RNE x13 x10) (fp.sub RNE x8 x12))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x11 x17) (fp.sub RNE x14 x0)) (fp.add RNE (fp.mul RNE x19 x14) (fp.add RNE x10 x3))) (fp.sub RNE (fp.div RNE (fp.neg x3) (fp.sub RNE x8 x1)) (fp.neg (fp.sub RNE x14 x14)))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x11) (fp.neg x18)) (fp.div RNE (fp.sub RNE x21 x22) (fp.add RNE x22 x3))) (fp.add RNE (fp.sub RNE (fp.neg x12) (fp.add RNE x21 x2)) (fp.add RNE (fp.neg x10) (fp.neg x13))))))
(check-sat)
