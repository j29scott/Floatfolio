(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.div RNE x1 x1) (fp.div RNE x6 x10)) (fp.neg (fp.mul RNE x1 x10))))
(assert (fp.gt (fp.neg (fp.mul RNE x2 x5)) (fp.div RNE (fp.add RNE x6 x3) (fp.neg x6))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x6 x7) (fp.add RNE x9 x0)) (fp.mul RNE (fp.neg x7) (fp.div RNE x9 x6))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x3 x4) (fp.div RNE x1 x3)) (fp.neg (fp.add RNE x7 x9))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x5 x3) (fp.sub RNE x1 x2)) (fp.add RNE (fp.div RNE x7 x6) (fp.mul RNE x9 x7))))
(assert (fp.leq (fp.div RNE (fp.div RNE x7 x8) (fp.sub RNE x3 x8)) (fp.div RNE (fp.add RNE x1 x1) (fp.add RNE x8 x8))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x8)) (fp.sub RNE (fp.add RNE x0 x0) (fp.mul RNE x5 x4))))
(assert (fp.geq (fp.neg (fp.div RNE x10 x1)) (fp.sub RNE (fp.neg x3) (fp.add RNE x9 x9))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x0 x4) (fp.mul RNE x1 x1)) (fp.mul RNE (fp.neg x4) (fp.add RNE x10 x2))))
(assert (fp.leq (fp.sub RNE (fp.neg x1) (fp.div RNE x8 x8)) (fp.div RNE (fp.mul RNE x0 x4) (fp.div RNE x3 x7))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x0 x6) (fp.add RNE x2 x1)) (fp.div RNE (fp.sub RNE x9 x1) (fp.sub RNE x5 x2))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x5 x0) (fp.mul RNE x6 x3)) (fp.div RNE (fp.div RNE x6 x10) (fp.sub RNE x2 x5))))
(check-sat)
