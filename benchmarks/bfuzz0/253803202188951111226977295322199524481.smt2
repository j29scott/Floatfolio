(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE x13 x10) (fp.div RNE x13 x2)))
(assert (fp.gt (fp.mul RNE x12 x1) (fp.neg x3)))
(assert (fp.eq (fp.sub RNE x4 x12) (fp.mul RNE x6 x7)))
(assert (fp.lt (fp.add RNE x7 x6) (fp.neg x13)))
(assert (fp.lt (fp.div RNE x1 x1) (fp.neg x13)))
(assert (fp.geq (fp.mul RNE x9 x2) (fp.neg x11)))
(assert (fp.lt (fp.mul RNE x7 x10) (fp.div RNE x13 x5)))
(assert (fp.gt (fp.add RNE x3 x11) (fp.div RNE x12 x6)))
(assert (fp.geq (fp.div RNE x7 x1) (fp.add RNE x7 x1)))
(assert (fp.lt (fp.div RNE x12 x3) (fp.div RNE x14 x11)))
(assert (fp.leq (fp.neg x8) (fp.div RNE x1 x3)))
(assert (fp.lt (fp.add RNE x2 x14) (fp.sub RNE x10 x11)))
(assert (fp.leq (fp.div RNE x5 x3) (fp.add RNE x14 x2)))
(assert (fp.eq (fp.sub RNE x2 x5) (fp.add RNE x7 x1)))
(check-sat)
