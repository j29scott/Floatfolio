(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.add RNE x16 x16) (fp.neg x10)) (fp.neg (fp.add RNE x16 x5))) (fp.neg (fp.add RNE (fp.neg x15) (fp.div RNE x15 x3)))) (fp.neg (fp.div RNE (fp.add RNE (fp.div RNE x8 x16) (fp.add RNE x1 x3)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x0 x10))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x16 x1) (fp.div RNE x3 x6)) (fp.neg (fp.neg x11))) (fp.div RNE (fp.div RNE (fp.sub RNE x14 x7) (fp.mul RNE x10 x10)) (fp.div RNE (fp.mul RNE x8 x10) (fp.add RNE x0 x16)))) (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.div RNE x11 x18) (fp.mul RNE x4 x7)) (fp.neg (fp.mul RNE x12 x0))) (fp.sub RNE (fp.neg (fp.mul RNE x12 x1)) (fp.div RNE (fp.sub RNE x6 x16) (fp.neg x17))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.neg x6) (fp.sub RNE x12 x3)) (fp.div RNE (fp.add RNE x1 x7) (fp.sub RNE x11 x0))) (fp.mul RNE (fp.add RNE (fp.div RNE x4 x15) (fp.mul RNE x7 x7)) (fp.add RNE (fp.sub RNE x9 x14) (fp.mul RNE x11 x2)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.mul RNE x16 x16) (fp.div RNE x4 x9))) (fp.mul RNE (fp.div RNE (fp.add RNE x5 x19) (fp.div RNE x5 x5)) (fp.neg (fp.sub RNE x17 x11))))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg (fp.div RNE x12 x6)) (fp.neg (fp.mul RNE x1 x8))) (fp.neg (fp.sub RNE (fp.add RNE x1 x2) (fp.mul RNE x16 x3)))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x16) (fp.div RNE x11 x2)) (fp.sub RNE (fp.sub RNE x6 x14) (fp.sub RNE x3 x2))) (fp.sub RNE (fp.add RNE (fp.add RNE x4 x6) (fp.div RNE x15 x0)) (fp.sub RNE (fp.neg x0) (fp.neg x8))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x17 x12) (fp.add RNE x11 x16)) (fp.add RNE (fp.neg x6) (fp.neg x12))) (fp.mul RNE (fp.add RNE (fp.add RNE x15 x10) (fp.sub RNE x14 x10)) (fp.mul RNE (fp.div RNE x15 x4) (fp.mul RNE x7 x19)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.neg x2) (fp.add RNE x1 x12)) (fp.div RNE (fp.sub RNE x19 x16) (fp.mul RNE x14 x2))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg (fp.mul RNE x11 x0)) (fp.add RNE (fp.sub RNE x13 x10) (fp.neg x10)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x0 x1) (fp.sub RNE x11 x17)) (fp.div RNE (fp.div RNE x18 x4) (fp.sub RNE x16 x0))) (fp.div RNE (fp.div RNE (fp.mul RNE x3 x10) (fp.mul RNE x15 x15)) (fp.neg (fp.neg x4))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE (fp.sub RNE x5 x9) (fp.neg x0))) (fp.add RNE (fp.mul RNE (fp.add RNE x13 x3) (fp.sub RNE x10 x6)) (fp.mul RNE (fp.add RNE x11 x8) (fp.neg x14)))) (fp.add RNE (fp.neg (fp.add RNE (fp.add RNE x3 x1) (fp.add RNE x10 x13))) (fp.div RNE (fp.add RNE (fp.mul RNE x0 x14) (fp.div RNE x15 x19)) (fp.div RNE (fp.add RNE x4 x4) (fp.sub RNE x14 x16))))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.add RNE x14 x17) (fp.div RNE x8 x17)) (fp.add RNE (fp.div RNE x10 x13) (fp.add RNE x9 x12))) (fp.sub RNE (fp.neg (fp.mul RNE x11 x12)) (fp.neg (fp.sub RNE x6 x11)))) (fp.neg (fp.neg (fp.sub RNE (fp.sub RNE x7 x1) (fp.div RNE x4 x17))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.mul RNE x16 x3) (fp.add RNE x13 x5)) (fp.mul RNE (fp.add RNE x11 x14) (fp.add RNE x14 x9))) (fp.div RNE (fp.add RNE (fp.neg x18) (fp.add RNE x12 x3)) (fp.sub RNE (fp.sub RNE x1 x14) (fp.add RNE x3 x19)))) (fp.neg (fp.add RNE (fp.div RNE (fp.neg x5) (fp.neg x16)) (fp.div RNE (fp.sub RNE x14 x4) (fp.sub RNE x15 x6))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.div RNE x3 x13) (fp.sub RNE x3 x4)) (fp.neg (fp.add RNE x8 x12))) (fp.div RNE (fp.mul RNE (fp.div RNE x6 x6) (fp.div RNE x15 x7)) (fp.add RNE (fp.add RNE x15 x1) (fp.div RNE x9 x18)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x7 x6) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x5 x17) (fp.div RNE x18 x8))) (fp.div RNE (fp.neg (fp.add RNE x0 x9)) (fp.neg (fp.sub RNE x1 x10))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE (fp.add RNE x2 x7) (fp.neg x3))) (fp.sub RNE (fp.neg (fp.add RNE x15 x19)) (fp.add RNE (fp.add RNE x11 x19) (fp.sub RNE x9 x4)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x14 x10) (fp.mul RNE x7 x15)) (fp.add RNE (fp.div RNE x2 x17) (fp.neg x14))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x12 x17) (fp.sub RNE x9 x11)) (fp.add RNE (fp.sub RNE x9 x1) (fp.div RNE x12 x10))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.neg x3) (fp.div RNE x7 x3)) (fp.mul RNE (fp.div RNE x11 x19) (fp.mul RNE x6 x1))) (fp.neg (fp.mul RNE (fp.sub RNE x1 x9) (fp.div RNE x4 x10)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.div RNE x7 x9)) (fp.add RNE (fp.div RNE x10 x3) (fp.div RNE x12 x7))) (fp.sub RNE (fp.neg (fp.add RNE x5 x9)) (fp.mul RNE (fp.mul RNE x0 x17) (fp.mul RNE x11 x5))))))
(check-sat)
