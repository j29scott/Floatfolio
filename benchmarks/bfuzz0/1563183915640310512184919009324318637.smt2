(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg x2) (fp.div RNE x2 x3)))
(assert (fp.leq (fp.mul RNE x3 x7) (fp.neg x6)))
(assert (fp.gt (fp.div RNE x2 x1) (fp.div RNE x3 x8)))
(assert (fp.leq (fp.neg x1) (fp.div RNE x4 x8)))
(assert (fp.lt (fp.neg x4) (fp.div RNE x9 x7)))
(assert (fp.geq (fp.sub RNE x5 x5) (fp.sub RNE x8 x1)))
(assert (fp.gt (fp.add RNE x2 x4) (fp.neg x7)))
(assert (fp.leq (fp.mul RNE x5 x1) (fp.sub RNE x0 x2)))
(assert (fp.geq (fp.neg x4) (fp.div RNE x8 x1)))
(assert (fp.leq (fp.neg x10) (fp.add RNE x4 x6)))
(assert (fp.gt (fp.mul RNE x2 x1) (fp.neg x8)))
(assert (fp.leq (fp.mul RNE x0 x6) (fp.add RNE x8 x4)))
(check-sat)
