(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.sub RNE x10 x7) (fp.mul RNE x2 x9)) (fp.mul RNE (fp.add RNE x11 x1) (fp.sub RNE x11 x10))))
(assert (fp.geq (fp.add RNE (fp.neg x2) (fp.sub RNE x3 x1)) (fp.add RNE (fp.div RNE x9 x9) (fp.mul RNE x10 x11))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x11 x0) (fp.mul RNE x6 x3)) (fp.div RNE (fp.sub RNE x9 x11) (fp.neg x9))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x3 x4) (fp.neg x4)) (fp.div RNE (fp.neg x10) (fp.add RNE x10 x8))))
(assert (fp.eq (fp.mul RNE (fp.neg x10) (fp.neg x6)) (fp.mul RNE (fp.add RNE x10 x5) (fp.div RNE x7 x9))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x10 x1) (fp.div RNE x8 x12)) (fp.div RNE (fp.add RNE x10 x5) (fp.div RNE x9 x11))))
(check-sat)
