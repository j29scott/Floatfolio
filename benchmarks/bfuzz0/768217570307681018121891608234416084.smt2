(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x5 x2) (fp.div RNE x8 x7)))
(assert (fp.leq (fp.mul RNE x6 x1) (fp.mul RNE x0 x7)))
(assert (fp.lt (fp.mul RNE x6 x6) (fp.mul RNE x8 x1)))
(assert (fp.lt (fp.sub RNE x6 x1) (fp.add RNE x4 x0)))
(assert (fp.lt (fp.mul RNE x4 x7) (fp.div RNE x5 x4)))
(assert (fp.eq (fp.neg x7) (fp.div RNE x2 x2)))
(assert (fp.gt (fp.neg x8) (fp.mul RNE x2 x6)))
(assert (fp.geq (fp.mul RNE x8 x5) (fp.add RNE x7 x5)))
(assert (fp.lt (fp.div RNE x0 x1) (fp.sub RNE x8 x4)))
(assert (fp.gt (fp.div RNE x5 x2) (fp.mul RNE x8 x5)))
(assert (fp.geq (fp.add RNE x3 x8) (fp.neg x7)))
(assert (fp.lt (fp.sub RNE x1 x5) (fp.add RNE x3 x2)))
(check-sat)
