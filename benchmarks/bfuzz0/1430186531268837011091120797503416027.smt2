(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x17 x0) (fp.sub RNE x0 x12)))
(assert (fp.geq (fp.mul RNE x3 x2) (fp.sub RNE x12 x2)))
(assert (fp.leq (fp.add RNE x16 x15) (fp.div RNE x7 x0)))
(assert (fp.leq (fp.neg x4) (fp.neg x9)))
(assert (fp.lt (fp.neg x11) (fp.mul RNE x8 x5)))
(assert (fp.lt (fp.neg x15) (fp.sub RNE x2 x1)))
(assert (fp.leq (fp.sub RNE x4 x3) (fp.add RNE x16 x18)))
(assert (fp.gt (fp.add RNE x13 x6) (fp.div RNE x17 x4)))
(check-sat)
