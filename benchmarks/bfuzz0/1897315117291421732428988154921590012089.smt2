(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg (fp.add RNE x11 x1)) (fp.sub RNE (fp.add RNE x2 x14) (fp.sub RNE x13 x5))) (fp.neg (fp.sub RNE (fp.div RNE x9 x3) (fp.sub RNE x12 x8)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x15) (fp.add RNE x3 x5)) (fp.sub RNE (fp.div RNE x14 x9) (fp.div RNE x7 x4))) (fp.div RNE (fp.add RNE (fp.div RNE x14 x4) (fp.sub RNE x4 x11)) (fp.div RNE (fp.add RNE x15 x2) (fp.mul RNE x14 x2))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE (fp.div RNE x9 x12) (fp.add RNE x0 x2)) (fp.neg (fp.neg x10))) (fp.sub RNE (fp.neg (fp.neg x7)) (fp.neg (fp.mul RNE x3 x8)))) (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x13 x16) (fp.mul RNE x1 x3))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.neg (fp.mul RNE x12 x11)) (fp.div RNE (fp.add RNE x4 x0) (fp.mul RNE x2 x13)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x13 x1) (fp.mul RNE x7 x14)) (fp.div RNE (fp.mul RNE x1 x3) (fp.sub RNE x9 x1))) (fp.sub RNE (fp.neg (fp.div RNE x9 x2)) (fp.add RNE (fp.add RNE x12 x11) (fp.mul RNE x14 x16))))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE (fp.add RNE x6 x15) (fp.neg x12)))) (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x12 x0) (fp.div RNE x4 x15)) (fp.mul RNE (fp.mul RNE x5 x9) (fp.mul RNE x0 x1))) (fp.sub RNE (fp.add RNE (fp.add RNE x7 x16) (fp.neg x16)) (fp.add RNE (fp.sub RNE x14 x11) (fp.mul RNE x7 x1))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x7) (fp.sub RNE x8 x4)) (fp.add RNE (fp.mul RNE x14 x1) (fp.sub RNE x4 x12))) (fp.neg (fp.neg (fp.div RNE x13 x3)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.add RNE x6 x13)) (fp.add RNE (fp.div RNE x15 x6) (fp.sub RNE x4 x14))) (fp.neg (fp.mul RNE (fp.add RNE x1 x7) (fp.div RNE x15 x5))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x5) (fp.mul RNE x15 x14)) (fp.neg (fp.add RNE x15 x12))) (fp.mul RNE (fp.neg (fp.div RNE x7 x9)) (fp.add RNE (fp.sub RNE x10 x7) (fp.mul RNE x13 x4)))) (fp.div RNE (fp.neg (fp.add RNE (fp.div RNE x6 x8) (fp.mul RNE x16 x15))) (fp.neg (fp.mul RNE (fp.sub RNE x9 x6) (fp.neg x2))))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE (fp.sub RNE x2 x1) (fp.neg x1)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.mul RNE x5 x13) (fp.mul RNE x12 x9)) (fp.add RNE (fp.sub RNE x6 x13) (fp.sub RNE x8 x3))) (fp.div RNE (fp.add RNE (fp.add RNE x2 x15) (fp.add RNE x2 x11)) (fp.mul RNE (fp.div RNE x2 x1) (fp.div RNE x16 x12))))))
(check-sat)
