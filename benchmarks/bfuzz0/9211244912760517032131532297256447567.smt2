(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.sub RNE x9 x1) (fp.div RNE x8 x14)) (fp.div RNE (fp.add RNE x12 x13) (fp.mul RNE x1 x1))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x10 x9) (fp.add RNE x5 x3)) (fp.mul RNE (fp.mul RNE x12 x9) (fp.neg x2))))
(assert (fp.gt (fp.add RNE (fp.neg x2) (fp.add RNE x11 x0)) (fp.sub RNE (fp.div RNE x13 x6) (fp.add RNE x10 x10))))
(assert (fp.gt (fp.neg (fp.sub RNE x10 x14)) (fp.div RNE (fp.sub RNE x14 x8) (fp.mul RNE x13 x15))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x11 x4) (fp.mul RNE x10 x15)) (fp.add RNE (fp.add RNE x6 x0) (fp.add RNE x1 x13))))
(assert (fp.leq (fp.div RNE (fp.neg x1) (fp.sub RNE x11 x4)) (fp.mul RNE (fp.neg x12) (fp.div RNE x1 x8))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x5 x9) (fp.mul RNE x13 x5)) (fp.div RNE (fp.sub RNE x10 x13) (fp.sub RNE x7 x12))))
(assert (fp.gt (fp.neg (fp.sub RNE x4 x15)) (fp.div RNE (fp.add RNE x14 x0) (fp.sub RNE x9 x1))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x12 x1) (fp.neg x15)) (fp.neg (fp.sub RNE x12 x7))))
(assert (fp.geq (fp.div RNE (fp.neg x8) (fp.add RNE x1 x13)) (fp.div RNE (fp.add RNE x8 x14) (fp.div RNE x6 x10))))
(assert (fp.lt (fp.div RNE (fp.add RNE x14 x11) (fp.div RNE x7 x10)) (fp.neg (fp.neg x12))))
(assert (fp.geq (fp.add RNE (fp.add RNE x4 x13) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x5 x9) (fp.mul RNE x2 x9))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x1 x0) (fp.sub RNE x13 x15)) (fp.add RNE (fp.sub RNE x2 x14) (fp.div RNE x14 x12))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x12 x10) (fp.sub RNE x2 x2)) (fp.add RNE (fp.sub RNE x10 x2) (fp.neg x2))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x0) (fp.div RNE x15 x8)) (fp.sub RNE (fp.add RNE x2 x6) (fp.mul RNE x13 x8))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x14 x1) (fp.neg x7)) (fp.div RNE (fp.add RNE x6 x0) (fp.mul RNE x3 x14))))
(check-sat)
