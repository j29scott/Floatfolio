(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x19 x19) (fp.neg x4)) (fp.mul RNE (fp.neg x15) (fp.mul RNE x8 x8))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x21) (fp.sub RNE x4 x22)) (fp.add RNE (fp.add RNE x16 x5) (fp.mul RNE x1 x15))))
(assert (fp.geq (fp.add RNE (fp.neg x2) (fp.div RNE x9 x6)) (fp.sub RNE (fp.add RNE x21 x19) (fp.div RNE x5 x4))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x10 x8) (fp.sub RNE x20 x19)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x3 x21))))
(assert (fp.leq (fp.add RNE (fp.add RNE x6 x10) (fp.neg x4)) (fp.neg (fp.add RNE x0 x5))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x2 x8) (fp.sub RNE x22 x13)) (fp.neg (fp.div RNE x7 x9))))
(assert (fp.leq (fp.div RNE (fp.neg x18) (fp.add RNE x4 x11)) (fp.mul RNE (fp.mul RNE x22 x7) (fp.sub RNE x12 x18))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x20 x22) (fp.neg x8)) (fp.neg (fp.sub RNE x13 x8))))
(assert (fp.eq (fp.neg (fp.mul RNE x5 x22)) (fp.div RNE (fp.mul RNE x18 x6) (fp.sub RNE x15 x1))))
(assert (fp.eq (fp.div RNE (fp.add RNE x4 x14) (fp.sub RNE x22 x8)) (fp.div RNE (fp.div RNE x10 x0) (fp.div RNE x0 x19))))
(assert (fp.leq (fp.add RNE (fp.add RNE x10 x1) (fp.div RNE x8 x3)) (fp.mul RNE (fp.div RNE x14 x15) (fp.add RNE x13 x4))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x14 x16) (fp.add RNE x19 x11)) (fp.add RNE (fp.neg x17) (fp.div RNE x15 x22))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x8 x14) (fp.div RNE x20 x15)) (fp.sub RNE (fp.div RNE x17 x12) (fp.add RNE x15 x9))))
(assert (fp.eq (fp.div RNE (fp.neg x6) (fp.neg x0)) (fp.div RNE (fp.div RNE x19 x4) (fp.div RNE x5 x21))))
(assert (fp.leq (fp.div RNE (fp.div RNE x6 x3) (fp.add RNE x10 x12)) (fp.mul RNE (fp.add RNE x7 x2) (fp.mul RNE x1 x16))))
(assert (fp.eq (fp.neg (fp.div RNE x2 x21)) (fp.div RNE (fp.mul RNE x11 x7) (fp.div RNE x12 x15))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x7 x11) (fp.mul RNE x10 x15)) (fp.sub RNE (fp.mul RNE x5 x17) (fp.div RNE x11 x2))))
(assert (fp.lt (fp.div RNE (fp.add RNE x11 x22) (fp.sub RNE x6 x11)) (fp.div RNE (fp.sub RNE x9 x20) (fp.sub RNE x19 x9))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x6 x4) (fp.sub RNE x14 x3)) (fp.neg (fp.mul RNE x7 x15))))
(assert (fp.eq (fp.neg (fp.mul RNE x4 x9)) (fp.sub RNE (fp.sub RNE x5 x16) (fp.sub RNE x12 x8))))
(check-sat)
