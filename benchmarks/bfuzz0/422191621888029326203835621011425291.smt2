(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE x16 x19) (fp.add RNE x10 x4)) (fp.mul RNE (fp.neg x9) (fp.sub RNE x18 x10))) (fp.sub RNE (fp.sub RNE (fp.neg x7) (fp.add RNE x1 x5)) (fp.neg (fp.add RNE x6 x0)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x9 x1) (fp.sub RNE x15 x19))) (fp.neg (fp.div RNE (fp.div RNE x15 x15) (fp.mul RNE x14 x0)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x4 x1) (fp.div RNE x18 x13)) (fp.add RNE (fp.neg x9) (fp.div RNE x11 x1))) (fp.neg (fp.neg (fp.mul RNE x8 x18)))))
(check-sat)
