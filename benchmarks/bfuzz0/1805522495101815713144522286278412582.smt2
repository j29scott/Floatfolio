(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x12) (fp.mul RNE x14 x9)) (fp.sub RNE (fp.mul RNE x4 x10) (fp.add RNE x2 x10))) (fp.add RNE (fp.neg (fp.div RNE x1 x10)) (fp.sub RNE (fp.add RNE x6 x4) (fp.neg x14)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.add RNE x14 x12)) (fp.add RNE (fp.div RNE x8 x10) (fp.mul RNE x12 x11))) (fp.mul RNE (fp.div RNE (fp.div RNE x16 x7) (fp.add RNE x1 x9)) (fp.add RNE (fp.mul RNE x10 x7) (fp.neg x11))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x3) (fp.div RNE x6 x12)) (fp.div RNE (fp.neg x8) (fp.neg x10)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.neg x2) (fp.mul RNE x4 x2)) (fp.mul RNE (fp.div RNE x13 x1) (fp.neg x6))) (fp.div RNE (fp.neg (fp.neg x1)) (fp.add RNE (fp.neg x5) (fp.mul RNE x15 x4))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x12) (fp.div RNE x11 x9)) (fp.neg (fp.sub RNE x14 x3))) (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x12) (fp.sub RNE x2 x11)) (fp.mul RNE (fp.div RNE x0 x3) (fp.mul RNE x3 x10)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x1) (fp.sub RNE x3 x15)) (fp.add RNE (fp.add RNE x11 x10) (fp.div RNE x13 x1))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE (fp.sub RNE x0 x3) (fp.mul RNE x15 x4)) (fp.div RNE (fp.sub RNE x5 x15) (fp.div RNE x2 x2)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.add RNE x15 x9) (fp.sub RNE x8 x8))) (fp.sub RNE (fp.add RNE (fp.mul RNE x7 x10) (fp.mul RNE x1 x10)) (fp.div RNE (fp.neg x16) (fp.mul RNE x3 x13))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE (fp.sub RNE x7 x14) (fp.sub RNE x7 x4)) (fp.add RNE (fp.mul RNE x6 x8) (fp.mul RNE x8 x3)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x8) (fp.sub RNE x15 x12)) (fp.add RNE (fp.sub RNE x3 x9) (fp.mul RNE x4 x10))) (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x15) (fp.add RNE x14 x16)) (fp.div RNE (fp.add RNE x10 x9) (fp.neg x15))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.add RNE (fp.neg x9) (fp.neg x10))) (fp.div RNE (fp.sub RNE (fp.neg x5) (fp.add RNE x2 x15)) (fp.div RNE (fp.neg x2) (fp.neg x9)))) (fp.neg (fp.neg (fp.sub RNE (fp.sub RNE x1 x8) (fp.add RNE x5 x14))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg (fp.add RNE x16 x10)) (fp.add RNE (fp.neg x4) (fp.div RNE x2 x14))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x11) (fp.mul RNE x13 x2)) (fp.add RNE (fp.neg x2) (fp.mul RNE x1 x3)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.div RNE x3 x16)) (fp.div RNE (fp.neg x12) (fp.div RNE x7 x3))) (fp.add RNE (fp.mul RNE (fp.sub RNE x9 x2) (fp.mul RNE x0 x8)) (fp.neg (fp.mul RNE x16 x7))))))
(check-sat)
