(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE x9 x10) (fp.neg x17)) (fp.div RNE (fp.neg x5) (fp.mul RNE x3 x5))) (fp.div RNE (fp.neg (fp.sub RNE x2 x5)) (fp.add RNE (fp.sub RNE x10 x7) (fp.div RNE x3 x5)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE x17 x16) (fp.mul RNE x12 x3)) (fp.div RNE (fp.sub RNE x8 x2) (fp.add RNE x1 x3))) (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x10) (fp.neg x2)) (fp.neg (fp.neg x4)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE x7 x9) (fp.neg x6))) (fp.add RNE (fp.neg (fp.add RNE x2 x2)) (fp.div RNE (fp.add RNE x7 x17) (fp.neg x7)))))
(check-sat)
