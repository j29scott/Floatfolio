(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.mul RNE x1 x11) (fp.div RNE x7 x3)) (fp.mul RNE (fp.add RNE x0 x7) (fp.mul RNE x13 x1))) (fp.neg (fp.sub RNE (fp.neg x4) (fp.mul RNE x3 x4)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x4 x10)) (fp.neg (fp.sub RNE x5 x11))) (fp.neg (fp.mul RNE (fp.div RNE x12 x13) (fp.sub RNE x4 x6)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.add RNE x2 x8) (fp.add RNE x1 x2))) (fp.add RNE (fp.sub RNE (fp.sub RNE x13 x5) (fp.mul RNE x10 x1)) (fp.neg (fp.mul RNE x8 x4)))))
(check-sat)
