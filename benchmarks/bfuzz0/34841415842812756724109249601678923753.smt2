(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x15 x11) (fp.mul RNE x17 x5)) (fp.add RNE (fp.div RNE x17 x10) (fp.neg x18))) (fp.add RNE (fp.mul RNE (fp.add RNE x23 x20) (fp.add RNE x0 x21)) (fp.add RNE (fp.mul RNE x10 x10) (fp.div RNE x5 x12)))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE x7 x15))) (fp.sub RNE (fp.div RNE (fp.neg x20) (fp.add RNE x15 x1)) (fp.neg (fp.sub RNE x19 x21)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.div RNE x6 x23) (fp.neg x19)) (fp.neg (fp.mul RNE x12 x13))) (fp.mul RNE (fp.neg (fp.sub RNE x7 x12)) (fp.sub RNE (fp.neg x14) (fp.div RNE x19 x0)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x2 x0) (fp.add RNE x11 x15))) (fp.neg (fp.sub RNE (fp.add RNE x14 x17) (fp.neg x13)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.mul RNE x24 x15)) (fp.neg (fp.neg x4))) (fp.neg (fp.div RNE (fp.add RNE x4 x2) (fp.div RNE x4 x7)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x1 x12) (fp.div RNE x11 x18)) (fp.add RNE (fp.add RNE x24 x18) (fp.mul RNE x4 x10))) (fp.add RNE (fp.div RNE (fp.mul RNE x24 x19) (fp.add RNE x5 x18)) (fp.div RNE (fp.mul RNE x22 x14) (fp.add RNE x6 x13)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x3 x0) (fp.sub RNE x12 x16)) (fp.neg (fp.sub RNE x9 x8))) (fp.div RNE (fp.mul RNE (fp.add RNE x8 x10) (fp.sub RNE x19 x11)) (fp.sub RNE (fp.neg x21) (fp.sub RNE x8 x4)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x19 x16) (fp.sub RNE x23 x12)) (fp.mul RNE (fp.add RNE x10 x21) (fp.mul RNE x13 x23))) (fp.div RNE (fp.sub RNE (fp.neg x23) (fp.sub RNE x1 x7)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x6 x7)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.add RNE x16 x11) (fp.sub RNE x22 x15))) (fp.add RNE (fp.div RNE (fp.neg x16) (fp.mul RNE x7 x1)) (fp.add RNE (fp.neg x1) (fp.div RNE x17 x18)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE x19 x19) (fp.mul RNE x14 x24))) (fp.neg (fp.div RNE (fp.sub RNE x6 x4) (fp.div RNE x17 x3)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x13)) (fp.mul RNE (fp.div RNE x5 x7) (fp.div RNE x10 x7))) (fp.add RNE (fp.sub RNE (fp.neg x18) (fp.div RNE x14 x20)) (fp.div RNE (fp.add RNE x13 x23) (fp.add RNE x8 x21)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg x21) (fp.div RNE x0 x13)) (fp.neg (fp.sub RNE x11 x20))) (fp.div RNE (fp.div RNE (fp.add RNE x9 x21) (fp.add RNE x12 x9)) (fp.mul RNE (fp.sub RNE x5 x0) (fp.div RNE x11 x4)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE x3 x24) (fp.add RNE x24 x17)) (fp.neg (fp.sub RNE x6 x6))) (fp.add RNE (fp.add RNE (fp.mul RNE x8 x17) (fp.add RNE x6 x24)) (fp.neg (fp.mul RNE x11 x19)))))
(check-sat)
