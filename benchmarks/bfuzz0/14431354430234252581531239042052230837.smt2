(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x4 x11) (fp.sub RNE x15 x0)) (fp.add RNE (fp.sub RNE x5 x11) (fp.div RNE x6 x12))) (fp.div RNE (fp.add RNE (fp.sub RNE x19 x2) (fp.sub RNE x15 x15)) (fp.add RNE (fp.neg x19) (fp.sub RNE x9 x15)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE x6 x20) (fp.add RNE x7 x5)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x4 x18))) (fp.div RNE (fp.neg (fp.sub RNE x13 x0)) (fp.neg (fp.mul RNE x0 x15)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.sub RNE x3 x15) (fp.mul RNE x5 x9)) (fp.add RNE (fp.div RNE x3 x12) (fp.mul RNE x5 x10))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x8 x5) (fp.neg x18)) (fp.sub RNE (fp.sub RNE x4 x7) (fp.neg x11)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.neg x4)) (fp.mul RNE (fp.div RNE x15 x18) (fp.neg x6))) (fp.mul RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x8 x11)) (fp.add RNE (fp.div RNE x3 x15) (fp.mul RNE x4 x3)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x14) (fp.neg x0)) (fp.neg (fp.sub RNE x7 x12))) (fp.add RNE (fp.div RNE (fp.mul RNE x20 x4) (fp.div RNE x16 x14)) (fp.neg (fp.add RNE x6 x17)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.neg x6) (fp.div RNE x18 x2)) (fp.add RNE (fp.div RNE x16 x7) (fp.sub RNE x9 x9))) (fp.div RNE (fp.neg (fp.mul RNE x7 x9)) (fp.div RNE (fp.sub RNE x14 x18) (fp.sub RNE x17 x10)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE x5 x5) (fp.sub RNE x9 x3)) (fp.mul RNE (fp.sub RNE x16 x16) (fp.add RNE x14 x3))) (fp.div RNE (fp.div RNE (fp.sub RNE x15 x6) (fp.add RNE x9 x14)) (fp.div RNE (fp.add RNE x17 x1) (fp.div RNE x16 x6)))))
(assert (fp.leq (fp.neg (fp.neg (fp.div RNE x20 x4))) (fp.neg (fp.sub RNE (fp.mul RNE x19 x11) (fp.neg x16)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg x14) (fp.sub RNE x12 x0)) (fp.sub RNE (fp.mul RNE x2 x7) (fp.div RNE x3 x3))) (fp.add RNE (fp.sub RNE (fp.sub RNE x19 x17) (fp.neg x12)) (fp.neg (fp.mul RNE x19 x8)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x9 x2) (fp.mul RNE x13 x12)) (fp.sub RNE (fp.sub RNE x11 x1) (fp.neg x6))) (fp.sub RNE (fp.neg (fp.neg x11)) (fp.neg (fp.mul RNE x10 x6)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.div RNE x6 x4) (fp.add RNE x18 x6))) (fp.neg (fp.sub RNE (fp.add RNE x8 x18) (fp.sub RNE x4 x11)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.mul RNE x13 x7) (fp.mul RNE x0 x8)) (fp.div RNE (fp.sub RNE x4 x18) (fp.div RNE x10 x19))) (fp.neg (fp.neg (fp.sub RNE x14 x15)))))
(check-sat)
