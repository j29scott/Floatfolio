(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.neg x15) (fp.sub RNE x5 x24)) (fp.mul RNE (fp.mul RNE x14 x22) (fp.sub RNE x10 x18))) (fp.mul RNE (fp.neg (fp.neg x17)) (fp.sub RNE (fp.sub RNE x10 x1) (fp.neg x18)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x14 x0) (fp.neg x25)) (fp.mul RNE (fp.neg x22) (fp.mul RNE x11 x8))) (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.neg x12)) (fp.neg (fp.mul RNE x22 x22)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x10 x22)) (fp.neg (fp.div RNE x6 x17))) (fp.neg (fp.div RNE (fp.neg x20) (fp.add RNE x2 x15)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg x4) (fp.sub RNE x22 x23))) (fp.sub RNE (fp.add RNE (fp.div RNE x1 x15) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x2 x22) (fp.div RNE x2 x9)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x2 x1) (fp.neg x24))) (fp.div RNE (fp.sub RNE (fp.mul RNE x23 x14) (fp.div RNE x13 x14)) (fp.sub RNE (fp.mul RNE x23 x13) (fp.div RNE x26 x21)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x2 x23) (fp.neg x5))) (fp.div RNE (fp.neg (fp.add RNE x14 x2)) (fp.div RNE (fp.div RNE x17 x23) (fp.sub RNE x14 x13)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x8) (fp.sub RNE x26 x16)) (fp.sub RNE (fp.sub RNE x10 x7) (fp.sub RNE x3 x19))) (fp.neg (fp.mul RNE (fp.sub RNE x10 x18) (fp.neg x8)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE x13 x2) (fp.div RNE x2 x16)) (fp.mul RNE (fp.div RNE x3 x11) (fp.mul RNE x0 x9))) (fp.neg (fp.mul RNE (fp.mul RNE x7 x5) (fp.sub RNE x21 x7)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg x12) (fp.add RNE x14 x0)) (fp.sub RNE (fp.div RNE x13 x20) (fp.mul RNE x23 x0))) (fp.mul RNE (fp.sub RNE (fp.div RNE x16 x0) (fp.div RNE x4 x8)) (fp.neg (fp.add RNE x20 x12)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x22) (fp.sub RNE x0 x20)) (fp.add RNE (fp.neg x18) (fp.neg x7))) (fp.neg (fp.div RNE (fp.add RNE x4 x18) (fp.neg x0)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE x12 x15) (fp.mul RNE x2 x10))) (fp.sub RNE (fp.div RNE (fp.sub RNE x21 x15) (fp.sub RNE x0 x21)) (fp.add RNE (fp.add RNE x2 x18) (fp.sub RNE x9 x20)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x2 x23)) (fp.mul RNE (fp.neg x22) (fp.neg x21))) (fp.neg (fp.div RNE (fp.add RNE x25 x22) (fp.div RNE x19 x7)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.sub RNE x14 x19)) (fp.neg (fp.sub RNE x20 x19))) (fp.neg (fp.div RNE (fp.mul RNE x17 x7) (fp.neg x0)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.div RNE x14 x13)) (fp.div RNE (fp.neg x22) (fp.neg x3))) (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x5) (fp.mul RNE x5 x7)) (fp.add RNE (fp.sub RNE x25 x14) (fp.div RNE x7 x21)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x9 x0))) (fp.div RNE (fp.add RNE (fp.div RNE x9 x6) (fp.sub RNE x15 x6)) (fp.div RNE (fp.add RNE x2 x3) (fp.sub RNE x0 x6)))))
(check-sat)
