(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.neg (fp.neg x8))) (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x3) (fp.add RNE x15 x17)) (fp.mul RNE (fp.neg x0) (fp.neg x24)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.mul RNE x24 x8)) (fp.div RNE (fp.neg x13) (fp.add RNE x18 x14))) (fp.add RNE (fp.sub RNE (fp.div RNE x23 x3) (fp.neg x20)) (fp.add RNE (fp.mul RNE x21 x11) (fp.div RNE x9 x1)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.div RNE x1 x1) (fp.neg x16)) (fp.mul RNE (fp.mul RNE x17 x24) (fp.sub RNE x20 x8))) (fp.mul RNE (fp.neg (fp.sub RNE x10 x17)) (fp.div RNE (fp.mul RNE x6 x4) (fp.mul RNE x25 x12)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.mul RNE x7 x21)) (fp.neg (fp.add RNE x23 x13))) (fp.add RNE (fp.sub RNE (fp.mul RNE x9 x22) (fp.sub RNE x14 x21)) (fp.div RNE (fp.add RNE x12 x17) (fp.div RNE x13 x3)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE x9 x1) (fp.div RNE x17 x25)) (fp.add RNE (fp.neg x19) (fp.add RNE x7 x11))) (fp.neg (fp.sub RNE (fp.add RNE x20 x14) (fp.add RNE x4 x9)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.sub RNE x11 x8) (fp.div RNE x11 x14)) (fp.sub RNE (fp.neg x17) (fp.add RNE x10 x1))) (fp.add RNE (fp.div RNE (fp.div RNE x3 x10) (fp.div RNE x1 x20)) (fp.mul RNE (fp.div RNE x22 x15) (fp.mul RNE x14 x23)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE x16 x17) (fp.div RNE x5 x21)) (fp.neg (fp.neg x21))) (fp.mul RNE (fp.mul RNE (fp.neg x23) (fp.mul RNE x13 x11)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x2 x9)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x12 x12) (fp.div RNE x14 x2)) (fp.add RNE (fp.sub RNE x10 x16) (fp.add RNE x21 x0))) (fp.neg (fp.sub RNE (fp.div RNE x2 x19) (fp.add RNE x7 x9)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x2 x13) (fp.mul RNE x23 x24)) (fp.sub RNE (fp.mul RNE x13 x9) (fp.add RNE x13 x6))) (fp.div RNE (fp.mul RNE (fp.add RNE x13 x4) (fp.mul RNE x21 x22)) (fp.add RNE (fp.sub RNE x12 x4) (fp.neg x12)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE x22 x14) (fp.sub RNE x17 x13)) (fp.sub RNE (fp.mul RNE x9 x11) (fp.sub RNE x12 x22))) (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x21 x0)) (fp.neg (fp.neg x8)))))
(check-sat)
