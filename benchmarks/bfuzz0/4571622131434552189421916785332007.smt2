(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x6) (fp.div RNE x7 x9)))
(assert (fp.gt (fp.div RNE x14 x11) (fp.mul RNE x12 x0)))
(assert (fp.lt (fp.mul RNE x6 x6) (fp.div RNE x4 x1)))
(assert (fp.leq (fp.sub RNE x10 x4) (fp.neg x8)))
(assert (fp.gt (fp.add RNE x10 x10) (fp.div RNE x20 x20)))
(assert (fp.gt (fp.mul RNE x11 x3) (fp.neg x2)))
(assert (fp.lt (fp.sub RNE x7 x11) (fp.sub RNE x18 x13)))
(assert (fp.gt (fp.sub RNE x2 x17) (fp.add RNE x0 x3)))
(check-sat)
