(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.add RNE x1 x2) (fp.neg x3)) (fp.add RNE (fp.neg x0) (fp.add RNE x0 x2))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x1 x3) (fp.add RNE x1 x0)) (fp.sub RNE (fp.mul RNE x6 x3) (fp.div RNE x6 x3))))
(assert (fp.eq (fp.div RNE (fp.div RNE x7 x6) (fp.add RNE x1 x8)) (fp.add RNE (fp.neg x8) (fp.div RNE x6 x5))))
(assert (fp.gt (fp.div RNE (fp.neg x7) (fp.add RNE x7 x6)) (fp.add RNE (fp.neg x2) (fp.mul RNE x0 x1))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x0 x4) (fp.mul RNE x4 x4)) (fp.neg (fp.div RNE x4 x5))))
(assert (fp.geq (fp.add RNE (fp.add RNE x3 x3) (fp.mul RNE x1 x5)) (fp.add RNE (fp.mul RNE x6 x2) (fp.add RNE x6 x7))))
(check-sat)
