(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x2 x8) (fp.mul RNE x10 x7)))
(assert (fp.eq (fp.neg x8) (fp.add RNE x8 x7)))
(assert (fp.leq (fp.add RNE x11 x6) (fp.sub RNE x3 x8)))
(assert (fp.leq (fp.div RNE x3 x10) (fp.mul RNE x11 x8)))
(assert (fp.eq (fp.neg x11) (fp.sub RNE x10 x0)))
(assert (fp.gt (fp.add RNE x6 x1) (fp.add RNE x0 x7)))
(assert (fp.geq (fp.sub RNE x3 x5) (fp.div RNE x10 x6)))
(assert (fp.gt (fp.add RNE x2 x7) (fp.sub RNE x0 x9)))
(assert (fp.lt (fp.add RNE x2 x7) (fp.add RNE x11 x8)))
(assert (fp.geq (fp.neg x5) (fp.div RNE x11 x5)))
(assert (fp.geq (fp.sub RNE x6 x9) (fp.add RNE x9 x6)))
(assert (fp.lt (fp.neg x6) (fp.add RNE x4 x2)))
(assert (fp.gt (fp.div RNE x6 x8) (fp.div RNE x3 x0)))
(assert (fp.gt (fp.sub RNE x5 x7) (fp.mul RNE x3 x2)))
(assert (fp.eq (fp.add RNE x9 x6) (fp.add RNE x3 x5)))
(assert (fp.eq (fp.sub RNE x9 x2) (fp.add RNE x3 x4)))
(check-sat)
