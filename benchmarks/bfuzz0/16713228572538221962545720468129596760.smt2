(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE x14 x3) (fp.neg x8)) (fp.add RNE (fp.sub RNE x14 x2) (fp.sub RNE x13 x4))))
(assert (fp.eq (fp.div RNE (fp.neg x7) (fp.div RNE x3 x5)) (fp.neg (fp.sub RNE x11 x14))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x12 x11) (fp.neg x3)) (fp.div RNE (fp.mul RNE x14 x12) (fp.mul RNE x3 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x16 x7)) (fp.neg (fp.neg x19))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.add RNE (fp.sub RNE x8 x19) (fp.neg x14))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x16 x9) (fp.neg x18)) (fp.add RNE (fp.sub RNE x16 x8) (fp.div RNE x5 x19))))
(assert (fp.geq (fp.add RNE (fp.div RNE x17 x16) (fp.mul RNE x9 x15)) (fp.mul RNE (fp.add RNE x10 x9) (fp.sub RNE x7 x7))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x13 x10) (fp.div RNE x16 x12)) (fp.neg (fp.neg x1))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x14 x2) (fp.neg x16)) (fp.neg (fp.div RNE x16 x14))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x19 x10) (fp.add RNE x11 x18)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x18 x8))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x10 x0) (fp.mul RNE x14 x19)) (fp.neg (fp.add RNE x6 x6))))
(assert (fp.geq (fp.div RNE (fp.add RNE x11 x12) (fp.neg x19)) (fp.sub RNE (fp.div RNE x8 x13) (fp.sub RNE x11 x18))))
(check-sat)
