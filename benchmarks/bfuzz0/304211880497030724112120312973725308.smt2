(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.neg (fp.div RNE x5 x9))) (fp.neg (fp.mul RNE (fp.neg x8) (fp.sub RNE x11 x3)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.div RNE x12 x1) (fp.mul RNE x3 x3))) (fp.mul RNE (fp.neg (fp.sub RNE x2 x10)) (fp.neg (fp.div RNE x12 x5)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x4 x2) (fp.neg x8)) (fp.neg (fp.sub RNE x7 x11))) (fp.sub RNE (fp.neg (fp.add RNE x8 x2)) (fp.neg (fp.add RNE x9 x4)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.sub RNE x1 x7) (fp.sub RNE x0 x9)) (fp.div RNE (fp.neg x4) (fp.add RNE x8 x7))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x11) (fp.sub RNE x10 x6)) (fp.mul RNE (fp.div RNE x4 x9) (fp.div RNE x11 x10)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x7 x0) (fp.sub RNE x12 x5)) (fp.sub RNE (fp.neg x3) (fp.mul RNE x1 x9))) (fp.div RNE (fp.add RNE (fp.mul RNE x12 x7) (fp.neg x12)) (fp.mul RNE (fp.add RNE x4 x12) (fp.div RNE x12 x10)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x6 x4)) (fp.add RNE (fp.div RNE x2 x1) (fp.mul RNE x10 x3))) (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.sub RNE x7 x5)) (fp.add RNE (fp.neg x1) (fp.div RNE x4 x12)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x4 x10) (fp.mul RNE x4 x0)) (fp.add RNE (fp.sub RNE x9 x12) (fp.add RNE x4 x2))) (fp.div RNE (fp.sub RNE (fp.mul RNE x11 x8) (fp.add RNE x1 x4)) (fp.div RNE (fp.neg x8) (fp.add RNE x3 x1)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x2) (fp.mul RNE x6 x8))) (fp.add RNE (fp.sub RNE (fp.add RNE x3 x8) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x7 x4) (fp.add RNE x12 x2)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE x6 x1) (fp.add RNE x3 x1)) (fp.div RNE (fp.div RNE x5 x11) (fp.add RNE x1 x1))) (fp.neg (fp.sub RNE (fp.div RNE x5 x8) (fp.neg x2)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x10 x7) (fp.add RNE x8 x10)) (fp.sub RNE (fp.mul RNE x8 x10) (fp.div RNE x3 x2))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x4) (fp.mul RNE x8 x4)) (fp.mul RNE (fp.sub RNE x2 x3) (fp.mul RNE x10 x1)))))
(check-sat)
