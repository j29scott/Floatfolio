(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg x5) (fp.neg x3)) (fp.mul RNE (fp.neg x17) (fp.mul RNE x7 x12))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x15 x3) (fp.sub RNE x16 x9)) (fp.add RNE (fp.neg x0) (fp.sub RNE x6 x6))))
(assert (fp.eq (fp.add RNE (fp.div RNE x10 x18) (fp.sub RNE x6 x5)) (fp.mul RNE (fp.sub RNE x16 x11) (fp.add RNE x17 x3))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x8 x0) (fp.div RNE x18 x4)) (fp.neg (fp.add RNE x8 x12))))
(check-sat)
