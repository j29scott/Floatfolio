(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE (fp.add RNE x3 x7) (fp.sub RNE x2 x2)) (fp.add RNE (fp.neg x9) (fp.neg x5)))) (fp.neg (fp.neg (fp.div RNE (fp.sub RNE x7 x1) (fp.sub RNE x2 x10))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.div RNE (fp.sub RNE x9 x0) (fp.div RNE x6 x10)) (fp.div RNE (fp.sub RNE x11 x7) (fp.mul RNE x8 x3))) (fp.div RNE (fp.neg (fp.add RNE x6 x5)) (fp.neg (fp.div RNE x12 x7)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x3) (fp.add RNE x8 x11)) (fp.neg (fp.add RNE x8 x12))) (fp.mul RNE (fp.neg (fp.mul RNE x2 x8)) (fp.add RNE (fp.add RNE x12 x10) (fp.sub RNE x12 x12))))))
(check-sat)
