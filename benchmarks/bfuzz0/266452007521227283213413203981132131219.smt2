(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x8 x10) (fp.add RNE x2 x4)) (fp.add RNE (fp.div RNE x21 x3) (fp.neg x11))) (fp.add RNE (fp.neg (fp.sub RNE x9 x3)) (fp.add RNE (fp.neg x12) (fp.mul RNE x7 x17)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x20 x1) (fp.mul RNE x9 x16)) (fp.sub RNE (fp.mul RNE x20 x9) (fp.neg x8))) (fp.sub RNE (fp.sub RNE (fp.add RNE x3 x16) (fp.sub RNE x9 x8)) (fp.add RNE (fp.div RNE x0 x12) (fp.neg x18))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x4 x10) (fp.neg x20)) (fp.sub RNE (fp.div RNE x18 x0) (fp.div RNE x4 x17)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x1 x5) (fp.neg x14)) (fp.add RNE (fp.add RNE x10 x0) (fp.mul RNE x3 x21))) (fp.sub RNE (fp.add RNE (fp.add RNE x15 x7) (fp.div RNE x17 x16)) (fp.sub RNE (fp.div RNE x0 x11) (fp.div RNE x5 x12))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.sub RNE x3 x4)) (fp.div RNE (fp.sub RNE x3 x21) (fp.neg x2))) (fp.add RNE (fp.div RNE (fp.sub RNE x9 x10) (fp.add RNE x1 x16)) (fp.mul RNE (fp.mul RNE x11 x3) (fp.sub RNE x0 x6)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.add RNE x19 x14) (fp.div RNE x3 x17)) (fp.div RNE (fp.neg x18) (fp.neg x12))) (fp.div RNE (fp.sub RNE (fp.sub RNE x15 x3) (fp.div RNE x2 x4)) (fp.add RNE (fp.div RNE x2 x17) (fp.sub RNE x18 x20))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x19 x6) (fp.sub RNE x7 x3)) (fp.div RNE (fp.mul RNE x2 x5) (fp.sub RNE x20 x3))) (fp.neg (fp.mul RNE (fp.add RNE x3 x0) (fp.add RNE x5 x16)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x11 x9) (fp.sub RNE x5 x13)) (fp.mul RNE (fp.div RNE x10 x3) (fp.div RNE x6 x15))) (fp.add RNE (fp.sub RNE (fp.div RNE x1 x9) (fp.neg x11)) (fp.add RNE (fp.neg x11) (fp.add RNE x16 x13))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.div RNE (fp.div RNE x10 x2) (fp.add RNE x6 x9)) (fp.neg (fp.div RNE x0 x1))) (fp.add RNE (fp.div RNE (fp.sub RNE x16 x20) (fp.div RNE x15 x18)) (fp.mul RNE (fp.mul RNE x4 x12) (fp.div RNE x1 x17)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.div RNE x21 x2) (fp.add RNE x15 x11)) (fp.div RNE (fp.sub RNE x13 x1) (fp.div RNE x15 x9))) (fp.div RNE (fp.neg (fp.div RNE x13 x1)) (fp.neg (fp.div RNE x16 x11))))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg (fp.add RNE x8 x5)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x21) (fp.mul RNE x11 x12)) (fp.neg (fp.add RNE x17 x4))) (fp.mul RNE (fp.div RNE (fp.add RNE x13 x13) (fp.mul RNE x19 x21)) (fp.neg (fp.sub RNE x0 x10))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg (fp.neg x12)) (fp.div RNE (fp.add RNE x9 x5) (fp.mul RNE x9 x2))) (fp.div RNE (fp.neg (fp.mul RNE x4 x4)) (fp.add RNE (fp.mul RNE x16 x6) (fp.mul RNE x20 x17)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.neg x18) (fp.sub RNE x13 x19)) (fp.sub RNE (fp.add RNE x19 x7) (fp.sub RNE x18 x12))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x12 x9) (fp.sub RNE x18 x16)) (fp.sub RNE (fp.neg x4) (fp.div RNE x4 x20))))))
(check-sat)
