(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x7 x1) (fp.sub RNE x10 x20)) (fp.neg (fp.neg x21))) (fp.neg (fp.mul RNE (fp.sub RNE x22 x15) (fp.neg x16)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x6 x16) (fp.div RNE x3 x21)) (fp.sub RNE (fp.sub RNE x1 x3) (fp.sub RNE x13 x10))) (fp.add RNE (fp.neg (fp.neg x4)) (fp.sub RNE (fp.mul RNE x1 x15) (fp.div RNE x15 x3)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.neg x9) (fp.neg x1))) (fp.neg (fp.add RNE (fp.neg x15) (fp.neg x20)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x25 x2) (fp.add RNE x5 x24)) (fp.add RNE (fp.mul RNE x1 x11) (fp.neg x22))) (fp.neg (fp.neg (fp.neg x8)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x14 x4) (fp.div RNE x12 x22)) (fp.mul RNE (fp.mul RNE x17 x8) (fp.sub RNE x6 x1))) (fp.div RNE (fp.div RNE (fp.sub RNE x15 x5) (fp.add RNE x2 x21)) (fp.div RNE (fp.mul RNE x13 x25) (fp.add RNE x13 x21)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x26) (fp.neg x10)) (fp.div RNE (fp.add RNE x9 x21) (fp.mul RNE x6 x22))) (fp.div RNE (fp.div RNE (fp.sub RNE x5 x16) (fp.neg x18)) (fp.mul RNE (fp.sub RNE x26 x1) (fp.mul RNE x12 x15)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x18 x0) (fp.mul RNE x20 x4)) (fp.neg (fp.add RNE x10 x19))) (fp.div RNE (fp.sub RNE (fp.div RNE x2 x2) (fp.div RNE x14 x10)) (fp.neg (fp.add RNE x0 x23)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x16 x13) (fp.sub RNE x6 x5)) (fp.neg (fp.neg x26))) (fp.add RNE (fp.div RNE (fp.mul RNE x0 x16) (fp.div RNE x21 x11)) (fp.neg (fp.mul RNE x3 x8)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE x23 x25) (fp.sub RNE x26 x8)) (fp.add RNE (fp.mul RNE x0 x5) (fp.add RNE x8 x26))) (fp.div RNE (fp.mul RNE (fp.sub RNE x17 x7) (fp.sub RNE x14 x13)) (fp.add RNE (fp.add RNE x3 x10) (fp.add RNE x25 x9)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE x15 x15) (fp.add RNE x3 x3)) (fp.mul RNE (fp.neg x26) (fp.mul RNE x7 x19))) (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.div RNE x13 x21)) (fp.sub RNE (fp.add RNE x22 x8) (fp.div RNE x22 x0)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE x13 x20) (fp.add RNE x24 x20)) (fp.add RNE (fp.sub RNE x8 x11) (fp.div RNE x24 x15))) (fp.sub RNE (fp.mul RNE (fp.add RNE x2 x26) (fp.div RNE x13 x4)) (fp.add RNE (fp.neg x0) (fp.sub RNE x1 x23)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.mul RNE x23 x5) (fp.div RNE x4 x21)) (fp.sub RNE (fp.div RNE x7 x8) (fp.add RNE x16 x8))) (fp.sub RNE (fp.sub RNE (fp.neg x16) (fp.neg x4)) (fp.div RNE (fp.neg x14) (fp.sub RNE x0 x6)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x16 x18) (fp.neg x17)) (fp.add RNE (fp.mul RNE x14 x16) (fp.mul RNE x2 x15))) (fp.mul RNE (fp.div RNE (fp.sub RNE x19 x18) (fp.mul RNE x3 x8)) (fp.sub RNE (fp.div RNE x26 x8) (fp.add RNE x7 x1)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.mul RNE x21 x13) (fp.add RNE x1 x16)) (fp.add RNE (fp.div RNE x3 x7) (fp.sub RNE x26 x3))) (fp.div RNE (fp.add RNE (fp.neg x19) (fp.mul RNE x2 x7)) (fp.add RNE (fp.neg x7) (fp.neg x0)))))
(assert (fp.geq (fp.neg (fp.neg (fp.sub RNE x1 x6))) (fp.sub RNE (fp.div RNE (fp.add RNE x7 x18) (fp.div RNE x22 x16)) (fp.neg (fp.add RNE x7 x15)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.neg x6)) (fp.mul RNE (fp.div RNE x13 x20) (fp.sub RNE x25 x26))) (fp.add RNE (fp.sub RNE (fp.div RNE x3 x9) (fp.add RNE x2 x20)) (fp.sub RNE (fp.div RNE x24 x22) (fp.mul RNE x5 x24)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE x24 x24) (fp.mul RNE x1 x6)) (fp.div RNE (fp.mul RNE x26 x13) (fp.add RNE x21 x24))) (fp.add RNE (fp.neg (fp.mul RNE x17 x21)) (fp.div RNE (fp.sub RNE x15 x8) (fp.sub RNE x19 x20)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.div RNE x9 x25) (fp.add RNE x9 x17))) (fp.mul RNE (fp.neg (fp.add RNE x21 x23)) (fp.add RNE (fp.div RNE x21 x20) (fp.div RNE x9 x17)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x6 x24) (fp.add RNE x14 x18))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x12 x19) (fp.neg x6)) (fp.sub RNE (fp.neg x25) (fp.div RNE x15 x12)))))
(check-sat)
