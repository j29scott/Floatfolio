(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE x16 x18) (fp.sub RNE x15 x17)) (fp.neg (fp.sub RNE x18 x11))))
(assert (fp.leq (fp.add RNE (fp.neg x0) (fp.sub RNE x1 x7)) (fp.div RNE (fp.add RNE x12 x19) (fp.add RNE x17 x17))))
(assert (fp.gt (fp.neg (fp.sub RNE x19 x11)) (fp.add RNE (fp.neg x19) (fp.mul RNE x20 x10))))
(assert (fp.leq (fp.neg (fp.sub RNE x0 x6)) (fp.neg (fp.add RNE x14 x4))))
(check-sat)
