(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.neg x3)) (fp.div RNE (fp.div RNE x9 x6) (fp.sub RNE x9 x9))) (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x1) (fp.add RNE x7 x3)) (fp.add RNE (fp.sub RNE x1 x1) (fp.neg x9)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x3 x8) (fp.add RNE x4 x2)) (fp.mul RNE (fp.mul RNE x2 x2) (fp.div RNE x2 x9))) (fp.neg (fp.div RNE (fp.add RNE x2 x6) (fp.add RNE x6 x5))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg (fp.neg x7))) (fp.neg (fp.div RNE (fp.sub RNE x3 x8) (fp.neg x7)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.sub RNE x9 x7)) (fp.neg (fp.neg x9))) (fp.neg (fp.mul RNE (fp.div RNE x5 x2) (fp.neg x3))))))
(check-sat)
