(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x1 x7) (fp.div RNE x2 x7)))
(assert (fp.eq (fp.add RNE x1 x7) (fp.sub RNE x2 x8)))
(assert (fp.gt (fp.mul RNE x1 x2) (fp.mul RNE x3 x8)))
(assert (fp.eq (fp.mul RNE x8 x4) (fp.sub RNE x3 x0)))
(assert (fp.geq (fp.div RNE x2 x3) (fp.mul RNE x3 x1)))
(assert (fp.geq (fp.add RNE x8 x4) (fp.sub RNE x4 x2)))
(assert (fp.gt (fp.neg x6) (fp.add RNE x8 x0)))
(assert (fp.eq (fp.add RNE x1 x8) (fp.div RNE x6 x6)))
(assert (fp.geq (fp.neg x3) (fp.add RNE x3 x6)))
(assert (fp.eq (fp.mul RNE x4 x5) (fp.sub RNE x1 x7)))
(assert (fp.lt (fp.mul RNE x2 x3) (fp.mul RNE x1 x4)))
(assert (fp.leq (fp.mul RNE x2 x7) (fp.add RNE x4 x2)))
(assert (fp.eq (fp.sub RNE x6 x1) (fp.add RNE x1 x6)))
(assert (fp.lt (fp.div RNE x1 x7) (fp.neg x3)))
(assert (fp.lt (fp.add RNE x3 x3) (fp.div RNE x1 x2)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x3 x8)))
(check-sat)
