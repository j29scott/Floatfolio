(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.div RNE (fp.neg x12) (fp.mul RNE x11 x12))) (fp.div RNE (fp.mul RNE (fp.div RNE x8 x12) (fp.div RNE x0 x11)) (fp.div RNE (fp.neg x4) (fp.neg x5)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE x13 x11) (fp.neg x4)) (fp.add RNE (fp.sub RNE x0 x0) (fp.neg x9))) (fp.neg (fp.sub RNE (fp.div RNE x6 x2) (fp.mul RNE x12 x7)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x5 x12) (fp.div RNE x17 x4))) (fp.sub RNE (fp.div RNE (fp.neg x8) (fp.neg x11)) (fp.sub RNE (fp.div RNE x12 x9) (fp.neg x1)))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE x11 x15))) (fp.div RNE (fp.sub RNE (fp.mul RNE x18 x17) (fp.neg x9)) (fp.mul RNE (fp.sub RNE x6 x17) (fp.mul RNE x4 x6)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x8 x7) (fp.sub RNE x11 x17)) (fp.neg (fp.div RNE x7 x6))) (fp.sub RNE (fp.neg (fp.div RNE x0 x2)) (fp.mul RNE (fp.mul RNE x3 x7) (fp.sub RNE x7 x1)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x4) (fp.mul RNE x11 x11)) (fp.neg (fp.mul RNE x5 x6))) (fp.sub RNE (fp.neg (fp.div RNE x10 x16)) (fp.neg (fp.add RNE x16 x1)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x0 x0) (fp.add RNE x12 x5))) (fp.sub RNE (fp.neg (fp.div RNE x3 x4)) (fp.neg (fp.mul RNE x1 x4)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE x1 x18)) (fp.div RNE (fp.mul RNE x11 x12) (fp.add RNE x13 x18))) (fp.mul RNE (fp.div RNE (fp.neg x11) (fp.div RNE x14 x5)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x14 x11)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.neg x11)) (fp.add RNE (fp.neg x4) (fp.div RNE x9 x2))) (fp.div RNE (fp.add RNE (fp.sub RNE x12 x13) (fp.mul RNE x14 x12)) (fp.add RNE (fp.neg x15) (fp.mul RNE x6 x7)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x12 x17) (fp.mul RNE x1 x17)) (fp.div RNE (fp.add RNE x0 x7) (fp.mul RNE x17 x6))) (fp.add RNE (fp.div RNE (fp.neg x10) (fp.sub RNE x5 x18)) (fp.mul RNE (fp.sub RNE x16 x7) (fp.div RNE x3 x1)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.div RNE x3 x1)) (fp.neg (fp.add RNE x5 x12))) (fp.neg (fp.div RNE (fp.add RNE x0 x14) (fp.add RNE x0 x17)))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE x3 x11))) (fp.mul RNE (fp.div RNE (fp.add RNE x18 x7) (fp.sub RNE x14 x10)) (fp.sub RNE (fp.neg x1) (fp.div RNE x0 x0)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x11 x4) (fp.sub RNE x11 x14))) (fp.add RNE (fp.mul RNE (fp.add RNE x13 x4) (fp.div RNE x5 x5)) (fp.mul RNE (fp.add RNE x6 x17) (fp.add RNE x16 x16)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x4 x0) (fp.sub RNE x18 x16))) (fp.sub RNE (fp.div RNE (fp.add RNE x18 x10) (fp.sub RNE x6 x5)) (fp.div RNE (fp.div RNE x16 x4) (fp.div RNE x9 x10)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.neg x4)) (fp.div RNE (fp.neg x15) (fp.div RNE x2 x16))) (fp.add RNE (fp.add RNE (fp.add RNE x3 x3) (fp.neg x11)) (fp.mul RNE (fp.add RNE x1 x1) (fp.mul RNE x0 x5)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.div RNE x5 x0)) (fp.add RNE (fp.neg x15) (fp.add RNE x1 x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x13 x7) (fp.div RNE x14 x11)) (fp.mul RNE (fp.sub RNE x14 x0) (fp.sub RNE x6 x12)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.div RNE x0 x2) (fp.mul RNE x15 x16)) (fp.mul RNE (fp.sub RNE x1 x10) (fp.neg x14))) (fp.sub RNE (fp.div RNE (fp.add RNE x3 x9) (fp.add RNE x12 x15)) (fp.div RNE (fp.div RNE x11 x15) (fp.sub RNE x16 x6)))))
(check-sat)
