(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.neg x3) (fp.div RNE x15 x17)) (fp.add RNE (fp.sub RNE x21 x6) (fp.add RNE x7 x1))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x20 x3) (fp.mul RNE x3 x18)) (fp.mul RNE (fp.add RNE x7 x19) (fp.mul RNE x3 x20))))
(assert (fp.geq (fp.sub RNE (fp.neg x7) (fp.neg x21)) (fp.sub RNE (fp.neg x18) (fp.mul RNE x21 x13))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x0 x14) (fp.neg x20)) (fp.mul RNE (fp.add RNE x19 x20) (fp.mul RNE x0 x20))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x6 x14) (fp.neg x23)) (fp.neg (fp.sub RNE x11 x6))))
(assert (fp.gt (fp.add RNE (fp.neg x10) (fp.sub RNE x7 x21)) (fp.mul RNE (fp.mul RNE x12 x2) (fp.neg x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x2 x5) (fp.mul RNE x7 x23)) (fp.neg (fp.add RNE x22 x21))))
(assert (fp.leq (fp.sub RNE (fp.neg x16) (fp.sub RNE x6 x0)) (fp.div RNE (fp.div RNE x13 x2) (fp.sub RNE x12 x19))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x16 x19) (fp.add RNE x23 x22)) (fp.div RNE (fp.sub RNE x6 x9) (fp.mul RNE x0 x12))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x20 x17) (fp.mul RNE x13 x3)) (fp.neg (fp.mul RNE x16 x6))))
(assert (fp.geq (fp.mul RNE (fp.neg x5) (fp.add RNE x19 x13)) (fp.add RNE (fp.div RNE x3 x20) (fp.sub RNE x4 x15))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x19 x22) (fp.sub RNE x5 x4)) (fp.add RNE (fp.mul RNE x6 x7) (fp.sub RNE x15 x6))))
(assert (fp.gt (fp.neg (fp.mul RNE x22 x13)) (fp.neg (fp.mul RNE x12 x18))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x4) (fp.neg x15)) (fp.add RNE (fp.neg x10) (fp.mul RNE x14 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x18 x6) (fp.mul RNE x5 x17)) (fp.div RNE (fp.add RNE x13 x2) (fp.mul RNE x18 x5))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x14 x3) (fp.mul RNE x14 x4)) (fp.mul RNE (fp.sub RNE x7 x11) (fp.neg x19))))
(assert (fp.eq (fp.add RNE (fp.add RNE x12 x22) (fp.sub RNE x1 x11)) (fp.add RNE (fp.mul RNE x22 x20) (fp.div RNE x12 x4))))
(assert (fp.leq (fp.neg (fp.div RNE x17 x4)) (fp.sub RNE (fp.neg x13) (fp.add RNE x14 x7))))
(assert (fp.lt (fp.add RNE (fp.neg x18) (fp.neg x16)) (fp.neg (fp.div RNE x23 x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x19 x22) (fp.add RNE x2 x7)) (fp.div RNE (fp.neg x7) (fp.mul RNE x9 x17))))
(check-sat)
