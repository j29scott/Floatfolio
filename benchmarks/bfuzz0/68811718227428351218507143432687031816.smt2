(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.mul RNE x12 x5)) (fp.sub RNE (fp.mul RNE x1 x3) (fp.div RNE x4 x12))))
(assert (fp.gt (fp.neg (fp.add RNE x13 x9)) (fp.div RNE (fp.mul RNE x0 x12) (fp.neg x14))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x12 x2) (fp.mul RNE x12 x15)) (fp.mul RNE (fp.sub RNE x5 x2) (fp.add RNE x11 x16))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x12 x5) (fp.div RNE x15 x12)) (fp.sub RNE (fp.neg x7) (fp.div RNE x11 x15))))
(assert (fp.leq (fp.add RNE (fp.neg x11) (fp.add RNE x9 x15)) (fp.div RNE (fp.div RNE x10 x10) (fp.mul RNE x6 x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x2 x4) (fp.add RNE x11 x14)) (fp.sub RNE (fp.sub RNE x4 x3) (fp.add RNE x16 x3))))
(assert (fp.leq (fp.div RNE (fp.neg x0) (fp.sub RNE x15 x6)) (fp.div RNE (fp.neg x16) (fp.div RNE x13 x10))))
(check-sat)
