(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x12 x7) (fp.div RNE x3 x14)))
(assert (fp.leq (fp.mul RNE x6 x13) (fp.mul RNE x2 x3)))
(assert (fp.leq (fp.neg x12) (fp.div RNE x9 x10)))
(assert (fp.geq (fp.sub RNE x15 x10) (fp.neg x11)))
(assert (fp.leq (fp.add RNE x12 x15) (fp.mul RNE x1 x0)))
(assert (fp.lt (fp.div RNE x11 x3) (fp.neg x12)))
(assert (fp.eq (fp.add RNE x15 x2) (fp.mul RNE x15 x2)))
(assert (fp.geq (fp.div RNE x4 x15) (fp.add RNE x10 x6)))
(assert (fp.leq (fp.sub RNE x3 x4) (fp.neg x2)))
(assert (fp.eq (fp.sub RNE x12 x7) (fp.neg x7)))
(check-sat)
