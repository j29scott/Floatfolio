(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x19 x11) (fp.neg x17)) (fp.add RNE (fp.sub RNE x9 x15) (fp.div RNE x16 x18))) (fp.neg (fp.div RNE (fp.div RNE x7 x14) (fp.add RNE x11 x16)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x3))) (fp.div RNE (fp.neg (fp.mul RNE x13 x7)) (fp.sub RNE (fp.div RNE x19 x0) (fp.sub RNE x0 x8)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x9 x11)) (fp.neg (fp.neg x12))) (fp.neg (fp.add RNE (fp.sub RNE x5 x2) (fp.mul RNE x6 x8)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x7 x10)) (fp.mul RNE (fp.add RNE x14 x11) (fp.mul RNE x4 x5))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x7) (fp.add RNE x7 x19)) (fp.mul RNE (fp.neg x7) (fp.add RNE x12 x8)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x2 x13) (fp.neg x9)) (fp.div RNE (fp.div RNE x0 x13) (fp.mul RNE x3 x11))) (fp.sub RNE (fp.sub RNE (fp.add RNE x16 x13) (fp.mul RNE x8 x4)) (fp.div RNE (fp.mul RNE x12 x12) (fp.sub RNE x10 x4)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE x7 x12) (fp.sub RNE x19 x17)) (fp.mul RNE (fp.neg x17) (fp.sub RNE x7 x14))) (fp.neg (fp.div RNE (fp.mul RNE x3 x3) (fp.add RNE x16 x10)))))
(assert (fp.gt (fp.neg (fp.neg (fp.mul RNE x10 x19))) (fp.add RNE (fp.sub RNE (fp.sub RNE x1 x0) (fp.neg x6)) (fp.neg (fp.neg x0)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg x19) (fp.mul RNE x11 x3))) (fp.sub RNE (fp.add RNE (fp.mul RNE x16 x1) (fp.sub RNE x6 x4)) (fp.add RNE (fp.div RNE x13 x1) (fp.div RNE x17 x16)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE x10 x6) (fp.mul RNE x2 x19))) (fp.add RNE (fp.sub RNE (fp.neg x15) (fp.neg x7)) (fp.sub RNE (fp.add RNE x7 x16) (fp.neg x0)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.mul RNE x1 x16) (fp.mul RNE x12 x5)) (fp.add RNE (fp.mul RNE x3 x13) (fp.neg x19))) (fp.mul RNE (fp.div RNE (fp.add RNE x18 x3) (fp.mul RNE x19 x15)) (fp.div RNE (fp.sub RNE x15 x2) (fp.add RNE x3 x5)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x16 x17) (fp.sub RNE x17 x8))) (fp.neg (fp.mul RNE (fp.add RNE x2 x14) (fp.div RNE x19 x8)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.div RNE x15 x13) (fp.div RNE x7 x0)) (fp.add RNE (fp.div RNE x18 x13) (fp.sub RNE x16 x3))) (fp.neg (fp.add RNE (fp.mul RNE x6 x11) (fp.div RNE x19 x3)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE x19 x7)) (fp.neg (fp.mul RNE x14 x3))) (fp.add RNE (fp.sub RNE (fp.div RNE x9 x11) (fp.div RNE x16 x9)) (fp.mul RNE (fp.add RNE x18 x1) (fp.add RNE x7 x14)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x4) (fp.add RNE x18 x14)) (fp.add RNE (fp.mul RNE x3 x1) (fp.sub RNE x19 x6))) (fp.add RNE (fp.sub RNE (fp.mul RNE x8 x18) (fp.sub RNE x11 x12)) (fp.sub RNE (fp.mul RNE x14 x0) (fp.add RNE x1 x8)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg x7)) (fp.div RNE (fp.div RNE x7 x1) (fp.neg x13))) (fp.div RNE (fp.mul RNE (fp.neg x8) (fp.div RNE x10 x2)) (fp.neg (fp.add RNE x10 x5)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x9 x2) (fp.sub RNE x17 x2))) (fp.neg (fp.neg (fp.mul RNE x5 x3)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.add RNE x19 x16) (fp.mul RNE x11 x11)) (fp.mul RNE (fp.mul RNE x16 x13) (fp.mul RNE x9 x10))) (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.sub RNE x0 x19)) (fp.sub RNE (fp.sub RNE x15 x16) (fp.add RNE x15 x11)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE x4 x15)) (fp.add RNE (fp.div RNE x5 x8) (fp.sub RNE x10 x14))) (fp.div RNE (fp.add RNE (fp.sub RNE x7 x13) (fp.neg x15)) (fp.add RNE (fp.sub RNE x4 x10) (fp.div RNE x3 x13)))))
(check-sat)
