(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.neg (fp.add RNE x1 x12)) (fp.mul RNE (fp.neg x9) (fp.sub RNE x13 x3))) (fp.div RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.sub RNE x8 x14) (fp.mul RNE x7 x11)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x15 x2) (fp.add RNE x5 x11)) (fp.sub RNE (fp.sub RNE x10 x9) (fp.sub RNE x9 x0))) (fp.div RNE (fp.add RNE (fp.add RNE x10 x7) (fp.add RNE x4 x7)) (fp.mul RNE (fp.neg x8) (fp.add RNE x8 x1))))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x12 x5)) (fp.div RNE (fp.add RNE x4 x6) (fp.div RNE x6 x2))) (fp.add RNE (fp.sub RNE (fp.div RNE x9 x11) (fp.neg x3)) (fp.div RNE (fp.mul RNE x13 x5) (fp.add RNE x5 x3)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x9) (fp.div RNE x13 x15)) (fp.mul RNE (fp.sub RNE x0 x1) (fp.mul RNE x0 x6))) (fp.div RNE (fp.add RNE (fp.sub RNE x5 x7) (fp.div RNE x15 x11)) (fp.div RNE (fp.neg x8) (fp.neg x1))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.mul RNE (fp.sub RNE x4 x11) (fp.sub RNE x12 x8))) (fp.div RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x9 x1)) (fp.div RNE (fp.div RNE x2 x8) (fp.div RNE x11 x13)))) (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x0 x7) (fp.sub RNE x5 x15))) (fp.sub RNE (fp.neg (fp.div RNE x5 x0)) (fp.neg (fp.mul RNE x13 x7))))))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x11 x10) (fp.neg x4)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.add RNE x14 x6) (fp.neg x1)) (fp.mul RNE (fp.sub RNE x2 x5) (fp.div RNE x11 x4))))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.add RNE x15 x0) (fp.mul RNE x12 x13)) (fp.div RNE (fp.neg x14) (fp.mul RNE x0 x4))) (fp.neg (fp.add RNE (fp.sub RNE x12 x9) (fp.div RNE x6 x12)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x7) (fp.mul RNE x12 x14)) (fp.neg (fp.neg x13))) (fp.div RNE (fp.sub RNE (fp.mul RNE x15 x2) (fp.sub RNE x5 x5)) (fp.div RNE (fp.mul RNE x11 x14) (fp.neg x11))))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.mul RNE (fp.neg x7) (fp.sub RNE x4 x5))) (fp.neg (fp.sub RNE (fp.add RNE x9 x5) (fp.mul RNE x15 x12)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.div RNE x9 x8) (fp.div RNE x1 x4))) (fp.neg (fp.add RNE (fp.mul RNE x1 x0) (fp.add RNE x2 x11))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x8) (fp.sub RNE x14 x15)) (fp.mul RNE (fp.add RNE x3 x4) (fp.neg x0))) (fp.add RNE (fp.sub RNE (fp.mul RNE x1 x8) (fp.sub RNE x10 x15)) (fp.add RNE (fp.add RNE x15 x15) (fp.neg x12)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.mul RNE x7 x9) (fp.add RNE x6 x11))) (fp.neg (fp.add RNE (fp.neg x13) (fp.div RNE x10 x12))))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x13 x6) (fp.sub RNE x4 x3))) (fp.div RNE (fp.div RNE (fp.neg x2) (fp.add RNE x8 x7)) (fp.mul RNE (fp.neg x10) (fp.sub RNE x4 x9)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.mul RNE x1 x1) (fp.mul RNE x1 x6)) (fp.mul RNE (fp.sub RNE x13 x5) (fp.neg x2))) (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.div RNE x4 x5)) (fp.mul RNE (fp.div RNE x8 x7) (fp.sub RNE x14 x8))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x4)) (fp.sub RNE (fp.neg x12) (fp.sub RNE x3 x7))) (fp.mul RNE (fp.div RNE (fp.add RNE x9 x6) (fp.add RNE x14 x14)) (fp.div RNE (fp.neg x6) (fp.mul RNE x9 x1)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.neg x6) (fp.sub RNE x12 x13)) (fp.mul RNE (fp.sub RNE x3 x7) (fp.mul RNE x9 x2))) (fp.neg (fp.sub RNE (fp.neg x7) (fp.div RNE x13 x8))))))
(check-sat)
