(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x8) (fp.neg x10)))
(assert (fp.geq (fp.div RNE x8 x5) (fp.neg x0)))
(assert (fp.geq (fp.add RNE x0 x2) (fp.div RNE x7 x3)))
(assert (fp.lt (fp.mul RNE x4 x2) (fp.div RNE x2 x2)))
(assert (fp.leq (fp.sub RNE x3 x3) (fp.add RNE x5 x5)))
(assert (fp.lt (fp.neg x6) (fp.mul RNE x6 x5)))
(assert (fp.geq (fp.sub RNE x9 x8) (fp.add RNE x1 x9)))
(assert (fp.eq (fp.mul RNE x4 x8) (fp.add RNE x1 x6)))
(assert (fp.leq (fp.neg x7) (fp.sub RNE x0 x6)))
(assert (fp.geq (fp.add RNE x0 x4) (fp.neg x6)))
(assert (fp.eq (fp.div RNE x8 x8) (fp.neg x10)))
(assert (fp.eq (fp.sub RNE x0 x3) (fp.add RNE x3 x2)))
(assert (fp.eq (fp.div RNE x7 x3) (fp.sub RNE x7 x0)))
(assert (fp.leq (fp.sub RNE x3 x3) (fp.add RNE x7 x1)))
(assert (fp.gt (fp.mul RNE x2 x6) (fp.sub RNE x0 x8)))
(assert (fp.eq (fp.add RNE x6 x4) (fp.sub RNE x5 x2)))
(assert (fp.eq (fp.div RNE x1 x10) (fp.add RNE x10 x5)))
(assert (fp.lt (fp.neg x6) (fp.sub RNE x4 x0)))
(check-sat)
