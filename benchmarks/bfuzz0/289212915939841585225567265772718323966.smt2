(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x7 x8) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x12 x9) (fp.add RNE x2 x6))) (fp.sub RNE (fp.sub RNE (fp.neg x3) (fp.sub RNE x10 x5)) (fp.neg (fp.neg x7)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE x11 x7) (fp.add RNE x8 x5)) (fp.neg (fp.neg x3))) (fp.sub RNE (fp.neg (fp.add RNE x2 x12)) (fp.neg (fp.neg x8)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x9 x9) (fp.sub RNE x7 x9))) (fp.sub RNE (fp.neg (fp.add RNE x4 x11)) (fp.div RNE (fp.mul RNE x0 x4) (fp.neg x9)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE x1 x6) (fp.neg x4)) (fp.sub RNE (fp.sub RNE x0 x11) (fp.neg x6))) (fp.neg (fp.div RNE (fp.mul RNE x8 x6) (fp.add RNE x6 x5)))))
(check-sat)
