(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.neg x16) (fp.mul RNE x3 x2)) (fp.sub RNE (fp.add RNE x23 x21) (fp.neg x9))) (fp.mul RNE (fp.div RNE (fp.sub RNE x4 x22) (fp.add RNE x21 x4)) (fp.neg (fp.mul RNE x19 x2)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.mul RNE x25 x13) (fp.mul RNE x23 x17)) (fp.add RNE (fp.sub RNE x10 x17) (fp.mul RNE x21 x22))) (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x2) (fp.add RNE x18 x24)) (fp.neg (fp.sub RNE x23 x2))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x21 x1)) (fp.div RNE (fp.sub RNE x17 x18) (fp.mul RNE x16 x22))) (fp.neg (fp.mul RNE (fp.neg x2) (fp.div RNE x3 x8)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.add RNE x4 x24) (fp.div RNE x20 x13)) (fp.neg (fp.mul RNE x19 x10))) (fp.div RNE (fp.div RNE (fp.add RNE x4 x7) (fp.sub RNE x24 x20)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x7 x2))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x23 x6) (fp.div RNE x11 x0)) (fp.div RNE (fp.sub RNE x7 x24) (fp.add RNE x20 x19))) (fp.div RNE (fp.mul RNE (fp.sub RNE x8 x25) (fp.mul RNE x25 x14)) (fp.sub RNE (fp.sub RNE x6 x7) (fp.div RNE x11 x6)))) (fp.neg (fp.mul RNE (fp.neg (fp.neg x5)) (fp.div RNE (fp.add RNE x11 x14) (fp.div RNE x10 x23))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x0) (fp.add RNE x20 x15)) (fp.neg (fp.sub RNE x13 x16))) (fp.neg (fp.neg (fp.div RNE x14 x22)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x15) (fp.neg x10)) (fp.sub RNE (fp.mul RNE x18 x11) (fp.mul RNE x5 x15))) (fp.mul RNE (fp.mul RNE (fp.add RNE x15 x11) (fp.div RNE x18 x15)) (fp.mul RNE (fp.add RNE x23 x2) (fp.sub RNE x25 x20))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x5 x24) (fp.div RNE x9 x21)) (fp.add RNE (fp.mul RNE x7 x24) (fp.mul RNE x25 x5))) (fp.sub RNE (fp.div RNE (fp.mul RNE x12 x5) (fp.sub RNE x22 x15)) (fp.sub RNE (fp.neg x21) (fp.neg x25)))) (fp.div RNE (fp.mul RNE (fp.div RNE (fp.neg x19) (fp.div RNE x0 x0)) (fp.neg (fp.div RNE x22 x17))) (fp.div RNE (fp.neg (fp.add RNE x12 x9)) (fp.mul RNE (fp.sub RNE x2 x23) (fp.sub RNE x25 x4))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.neg x5) (fp.mul RNE x21 x19)) (fp.add RNE (fp.add RNE x24 x9) (fp.add RNE x4 x20))) (fp.div RNE (fp.mul RNE (fp.neg x13) (fp.mul RNE x21 x14)) (fp.neg (fp.div RNE x14 x13)))) (fp.neg (fp.add RNE (fp.add RNE (fp.mul RNE x7 x1) (fp.add RNE x8 x22)) (fp.neg (fp.div RNE x19 x4))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.mul RNE x4 x0) (fp.neg x21)) (fp.neg (fp.neg x4))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x21) (fp.sub RNE x7 x5)) (fp.sub RNE (fp.sub RNE x17 x24) (fp.div RNE x10 x12)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.add RNE x22 x0) (fp.mul RNE x14 x25))) (fp.neg (fp.mul RNE (fp.mul RNE x21 x5) (fp.div RNE x0 x12))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.neg (fp.sub RNE x10 x13)) (fp.add RNE (fp.add RNE x10 x16) (fp.mul RNE x22 x21))) (fp.neg (fp.sub RNE (fp.sub RNE x14 x10) (fp.mul RNE x23 x9)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.neg x24) (fp.div RNE x5 x20)) (fp.neg (fp.sub RNE x13 x12))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE (fp.add RNE x16 x22) (fp.div RNE x4 x6)) (fp.mul RNE (fp.sub RNE x11 x18) (fp.add RNE x7 x25)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x16 x7) (fp.div RNE x7 x16)) (fp.div RNE (fp.sub RNE x20 x4) (fp.sub RNE x1 x13))) (fp.sub RNE (fp.sub RNE (fp.div RNE x20 x6) (fp.add RNE x5 x10)) (fp.div RNE (fp.neg x1) (fp.sub RNE x21 x10))))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.add RNE (fp.sub RNE x15 x6) (fp.mul RNE x18 x5)) (fp.neg (fp.div RNE x23 x4))) (fp.neg (fp.mul RNE (fp.mul RNE x20 x11) (fp.div RNE x21 x18)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.div RNE x13 x13) (fp.add RNE x21 x3)) (fp.neg (fp.div RNE x12 x17))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.neg x13) (fp.div RNE x16 x8)) (fp.div RNE (fp.div RNE x25 x22) (fp.div RNE x17 x25))) (fp.sub RNE (fp.neg (fp.sub RNE x16 x14)) (fp.neg (fp.mul RNE x10 x5)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.neg x13) (fp.neg x19)) (fp.add RNE (fp.sub RNE x10 x4) (fp.mul RNE x4 x7))) (fp.add RNE (fp.neg (fp.sub RNE x18 x22)) (fp.add RNE (fp.mul RNE x5 x17) (fp.div RNE x2 x20))))))
(check-sat)
