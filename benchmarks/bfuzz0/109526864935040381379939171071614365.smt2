(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE (fp.div RNE x17 x4) (fp.sub RNE x12 x1)) (fp.div RNE (fp.add RNE x0 x17) (fp.mul RNE x0 x0))) (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x13) (fp.neg x14)) (fp.mul RNE (fp.div RNE x13 x14) (fp.add RNE x1 x7)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x13 x17)) (fp.neg (fp.neg x7))) (fp.div RNE (fp.sub RNE (fp.mul RNE x1 x7) (fp.div RNE x4 x5)) (fp.sub RNE (fp.neg x6) (fp.neg x0))))))
(check-sat)
