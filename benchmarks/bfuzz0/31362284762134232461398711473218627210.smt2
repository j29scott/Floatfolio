(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x9 x6) (fp.add RNE x15 x10)) (fp.neg (fp.mul RNE x5 x1))) (fp.mul RNE (fp.mul RNE (fp.add RNE x1 x9) (fp.mul RNE x14 x16)) (fp.sub RNE (fp.sub RNE x16 x7) (fp.div RNE x14 x12)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.add RNE x10 x5) (fp.add RNE x10 x7)) (fp.add RNE (fp.div RNE x9 x12) (fp.mul RNE x9 x10))) (fp.div RNE (fp.sub RNE (fp.add RNE x11 x2) (fp.sub RNE x15 x0)) (fp.mul RNE (fp.neg x14) (fp.div RNE x14 x11))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg (fp.div RNE x17 x12)) (fp.div RNE (fp.mul RNE x1 x12) (fp.mul RNE x14 x2))) (fp.div RNE (fp.add RNE (fp.sub RNE x10 x0) (fp.div RNE x2 x11)) (fp.add RNE (fp.sub RNE x4 x7) (fp.neg x12)))) (fp.neg (fp.mul RNE (fp.mul RNE (fp.div RNE x17 x12) (fp.div RNE x16 x12)) (fp.neg (fp.neg x13))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x9 x15) (fp.mul RNE x1 x0)) (fp.neg (fp.add RNE x3 x8))) (fp.add RNE (fp.neg (fp.div RNE x8 x4)) (fp.div RNE (fp.sub RNE x16 x11) (fp.sub RNE x1 x2)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x16) (fp.mul RNE x5 x4)) (fp.sub RNE (fp.div RNE x13 x3) (fp.div RNE x11 x6))) (fp.mul RNE (fp.add RNE (fp.neg x5) (fp.add RNE x8 x16)) (fp.add RNE (fp.sub RNE x14 x12) (fp.sub RNE x6 x0))))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE (fp.sub RNE x3 x0) (fp.sub RNE x16 x14)))) (fp.neg (fp.mul RNE (fp.neg (fp.sub RNE x9 x9)) (fp.add RNE (fp.mul RNE x7 x16) (fp.mul RNE x10 x16))))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE (fp.sub RNE x16 x9) (fp.neg x7))) (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x16) (fp.mul RNE x6 x15)) (fp.sub RNE (fp.div RNE x8 x8) (fp.neg x4)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.neg x17) (fp.sub RNE x17 x14)) (fp.mul RNE (fp.add RNE x11 x2) (fp.mul RNE x1 x12))) (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x9) (fp.div RNE x9 x7)) (fp.div RNE (fp.mul RNE x7 x9) (fp.neg x8))))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.neg x16) (fp.div RNE x10 x6)) (fp.add RNE (fp.sub RNE x12 x9) (fp.div RNE x12 x15))) (fp.add RNE (fp.neg (fp.div RNE x1 x13)) (fp.add RNE (fp.div RNE x1 x9) (fp.add RNE x16 x5)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.add RNE x16 x3) (fp.neg x1)) (fp.div RNE (fp.add RNE x9 x4) (fp.mul RNE x3 x13))) (fp.mul RNE (fp.add RNE (fp.div RNE x17 x10) (fp.neg x14)) (fp.div RNE (fp.add RNE x1 x0) (fp.add RNE x8 x4))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x8 x13)) (fp.sub RNE (fp.div RNE x4 x10) (fp.neg x12)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.neg x7) (fp.sub RNE x2 x5)) (fp.neg (fp.neg x15))) (fp.div RNE (fp.mul RNE (fp.sub RNE x11 x16) (fp.neg x0)) (fp.neg (fp.sub RNE x7 x1))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE (fp.mul RNE x12 x1) (fp.neg x16)) (fp.sub RNE (fp.neg x4) (fp.neg x9))) (fp.sub RNE (fp.add RNE (fp.neg x13) (fp.mul RNE x9 x10)) (fp.mul RNE (fp.sub RNE x17 x5) (fp.sub RNE x6 x17)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.div RNE x6 x6) (fp.neg x15))) (fp.sub RNE (fp.mul RNE (fp.neg x14) (fp.sub RNE x16 x6)) (fp.div RNE (fp.sub RNE x16 x2) (fp.sub RNE x0 x12))))))
(check-sat)
