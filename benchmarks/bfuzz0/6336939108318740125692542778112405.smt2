(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE x4 x14)) (fp.mul RNE (fp.sub RNE x10 x11) (fp.sub RNE x1 x11))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x9 x3) (fp.div RNE x2 x0)) (fp.sub RNE (fp.add RNE x8 x12) (fp.div RNE x6 x14))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x7 x12) (fp.div RNE x2 x9)) (fp.mul RNE (fp.mul RNE x9 x7) (fp.mul RNE x3 x6))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x5 x0) (fp.neg x12)) (fp.neg (fp.neg x8))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x2) (fp.sub RNE x10 x11)) (fp.mul RNE (fp.sub RNE x10 x0) (fp.add RNE x2 x13))))
(assert (fp.geq (fp.neg (fp.sub RNE x13 x3)) (fp.mul RNE (fp.div RNE x9 x11) (fp.div RNE x8 x5))))
(assert (fp.lt (fp.sub RNE (fp.neg x3) (fp.neg x7)) (fp.add RNE (fp.mul RNE x2 x7) (fp.neg x13))))
(assert (fp.lt (fp.mul RNE (fp.neg x7) (fp.add RNE x2 x9)) (fp.div RNE (fp.neg x13) (fp.add RNE x1 x9))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x13 x11) (fp.mul RNE x9 x7)) (fp.div RNE (fp.neg x12) (fp.div RNE x11 x8))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x3 x10) (fp.div RNE x0 x12)) (fp.mul RNE (fp.sub RNE x14 x7) (fp.div RNE x10 x14))))
(check-sat)
