(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x2 x2) (fp.sub RNE x0 x6)) (fp.div RNE (fp.add RNE x1 x3) (fp.add RNE x15 x2))))
(assert (fp.gt (fp.sub RNE (fp.neg x16) (fp.div RNE x2 x10)) (fp.div RNE (fp.add RNE x13 x16) (fp.add RNE x4 x5))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x3 x0) (fp.mul RNE x1 x9)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x3 x10))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x13 x12) (fp.add RNE x1 x13)) (fp.mul RNE (fp.neg x6) (fp.neg x2))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x13 x4) (fp.mul RNE x4 x5)) (fp.sub RNE (fp.div RNE x10 x2) (fp.neg x16))))
(assert (fp.geq (fp.neg (fp.add RNE x16 x10)) (fp.sub RNE (fp.neg x8) (fp.neg x0))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x5 x3) (fp.div RNE x14 x2)) (fp.div RNE (fp.neg x15) (fp.sub RNE x9 x3))))
(assert (fp.gt (fp.add RNE (fp.div RNE x15 x5) (fp.neg x12)) (fp.div RNE (fp.add RNE x3 x7) (fp.mul RNE x4 x7))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x10 x7) (fp.neg x12)) (fp.neg (fp.neg x14))))
(assert (fp.geq (fp.div RNE (fp.add RNE x13 x12) (fp.sub RNE x6 x5)) (fp.add RNE (fp.sub RNE x1 x14) (fp.add RNE x1 x6))))
(assert (fp.geq (fp.add RNE (fp.add RNE x15 x4) (fp.add RNE x5 x2)) (fp.div RNE (fp.mul RNE x13 x4) (fp.add RNE x3 x10))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x1 x1) (fp.neg x11)) (fp.neg (fp.add RNE x1 x0))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x9 x16) (fp.add RNE x0 x12)) (fp.sub RNE (fp.mul RNE x16 x7) (fp.neg x8))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x10 x11) (fp.div RNE x10 x13)) (fp.neg (fp.mul RNE x15 x13))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x0 x3) (fp.sub RNE x16 x1)) (fp.div RNE (fp.add RNE x3 x4) (fp.div RNE x6 x12))))
(assert (fp.geq (fp.neg (fp.div RNE x5 x8)) (fp.sub RNE (fp.mul RNE x2 x12) (fp.sub RNE x7 x2))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x6 x11) (fp.div RNE x11 x4)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x3 x0))))
(assert (fp.lt (fp.mul RNE (fp.neg x4) (fp.sub RNE x5 x11)) (fp.div RNE (fp.add RNE x10 x16) (fp.mul RNE x12 x2))))
(check-sat)
