(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x3 x21) (fp.neg x9)) (fp.mul RNE (fp.mul RNE x14 x20) (fp.neg x6))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x14 x16) (fp.add RNE x14 x9)) (fp.sub RNE (fp.mul RNE x22 x18) (fp.mul RNE x20 x21))))
(assert (fp.leq (fp.mul RNE (fp.neg x10) (fp.div RNE x19 x13)) (fp.div RNE (fp.mul RNE x20 x9) (fp.div RNE x22 x17))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x2 x14) (fp.div RNE x14 x17)) (fp.div RNE (fp.sub RNE x6 x20) (fp.div RNE x10 x20))))
(assert (fp.lt (fp.div RNE (fp.neg x18) (fp.div RNE x4 x10)) (fp.sub RNE (fp.div RNE x8 x0) (fp.mul RNE x0 x5))))
(assert (fp.geq (fp.div RNE (fp.add RNE x13 x15) (fp.neg x19)) (fp.div RNE (fp.neg x5) (fp.div RNE x19 x15))))
(assert (fp.lt (fp.neg (fp.div RNE x7 x19)) (fp.div RNE (fp.add RNE x19 x12) (fp.mul RNE x11 x6))))
(assert (fp.leq (fp.neg (fp.add RNE x10 x19)) (fp.mul RNE (fp.add RNE x3 x3) (fp.neg x22))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x8 x7) (fp.div RNE x2 x1)) (fp.mul RNE (fp.mul RNE x4 x16) (fp.neg x14))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x11 x6) (fp.add RNE x4 x10)) (fp.sub RNE (fp.sub RNE x12 x10) (fp.neg x4))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x20 x2) (fp.div RNE x17 x17)) (fp.add RNE (fp.add RNE x18 x16) (fp.neg x11))))
(assert (fp.geq (fp.neg (fp.add RNE x7 x17)) (fp.sub RNE (fp.div RNE x7 x7) (fp.add RNE x11 x9))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x13 x19) (fp.neg x3)) (fp.mul RNE (fp.mul RNE x20 x21) (fp.sub RNE x10 x17))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x7 x1) (fp.neg x10)) (fp.mul RNE (fp.neg x19) (fp.mul RNE x4 x11))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x11 x14) (fp.div RNE x21 x17)) (fp.mul RNE (fp.neg x14) (fp.add RNE x9 x20))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x6 x21) (fp.sub RNE x15 x1)) (fp.neg (fp.mul RNE x17 x17))))
(check-sat)
