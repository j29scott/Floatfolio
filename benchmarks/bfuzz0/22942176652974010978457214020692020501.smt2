(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x1 x4) (fp.add RNE x9 x1)))
(assert (fp.lt (fp.add RNE x7 x19) (fp.sub RNE x5 x1)))
(assert (fp.gt (fp.add RNE x14 x8) (fp.neg x4)))
(assert (fp.gt (fp.add RNE x11 x9) (fp.mul RNE x3 x0)))
(assert (fp.geq (fp.neg x0) (fp.mul RNE x4 x9)))
(assert (fp.eq (fp.div RNE x19 x5) (fp.neg x17)))
(assert (fp.eq (fp.mul RNE x13 x1) (fp.add RNE x16 x20)))
(assert (fp.geq (fp.div RNE x11 x20) (fp.mul RNE x11 x4)))
(assert (fp.geq (fp.sub RNE x16 x13) (fp.mul RNE x11 x6)))
(assert (fp.geq (fp.div RNE x9 x13) (fp.sub RNE x5 x8)))
(check-sat)
