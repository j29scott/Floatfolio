(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.div RNE x15 x7) (fp.div RNE x4 x19)) (fp.mul RNE (fp.add RNE x9 x8) (fp.div RNE x17 x5))))
(assert (fp.leq (fp.neg (fp.sub RNE x15 x11)) (fp.sub RNE (fp.neg x17) (fp.add RNE x1 x12))))
(assert (fp.lt (fp.div RNE (fp.add RNE x2 x6) (fp.add RNE x4 x9)) (fp.add RNE (fp.mul RNE x15 x1) (fp.sub RNE x0 x15))))
(check-sat)
