(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE (fp.div RNE x1 x5) (fp.neg x8)) (fp.div RNE (fp.sub RNE x14 x4) (fp.mul RNE x20 x1))) (fp.neg (fp.div RNE (fp.neg x14) (fp.add RNE x7 x5)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x7 x18) (fp.neg x16)) (fp.mul RNE (fp.neg x20) (fp.div RNE x0 x18))) (fp.mul RNE (fp.div RNE (fp.div RNE x7 x4) (fp.sub RNE x8 x17)) (fp.div RNE (fp.mul RNE x13 x15) (fp.sub RNE x20 x0))))))
(check-sat)
