(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE x7 x18) (fp.sub RNE x16 x21)) (fp.sub RNE (fp.add RNE x1 x4) (fp.add RNE x1 x16))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x16 x7) (fp.sub RNE x9 x17)) (fp.div RNE (fp.mul RNE x9 x6) (fp.add RNE x6 x15))))
(assert (fp.eq (fp.add RNE (fp.neg x18) (fp.sub RNE x1 x18)) (fp.add RNE (fp.div RNE x14 x10) (fp.sub RNE x6 x17))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x13 x20) (fp.sub RNE x11 x23)) (fp.neg (fp.sub RNE x14 x4))))
(assert (fp.leq (fp.neg (fp.neg x5)) (fp.mul RNE (fp.mul RNE x14 x13) (fp.div RNE x17 x8))))
(assert (fp.leq (fp.add RNE (fp.add RNE x19 x4) (fp.sub RNE x22 x11)) (fp.mul RNE (fp.neg x19) (fp.add RNE x1 x17))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x9 x1) (fp.mul RNE x15 x15)) (fp.div RNE (fp.neg x0) (fp.add RNE x15 x2))))
(assert (fp.leq (fp.div RNE (fp.add RNE x7 x19) (fp.add RNE x8 x20)) (fp.mul RNE (fp.div RNE x17 x11) (fp.neg x16))))
(assert (fp.geq (fp.neg (fp.div RNE x9 x20)) (fp.add RNE (fp.div RNE x11 x6) (fp.add RNE x23 x17))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x18 x19) (fp.mul RNE x15 x7)) (fp.div RNE (fp.div RNE x7 x3) (fp.add RNE x8 x3))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x16) (fp.add RNE x18 x18)) (fp.add RNE (fp.div RNE x7 x4) (fp.add RNE x21 x20))))
(check-sat)
