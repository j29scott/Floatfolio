(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x11) (fp.div RNE x3 x15)) (fp.div RNE (fp.neg x9) (fp.mul RNE x1 x18))) (fp.sub RNE (fp.div RNE (fp.div RNE x19 x15) (fp.add RNE x12 x5)) (fp.add RNE (fp.neg x15) (fp.sub RNE x0 x17)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.mul RNE x0 x16) (fp.sub RNE x17 x8)) (fp.add RNE (fp.neg x5) (fp.add RNE x20 x1))) (fp.add RNE (fp.add RNE (fp.mul RNE x9 x12) (fp.add RNE x7 x8)) (fp.add RNE (fp.add RNE x10 x2) (fp.neg x1))))))
(check-sat)
