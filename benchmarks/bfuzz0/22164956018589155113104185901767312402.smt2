(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x10 x22) (fp.sub RNE x7 x16)) (fp.add RNE (fp.neg x10) (fp.sub RNE x8 x5))) (fp.neg (fp.sub RNE (fp.div RNE x11 x5) (fp.neg x15)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.add RNE x17 x4)) (fp.add RNE (fp.div RNE x16 x0) (fp.mul RNE x0 x6))) (fp.add RNE (fp.div RNE (fp.mul RNE x9 x8) (fp.sub RNE x16 x13)) (fp.sub RNE (fp.add RNE x5 x10) (fp.add RNE x3 x21)))))
(check-sat)
