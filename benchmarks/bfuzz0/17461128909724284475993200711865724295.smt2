(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x1 x4) (fp.sub RNE x4 x9)) (fp.neg (fp.sub RNE x10 x9))) (fp.div RNE (fp.div RNE (fp.neg x2) (fp.mul RNE x4 x4)) (fp.add RNE (fp.div RNE x5 x7) (fp.add RNE x3 x10)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x10 x0)) (fp.sub RNE (fp.mul RNE x3 x1) (fp.sub RNE x0 x10))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x8) (fp.div RNE x3 x3)) (fp.div RNE (fp.div RNE x8 x10) (fp.mul RNE x6 x8)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.sub RNE x0 x11)) (fp.div RNE (fp.div RNE x12 x10) (fp.neg x6))) (fp.neg (fp.add RNE (fp.div RNE x11 x2) (fp.sub RNE x3 x0)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.sub RNE x2 x3) (fp.add RNE x1 x4)) (fp.div RNE (fp.mul RNE x6 x11) (fp.mul RNE x1 x9))) (fp.mul RNE (fp.neg (fp.sub RNE x9 x10)) (fp.mul RNE (fp.div RNE x1 x9) (fp.mul RNE x11 x10)))))
(check-sat)
