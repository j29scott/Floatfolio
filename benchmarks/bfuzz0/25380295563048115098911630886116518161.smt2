(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.add RNE x14 x13) (fp.add RNE x19 x5)) (fp.neg (fp.add RNE x1 x13))) (fp.add RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x17 x20)) (fp.sub RNE (fp.neg x8) (fp.add RNE x14 x9)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE x4 x5) (fp.div RNE x19 x17)) (fp.neg (fp.add RNE x6 x0))) (fp.mul RNE (fp.div RNE (fp.mul RNE x13 x8) (fp.div RNE x5 x2)) (fp.neg (fp.neg x6)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x12 x18)) (fp.sub RNE (fp.div RNE x7 x19) (fp.add RNE x7 x9))) (fp.div RNE (fp.add RNE (fp.div RNE x16 x13) (fp.neg x19)) (fp.add RNE (fp.add RNE x9 x14) (fp.div RNE x8 x7)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.sub RNE x20 x13)) (fp.mul RNE (fp.mul RNE x7 x14) (fp.neg x2))) (fp.sub RNE (fp.div RNE (fp.mul RNE x9 x4) (fp.neg x6)) (fp.sub RNE (fp.add RNE x5 x17) (fp.mul RNE x13 x2)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x10) (fp.div RNE x11 x12)) (fp.neg (fp.neg x4))) (fp.div RNE (fp.neg (fp.div RNE x10 x8)) (fp.div RNE (fp.mul RNE x19 x8) (fp.mul RNE x10 x11)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.sub RNE x20 x12) (fp.sub RNE x6 x14)) (fp.div RNE (fp.neg x0) (fp.mul RNE x11 x2))) (fp.mul RNE (fp.neg (fp.mul RNE x18 x9)) (fp.sub RNE (fp.div RNE x6 x0) (fp.add RNE x15 x16)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x0 x10) (fp.div RNE x9 x14))) (fp.mul RNE (fp.sub RNE (fp.add RNE x10 x9) (fp.mul RNE x20 x17)) (fp.div RNE (fp.add RNE x16 x8) (fp.mul RNE x17 x6)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.neg x1) (fp.sub RNE x18 x17))) (fp.neg (fp.neg (fp.div RNE x5 x4)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x1) (fp.mul RNE x18 x11)) (fp.div RNE (fp.add RNE x9 x2) (fp.div RNE x1 x8))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x17 x13) (fp.add RNE x12 x5)) (fp.sub RNE (fp.div RNE x20 x13) (fp.add RNE x9 x18)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x6 x15) (fp.add RNE x10 x4))) (fp.sub RNE (fp.div RNE (fp.sub RNE x19 x18) (fp.sub RNE x19 x2)) (fp.add RNE (fp.neg x1) (fp.sub RNE x17 x20)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x6 x12) (fp.mul RNE x16 x19)) (fp.add RNE (fp.neg x18) (fp.add RNE x11 x0))) (fp.div RNE (fp.neg (fp.add RNE x8 x2)) (fp.add RNE (fp.neg x18) (fp.div RNE x17 x9)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x18) (fp.add RNE x2 x0)) (fp.add RNE (fp.neg x11) (fp.div RNE x16 x15))) (fp.div RNE (fp.div RNE (fp.mul RNE x16 x20) (fp.sub RNE x9 x13)) (fp.sub RNE (fp.add RNE x12 x2) (fp.mul RNE x10 x8)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x18) (fp.sub RNE x10 x5)) (fp.div RNE (fp.neg x20) (fp.mul RNE x2 x7))) (fp.neg (fp.div RNE (fp.neg x6) (fp.neg x5)))))
(check-sat)
