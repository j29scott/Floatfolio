(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x0 x1) (fp.div RNE x7 x9)) (fp.mul RNE (fp.sub RNE x4 x5) (fp.neg x1))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x2 x0) (fp.add RNE x4 x5)) (fp.neg (fp.add RNE x3 x3))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x1 x8) (fp.div RNE x10 x6)) (fp.add RNE (fp.add RNE x8 x0) (fp.sub RNE x8 x1))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x8 x7) (fp.sub RNE x0 x7)) (fp.neg (fp.neg x3))))
(assert (fp.leq (fp.sub RNE (fp.neg x2) (fp.sub RNE x0 x10)) (fp.div RNE (fp.add RNE x0 x1) (fp.mul RNE x5 x9))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x0 x4) (fp.add RNE x8 x1)) (fp.mul RNE (fp.mul RNE x9 x9) (fp.sub RNE x0 x3))))
(check-sat)
