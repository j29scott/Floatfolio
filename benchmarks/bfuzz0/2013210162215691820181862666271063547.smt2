(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.sub RNE x18 x0)) (fp.mul RNE (fp.add RNE x14 x5) (fp.mul RNE x16 x6))) (fp.neg (fp.add RNE (fp.add RNE x18 x13) (fp.div RNE x6 x11)))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x0 x9))) (fp.div RNE (fp.mul RNE (fp.mul RNE x13 x2) (fp.add RNE x9 x6)) (fp.add RNE (fp.sub RNE x7 x11) (fp.div RNE x17 x8)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x8 x11) (fp.sub RNE x6 x5)) (fp.add RNE (fp.add RNE x16 x12) (fp.neg x6))) (fp.mul RNE (fp.div RNE (fp.div RNE x5 x14) (fp.add RNE x12 x10)) (fp.div RNE (fp.sub RNE x11 x12) (fp.sub RNE x1 x15)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg x6) (fp.div RNE x13 x12))) (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x3) (fp.neg x17)) (fp.neg (fp.sub RNE x17 x13)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x4 x7) (fp.sub RNE x4 x12))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x3 x12) (fp.div RNE x19 x8)) (fp.neg (fp.div RNE x15 x9)))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x7 x15))) (fp.neg (fp.sub RNE (fp.mul RNE x0 x16) (fp.mul RNE x6 x14)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE x15 x18) (fp.mul RNE x13 x19)) (fp.neg (fp.mul RNE x4 x19))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x5 x3) (fp.sub RNE x12 x11)) (fp.add RNE (fp.add RNE x15 x14) (fp.sub RNE x13 x12)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE x5 x16)) (fp.add RNE (fp.neg x9) (fp.sub RNE x12 x14))) (fp.sub RNE (fp.div RNE (fp.div RNE x9 x18) (fp.mul RNE x4 x15)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x12 x3)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE x17 x11) (fp.add RNE x0 x17))) (fp.add RNE (fp.mul RNE (fp.mul RNE x1 x12) (fp.sub RNE x16 x2)) (fp.add RNE (fp.div RNE x6 x15) (fp.sub RNE x5 x5)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x13 x4) (fp.add RNE x11 x1)) (fp.div RNE (fp.add RNE x7 x14) (fp.add RNE x7 x3))) (fp.div RNE (fp.mul RNE (fp.div RNE x12 x19) (fp.mul RNE x1 x10)) (fp.div RNE (fp.neg x14) (fp.div RNE x0 x5)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x14 x12) (fp.div RNE x4 x12)) (fp.add RNE (fp.div RNE x14 x10) (fp.mul RNE x7 x11))) (fp.sub RNE (fp.sub RNE (fp.add RNE x13 x19) (fp.sub RNE x14 x13)) (fp.mul RNE (fp.add RNE x12 x13) (fp.div RNE x18 x11)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.neg x12) (fp.div RNE x7 x6)) (fp.mul RNE (fp.add RNE x8 x0) (fp.neg x11))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x1 x9) (fp.neg x18)) (fp.neg (fp.div RNE x5 x3)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x7) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x11 x18) (fp.add RNE x10 x11))) (fp.add RNE (fp.add RNE (fp.mul RNE x13 x8) (fp.mul RNE x17 x17)) (fp.div RNE (fp.neg x7) (fp.add RNE x9 x12)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x10 x8)) (fp.neg (fp.neg x7))) (fp.div RNE (fp.sub RNE (fp.neg x16) (fp.add RNE x13 x15)) (fp.div RNE (fp.div RNE x3 x12) (fp.div RNE x1 x17)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE x15 x10) (fp.div RNE x0 x18)) (fp.neg (fp.mul RNE x5 x6))) (fp.neg (fp.div RNE (fp.div RNE x7 x10) (fp.div RNE x13 x9)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE x19 x11) (fp.mul RNE x3 x12)) (fp.div RNE (fp.neg x13) (fp.mul RNE x5 x2))) (fp.sub RNE (fp.sub RNE (fp.add RNE x9 x0) (fp.add RNE x17 x0)) (fp.div RNE (fp.mul RNE x10 x15) (fp.mul RNE x9 x3)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.div RNE x17 x8)) (fp.div RNE (fp.add RNE x0 x16) (fp.mul RNE x2 x1))) (fp.neg (fp.neg (fp.neg x14)))))
(check-sat)
