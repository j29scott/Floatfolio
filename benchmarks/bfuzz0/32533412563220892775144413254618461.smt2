(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.sub RNE x20 x18) (fp.sub RNE x4 x15)) (fp.neg (fp.sub RNE x19 x5))) (fp.div RNE (fp.div RNE (fp.neg x8) (fp.mul RNE x14 x14)) (fp.sub RNE (fp.add RNE x0 x1) (fp.div RNE x10 x4)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x17 x8) (fp.neg x1)) (fp.sub RNE (fp.add RNE x18 x16) (fp.div RNE x20 x17))) (fp.mul RNE (fp.div RNE (fp.mul RNE x16 x2) (fp.mul RNE x0 x11)) (fp.div RNE (fp.neg x12) (fp.mul RNE x3 x5)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x3 x3) (fp.mul RNE x3 x2)) (fp.sub RNE (fp.add RNE x4 x15) (fp.sub RNE x10 x0))) (fp.mul RNE (fp.sub RNE (fp.add RNE x19 x16) (fp.add RNE x13 x15)) (fp.add RNE (fp.sub RNE x4 x8) (fp.mul RNE x1 x5)))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x19 x4))) (fp.mul RNE (fp.neg (fp.mul RNE x5 x9)) (fp.neg (fp.sub RNE x1 x1)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.div RNE x10 x19) (fp.div RNE x17 x13))) (fp.mul RNE (fp.sub RNE (fp.div RNE x17 x7) (fp.mul RNE x18 x10)) (fp.sub RNE (fp.div RNE x9 x0) (fp.add RNE x15 x5)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.div RNE x1 x15) (fp.sub RNE x12 x13)) (fp.div RNE (fp.add RNE x13 x17) (fp.neg x17))) (fp.neg (fp.add RNE (fp.mul RNE x5 x0) (fp.add RNE x14 x5)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.neg x18) (fp.sub RNE x11 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x19) (fp.sub RNE x4 x14)) (fp.neg (fp.mul RNE x3 x1)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x18 x19) (fp.div RNE x15 x9))) (fp.div RNE (fp.neg (fp.add RNE x20 x10)) (fp.neg (fp.neg x5)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.div RNE x2 x10)) (fp.neg (fp.neg x6))) (fp.div RNE (fp.div RNE (fp.sub RNE x14 x19) (fp.mul RNE x9 x16)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x3 x11)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE x10 x14) (fp.sub RNE x1 x4)) (fp.add RNE (fp.add RNE x18 x13) (fp.sub RNE x17 x1))) (fp.mul RNE (fp.mul RNE (fp.add RNE x15 x2) (fp.sub RNE x15 x7)) (fp.sub RNE (fp.mul RNE x19 x13) (fp.sub RNE x4 x6)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.mul RNE x12 x9) (fp.sub RNE x0 x13))) (fp.add RNE (fp.neg (fp.div RNE x0 x20)) (fp.div RNE (fp.div RNE x15 x19) (fp.div RNE x17 x13)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x7 x20) (fp.mul RNE x3 x16)) (fp.div RNE (fp.sub RNE x17 x14) (fp.sub RNE x1 x2))) (fp.div RNE (fp.add RNE (fp.add RNE x8 x2) (fp.mul RNE x19 x6)) (fp.neg (fp.add RNE x15 x4)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE x2 x6) (fp.mul RNE x1 x19)) (fp.sub RNE (fp.mul RNE x0 x13) (fp.mul RNE x8 x20))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x8 x19) (fp.add RNE x12 x9)) (fp.neg (fp.sub RNE x16 x2)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x20 x13) (fp.neg x13)) (fp.sub RNE (fp.mul RNE x11 x15) (fp.div RNE x11 x16))) (fp.div RNE (fp.add RNE (fp.neg x12) (fp.neg x7)) (fp.neg (fp.neg x16)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.add RNE x14 x12) (fp.sub RNE x0 x13)) (fp.mul RNE (fp.div RNE x7 x5) (fp.mul RNE x10 x5))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x13 x19) (fp.add RNE x7 x17)) (fp.div RNE (fp.mul RNE x15 x16) (fp.neg x14)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x6 x20) (fp.div RNE x17 x20))) (fp.mul RNE (fp.sub RNE (fp.add RNE x1 x19) (fp.sub RNE x10 x16)) (fp.neg (fp.add RNE x19 x8)))))
(check-sat)
