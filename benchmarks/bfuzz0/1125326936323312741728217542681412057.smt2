(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x12 x9) (fp.mul RNE x14 x4)) (fp.mul RNE (fp.mul RNE x4 x10) (fp.div RNE x1 x9))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x17 x13) (fp.add RNE x6 x12)) (fp.neg (fp.neg x19)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE x2 x6) (fp.mul RNE x19 x19)) (fp.add RNE (fp.add RNE x6 x20) (fp.div RNE x1 x17))) (fp.add RNE (fp.sub RNE (fp.neg x15) (fp.neg x3)) (fp.neg (fp.div RNE x1 x2)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x4 x12) (fp.add RNE x13 x3))) (fp.div RNE (fp.div RNE (fp.neg x18) (fp.mul RNE x15 x17)) (fp.neg (fp.mul RNE x2 x21)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.neg x14)) (fp.add RNE (fp.add RNE x1 x8) (fp.mul RNE x7 x17))) (fp.add RNE (fp.neg (fp.div RNE x19 x11)) (fp.sub RNE (fp.add RNE x5 x18) (fp.add RNE x17 x14)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.mul RNE x8 x4)) (fp.sub RNE (fp.div RNE x20 x3) (fp.sub RNE x9 x12))) (fp.mul RNE (fp.div RNE (fp.div RNE x8 x18) (fp.add RNE x14 x20)) (fp.mul RNE (fp.add RNE x18 x4) (fp.sub RNE x12 x10)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x14 x19) (fp.neg x12)) (fp.mul RNE (fp.neg x12) (fp.div RNE x0 x1))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x19 x4) (fp.div RNE x20 x7)) (fp.neg (fp.div RNE x15 x5)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE x18 x19) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x4 x1) (fp.add RNE x19 x8))) (fp.neg (fp.add RNE (fp.div RNE x11 x7) (fp.add RNE x21 x1)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE x20 x5) (fp.neg x4))) (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x9) (fp.sub RNE x15 x5)) (fp.mul RNE (fp.sub RNE x12 x20) (fp.mul RNE x1 x2)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE x5 x12) (fp.add RNE x3 x4)) (fp.add RNE (fp.add RNE x8 x2) (fp.neg x7))) (fp.mul RNE (fp.neg (fp.mul RNE x17 x18)) (fp.sub RNE (fp.neg x21) (fp.add RNE x20 x8)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE x13 x15)) (fp.neg (fp.sub RNE x15 x16))) (fp.neg (fp.mul RNE (fp.div RNE x14 x4) (fp.neg x4)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x0 x19) (fp.sub RNE x15 x20)) (fp.neg (fp.add RNE x21 x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x19 x17) (fp.add RNE x13 x8)) (fp.neg (fp.neg x20)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x6) (fp.add RNE x6 x0)) (fp.mul RNE (fp.mul RNE x7 x13) (fp.sub RNE x7 x4))) (fp.sub RNE (fp.div RNE (fp.neg x8) (fp.neg x4)) (fp.div RNE (fp.div RNE x5 x12) (fp.add RNE x21 x21)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE x16 x6) (fp.sub RNE x2 x14)) (fp.neg (fp.mul RNE x21 x11))) (fp.div RNE (fp.neg (fp.neg x17)) (fp.mul RNE (fp.mul RNE x16 x8) (fp.neg x0)))))
(check-sat)
