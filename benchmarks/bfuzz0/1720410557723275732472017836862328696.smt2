(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x7 x9) (fp.div RNE x1 x2)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x8 x7))) (fp.neg (fp.sub RNE (fp.div RNE x10 x3) (fp.sub RNE x0 x7)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.div RNE x5 x2) (fp.neg x7)) (fp.div RNE (fp.neg x10) (fp.neg x2))) (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x12) (fp.div RNE x1 x12)) (fp.div RNE (fp.div RNE x2 x8) (fp.sub RNE x10 x0))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.div RNE x8 x7)) (fp.add RNE (fp.div RNE x12 x1) (fp.add RNE x9 x5))) (fp.neg (fp.mul RNE (fp.add RNE x4 x6) (fp.mul RNE x0 x0)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x2 x3) (fp.mul RNE x1 x6)) (fp.add RNE (fp.div RNE x2 x4) (fp.sub RNE x2 x9))) (fp.add RNE (fp.neg (fp.div RNE x0 x5)) (fp.div RNE (fp.add RNE x9 x1) (fp.sub RNE x6 x11))))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.sub RNE (fp.sub RNE x2 x9) (fp.neg x12)) (fp.mul RNE (fp.mul RNE x2 x4) (fp.sub RNE x3 x1)))) (fp.mul RNE (fp.neg (fp.div RNE (fp.neg x12) (fp.mul RNE x6 x5))) (fp.div RNE (fp.mul RNE (fp.add RNE x8 x12) (fp.sub RNE x0 x3)) (fp.sub RNE (fp.mul RNE x12 x3) (fp.sub RNE x7 x10))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.neg (fp.sub RNE x11 x1)) (fp.neg (fp.sub RNE x2 x9))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x5 x0) (fp.add RNE x7 x8)) (fp.sub RNE (fp.div RNE x0 x4) (fp.div RNE x1 x8)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.neg x1) (fp.div RNE x0 x10)) (fp.sub RNE (fp.add RNE x6 x0) (fp.sub RNE x7 x7))) (fp.div RNE (fp.div RNE (fp.sub RNE x7 x1) (fp.div RNE x8 x9)) (fp.add RNE (fp.neg x12) (fp.neg x2))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x1 x10) (fp.div RNE x1 x3)) (fp.add RNE (fp.div RNE x2 x4) (fp.neg x9))) (fp.neg (fp.mul RNE (fp.add RNE x4 x0) (fp.sub RNE x12 x3)))) (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x9 x12) (fp.div RNE x5 x6)) (fp.div RNE (fp.mul RNE x11 x0) (fp.sub RNE x0 x7))) (fp.mul RNE (fp.neg (fp.neg x12)) (fp.sub RNE (fp.neg x2) (fp.add RNE x0 x10))))))
(check-sat)
