(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE x13 x14) (fp.add RNE x10 x7)) (fp.sub RNE (fp.mul RNE x14 x14) (fp.neg x18))) (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x7) (fp.add RNE x10 x1)) (fp.div RNE (fp.neg x17) (fp.sub RNE x16 x1)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE x11 x11) (fp.mul RNE x1 x7)) (fp.add RNE (fp.div RNE x17 x3) (fp.add RNE x3 x18))) (fp.div RNE (fp.sub RNE (fp.div RNE x8 x16) (fp.mul RNE x18 x9)) (fp.div RNE (fp.mul RNE x2 x3) (fp.mul RNE x5 x3)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x17 x18)) (fp.mul RNE (fp.sub RNE x10 x18) (fp.neg x9))) (fp.neg (fp.add RNE (fp.mul RNE x12 x19) (fp.mul RNE x2 x16)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE x16 x14) (fp.neg x17)) (fp.sub RNE (fp.add RNE x9 x18) (fp.mul RNE x18 x5))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x15) (fp.mul RNE x14 x12)) (fp.sub RNE (fp.div RNE x13 x4) (fp.sub RNE x2 x19)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x5 x7) (fp.add RNE x15 x7)) (fp.add RNE (fp.div RNE x1 x0) (fp.neg x16))) (fp.div RNE (fp.div RNE (fp.sub RNE x7 x16) (fp.div RNE x19 x12)) (fp.add RNE (fp.neg x2) (fp.mul RNE x18 x7)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE x17 x19) (fp.neg x1)) (fp.div RNE (fp.div RNE x7 x9) (fp.add RNE x15 x9))) (fp.neg (fp.neg (fp.mul RNE x3 x14)))))
(check-sat)
