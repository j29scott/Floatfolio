(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x2 x5) (fp.neg x5)))
(assert (fp.eq (fp.add RNE x9 x10) (fp.add RNE x18 x2)))
(assert (fp.gt (fp.mul RNE x12 x11) (fp.neg x14)))
(assert (fp.leq (fp.sub RNE x14 x6) (fp.add RNE x17 x10)))
(assert (fp.eq (fp.div RNE x6 x7) (fp.neg x14)))
(assert (fp.gt (fp.sub RNE x23 x15) (fp.mul RNE x8 x16)))
(assert (fp.leq (fp.div RNE x14 x9) (fp.div RNE x13 x20)))
(assert (fp.lt (fp.mul RNE x5 x22) (fp.add RNE x8 x11)))
(assert (fp.gt (fp.sub RNE x7 x8) (fp.add RNE x8 x7)))
(assert (fp.leq (fp.neg x1) (fp.sub RNE x1 x3)))
(assert (fp.leq (fp.mul RNE x5 x12) (fp.sub RNE x20 x1)))
(assert (fp.eq (fp.neg x12) (fp.sub RNE x9 x6)))
(assert (fp.leq (fp.neg x2) (fp.sub RNE x2 x18)))
(assert (fp.geq (fp.neg x20) (fp.neg x22)))
(assert (fp.eq (fp.add RNE x21 x1) (fp.add RNE x6 x17)))
(check-sat)
