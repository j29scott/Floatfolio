(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE x1 x4) (fp.div RNE x0 x2)) (fp.sub RNE (fp.div RNE x3 x3) (fp.sub RNE x6 x5))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x0 x1) (fp.div RNE x6 x6)) (fp.mul RNE (fp.sub RNE x6 x0) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.mul RNE x4 x0)) (fp.neg (fp.sub RNE x0 x5))))
(assert (fp.eq (fp.add RNE (fp.add RNE x3 x2) (fp.div RNE x2 x5)) (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x2 x4))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x4 x4) (fp.mul RNE x4 x0)) (fp.add RNE (fp.add RNE x4 x0) (fp.sub RNE x0 x4))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x4) (fp.div RNE x1 x0)) (fp.neg (fp.neg x4))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x0)) (fp.div RNE (fp.neg x0) (fp.add RNE x0 x0))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x6 x6) (fp.add RNE x2 x0)) (fp.sub RNE (fp.add RNE x3 x6) (fp.neg x3))))
(check-sat)
