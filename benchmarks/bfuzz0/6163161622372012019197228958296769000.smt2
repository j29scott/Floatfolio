(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE x7 x22) (fp.div RNE x11 x5)) (fp.div RNE (fp.sub RNE x23 x23) (fp.add RNE x20 x6))) (fp.mul RNE (fp.add RNE (fp.neg x15) (fp.mul RNE x8 x14)) (fp.mul RNE (fp.add RNE x2 x4) (fp.div RNE x11 x7)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE x5 x15) (fp.neg x23)) (fp.mul RNE (fp.add RNE x4 x23) (fp.mul RNE x2 x19))) (fp.neg (fp.mul RNE (fp.add RNE x4 x3) (fp.div RNE x15 x7)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.add RNE x17 x16) (fp.neg x1)) (fp.neg (fp.neg x0))) (fp.mul RNE (fp.sub RNE (fp.div RNE x8 x8) (fp.add RNE x24 x22)) (fp.div RNE (fp.add RNE x10 x19) (fp.mul RNE x16 x9)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x5 x23) (fp.sub RNE x2 x22)) (fp.add RNE (fp.mul RNE x17 x24) (fp.add RNE x21 x10))) (fp.add RNE (fp.mul RNE (fp.div RNE x22 x3) (fp.add RNE x18 x5)) (fp.sub RNE (fp.add RNE x4 x2) (fp.sub RNE x17 x6)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.div RNE x8 x7)) (fp.mul RNE (fp.mul RNE x7 x11) (fp.mul RNE x25 x25))) (fp.add RNE (fp.neg (fp.neg x8)) (fp.mul RNE (fp.sub RNE x0 x12) (fp.sub RNE x22 x22)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg x5) (fp.mul RNE x16 x14)) (fp.neg (fp.div RNE x9 x10))) (fp.mul RNE (fp.add RNE (fp.neg x5) (fp.mul RNE x19 x21)) (fp.add RNE (fp.div RNE x19 x1) (fp.sub RNE x23 x21)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x10 x19) (fp.div RNE x7 x3)) (fp.mul RNE (fp.add RNE x25 x25) (fp.mul RNE x9 x3))) (fp.add RNE (fp.sub RNE (fp.neg x18) (fp.mul RNE x24 x10)) (fp.neg (fp.add RNE x22 x23)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.div RNE x4 x13) (fp.sub RNE x13 x18)) (fp.add RNE (fp.neg x20) (fp.add RNE x3 x11))) (fp.div RNE (fp.mul RNE (fp.mul RNE x14 x8) (fp.neg x15)) (fp.mul RNE (fp.neg x16) (fp.neg x0)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.neg x19) (fp.add RNE x10 x18)) (fp.div RNE (fp.div RNE x19 x5) (fp.div RNE x23 x21))) (fp.add RNE (fp.mul RNE (fp.mul RNE x11 x24) (fp.div RNE x22 x16)) (fp.sub RNE (fp.add RNE x14 x3) (fp.neg x3)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.mul RNE x8 x14)) (fp.div RNE (fp.mul RNE x2 x23) (fp.mul RNE x3 x24))) (fp.neg (fp.neg (fp.mul RNE x12 x9)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x20 x11) (fp.mul RNE x2 x9)) (fp.div RNE (fp.sub RNE x25 x18) (fp.sub RNE x25 x18))) (fp.mul RNE (fp.div RNE (fp.mul RNE x18 x5) (fp.mul RNE x17 x20)) (fp.sub RNE (fp.div RNE x4 x22) (fp.div RNE x19 x14)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x21 x13) (fp.sub RNE x18 x10))) (fp.add RNE (fp.sub RNE (fp.mul RNE x23 x14) (fp.mul RNE x14 x15)) (fp.div RNE (fp.add RNE x15 x4) (fp.neg x22)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.add RNE x3 x2) (fp.sub RNE x1 x22))) (fp.add RNE (fp.neg (fp.mul RNE x18 x3)) (fp.neg (fp.mul RNE x22 x11)))))
(check-sat)
