(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x6) (fp.sub RNE x8 x23)) (fp.mul RNE (fp.neg x18) (fp.div RNE x19 x7))) (fp.add RNE (fp.mul RNE (fp.mul RNE x22 x18) (fp.add RNE x2 x13)) (fp.neg (fp.div RNE x9 x17)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg x18) (fp.neg x24)) (fp.div RNE (fp.sub RNE x10 x13) (fp.add RNE x22 x2))) (fp.neg (fp.sub RNE (fp.add RNE x17 x2) (fp.sub RNE x6 x15)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x14 x16)) (fp.add RNE (fp.neg x19) (fp.sub RNE x21 x21))) (fp.neg (fp.add RNE (fp.add RNE x17 x15) (fp.sub RNE x4 x4)))))
(check-sat)
