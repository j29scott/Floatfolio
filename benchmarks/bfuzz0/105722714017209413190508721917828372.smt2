(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.add RNE x3 x2)) (fp.neg (fp.add RNE x9 x10))))
(assert (fp.eq (fp.div RNE (fp.add RNE x2 x0) (fp.sub RNE x2 x4)) (fp.neg (fp.neg x2))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x1 x7) (fp.sub RNE x10 x6)) (fp.add RNE (fp.mul RNE x12 x1) (fp.add RNE x2 x1))))
(assert (fp.eq (fp.neg (fp.mul RNE x1 x9)) (fp.mul RNE (fp.div RNE x11 x6) (fp.sub RNE x10 x7))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x0 x8) (fp.mul RNE x11 x5)) (fp.add RNE (fp.sub RNE x4 x10) (fp.add RNE x6 x8))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x0 x4) (fp.mul RNE x4 x11)) (fp.add RNE (fp.neg x1) (fp.add RNE x0 x6))))
(assert (fp.gt (fp.add RNE (fp.div RNE x6 x1) (fp.sub RNE x11 x5)) (fp.div RNE (fp.sub RNE x11 x0) (fp.add RNE x0 x8))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x1 x5) (fp.mul RNE x11 x1)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x8 x4))))
(assert (fp.leq (fp.neg (fp.neg x4)) (fp.add RNE (fp.div RNE x11 x3) (fp.mul RNE x3 x10))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x3)) (fp.add RNE (fp.add RNE x1 x7) (fp.add RNE x0 x3))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x2 x11) (fp.neg x2)) (fp.sub RNE (fp.mul RNE x3 x0) (fp.sub RNE x2 x9))))
(assert (fp.geq (fp.neg (fp.div RNE x2 x4)) (fp.sub RNE (fp.div RNE x8 x0) (fp.neg x10))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x11 x1) (fp.div RNE x5 x4)) (fp.mul RNE (fp.div RNE x12 x3) (fp.neg x9))))
(check-sat)
