(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x5 x0) (fp.mul RNE x14 x16)) (fp.sub RNE (fp.div RNE x10 x8) (fp.sub RNE x11 x1))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x4 x2) (fp.div RNE x10 x4)) (fp.add RNE (fp.div RNE x16 x9) (fp.neg x14))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x12 x11) (fp.mul RNE x15 x12)) (fp.div RNE (fp.add RNE x6 x12) (fp.neg x5))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x16 x10) (fp.sub RNE x12 x5)) (fp.mul RNE (fp.sub RNE x6 x5) (fp.mul RNE x5 x1))))
(assert (fp.leq (fp.neg (fp.mul RNE x13 x5)) (fp.add RNE (fp.sub RNE x5 x0) (fp.sub RNE x8 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x2 x11) (fp.neg x16)) (fp.div RNE (fp.mul RNE x12 x10) (fp.mul RNE x7 x14))))
(assert (fp.lt (fp.div RNE (fp.div RNE x11 x2) (fp.div RNE x1 x9)) (fp.div RNE (fp.add RNE x16 x16) (fp.mul RNE x0 x11))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x9) (fp.div RNE x5 x3)) (fp.mul RNE (fp.mul RNE x11 x15) (fp.add RNE x7 x9))))
(assert (fp.leq (fp.mul RNE (fp.neg x0) (fp.neg x10)) (fp.add RNE (fp.sub RNE x2 x15) (fp.mul RNE x8 x4))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x7 x14) (fp.mul RNE x15 x2)) (fp.div RNE (fp.mul RNE x10 x13) (fp.div RNE x14 x6))))
(assert (fp.leq (fp.add RNE (fp.div RNE x1 x0) (fp.mul RNE x6 x0)) (fp.neg (fp.sub RNE x1 x9))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x1 x9) (fp.neg x9)) (fp.sub RNE (fp.div RNE x7 x3) (fp.add RNE x1 x11))))
(assert (fp.geq (fp.sub RNE (fp.neg x2) (fp.add RNE x1 x12)) (fp.neg (fp.add RNE x13 x4))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x13 x16) (fp.neg x14)) (fp.add RNE (fp.add RNE x3 x0) (fp.add RNE x3 x13))))
(assert (fp.geq (fp.neg (fp.mul RNE x11 x4)) (fp.add RNE (fp.sub RNE x4 x1) (fp.div RNE x2 x16))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x6 x9) (fp.div RNE x0 x3)) (fp.sub RNE (fp.neg x10) (fp.neg x11))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x2 x11) (fp.neg x2)) (fp.div RNE (fp.div RNE x11 x13) (fp.neg x6))))
(check-sat)
