(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE x3 x4) (fp.sub RNE x6 x4)) (fp.sub RNE (fp.add RNE x3 x4) (fp.sub RNE x5 x6))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x4 x3) (fp.mul RNE x0 x6)) (fp.add RNE (fp.sub RNE x2 x3) (fp.neg x1))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x5 x5) (fp.add RNE x5 x2)) (fp.add RNE (fp.mul RNE x4 x0) (fp.mul RNE x4 x0))))
(assert (fp.lt (fp.neg (fp.mul RNE x2 x4)) (fp.neg (fp.neg x1))))
(assert (fp.geq (fp.add RNE (fp.neg x6) (fp.div RNE x4 x5)) (fp.sub RNE (fp.neg x3) (fp.add RNE x6 x0))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x4 x0) (fp.neg x6)) (fp.neg (fp.mul RNE x5 x2))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x2) (fp.div RNE x1 x2)) (fp.sub RNE (fp.mul RNE x6 x5) (fp.mul RNE x6 x0))))
(check-sat)
