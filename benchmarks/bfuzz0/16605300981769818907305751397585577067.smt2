(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x13 x4))) (fp.mul RNE (fp.div RNE (fp.neg x6) (fp.sub RNE x11 x12)) (fp.div RNE (fp.mul RNE x5 x6) (fp.mul RNE x9 x12)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE x1 x8) (fp.add RNE x8 x8))) (fp.neg (fp.div RNE (fp.sub RNE x5 x13) (fp.div RNE x5 x11)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE x6 x10) (fp.add RNE x1 x2)) (fp.neg (fp.div RNE x4 x3))) (fp.neg (fp.mul RNE (fp.neg x12) (fp.div RNE x1 x10)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x13) (fp.sub RNE x0 x13)) (fp.div RNE (fp.neg x9) (fp.sub RNE x7 x7))) (fp.add RNE (fp.div RNE (fp.mul RNE x0 x4) (fp.mul RNE x2 x2)) (fp.neg (fp.add RNE x3 x13)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x8) (fp.sub RNE x10 x6)) (fp.add RNE (fp.mul RNE x13 x2) (fp.div RNE x4 x10))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x10) (fp.add RNE x5 x5)) (fp.div RNE (fp.neg x6) (fp.add RNE x6 x0)))))
(check-sat)
