(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.add RNE x20 x12) (fp.neg x3)) (fp.div RNE (fp.neg x11) (fp.add RNE x18 x10))) (fp.div RNE (fp.div RNE (fp.mul RNE x3 x2) (fp.neg x17)) (fp.div RNE (fp.mul RNE x16 x10) (fp.mul RNE x4 x4)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x11 x22)) (fp.add RNE (fp.mul RNE x13 x2) (fp.sub RNE x11 x10))) (fp.div RNE (fp.add RNE (fp.add RNE x21 x21) (fp.add RNE x20 x14)) (fp.neg (fp.div RNE x15 x21)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE x11 x9) (fp.add RNE x23 x23))) (fp.add RNE (fp.mul RNE (fp.mul RNE x14 x15) (fp.sub RNE x19 x7)) (fp.add RNE (fp.mul RNE x20 x14) (fp.mul RNE x6 x2)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE x5 x13) (fp.mul RNE x19 x17))) (fp.div RNE (fp.neg (fp.div RNE x5 x14)) (fp.sub RNE (fp.add RNE x3 x15) (fp.sub RNE x5 x23)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x18 x23) (fp.sub RNE x11 x16)) (fp.mul RNE (fp.mul RNE x4 x15) (fp.div RNE x11 x4))) (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x9) (fp.sub RNE x12 x1)) (fp.add RNE (fp.add RNE x6 x20) (fp.mul RNE x4 x15)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg x15) (fp.neg x18))) (fp.mul RNE (fp.add RNE (fp.mul RNE x21 x18) (fp.mul RNE x1 x7)) (fp.mul RNE (fp.sub RNE x9 x5) (fp.add RNE x17 x20)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x17 x5) (fp.div RNE x0 x22))) (fp.add RNE (fp.sub RNE (fp.add RNE x2 x16) (fp.div RNE x4 x5)) (fp.add RNE (fp.sub RNE x14 x18) (fp.neg x11)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x22 x22) (fp.add RNE x20 x1)) (fp.add RNE (fp.div RNE x18 x13) (fp.neg x14))) (fp.add RNE (fp.sub RNE (fp.add RNE x16 x13) (fp.mul RNE x17 x4)) (fp.add RNE (fp.add RNE x3 x18) (fp.sub RNE x0 x11)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.sub RNE x15 x16)) (fp.div RNE (fp.add RNE x17 x6) (fp.div RNE x10 x0))) (fp.neg (fp.add RNE (fp.div RNE x22 x0) (fp.mul RNE x23 x12)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.add RNE x3 x14)) (fp.neg (fp.sub RNE x0 x17))) (fp.add RNE (fp.mul RNE (fp.add RNE x5 x12) (fp.neg x0)) (fp.mul RNE (fp.neg x13) (fp.mul RNE x0 x15)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x23) (fp.add RNE x20 x17)) (fp.neg (fp.mul RNE x16 x0))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x3 x10) (fp.neg x8)) (fp.neg (fp.div RNE x10 x9)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg x4) (fp.neg x12))) (fp.div RNE (fp.mul RNE (fp.sub RNE x17 x19) (fp.mul RNE x22 x14)) (fp.neg (fp.neg x19)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.mul RNE x15 x12)) (fp.div RNE (fp.div RNE x5 x9) (fp.div RNE x18 x15))) (fp.mul RNE (fp.div RNE (fp.div RNE x12 x4) (fp.mul RNE x2 x13)) (fp.add RNE (fp.add RNE x9 x11) (fp.sub RNE x11 x11)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x3 x18) (fp.div RNE x4 x1)) (fp.mul RNE (fp.add RNE x13 x8) (fp.mul RNE x5 x4))) (fp.neg (fp.neg (fp.add RNE x10 x0)))))
(check-sat)
