(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.add RNE x6 x4) (fp.mul RNE x2 x5)) (fp.mul RNE (fp.sub RNE x11 x8) (fp.add RNE x13 x8))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x12 x7) (fp.neg x8)) (fp.add RNE (fp.mul RNE x13 x12) (fp.neg x3))))
(assert (fp.gt (fp.add RNE (fp.neg x0) (fp.neg x1)) (fp.mul RNE (fp.div RNE x0 x2) (fp.sub RNE x9 x11))))
(assert (fp.eq (fp.mul RNE (fp.neg x6) (fp.add RNE x3 x9)) (fp.neg (fp.neg x8))))
(assert (fp.eq (fp.add RNE (fp.neg x10) (fp.neg x3)) (fp.sub RNE (fp.add RNE x6 x9) (fp.mul RNE x4 x3))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x10 x13) (fp.sub RNE x7 x10)) (fp.add RNE (fp.add RNE x1 x2) (fp.sub RNE x3 x13))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x9 x4) (fp.neg x9)) (fp.sub RNE (fp.div RNE x6 x3) (fp.mul RNE x11 x11))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x6)) (fp.neg (fp.div RNE x6 x1))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x6 x5) (fp.add RNE x2 x6)) (fp.add RNE (fp.div RNE x4 x13) (fp.neg x10))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x3 x13) (fp.neg x9)) (fp.mul RNE (fp.sub RNE x10 x7) (fp.neg x1))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x2 x7) (fp.add RNE x10 x4)) (fp.add RNE (fp.add RNE x3 x7) (fp.neg x5))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x5 x12) (fp.sub RNE x8 x9)) (fp.sub RNE (fp.mul RNE x10 x5) (fp.div RNE x8 x12))))
(assert (fp.geq (fp.add RNE (fp.add RNE x3 x6) (fp.sub RNE x2 x12)) (fp.sub RNE (fp.sub RNE x10 x11) (fp.neg x6))))
(assert (fp.eq (fp.neg (fp.sub RNE x2 x1)) (fp.add RNE (fp.sub RNE x7 x6) (fp.div RNE x7 x11))))
(assert (fp.leq (fp.add RNE (fp.neg x0) (fp.sub RNE x9 x6)) (fp.sub RNE (fp.mul RNE x5 x2) (fp.mul RNE x7 x5))))
(assert (fp.gt (fp.neg (fp.add RNE x11 x11)) (fp.neg (fp.sub RNE x5 x9))))
(assert (fp.gt (fp.add RNE (fp.add RNE x11 x12) (fp.sub RNE x10 x5)) (fp.neg (fp.mul RNE x9 x2))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x11 x3) (fp.mul RNE x11 x7)) (fp.sub RNE (fp.neg x1) (fp.neg x11))))
(assert (fp.leq (fp.add RNE (fp.add RNE x11 x5) (fp.sub RNE x9 x8)) (fp.neg (fp.sub RNE x5 x8))))
(assert (fp.eq (fp.div RNE (fp.div RNE x10 x10) (fp.div RNE x13 x8)) (fp.div RNE (fp.add RNE x13 x3) (fp.div RNE x5 x0))))
(check-sat)
