(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg x1) (fp.sub RNE x6 x0)) (fp.div RNE (fp.add RNE x5 x5) (fp.sub RNE x9 x12))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x11 x14) (fp.sub RNE x11 x9)) (fp.sub RNE (fp.mul RNE x14 x5) (fp.add RNE x7 x5))))
(assert (fp.geq (fp.mul RNE (fp.neg x7) (fp.add RNE x1 x5)) (fp.add RNE (fp.div RNE x7 x5) (fp.mul RNE x2 x9))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x2 x0) (fp.sub RNE x3 x8)) (fp.neg (fp.sub RNE x4 x6))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x13) (fp.sub RNE x4 x10)) (fp.neg (fp.mul RNE x14 x3))))
(assert (fp.gt (fp.add RNE (fp.div RNE x13 x11) (fp.mul RNE x10 x1)) (fp.neg (fp.div RNE x9 x0))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x13 x4) (fp.add RNE x9 x13)) (fp.mul RNE (fp.sub RNE x13 x15) (fp.sub RNE x6 x11))))
(assert (fp.gt (fp.sub RNE (fp.neg x9) (fp.mul RNE x10 x7)) (fp.sub RNE (fp.neg x7) (fp.add RNE x15 x10))))
(assert (fp.gt (fp.neg (fp.div RNE x4 x5)) (fp.div RNE (fp.mul RNE x15 x3) (fp.sub RNE x0 x0))))
(assert (fp.gt (fp.div RNE (fp.neg x2) (fp.add RNE x12 x7)) (fp.div RNE (fp.div RNE x9 x7) (fp.add RNE x9 x13))))
(check-sat)
