(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE x0 x2) (fp.neg x3)))
(assert (fp.leq (fp.neg x5) (fp.sub RNE x0 x2)))
(assert (fp.lt (fp.add RNE x2 x2) (fp.mul RNE x3 x1)))
(assert (fp.eq (fp.mul RNE x0 x3) (fp.div RNE x4 x1)))
(assert (fp.lt (fp.mul RNE x0 x1) (fp.neg x5)))
(assert (fp.geq (fp.add RNE x5 x0) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x0 x1) (fp.sub RNE x3 x5)))
(assert (fp.geq (fp.add RNE x1 x0) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x2 x5) (fp.sub RNE x1 x2)))
(assert (fp.lt (fp.sub RNE x3 x4) (fp.sub RNE x2 x2)))
(assert (fp.geq (fp.sub RNE x0 x3) (fp.mul RNE x1 x2)))
(assert (fp.lt (fp.sub RNE x4 x5) (fp.add RNE x2 x1)))
(assert (fp.gt (fp.neg x0) (fp.div RNE x1 x2)))
(assert (fp.leq (fp.add RNE x5 x1) (fp.mul RNE x3 x4)))
(check-sat)
