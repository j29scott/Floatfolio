(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE x5 x3) (fp.add RNE x5 x6)))
(assert (fp.lt (fp.mul RNE x10 x10) (fp.sub RNE x3 x3)))
(assert (fp.eq (fp.div RNE x8 x5) (fp.neg x9)))
(assert (fp.leq (fp.mul RNE x3 x2) (fp.sub RNE x10 x2)))
(assert (fp.leq (fp.add RNE x3 x3) (fp.mul RNE x3 x2)))
(assert (fp.geq (fp.add RNE x8 x9) (fp.sub RNE x2 x8)))
(assert (fp.leq (fp.neg x8) (fp.add RNE x3 x9)))
(assert (fp.eq (fp.mul RNE x8 x9) (fp.div RNE x4 x8)))
(assert (fp.eq (fp.neg x1) (fp.neg x7)))
(assert (fp.lt (fp.div RNE x1 x3) (fp.div RNE x5 x1)))
(assert (fp.lt (fp.div RNE x5 x3) (fp.mul RNE x2 x6)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x8 x4)))
(assert (fp.geq (fp.mul RNE x10 x4) (fp.neg x2)))
(assert (fp.gt (fp.neg x6) (fp.sub RNE x3 x3)))
(assert (fp.eq (fp.mul RNE x1 x9) (fp.mul RNE x4 x0)))
(assert (fp.leq (fp.neg x5) (fp.neg x10)))
(check-sat)
