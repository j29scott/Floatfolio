(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE x6 x9) (fp.add RNE x2 x7)) (fp.neg (fp.mul RNE x1 x1))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x1) (fp.mul RNE x3 x7)) (fp.mul RNE (fp.mul RNE x4 x3) (fp.sub RNE x0 x9)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x1) (fp.neg x0)) (fp.add RNE (fp.sub RNE x2 x1) (fp.neg x9))) (fp.mul RNE (fp.neg (fp.add RNE x9 x1)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x1 x8)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x6 x5) (fp.mul RNE x9 x2)) (fp.add RNE (fp.sub RNE x9 x5) (fp.div RNE x4 x0))) (fp.div RNE (fp.mul RNE (fp.neg x8) (fp.sub RNE x0 x9)) (fp.add RNE (fp.add RNE x8 x0) (fp.div RNE x1 x3)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.neg x2) (fp.neg x7)) (fp.neg (fp.sub RNE x2 x7))) (fp.neg (fp.mul RNE (fp.div RNE x4 x6) (fp.neg x1)))))
(check-sat)
