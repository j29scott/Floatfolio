(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE x9 x7) (fp.add RNE x11 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x6 x3) (fp.mul RNE x12 x5)) (fp.add RNE (fp.div RNE x13 x1) (fp.sub RNE x8 x5)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.div RNE x5 x2) (fp.mul RNE x6 x0))) (fp.div RNE (fp.neg (fp.mul RNE x2 x11)) (fp.sub RNE (fp.sub RNE x13 x5) (fp.mul RNE x3 x6)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x11 x9) (fp.add RNE x2 x1)) (fp.neg (fp.neg x8))) (fp.div RNE (fp.add RNE (fp.mul RNE x2 x8) (fp.add RNE x5 x4)) (fp.mul RNE (fp.mul RNE x9 x6) (fp.div RNE x8 x5)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x9 x12) (fp.div RNE x13 x4)) (fp.add RNE (fp.neg x0) (fp.neg x9))) (fp.neg (fp.sub RNE (fp.sub RNE x2 x10) (fp.div RNE x11 x3)))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE x3 x2))) (fp.div RNE (fp.div RNE (fp.add RNE x13 x8) (fp.div RNE x8 x13)) (fp.sub RNE (fp.add RNE x9 x7) (fp.neg x6)))))
(check-sat)
