(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.neg (fp.div RNE x1 x10)) (fp.mul RNE (fp.div RNE x0 x4) (fp.add RNE x6 x5))) (fp.add RNE (fp.mul RNE (fp.add RNE x6 x2) (fp.sub RNE x1 x10)) (fp.div RNE (fp.sub RNE x2 x6) (fp.div RNE x4 x1)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x0) (fp.sub RNE x5 x2)) (fp.sub RNE (fp.mul RNE x10 x0) (fp.div RNE x4 x12))) (fp.add RNE (fp.div RNE (fp.sub RNE x4 x3) (fp.sub RNE x1 x7)) (fp.sub RNE (fp.neg x12) (fp.mul RNE x8 x12)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x0) (fp.mul RNE x1 x10)) (fp.div RNE (fp.add RNE x0 x10) (fp.neg x9))) (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x2) (fp.neg x2)) (fp.mul RNE (fp.mul RNE x12 x6) (fp.add RNE x5 x3)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x3 x4) (fp.neg x6)) (fp.neg (fp.neg x4))) (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x10) (fp.div RNE x3 x7)) (fp.mul RNE (fp.div RNE x12 x7) (fp.add RNE x9 x4)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE x10 x5) (fp.div RNE x6 x6)) (fp.div RNE (fp.mul RNE x4 x12) (fp.div RNE x13 x10))) (fp.div RNE (fp.sub RNE (fp.neg x7) (fp.neg x0)) (fp.mul RNE (fp.add RNE x10 x1) (fp.sub RNE x9 x10)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x4 x5)) (fp.sub RNE (fp.div RNE x5 x8) (fp.neg x2))) (fp.mul RNE (fp.add RNE (fp.mul RNE x9 x2) (fp.mul RNE x3 x4)) (fp.sub RNE (fp.add RNE x7 x3) (fp.mul RNE x13 x4)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x3 x8) (fp.neg x13))) (fp.mul RNE (fp.div RNE (fp.add RNE x2 x1) (fp.neg x0)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x8 x11)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x0 x3) (fp.div RNE x3 x1)) (fp.add RNE (fp.mul RNE x3 x9) (fp.div RNE x7 x6))) (fp.sub RNE (fp.div RNE (fp.add RNE x2 x5) (fp.div RNE x5 x8)) (fp.sub RNE (fp.neg x8) (fp.div RNE x10 x10)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.mul RNE x4 x4)) (fp.add RNE (fp.sub RNE x0 x12) (fp.mul RNE x0 x6))) (fp.neg (fp.sub RNE (fp.add RNE x8 x7) (fp.mul RNE x13 x11)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x13 x10) (fp.div RNE x1 x11)) (fp.sub RNE (fp.div RNE x10 x10) (fp.sub RNE x3 x9))) (fp.add RNE (fp.mul RNE (fp.sub RNE x0 x0) (fp.sub RNE x11 x4)) (fp.add RNE (fp.mul RNE x8 x9) (fp.sub RNE x9 x1)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x8) (fp.mul RNE x7 x2)) (fp.sub RNE (fp.mul RNE x12 x8) (fp.mul RNE x5 x3))) (fp.neg (fp.sub RNE (fp.add RNE x6 x13) (fp.mul RNE x1 x2)))))
(check-sat)
