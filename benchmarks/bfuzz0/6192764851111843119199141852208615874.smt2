(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.neg x25) (fp.add RNE x26 x13)) (fp.sub RNE (fp.sub RNE x10 x15) (fp.add RNE x18 x15))) (fp.neg (fp.add RNE (fp.sub RNE x2 x14) (fp.mul RNE x1 x16)))) (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x22 x2) (fp.neg x3))))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE (fp.sub RNE x4 x3) (fp.add RNE x11 x18)))) (fp.div RNE (fp.div RNE (fp.neg (fp.mul RNE x27 x21)) (fp.mul RNE (fp.mul RNE x24 x3) (fp.div RNE x12 x11))) (fp.mul RNE (fp.neg (fp.neg x15)) (fp.add RNE (fp.add RNE x22 x21) (fp.add RNE x18 x27))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.neg x11) (fp.sub RNE x20 x24)) (fp.add RNE (fp.add RNE x21 x11) (fp.mul RNE x20 x17))) (fp.mul RNE (fp.neg (fp.neg x17)) (fp.neg (fp.sub RNE x0 x13)))) (fp.neg (fp.neg (fp.add RNE (fp.add RNE x22 x25) (fp.sub RNE x23 x23))))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE x18 x24)) (fp.neg (fp.sub RNE x25 x0))) (fp.mul RNE (fp.add RNE (fp.mul RNE x21 x7) (fp.mul RNE x17 x9)) (fp.mul RNE (fp.mul RNE x14 x6) (fp.mul RNE x15 x22)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.div RNE x7 x19) (fp.mul RNE x10 x5)) (fp.neg (fp.div RNE x6 x11))) (fp.neg (fp.add RNE (fp.div RNE x21 x22) (fp.neg x1))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.neg (fp.sub RNE x24 x4)) (fp.sub RNE (fp.sub RNE x27 x23) (fp.sub RNE x24 x18))) (fp.sub RNE (fp.sub RNE (fp.add RNE x19 x4) (fp.sub RNE x1 x3)) (fp.div RNE (fp.sub RNE x10 x8) (fp.sub RNE x18 x24)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x19) (fp.neg x27)) (fp.neg (fp.mul RNE x3 x19))) (fp.sub RNE (fp.add RNE (fp.neg x23) (fp.neg x24)) (fp.neg (fp.add RNE x13 x10))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE (fp.div RNE x6 x4) (fp.sub RNE x1 x26))) (fp.div RNE (fp.add RNE (fp.sub RNE x13 x13) (fp.add RNE x8 x14)) (fp.neg (fp.add RNE x24 x24)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.mul RNE x27 x23) (fp.mul RNE x5 x10)) (fp.div RNE (fp.div RNE x9 x18) (fp.mul RNE x27 x1))) (fp.neg (fp.neg (fp.mul RNE x10 x24))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x19) (fp.sub RNE x3 x13)) (fp.div RNE (fp.mul RNE x8 x2) (fp.sub RNE x23 x23))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x19 x17) (fp.add RNE x6 x12)) (fp.neg (fp.mul RNE x25 x1)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.div RNE x9 x8) (fp.mul RNE x21 x1)) (fp.mul RNE (fp.neg x13) (fp.sub RNE x2 x5))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.mul RNE (fp.div RNE x23 x23) (fp.div RNE x1 x2)) (fp.neg (fp.add RNE x20 x17)))) (fp.add RNE (fp.neg (fp.add RNE (fp.mul RNE x16 x22) (fp.div RNE x14 x25))) (fp.div RNE (fp.add RNE (fp.sub RNE x10 x16) (fp.neg x3)) (fp.add RNE (fp.div RNE x25 x24) (fp.add RNE x17 x15))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x17) (fp.neg x4)) (fp.mul RNE (fp.neg x18) (fp.mul RNE x8 x23))) (fp.sub RNE (fp.add RNE (fp.div RNE x21 x15) (fp.div RNE x7 x27)) (fp.div RNE (fp.mul RNE x1 x3) (fp.mul RNE x14 x4)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x24 x13) (fp.mul RNE x22 x10)) (fp.neg (fp.sub RNE x18 x25))) (fp.neg (fp.div RNE (fp.mul RNE x15 x8) (fp.sub RNE x17 x3))))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.neg (fp.add RNE x21 x14))) (fp.neg (fp.neg (fp.add RNE x5 x13)))) (fp.add RNE (fp.neg (fp.add RNE (fp.mul RNE x4 x16) (fp.sub RNE x17 x26))) (fp.mul RNE (fp.div RNE (fp.add RNE x17 x8) (fp.mul RNE x6 x22)) (fp.sub RNE (fp.neg x9) (fp.neg x10))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.add RNE (fp.sub RNE x2 x10) (fp.sub RNE x0 x3)) (fp.mul RNE (fp.mul RNE x18 x11) (fp.neg x23))) (fp.sub RNE (fp.div RNE (fp.add RNE x18 x6) (fp.div RNE x26 x10)) (fp.mul RNE (fp.add RNE x13 x26) (fp.mul RNE x20 x12)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x24 x1) (fp.neg x5)) (fp.add RNE (fp.sub RNE x2 x23) (fp.sub RNE x9 x26))) (fp.sub RNE (fp.neg (fp.sub RNE x2 x9)) (fp.sub RNE (fp.sub RNE x21 x5) (fp.mul RNE x3 x13))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.neg (fp.div RNE x0 x7))) (fp.add RNE (fp.neg (fp.neg x12)) (fp.neg (fp.add RNE x25 x25)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.div RNE x25 x27) (fp.sub RNE x16 x8)) (fp.neg (fp.sub RNE x8 x9))) (fp.add RNE (fp.add RNE (fp.mul RNE x10 x23) (fp.add RNE x21 x2)) (fp.mul RNE (fp.add RNE x27 x22) (fp.sub RNE x19 x4))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE (fp.div RNE x3 x5) (fp.mul RNE x17 x22)) (fp.mul RNE (fp.add RNE x10 x6) (fp.neg x16)))) (fp.add RNE (fp.div RNE (fp.neg (fp.add RNE x9 x2)) (fp.sub RNE (fp.div RNE x0 x9) (fp.sub RNE x27 x0))) (fp.neg (fp.mul RNE (fp.sub RNE x5 x26) (fp.add RNE x17 x1))))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x17 x22) (fp.sub RNE x15 x12)) (fp.mul RNE (fp.add RNE x17 x3) (fp.div RNE x12 x13))) (fp.sub RNE (fp.mul RNE (fp.neg x7) (fp.sub RNE x21 x20)) (fp.neg (fp.mul RNE x1 x18)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x26 x20) (fp.add RNE x22 x6)) (fp.add RNE (fp.add RNE x22 x12) (fp.div RNE x3 x1))) (fp.mul RNE (fp.neg (fp.add RNE x11 x10)) (fp.mul RNE (fp.add RNE x19 x4) (fp.div RNE x25 x9))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg (fp.neg x7)) (fp.div RNE (fp.sub RNE x23 x8) (fp.add RNE x6 x10))) (fp.sub RNE (fp.neg (fp.neg x13)) (fp.div RNE (fp.neg x16) (fp.div RNE x9 x24)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x26 x26) (fp.sub RNE x27 x11)) (fp.div RNE (fp.add RNE x13 x27) (fp.sub RNE x6 x23))) (fp.sub RNE (fp.mul RNE (fp.add RNE x3 x3) (fp.neg x10)) (fp.neg (fp.mul RNE x25 x14))))))
(check-sat)
