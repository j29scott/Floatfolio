(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.add RNE x7 x7) (fp.mul RNE x5 x3)) (fp.neg (fp.sub RNE x5 x10))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x10 x12) (fp.neg x14)) (fp.neg (fp.mul RNE x12 x0))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x4 x1) (fp.sub RNE x15 x13)) (fp.div RNE (fp.mul RNE x11 x4) (fp.mul RNE x0 x6))))
(assert (fp.leq (fp.div RNE (fp.neg x14) (fp.neg x4)) (fp.div RNE (fp.sub RNE x11 x6) (fp.div RNE x14 x12))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x2 x8) (fp.add RNE x9 x1)) (fp.neg (fp.div RNE x4 x0))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x11 x4) (fp.neg x4)) (fp.add RNE (fp.sub RNE x0 x11) (fp.add RNE x8 x10))))
(check-sat)
