(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x12) (fp.div RNE x17 x11)) (fp.mul RNE (fp.div RNE x0 x8) (fp.div RNE x11 x15))) (fp.add RNE (fp.add RNE (fp.add RNE x14 x9) (fp.add RNE x18 x4)) (fp.sub RNE (fp.div RNE x10 x17) (fp.add RNE x16 x19)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x17) (fp.mul RNE x10 x9)) (fp.mul RNE (fp.add RNE x13 x4) (fp.div RNE x20 x15))) (fp.sub RNE (fp.sub RNE (fp.div RNE x6 x11) (fp.sub RNE x1 x16)) (fp.sub RNE (fp.sub RNE x18 x17) (fp.sub RNE x1 x15))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.div RNE x2 x7) (fp.mul RNE x0 x19)) (fp.mul RNE (fp.add RNE x7 x15) (fp.mul RNE x21 x3))) (fp.sub RNE (fp.div RNE (fp.add RNE x12 x19) (fp.div RNE x19 x1)) (fp.add RNE (fp.sub RNE x7 x0) (fp.sub RNE x6 x15)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.neg x21) (fp.div RNE x12 x19)) (fp.div RNE (fp.sub RNE x6 x13) (fp.sub RNE x18 x13))) (fp.sub RNE (fp.neg (fp.div RNE x9 x12)) (fp.sub RNE (fp.div RNE x3 x4) (fp.add RNE x1 x6))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x11 x5) (fp.div RNE x15 x17)) (fp.mul RNE (fp.sub RNE x16 x16) (fp.neg x5))) (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x16) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x21 x11) (fp.add RNE x16 x21)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x21) (fp.neg x3)) (fp.add RNE (fp.mul RNE x2 x11) (fp.div RNE x19 x20))) (fp.neg (fp.neg (fp.add RNE x12 x11))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.add RNE (fp.sub RNE x18 x2) (fp.div RNE x3 x11)) (fp.sub RNE (fp.div RNE x8 x0) (fp.div RNE x16 x20))) (fp.sub RNE (fp.add RNE (fp.add RNE x19 x15) (fp.div RNE x16 x7)) (fp.div RNE (fp.mul RNE x0 x16) (fp.mul RNE x20 x8)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.neg x15)) (fp.div RNE (fp.add RNE x15 x20) (fp.div RNE x15 x11))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x15 x18) (fp.sub RNE x13 x0)) (fp.div RNE (fp.add RNE x8 x6) (fp.sub RNE x1 x12))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.add RNE x14 x19)) (fp.add RNE (fp.div RNE x16 x8) (fp.neg x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x6 x19) (fp.neg x1)) (fp.sub RNE (fp.neg x8) (fp.add RNE x7 x10)))) (fp.div RNE (fp.sub RNE (fp.add RNE (fp.neg x13) (fp.mul RNE x10 x0)) (fp.neg (fp.mul RNE x0 x11))) (fp.mul RNE (fp.add RNE (fp.sub RNE x4 x15) (fp.mul RNE x11 x16)) (fp.mul RNE (fp.sub RNE x21 x16) (fp.neg x12))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.add RNE (fp.div RNE x11 x3) (fp.neg x6)) (fp.div RNE (fp.div RNE x4 x4) (fp.add RNE x0 x4)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x15 x17) (fp.sub RNE x16 x20)) (fp.add RNE (fp.add RNE x11 x14) (fp.div RNE x11 x17))) (fp.neg (fp.sub RNE (fp.neg x19) (fp.sub RNE x9 x5))))))
(check-sat)
