(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE x1 x4) (fp.sub RNE x10 x5)))
(assert (fp.geq (fp.neg x2) (fp.div RNE x5 x2)))
(assert (fp.eq (fp.sub RNE x4 x10) (fp.div RNE x0 x9)))
(assert (fp.geq (fp.neg x6) (fp.neg x0)))
(assert (fp.lt (fp.sub RNE x8 x6) (fp.div RNE x9 x5)))
(assert (fp.lt (fp.sub RNE x5 x0) (fp.div RNE x2 x2)))
(assert (fp.eq (fp.sub RNE x3 x4) (fp.mul RNE x1 x0)))
(assert (fp.leq (fp.add RNE x6 x2) (fp.div RNE x7 x3)))
(assert (fp.leq (fp.add RNE x5 x10) (fp.neg x8)))
(assert (fp.eq (fp.div RNE x9 x2) (fp.sub RNE x10 x10)))
(assert (fp.eq (fp.add RNE x9 x8) (fp.div RNE x3 x8)))
(assert (fp.eq (fp.neg x3) (fp.div RNE x0 x4)))
(assert (fp.geq (fp.sub RNE x7 x1) (fp.mul RNE x10 x6)))
(assert (fp.geq (fp.div RNE x8 x0) (fp.neg x0)))
(check-sat)
