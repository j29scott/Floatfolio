(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x15 x0) (fp.add RNE x0 x0)) (fp.sub RNE (fp.add RNE x16 x4) (fp.mul RNE x19 x5))) (fp.neg (fp.neg (fp.add RNE x9 x6)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x19 x13) (fp.div RNE x8 x16)) (fp.neg (fp.sub RNE x7 x2))) (fp.sub RNE (fp.mul RNE (fp.add RNE x16 x20) (fp.add RNE x17 x6)) (fp.neg (fp.add RNE x2 x18)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.neg x18)) (fp.neg (fp.neg x19))) (fp.div RNE (fp.add RNE (fp.sub RNE x6 x13) (fp.div RNE x19 x9)) (fp.div RNE (fp.sub RNE x16 x17) (fp.neg x5)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg x14) (fp.div RNE x7 x18)) (fp.neg (fp.mul RNE x5 x7))) (fp.mul RNE (fp.div RNE (fp.mul RNE x16 x6) (fp.neg x19)) (fp.sub RNE (fp.add RNE x18 x7) (fp.add RNE x15 x18)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x2 x1)) (fp.add RNE (fp.sub RNE x11 x6) (fp.sub RNE x7 x13))) (fp.add RNE (fp.add RNE (fp.add RNE x3 x16) (fp.sub RNE x1 x15)) (fp.sub RNE (fp.sub RNE x15 x13) (fp.neg x1)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x19 x11) (fp.div RNE x17 x15)) (fp.add RNE (fp.add RNE x3 x15) (fp.div RNE x4 x5))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x10) (fp.neg x18)) (fp.add RNE (fp.div RNE x2 x17) (fp.div RNE x8 x6)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg x18) (fp.add RNE x8 x10)) (fp.div RNE (fp.sub RNE x17 x0) (fp.sub RNE x20 x2))) (fp.neg (fp.div RNE (fp.add RNE x16 x18) (fp.add RNE x6 x19)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x7 x5)) (fp.neg (fp.div RNE x7 x3))) (fp.sub RNE (fp.neg (fp.mul RNE x11 x6)) (fp.sub RNE (fp.div RNE x1 x2) (fp.neg x19)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg x16) (fp.mul RNE x5 x13))) (fp.add RNE (fp.div RNE (fp.add RNE x18 x18) (fp.neg x18)) (fp.mul RNE (fp.div RNE x11 x6) (fp.add RNE x1 x11)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg x11) (fp.sub RNE x18 x10)) (fp.mul RNE (fp.div RNE x17 x20) (fp.sub RNE x6 x3))) (fp.sub RNE (fp.div RNE (fp.add RNE x16 x9) (fp.mul RNE x5 x7)) (fp.sub RNE (fp.add RNE x4 x14) (fp.sub RNE x11 x1)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.add RNE x1 x7) (fp.div RNE x8 x3)) (fp.add RNE (fp.add RNE x4 x5) (fp.div RNE x9 x4))) (fp.add RNE (fp.div RNE (fp.neg x11) (fp.sub RNE x17 x1)) (fp.add RNE (fp.sub RNE x13 x16) (fp.mul RNE x5 x18)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x14 x12) (fp.neg x0)) (fp.add RNE (fp.mul RNE x1 x15) (fp.add RNE x9 x7))) (fp.sub RNE (fp.neg (fp.add RNE x0 x9)) (fp.neg (fp.neg x8)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg x8) (fp.div RNE x18 x1)) (fp.add RNE (fp.neg x19) (fp.mul RNE x0 x3))) (fp.neg (fp.sub RNE (fp.sub RNE x6 x20) (fp.div RNE x11 x10)))))
(check-sat)
