(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x6 x8)) (fp.neg (fp.add RNE x14 x3))) (fp.mul RNE (fp.add RNE (fp.div RNE x1 x11) (fp.neg x14)) (fp.add RNE (fp.add RNE x7 x19) (fp.div RNE x1 x7)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x1 x4)) (fp.add RNE (fp.add RNE x15 x6) (fp.add RNE x0 x18))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x2 x14) (fp.add RNE x11 x20)) (fp.neg (fp.div RNE x2 x16)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x5 x10)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x4 x9))) (fp.div RNE (fp.mul RNE (fp.div RNE x17 x20) (fp.div RNE x11 x17)) (fp.add RNE (fp.mul RNE x2 x5) (fp.add RNE x17 x3)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x6 x20) (fp.sub RNE x19 x15))) (fp.neg (fp.div RNE (fp.neg x10) (fp.neg x19)))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE x13 x7))) (fp.add RNE (fp.div RNE (fp.sub RNE x11 x4) (fp.neg x13)) (fp.neg (fp.mul RNE x5 x18)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.mul RNE x3 x10) (fp.sub RNE x17 x5)) (fp.div RNE (fp.mul RNE x9 x0) (fp.add RNE x2 x16))) (fp.mul RNE (fp.mul RNE (fp.add RNE x11 x4) (fp.mul RNE x20 x5)) (fp.sub RNE (fp.sub RNE x15 x18) (fp.add RNE x6 x17)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x3 x20) (fp.add RNE x19 x9)) (fp.div RNE (fp.sub RNE x5 x7) (fp.neg x5))) (fp.div RNE (fp.sub RNE (fp.neg x13) (fp.sub RNE x2 x10)) (fp.add RNE (fp.sub RNE x20 x4) (fp.sub RNE x18 x1)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.mul RNE x4 x3)) (fp.neg (fp.add RNE x14 x18))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x16 x7) (fp.mul RNE x8 x16)) (fp.div RNE (fp.div RNE x17 x8) (fp.neg x16)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.div RNE x11 x5)) (fp.neg (fp.div RNE x11 x15))) (fp.mul RNE (fp.neg (fp.mul RNE x2 x11)) (fp.div RNE (fp.add RNE x15 x12) (fp.mul RNE x17 x16)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x7) (fp.sub RNE x2 x18)) (fp.div RNE (fp.neg x19) (fp.mul RNE x5 x1))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x6) (fp.sub RNE x8 x6)) (fp.div RNE (fp.mul RNE x20 x8) (fp.neg x11)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x4) (fp.neg x2)) (fp.add RNE (fp.sub RNE x6 x2) (fp.div RNE x5 x9))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x11) (fp.sub RNE x3 x19)) (fp.add RNE (fp.sub RNE x8 x5) (fp.mul RNE x2 x19)))))
(check-sat)
