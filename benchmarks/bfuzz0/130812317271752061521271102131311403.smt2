(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE x6 x14) (fp.add RNE x19 x19))) (fp.neg (fp.sub RNE (fp.div RNE x2 x18) (fp.add RNE x14 x21)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE x0 x22) (fp.mul RNE x5 x22)) (fp.div RNE (fp.add RNE x19 x23) (fp.sub RNE x8 x2))) (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.neg x6)) (fp.add RNE (fp.mul RNE x2 x13) (fp.neg x4)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE x7 x19)) (fp.sub RNE (fp.neg x2) (fp.mul RNE x11 x13))) (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.sub RNE x11 x9)) (fp.mul RNE (fp.neg x11) (fp.neg x7)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.add RNE x8 x7)) (fp.add RNE (fp.sub RNE x12 x15) (fp.neg x11))) (fp.neg (fp.neg (fp.add RNE x10 x8)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.mul RNE x6 x17)) (fp.add RNE (fp.mul RNE x11 x11) (fp.sub RNE x20 x21))) (fp.div RNE (fp.sub RNE (fp.neg x14) (fp.add RNE x10 x10)) (fp.add RNE (fp.add RNE x1 x12) (fp.div RNE x17 x8)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x20 x12) (fp.add RNE x7 x19)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x6 x10))) (fp.div RNE (fp.sub RNE (fp.neg x20) (fp.sub RNE x24 x21)) (fp.div RNE (fp.neg x8) (fp.sub RNE x21 x2)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.sub RNE x12 x11)) (fp.sub RNE (fp.mul RNE x10 x1) (fp.mul RNE x14 x3))) (fp.add RNE (fp.add RNE (fp.neg x3) (fp.neg x12)) (fp.mul RNE (fp.mul RNE x9 x12) (fp.add RNE x3 x20)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.neg x20) (fp.div RNE x11 x14)) (fp.neg (fp.div RNE x13 x3))) (fp.neg (fp.sub RNE (fp.sub RNE x15 x16) (fp.add RNE x19 x11)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x13) (fp.sub RNE x7 x22)) (fp.neg (fp.sub RNE x12 x23))) (fp.sub RNE (fp.neg (fp.div RNE x22 x24)) (fp.mul RNE (fp.sub RNE x16 x0) (fp.mul RNE x4 x23)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x24 x19) (fp.add RNE x20 x17)) (fp.mul RNE (fp.sub RNE x16 x16) (fp.div RNE x12 x1))) (fp.sub RNE (fp.neg (fp.sub RNE x7 x0)) (fp.neg (fp.add RNE x5 x7)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.sub RNE x13 x1) (fp.div RNE x17 x16)) (fp.div RNE (fp.mul RNE x17 x14) (fp.sub RNE x4 x4))) (fp.add RNE (fp.mul RNE (fp.sub RNE x21 x23) (fp.mul RNE x23 x11)) (fp.add RNE (fp.div RNE x6 x16) (fp.sub RNE x20 x1)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.div RNE x24 x19) (fp.sub RNE x6 x15)) (fp.div RNE (fp.sub RNE x20 x14) (fp.neg x1))) (fp.mul RNE (fp.mul RNE (fp.neg x21) (fp.mul RNE x15 x17)) (fp.mul RNE (fp.neg x17) (fp.mul RNE x15 x9)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x1 x20)) (fp.div RNE (fp.mul RNE x13 x7) (fp.sub RNE x11 x20))) (fp.mul RNE (fp.neg (fp.sub RNE x12 x21)) (fp.mul RNE (fp.add RNE x13 x10) (fp.neg x3)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE x8 x22)) (fp.add RNE (fp.add RNE x19 x15) (fp.neg x14))) (fp.neg (fp.mul RNE (fp.add RNE x24 x9) (fp.div RNE x1 x21)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x14 x14)) (fp.add RNE (fp.mul RNE x11 x22) (fp.add RNE x15 x4))) (fp.div RNE (fp.mul RNE (fp.add RNE x8 x4) (fp.sub RNE x11 x7)) (fp.mul RNE (fp.add RNE x18 x2) (fp.sub RNE x21 x21)))))
(assert (fp.lt (fp.neg (fp.neg (fp.mul RNE x5 x13))) (fp.add RNE (fp.neg (fp.sub RNE x21 x14)) (fp.mul RNE (fp.neg x21) (fp.add RNE x16 x22)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x15 x7) (fp.mul RNE x4 x13)) (fp.add RNE (fp.mul RNE x4 x15) (fp.add RNE x13 x23))) (fp.add RNE (fp.mul RNE (fp.sub RNE x6 x8) (fp.sub RNE x23 x18)) (fp.mul RNE (fp.div RNE x20 x11) (fp.neg x23)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x2 x13) (fp.div RNE x1 x13)) (fp.neg (fp.neg x6))) (fp.mul RNE (fp.neg (fp.neg x0)) (fp.mul RNE (fp.mul RNE x9 x10) (fp.mul RNE x15 x5)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x16) (fp.neg x24)) (fp.neg (fp.neg x11))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x18 x18) (fp.add RNE x14 x0)) (fp.sub RNE (fp.neg x9) (fp.neg x9)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.sub RNE x4 x18)) (fp.div RNE (fp.sub RNE x16 x14) (fp.neg x8))) (fp.neg (fp.neg (fp.add RNE x20 x9)))))
(check-sat)
