(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE x18 x0) (fp.mul RNE x1 x19)) (fp.div RNE (fp.mul RNE x0 x15) (fp.mul RNE x10 x14))) (fp.neg (fp.neg (fp.sub RNE x14 x14)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE x19 x2) (fp.mul RNE x10 x7)) (fp.neg (fp.add RNE x21 x14))) (fp.neg (fp.sub RNE (fp.div RNE x14 x18) (fp.div RNE x4 x5)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE x18 x20)) (fp.mul RNE (fp.add RNE x20 x6) (fp.sub RNE x6 x10))) (fp.neg (fp.div RNE (fp.add RNE x16 x15) (fp.mul RNE x18 x20)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x9) (fp.sub RNE x12 x13)) (fp.sub RNE (fp.neg x21) (fp.mul RNE x7 x20))) (fp.neg (fp.div RNE (fp.add RNE x12 x21) (fp.mul RNE x15 x19)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x22) (fp.div RNE x19 x18)) (fp.mul RNE (fp.mul RNE x16 x11) (fp.add RNE x1 x4))) (fp.sub RNE (fp.neg (fp.add RNE x5 x8)) (fp.sub RNE (fp.add RNE x0 x19) (fp.add RNE x8 x13)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE x19 x3) (fp.mul RNE x6 x17)) (fp.sub RNE (fp.neg x19) (fp.neg x20))) (fp.sub RNE (fp.mul RNE (fp.add RNE x14 x7) (fp.sub RNE x2 x17)) (fp.add RNE (fp.add RNE x14 x18) (fp.div RNE x13 x16)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x9) (fp.add RNE x3 x8)) (fp.sub RNE (fp.div RNE x19 x10) (fp.div RNE x20 x5))) (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x0) (fp.add RNE x4 x9)) (fp.sub RNE (fp.neg x19) (fp.div RNE x16 x4)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.add RNE x5 x17) (fp.neg x22)) (fp.mul RNE (fp.sub RNE x17 x22) (fp.sub RNE x6 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x10 x10) (fp.neg x15)) (fp.add RNE (fp.mul RNE x0 x4) (fp.div RNE x9 x4)))))
(check-sat)
