(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.add RNE x19 x14) (fp.mul RNE x12 x5)) (fp.mul RNE (fp.mul RNE x0 x17) (fp.div RNE x11 x7))) (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x12) (fp.mul RNE x11 x17)) (fp.add RNE (fp.sub RNE x13 x3) (fp.mul RNE x16 x1)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x1) (fp.mul RNE x6 x10)) (fp.mul RNE (fp.add RNE x7 x1) (fp.div RNE x4 x11))) (fp.add RNE (fp.add RNE (fp.neg x17) (fp.div RNE x9 x7)) (fp.neg (fp.add RNE x19 x2)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.sub RNE x12 x11) (fp.div RNE x15 x12)) (fp.mul RNE (fp.sub RNE x14 x8) (fp.mul RNE x1 x13))) (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.neg x9)) (fp.neg (fp.sub RNE x1 x16)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.add RNE x7 x1)) (fp.add RNE (fp.add RNE x12 x2) (fp.sub RNE x14 x18))) (fp.mul RNE (fp.neg (fp.div RNE x5 x6)) (fp.div RNE (fp.mul RNE x14 x8) (fp.div RNE x17 x6)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.div RNE x12 x8) (fp.add RNE x4 x1)) (fp.mul RNE (fp.div RNE x1 x13) (fp.mul RNE x17 x2))) (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x6) (fp.add RNE x2 x16)) (fp.sub RNE (fp.neg x13) (fp.div RNE x16 x5)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.sub RNE x8 x8)) (fp.div RNE (fp.sub RNE x5 x12) (fp.add RNE x5 x1))) (fp.neg (fp.sub RNE (fp.mul RNE x17 x15) (fp.sub RNE x8 x19)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.neg x5)) (fp.mul RNE (fp.sub RNE x10 x1) (fp.sub RNE x13 x4))) (fp.div RNE (fp.div RNE (fp.mul RNE x5 x8) (fp.neg x12)) (fp.mul RNE (fp.neg x0) (fp.div RNE x8 x11)))))
(assert (fp.leq (fp.neg (fp.neg (fp.neg x13))) (fp.add RNE (fp.div RNE (fp.div RNE x10 x0) (fp.neg x7)) (fp.add RNE (fp.add RNE x19 x1) (fp.neg x17)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.add RNE x11 x3) (fp.div RNE x2 x17)) (fp.sub RNE (fp.neg x10) (fp.mul RNE x1 x19))) (fp.mul RNE (fp.div RNE (fp.mul RNE x2 x9) (fp.mul RNE x15 x13)) (fp.sub RNE (fp.neg x7) (fp.add RNE x15 x5)))))
(check-sat)
