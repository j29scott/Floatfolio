(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.neg x3) (fp.div RNE x4 x6)) (fp.mul RNE (fp.div RNE x6 x2) (fp.neg x1))) (fp.neg (fp.div RNE (fp.neg x4) (fp.add RNE x5 x10)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE x9 x2) (fp.neg x8)) (fp.div RNE (fp.div RNE x11 x3) (fp.mul RNE x9 x6))) (fp.div RNE (fp.div RNE (fp.neg x7) (fp.mul RNE x1 x11)) (fp.add RNE (fp.add RNE x3 x9) (fp.div RNE x0 x6)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x9 x3) (fp.add RNE x10 x10)) (fp.add RNE (fp.neg x5) (fp.div RNE x2 x11))) (fp.div RNE (fp.neg (fp.neg x11)) (fp.div RNE (fp.mul RNE x10 x3) (fp.add RNE x7 x5)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x2 x3) (fp.add RNE x7 x2)) (fp.mul RNE (fp.div RNE x3 x6) (fp.neg x11))) (fp.add RNE (fp.mul RNE (fp.div RNE x6 x5) (fp.div RNE x0 x4)) (fp.mul RNE (fp.add RNE x0 x8) (fp.mul RNE x0 x4)))))
(check-sat)
