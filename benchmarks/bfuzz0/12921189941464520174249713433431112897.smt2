(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.neg x17) (fp.mul RNE x18 x4)) (fp.div RNE (fp.neg x11) (fp.div RNE x2 x3))))
(assert (fp.geq (fp.add RNE (fp.neg x4) (fp.div RNE x17 x13)) (fp.add RNE (fp.add RNE x4 x16) (fp.add RNE x15 x18))))
(assert (fp.leq (fp.add RNE (fp.neg x10) (fp.div RNE x11 x7)) (fp.div RNE (fp.add RNE x3 x5) (fp.sub RNE x2 x4))))
(assert (fp.lt (fp.div RNE (fp.neg x7) (fp.neg x16)) (fp.neg (fp.add RNE x0 x11))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x2 x15) (fp.mul RNE x16 x12)) (fp.div RNE (fp.mul RNE x0 x19) (fp.mul RNE x19 x3))))
(assert (fp.lt (fp.mul RNE (fp.neg x10) (fp.sub RNE x1 x15)) (fp.sub RNE (fp.add RNE x13 x8) (fp.mul RNE x0 x8))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x6 x7) (fp.div RNE x6 x18)) (fp.div RNE (fp.add RNE x14 x3) (fp.add RNE x14 x12))))
(assert (fp.leq (fp.neg (fp.add RNE x17 x1)) (fp.sub RNE (fp.mul RNE x14 x14) (fp.neg x19))))
(assert (fp.eq (fp.div RNE (fp.add RNE x4 x3) (fp.add RNE x19 x5)) (fp.neg (fp.neg x13))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x14 x8) (fp.mul RNE x17 x17)) (fp.add RNE (fp.add RNE x11 x8) (fp.add RNE x1 x11))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x15 x1) (fp.sub RNE x16 x8)) (fp.neg (fp.div RNE x4 x5))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x13 x0) (fp.sub RNE x3 x13)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x0 x5))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x4)) (fp.sub RNE (fp.sub RNE x19 x5) (fp.add RNE x15 x16))))
(assert (fp.leq (fp.neg (fp.neg x16)) (fp.neg (fp.mul RNE x0 x4))))
(assert (fp.leq (fp.mul RNE (fp.neg x15) (fp.add RNE x1 x14)) (fp.mul RNE (fp.neg x17) (fp.mul RNE x1 x1))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x4 x12) (fp.add RNE x8 x12)) (fp.sub RNE (fp.sub RNE x5 x14) (fp.neg x15))))
(assert (fp.lt (fp.div RNE (fp.neg x1) (fp.mul RNE x8 x6)) (fp.add RNE (fp.neg x9) (fp.sub RNE x18 x15))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x15 x6) (fp.mul RNE x0 x11)) (fp.sub RNE (fp.mul RNE x16 x11) (fp.sub RNE x15 x7))))
(assert (fp.leq (fp.add RNE (fp.add RNE x1 x6) (fp.sub RNE x9 x19)) (fp.mul RNE (fp.sub RNE x19 x0) (fp.sub RNE x11 x16))))
(check-sat)
