(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x5 x3) (fp.div RNE x0 x11)) (fp.div RNE (fp.div RNE x11 x4) (fp.sub RNE x16 x12))) (fp.mul RNE (fp.mul RNE (fp.div RNE x13 x11) (fp.mul RNE x14 x13)) (fp.mul RNE (fp.neg x4) (fp.add RNE x3 x16)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.div RNE x14 x17)) (fp.add RNE (fp.div RNE x1 x2) (fp.div RNE x13 x9))) (fp.sub RNE (fp.div RNE (fp.mul RNE x12 x2) (fp.div RNE x13 x7)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x11 x0)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.div RNE x16 x15) (fp.mul RNE x13 x3)) (fp.mul RNE (fp.neg x16) (fp.mul RNE x11 x17))) (fp.div RNE (fp.mul RNE (fp.div RNE x0 x17) (fp.add RNE x13 x10)) (fp.mul RNE (fp.neg x15) (fp.sub RNE x10 x6)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.mul RNE x10 x15)) (fp.sub RNE (fp.mul RNE x17 x10) (fp.div RNE x9 x2))) (fp.neg (fp.add RNE (fp.sub RNE x6 x13) (fp.div RNE x6 x7)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE x17 x15) (fp.neg x14)) (fp.add RNE (fp.neg x12) (fp.add RNE x3 x6))) (fp.neg (fp.neg (fp.sub RNE x10 x12)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x14) (fp.div RNE x3 x3)) (fp.neg (fp.mul RNE x6 x4))) (fp.sub RNE (fp.sub RNE (fp.add RNE x8 x11) (fp.div RNE x7 x12)) (fp.mul RNE (fp.div RNE x9 x12) (fp.neg x12)))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE x2 x8))) (fp.add RNE (fp.div RNE (fp.div RNE x14 x2) (fp.add RNE x13 x10)) (fp.neg (fp.mul RNE x14 x8)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.add RNE x5 x9)) (fp.sub RNE (fp.div RNE x13 x10) (fp.mul RNE x17 x0))) (fp.neg (fp.sub RNE (fp.add RNE x4 x4) (fp.add RNE x11 x4)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE x8 x1)) (fp.sub RNE (fp.mul RNE x13 x15) (fp.div RNE x15 x12))) (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.mul RNE x11 x2)) (fp.div RNE (fp.sub RNE x17 x17) (fp.add RNE x2 x12)))))
(check-sat)
