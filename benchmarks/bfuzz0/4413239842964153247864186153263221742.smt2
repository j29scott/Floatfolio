(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE x21 x19)) (fp.mul RNE (fp.div RNE x12 x21) (fp.mul RNE x2 x6))))
(assert (fp.leq (fp.neg (fp.div RNE x1 x21)) (fp.neg (fp.add RNE x7 x17))))
(assert (fp.eq (fp.neg (fp.neg x7)) (fp.sub RNE (fp.add RNE x5 x16) (fp.sub RNE x15 x14))))
(assert (fp.leq (fp.sub RNE (fp.neg x1) (fp.neg x8)) (fp.div RNE (fp.sub RNE x17 x18) (fp.div RNE x13 x9))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x16 x13) (fp.neg x16)) (fp.div RNE (fp.mul RNE x21 x4) (fp.sub RNE x13 x20))))
(assert (fp.eq (fp.add RNE (fp.neg x4) (fp.sub RNE x4 x4)) (fp.neg (fp.sub RNE x9 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x16 x5) (fp.div RNE x9 x5)) (fp.add RNE (fp.mul RNE x11 x15) (fp.add RNE x6 x13))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x12 x20) (fp.add RNE x21 x13)) (fp.sub RNE (fp.mul RNE x4 x11) (fp.sub RNE x10 x12))))
(assert (fp.geq (fp.div RNE (fp.neg x18) (fp.sub RNE x18 x6)) (fp.neg (fp.div RNE x10 x8))))
(assert (fp.eq (fp.neg (fp.sub RNE x11 x3)) (fp.div RNE (fp.neg x15) (fp.sub RNE x7 x7))))
(assert (fp.gt (fp.div RNE (fp.neg x4) (fp.add RNE x7 x6)) (fp.mul RNE (fp.add RNE x3 x14) (fp.sub RNE x13 x10))))
(check-sat)
