(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE x4 x6) (fp.mul RNE x4 x12)) (fp.div RNE (fp.neg x14) (fp.add RNE x4 x0))) (fp.neg (fp.neg (fp.div RNE x9 x15)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.mul RNE x8 x13) (fp.sub RNE x2 x15)) (fp.neg (fp.sub RNE x14 x14))) (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x13) (fp.mul RNE x9 x17)) (fp.sub RNE (fp.div RNE x2 x11) (fp.mul RNE x3 x2)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE x4 x6) (fp.div RNE x18 x17)) (fp.sub RNE (fp.mul RNE x17 x20) (fp.sub RNE x1 x10))) (fp.div RNE (fp.div RNE (fp.neg x17) (fp.mul RNE x9 x10)) (fp.add RNE (fp.div RNE x7 x17) (fp.mul RNE x13 x5)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg x6) (fp.sub RNE x19 x8)) (fp.mul RNE (fp.add RNE x12 x12) (fp.div RNE x16 x11))) (fp.div RNE (fp.neg (fp.mul RNE x6 x10)) (fp.add RNE (fp.neg x12) (fp.add RNE x18 x7)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x20 x16)) (fp.add RNE (fp.neg x5) (fp.mul RNE x8 x20))) (fp.add RNE (fp.div RNE (fp.neg x8) (fp.add RNE x17 x9)) (fp.neg (fp.add RNE x8 x0)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE x13 x4) (fp.sub RNE x8 x16)) (fp.neg (fp.div RNE x18 x15))) (fp.add RNE (fp.add RNE (fp.neg x11) (fp.add RNE x20 x11)) (fp.sub RNE (fp.neg x15) (fp.div RNE x0 x8)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x1 x19) (fp.sub RNE x19 x0)) (fp.mul RNE (fp.div RNE x17 x15) (fp.mul RNE x8 x5))) (fp.sub RNE (fp.div RNE (fp.sub RNE x10 x18) (fp.sub RNE x10 x20)) (fp.add RNE (fp.div RNE x7 x12) (fp.mul RNE x3 x16)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.neg x3)) (fp.add RNE (fp.neg x0) (fp.mul RNE x5 x17))) (fp.sub RNE (fp.mul RNE (fp.neg x20) (fp.add RNE x13 x10)) (fp.div RNE (fp.div RNE x17 x11) (fp.div RNE x17 x15)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x15 x20) (fp.div RNE x3 x13)) (fp.neg (fp.add RNE x11 x14))) (fp.neg (fp.mul RNE (fp.sub RNE x12 x5) (fp.sub RNE x5 x0)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x1) (fp.div RNE x15 x5)) (fp.mul RNE (fp.mul RNE x6 x18) (fp.neg x14))) (fp.mul RNE (fp.div RNE (fp.add RNE x14 x0) (fp.add RNE x17 x8)) (fp.sub RNE (fp.neg x14) (fp.neg x13)))))
(check-sat)
