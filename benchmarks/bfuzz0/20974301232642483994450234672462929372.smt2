(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x1 x8) (fp.div RNE x9 x5)) (fp.sub RNE (fp.div RNE x4 x8) (fp.neg x6))) (fp.sub RNE (fp.add RNE (fp.div RNE x7 x1) (fp.add RNE x7 x6)) (fp.div RNE (fp.sub RNE x2 x3) (fp.neg x2)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x6 x6) (fp.sub RNE x4 x5)) (fp.neg (fp.mul RNE x2 x10))) (fp.mul RNE (fp.add RNE (fp.neg x9) (fp.div RNE x6 x2)) (fp.add RNE (fp.mul RNE x8 x4) (fp.add RNE x10 x2)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg x2) (fp.div RNE x8 x3)) (fp.neg (fp.sub RNE x2 x0))) (fp.mul RNE (fp.neg (fp.mul RNE x0 x3)) (fp.neg (fp.sub RNE x5 x5)))))
(check-sat)
