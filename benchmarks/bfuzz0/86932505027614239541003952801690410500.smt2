(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.neg (fp.add RNE x13 x18)) (fp.neg (fp.sub RNE x2 x3))) (fp.sub RNE (fp.div RNE (fp.div RNE x8 x0) (fp.neg x11)) (fp.neg (fp.div RNE x15 x2)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE x18 x11) (fp.mul RNE x3 x20)) (fp.mul RNE (fp.sub RNE x19 x4) (fp.sub RNE x19 x3))) (fp.sub RNE (fp.add RNE (fp.neg x20) (fp.div RNE x2 x12)) (fp.div RNE (fp.add RNE x17 x12) (fp.add RNE x18 x6)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.div RNE x16 x10) (fp.add RNE x2 x19)) (fp.sub RNE (fp.neg x6) (fp.add RNE x7 x4))) (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x10) (fp.div RNE x7 x16)) (fp.mul RNE (fp.div RNE x8 x19) (fp.sub RNE x7 x6)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE x15 x1) (fp.mul RNE x15 x17)) (fp.div RNE (fp.mul RNE x0 x20) (fp.add RNE x1 x19))) (fp.div RNE (fp.sub RNE (fp.div RNE x1 x0) (fp.div RNE x10 x8)) (fp.neg (fp.neg x16)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE x14 x8) (fp.sub RNE x4 x10)) (fp.mul RNE (fp.add RNE x14 x3) (fp.add RNE x3 x16))) (fp.neg (fp.div RNE (fp.div RNE x5 x1) (fp.mul RNE x3 x3)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg x10)) (fp.div RNE (fp.add RNE x12 x10) (fp.mul RNE x2 x8))) (fp.add RNE (fp.neg (fp.mul RNE x5 x3)) (fp.neg (fp.sub RNE x16 x0)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x9 x9) (fp.mul RNE x16 x2)) (fp.div RNE (fp.mul RNE x2 x8) (fp.mul RNE x14 x16))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x13) (fp.add RNE x14 x20)) (fp.sub RNE (fp.mul RNE x11 x2) (fp.sub RNE x2 x0)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.div RNE x15 x0)) (fp.mul RNE (fp.sub RNE x16 x12) (fp.mul RNE x19 x20))) (fp.mul RNE (fp.add RNE (fp.neg x16) (fp.neg x3)) (fp.add RNE (fp.neg x0) (fp.add RNE x6 x0)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.div RNE x3 x17)) (fp.mul RNE (fp.mul RNE x13 x14) (fp.div RNE x18 x3))) (fp.div RNE (fp.div RNE (fp.div RNE x1 x18) (fp.neg x3)) (fp.neg (fp.add RNE x15 x9)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE x11 x18) (fp.mul RNE x4 x12))) (fp.sub RNE (fp.div RNE (fp.div RNE x16 x7) (fp.div RNE x18 x13)) (fp.sub RNE (fp.mul RNE x4 x6) (fp.div RNE x19 x20)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x0) (fp.sub RNE x6 x19)) (fp.add RNE (fp.sub RNE x20 x5) (fp.mul RNE x14 x15))) (fp.div RNE (fp.neg (fp.add RNE x6 x7)) (fp.mul RNE (fp.div RNE x11 x11) (fp.neg x12)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x19)) (fp.add RNE (fp.neg x15) (fp.mul RNE x14 x16))) (fp.sub RNE (fp.sub RNE (fp.div RNE x11 x1) (fp.sub RNE x6 x8)) (fp.add RNE (fp.mul RNE x16 x14) (fp.neg x19)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.mul RNE x17 x0) (fp.mul RNE x19 x8)) (fp.neg (fp.sub RNE x9 x12))) (fp.neg (fp.div RNE (fp.sub RNE x15 x10) (fp.div RNE x0 x9)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x10) (fp.mul RNE x0 x11)) (fp.div RNE (fp.div RNE x4 x2) (fp.mul RNE x7 x10))) (fp.mul RNE (fp.add RNE (fp.add RNE x17 x4) (fp.neg x1)) (fp.add RNE (fp.neg x11) (fp.mul RNE x8 x13)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x20 x16) (fp.sub RNE x14 x9))) (fp.add RNE (fp.mul RNE (fp.add RNE x1 x3) (fp.neg x13)) (fp.div RNE (fp.div RNE x10 x14) (fp.add RNE x3 x10)))))
(check-sat)
