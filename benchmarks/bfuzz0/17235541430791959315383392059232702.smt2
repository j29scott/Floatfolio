(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x3 x17) (fp.div RNE x9 x6)) (fp.sub RNE (fp.div RNE x0 x12) (fp.div RNE x1 x18))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.div RNE (fp.sub RNE x3 x13) (fp.neg x0))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x4 x14) (fp.div RNE x13 x12)) (fp.sub RNE (fp.add RNE x13 x17) (fp.mul RNE x8 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x3 x3) (fp.mul RNE x14 x16)) (fp.add RNE (fp.mul RNE x6 x12) (fp.add RNE x2 x0))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x16 x2) (fp.div RNE x15 x20)) (fp.sub RNE (fp.div RNE x2 x5) (fp.sub RNE x0 x7))))
(assert (fp.gt (fp.mul RNE (fp.neg x8) (fp.sub RNE x1 x3)) (fp.neg (fp.div RNE x11 x10))))
(check-sat)
