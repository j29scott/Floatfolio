(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE x1 x2) (fp.mul RNE x4 x1)) (fp.div RNE (fp.sub RNE x4 x8) (fp.add RNE x6 x2))))
(assert (fp.leq (fp.add RNE (fp.neg x12) (fp.div RNE x4 x6)) (fp.neg (fp.add RNE x1 x6))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x0 x4) (fp.sub RNE x0 x11)) (fp.mul RNE (fp.div RNE x8 x1) (fp.mul RNE x0 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x1 x10) (fp.mul RNE x5 x4)) (fp.sub RNE (fp.sub RNE x5 x6) (fp.sub RNE x10 x12))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x8 x5) (fp.mul RNE x12 x0)) (fp.mul RNE (fp.add RNE x8 x12) (fp.mul RNE x2 x11))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x4 x5) (fp.div RNE x8 x1)) (fp.add RNE (fp.neg x5) (fp.mul RNE x9 x8))))
(assert (fp.geq (fp.add RNE (fp.div RNE x1 x5) (fp.add RNE x4 x3)) (fp.div RNE (fp.sub RNE x6 x4) (fp.add RNE x2 x3))))
(assert (fp.lt (fp.neg (fp.div RNE x0 x4)) (fp.add RNE (fp.div RNE x3 x11) (fp.add RNE x1 x0))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x0 x9) (fp.neg x11)) (fp.add RNE (fp.div RNE x1 x3) (fp.mul RNE x7 x4))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x3 x9) (fp.sub RNE x1 x6)) (fp.neg (fp.neg x10))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x1 x1) (fp.div RNE x6 x3)) (fp.mul RNE (fp.mul RNE x0 x12) (fp.sub RNE x8 x4))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x1 x0) (fp.add RNE x3 x3)) (fp.mul RNE (fp.neg x7) (fp.neg x2))))
(assert (fp.geq (fp.neg (fp.mul RNE x11 x3)) (fp.div RNE (fp.sub RNE x11 x10) (fp.sub RNE x12 x3))))
(check-sat)
