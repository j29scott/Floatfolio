(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.neg (fp.add RNE x10 x15))) (fp.div RNE (fp.add RNE (fp.sub RNE x18 x15) (fp.neg x0)) (fp.sub RNE (fp.neg x18) (fp.add RNE x19 x6)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE x1 x14) (fp.sub RNE x9 x12)) (fp.add RNE (fp.div RNE x2 x12) (fp.sub RNE x1 x4))) (fp.sub RNE (fp.neg (fp.div RNE x0 x5)) (fp.div RNE (fp.sub RNE x4 x2) (fp.neg x14)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.add RNE x11 x10) (fp.sub RNE x15 x19)) (fp.sub RNE (fp.neg x5) (fp.add RNE x9 x8))) (fp.neg (fp.div RNE (fp.div RNE x10 x6) (fp.mul RNE x7 x9)))))
(check-sat)
