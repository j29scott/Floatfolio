(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x16 x5) (fp.add RNE x9 x15)) (fp.mul RNE (fp.add RNE x7 x9) (fp.mul RNE x7 x9))) (fp.add RNE (fp.mul RNE (fp.add RNE x16 x12) (fp.div RNE x8 x2)) (fp.sub RNE (fp.div RNE x9 x1) (fp.add RNE x2 x8)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.sub RNE x16 x13)) (fp.mul RNE (fp.add RNE x12 x9) (fp.add RNE x18 x14))) (fp.add RNE (fp.add RNE (fp.sub RNE x9 x5) (fp.div RNE x0 x6)) (fp.mul RNE (fp.neg x3) (fp.div RNE x6 x3)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x9) (fp.mul RNE x8 x9)) (fp.add RNE (fp.add RNE x16 x0) (fp.add RNE x1 x4))) (fp.add RNE (fp.mul RNE (fp.sub RNE x17 x11) (fp.neg x1)) (fp.neg (fp.neg x0)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x10 x2) (fp.div RNE x16 x7))) (fp.add RNE (fp.mul RNE (fp.mul RNE x3 x19) (fp.mul RNE x7 x14)) (fp.mul RNE (fp.sub RNE x11 x2) (fp.mul RNE x14 x4)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.sub RNE x1 x9)) (fp.sub RNE (fp.sub RNE x8 x18) (fp.mul RNE x3 x8))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x7 x2) (fp.div RNE x13 x2)) (fp.add RNE (fp.add RNE x1 x15) (fp.sub RNE x19 x14)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.mul RNE x7 x12) (fp.add RNE x6 x7)) (fp.div RNE (fp.mul RNE x11 x9) (fp.mul RNE x14 x10))) (fp.div RNE (fp.mul RNE (fp.mul RNE x12 x1) (fp.neg x15)) (fp.neg (fp.add RNE x1 x18)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x16) (fp.div RNE x2 x8)) (fp.mul RNE (fp.div RNE x5 x9) (fp.neg x3))) (fp.div RNE (fp.mul RNE (fp.div RNE x6 x3) (fp.mul RNE x6 x18)) (fp.mul RNE (fp.neg x18) (fp.add RNE x16 x0)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg x2) (fp.mul RNE x12 x14))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x15 x3) (fp.mul RNE x4 x8)) (fp.neg (fp.mul RNE x1 x0)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE x4 x12) (fp.sub RNE x14 x6)) (fp.mul RNE (fp.mul RNE x9 x3) (fp.neg x2))) (fp.add RNE (fp.sub RNE (fp.mul RNE x7 x0) (fp.div RNE x0 x11)) (fp.neg (fp.neg x1)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x2 x18) (fp.mul RNE x14 x7)) (fp.div RNE (fp.mul RNE x1 x15) (fp.add RNE x0 x2))) (fp.div RNE (fp.neg (fp.neg x17)) (fp.add RNE (fp.add RNE x18 x11) (fp.mul RNE x4 x19)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x1 x6) (fp.mul RNE x3 x15)) (fp.neg (fp.neg x19))) (fp.div RNE (fp.mul RNE (fp.add RNE x2 x12) (fp.sub RNE x13 x6)) (fp.sub RNE (fp.add RNE x19 x4) (fp.neg x14)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x8 x11) (fp.add RNE x2 x13))) (fp.mul RNE (fp.sub RNE (fp.neg x6) (fp.div RNE x19 x7)) (fp.neg (fp.sub RNE x18 x17)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg x11) (fp.add RNE x3 x12)) (fp.add RNE (fp.sub RNE x1 x6) (fp.sub RNE x18 x0))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x8) (fp.div RNE x0 x13)) (fp.add RNE (fp.add RNE x9 x12) (fp.neg x18)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.sub RNE x5 x8) (fp.div RNE x13 x19))) (fp.neg (fp.mul RNE (fp.sub RNE x5 x16) (fp.neg x4)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.neg x13)) (fp.neg (fp.sub RNE x17 x2))) (fp.neg (fp.sub RNE (fp.sub RNE x5 x2) (fp.add RNE x12 x8)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE x5 x10) (fp.neg x15)) (fp.div RNE (fp.sub RNE x16 x19) (fp.add RNE x0 x7))) (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x13) (fp.neg x0)) (fp.add RNE (fp.mul RNE x2 x17) (fp.neg x2)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x1 x19) (fp.neg x5)) (fp.mul RNE (fp.mul RNE x18 x5) (fp.div RNE x16 x7))) (fp.div RNE (fp.mul RNE (fp.add RNE x0 x2) (fp.add RNE x12 x14)) (fp.mul RNE (fp.div RNE x15 x2) (fp.mul RNE x4 x16)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE x10 x5) (fp.sub RNE x11 x8)) (fp.neg (fp.mul RNE x18 x4))) (fp.neg (fp.div RNE (fp.neg x19) (fp.div RNE x0 x18)))))
(check-sat)
