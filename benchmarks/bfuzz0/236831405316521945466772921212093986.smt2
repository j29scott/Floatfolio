(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE x5 x3) (fp.sub RNE x0 x9)))
(assert (fp.eq (fp.add RNE x14 x14) (fp.add RNE x14 x8)))
(assert (fp.gt (fp.neg x15) (fp.mul RNE x14 x17)))
(assert (fp.gt (fp.sub RNE x9 x10) (fp.sub RNE x6 x13)))
(assert (fp.geq (fp.div RNE x7 x9) (fp.sub RNE x16 x8)))
(assert (fp.gt (fp.add RNE x17 x8) (fp.div RNE x12 x10)))
(assert (fp.geq (fp.sub RNE x1 x9) (fp.neg x7)))
(assert (fp.lt (fp.mul RNE x9 x12) (fp.sub RNE x11 x15)))
(assert (fp.lt (fp.mul RNE x10 x7) (fp.div RNE x6 x3)))
(assert (fp.leq (fp.div RNE x14 x9) (fp.mul RNE x3 x8)))
(assert (fp.geq (fp.neg x5) (fp.neg x4)))
(assert (fp.eq (fp.div RNE x4 x2) (fp.div RNE x14 x1)))
(assert (fp.lt (fp.add RNE x6 x10) (fp.add RNE x11 x17)))
(assert (fp.geq (fp.mul RNE x13 x8) (fp.mul RNE x13 x8)))
(assert (fp.eq (fp.sub RNE x15 x13) (fp.neg x10)))
(assert (fp.gt (fp.neg x4) (fp.mul RNE x5 x9)))
(check-sat)
