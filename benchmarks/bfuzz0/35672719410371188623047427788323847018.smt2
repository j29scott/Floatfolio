(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE x5 x7) (fp.mul RNE x10 x1)) (fp.div RNE (fp.add RNE x11 x5) (fp.neg x7))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x11 x7) (fp.neg x4)) (fp.add RNE (fp.sub RNE x3 x4) (fp.mul RNE x3 x1))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x2)) (fp.div RNE (fp.neg x2) (fp.div RNE x10 x4))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x1 x2) (fp.mul RNE x3 x5)) (fp.sub RNE (fp.div RNE x3 x1) (fp.div RNE x10 x6))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x6 x1) (fp.div RNE x5 x2)) (fp.sub RNE (fp.sub RNE x2 x8) (fp.mul RNE x3 x11))))
(assert (fp.gt (fp.div RNE (fp.div RNE x11 x10) (fp.mul RNE x8 x5)) (fp.neg (fp.div RNE x6 x8))))
(assert (fp.leq (fp.mul RNE (fp.neg x2) (fp.mul RNE x1 x3)) (fp.div RNE (fp.div RNE x2 x8) (fp.sub RNE x9 x1))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x9 x5) (fp.add RNE x11 x1)) (fp.add RNE (fp.mul RNE x2 x1) (fp.div RNE x8 x8))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x4 x9) (fp.sub RNE x0 x10)) (fp.div RNE (fp.neg x2) (fp.sub RNE x5 x3))))
(check-sat)
