(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.sub RNE x4 x7)) (fp.mul RNE (fp.mul RNE x11 x1) (fp.mul RNE x2 x11))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x9 x5) (fp.div RNE x11 x11)) (fp.neg (fp.neg x1))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x8 x11) (fp.mul RNE x1 x11)) (fp.mul RNE (fp.sub RNE x9 x0) (fp.add RNE x11 x8))))
(assert (fp.leq (fp.add RNE (fp.neg x11) (fp.mul RNE x0 x9)) (fp.sub RNE (fp.div RNE x1 x0) (fp.add RNE x4 x0))))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.mul RNE x7 x11)) (fp.mul RNE (fp.add RNE x2 x5) (fp.sub RNE x0 x9))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x2 x1) (fp.add RNE x5 x2)) (fp.mul RNE (fp.div RNE x4 x8) (fp.sub RNE x12 x1))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x11)) (fp.div RNE (fp.sub RNE x1 x3) (fp.add RNE x2 x3))))
(assert (fp.leq (fp.div RNE (fp.neg x9) (fp.mul RNE x12 x12)) (fp.mul RNE (fp.add RNE x6 x0) (fp.mul RNE x12 x10))))
(check-sat)
