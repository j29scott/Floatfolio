(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x10 x10) (fp.div RNE x3 x17)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x10 x0) (fp.neg x6)) (fp.sub RNE (fp.neg x15) (fp.neg x2))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x15) (fp.div RNE x16 x19)) (fp.neg (fp.mul RNE x12 x17))) (fp.neg (fp.mul RNE (fp.div RNE x7 x19) (fp.mul RNE x10 x10)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x11) (fp.div RNE x7 x3)) (fp.div RNE (fp.div RNE x2 x9) (fp.mul RNE x19 x9))) (fp.add RNE (fp.add RNE (fp.div RNE x13 x14) (fp.add RNE x20 x1)) (fp.sub RNE (fp.mul RNE x11 x15) (fp.neg x17))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE x4 x20) (fp.neg x19))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x0 x4) (fp.neg x5)) (fp.neg (fp.neg x11)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.sub RNE x7 x18) (fp.div RNE x5 x9)) (fp.mul RNE (fp.neg x17) (fp.add RNE x0 x20))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE (fp.mul RNE x9 x12) (fp.sub RNE x18 x0)) (fp.sub RNE (fp.neg x3) (fp.neg x9))) (fp.add RNE (fp.neg (fp.div RNE x4 x6)) (fp.add RNE (fp.neg x17) (fp.neg x18)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.neg x19) (fp.mul RNE x17 x0))) (fp.div RNE (fp.div RNE (fp.neg x6) (fp.div RNE x1 x14)) (fp.add RNE (fp.neg x13) (fp.sub RNE x12 x3))))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x7 x15) (fp.div RNE x5 x8))) (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x16) (fp.add RNE x20 x18)) (fp.add RNE (fp.add RNE x13 x15) (fp.div RNE x8 x13)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.div RNE x17 x1) (fp.mul RNE x1 x16)) (fp.mul RNE (fp.neg x13) (fp.mul RNE x2 x15))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.neg x9) (fp.add RNE x16 x8)) (fp.sub RNE (fp.add RNE x18 x13) (fp.sub RNE x4 x6))) (fp.sub RNE (fp.div RNE (fp.mul RNE x13 x8) (fp.sub RNE x13 x13)) (fp.neg (fp.div RNE x6 x15)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x19 x1) (fp.mul RNE x12 x15)) (fp.mul RNE (fp.neg x18) (fp.mul RNE x20 x9))) (fp.add RNE (fp.mul RNE (fp.sub RNE x8 x11) (fp.add RNE x15 x17)) (fp.sub RNE (fp.add RNE x7 x5) (fp.neg x6))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.div RNE (fp.neg x18) (fp.sub RNE x5 x18))) (fp.div RNE (fp.div RNE (fp.add RNE x0 x8) (fp.neg x0)) (fp.div RNE (fp.add RNE x17 x10) (fp.sub RNE x15 x4)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.mul RNE x4 x10)) (fp.div RNE (fp.sub RNE x17 x1) (fp.add RNE x1 x8))) (fp.neg (fp.div RNE (fp.add RNE x18 x16) (fp.mul RNE x3 x7))))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.div RNE (fp.sub RNE x9 x7) (fp.div RNE x0 x2))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x20 x6) (fp.mul RNE x1 x20)) (fp.sub RNE (fp.neg x15) (fp.neg x7)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.mul RNE x11 x9)) (fp.mul RNE (fp.neg x11) (fp.mul RNE x7 x19))) (fp.mul RNE (fp.neg (fp.div RNE x3 x3)) (fp.add RNE (fp.mul RNE x19 x6) (fp.neg x12))))))
(check-sat)
