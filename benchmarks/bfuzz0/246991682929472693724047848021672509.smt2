(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE x10 x15) (fp.sub RNE x5 x11)) (fp.mul RNE (fp.div RNE x11 x18) (fp.add RNE x15 x2))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x16 x16) (fp.div RNE x17 x17)) (fp.mul RNE (fp.div RNE x17 x17) (fp.div RNE x7 x2))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x8 x18) (fp.sub RNE x14 x7)) (fp.mul RNE (fp.neg x16) (fp.sub RNE x13 x15))))
(assert (fp.eq (fp.add RNE (fp.neg x9) (fp.add RNE x13 x2)) (fp.neg (fp.sub RNE x3 x3))))
(assert (fp.gt (fp.neg (fp.sub RNE x5 x1)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x2 x3))))
(assert (fp.lt (fp.neg (fp.div RNE x6 x16)) (fp.div RNE (fp.mul RNE x16 x5) (fp.div RNE x7 x3))))
(assert (fp.lt (fp.neg (fp.add RNE x9 x2)) (fp.add RNE (fp.add RNE x14 x18) (fp.div RNE x0 x11))))
(assert (fp.gt (fp.div RNE (fp.add RNE x3 x4) (fp.div RNE x16 x18)) (fp.sub RNE (fp.neg x5) (fp.add RNE x5 x10))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x2) (fp.div RNE x5 x7)) (fp.neg (fp.sub RNE x2 x3))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x18 x12) (fp.mul RNE x12 x15)) (fp.div RNE (fp.sub RNE x3 x9) (fp.mul RNE x17 x3))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x12 x2) (fp.neg x12)) (fp.neg (fp.neg x13))))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x10) (fp.add RNE x13 x12)) (fp.neg (fp.sub RNE x2 x16))))
(assert (fp.gt (fp.add RNE (fp.div RNE x18 x16) (fp.sub RNE x18 x7)) (fp.div RNE (fp.mul RNE x5 x5) (fp.add RNE x5 x5))))
(assert (fp.leq (fp.neg (fp.sub RNE x16 x0)) (fp.neg (fp.div RNE x8 x15))))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x4) (fp.neg x3)) (fp.mul RNE (fp.sub RNE x4 x16) (fp.neg x16))))
(assert (fp.leq (fp.neg (fp.div RNE x6 x1)) (fp.add RNE (fp.div RNE x18 x16) (fp.div RNE x8 x0))))
(assert (fp.lt (fp.neg (fp.sub RNE x18 x2)) (fp.mul RNE (fp.div RNE x8 x5) (fp.neg x0))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x15 x6) (fp.neg x13)) (fp.sub RNE (fp.neg x0) (fp.add RNE x8 x8))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x15 x13) (fp.sub RNE x7 x11)) (fp.div RNE (fp.add RNE x3 x14) (fp.neg x3))))
(assert (fp.lt (fp.sub RNE (fp.neg x8) (fp.div RNE x13 x5)) (fp.mul RNE (fp.sub RNE x13 x2) (fp.neg x18))))
(check-sat)
