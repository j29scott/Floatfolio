(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE x11 x5) (fp.sub RNE x13 x4)) (fp.mul RNE (fp.sub RNE x4 x7) (fp.neg x9))))
(assert (fp.gt (fp.add RNE (fp.div RNE x9 x12) (fp.neg x5)) (fp.add RNE (fp.div RNE x5 x11) (fp.neg x1))))
(assert (fp.geq (fp.add RNE (fp.add RNE x9 x6) (fp.sub RNE x9 x1)) (fp.div RNE (fp.neg x9) (fp.neg x9))))
(assert (fp.gt (fp.add RNE (fp.add RNE x10 x11) (fp.div RNE x4 x10)) (fp.div RNE (fp.div RNE x12 x10) (fp.mul RNE x8 x3))))
(assert (fp.eq (fp.sub RNE (fp.neg x0) (fp.mul RNE x8 x0)) (fp.div RNE (fp.add RNE x0 x13) (fp.sub RNE x13 x0))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x10 x2) (fp.mul RNE x1 x11)) (fp.mul RNE (fp.sub RNE x4 x4) (fp.sub RNE x4 x1))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x13 x8) (fp.div RNE x2 x8)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x4 x3))))
(assert (fp.leq (fp.add RNE (fp.add RNE x2 x11) (fp.sub RNE x0 x13)) (fp.sub RNE (fp.div RNE x8 x10) (fp.add RNE x8 x3))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x8 x2) (fp.mul RNE x12 x7)) (fp.add RNE (fp.sub RNE x4 x5) (fp.neg x4))))
(assert (fp.gt (fp.div RNE (fp.add RNE x1 x1) (fp.sub RNE x12 x12)) (fp.neg (fp.sub RNE x1 x4))))
(check-sat)
