(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x0 x12) (fp.mul RNE x3 x11)))
(assert (fp.leq (fp.sub RNE x15 x9) (fp.div RNE x9 x0)))
(assert (fp.geq (fp.add RNE x2 x2) (fp.add RNE x13 x10)))
(assert (fp.geq (fp.sub RNE x2 x14) (fp.neg x12)))
(assert (fp.lt (fp.div RNE x12 x9) (fp.add RNE x8 x11)))
(assert (fp.lt (fp.add RNE x6 x0) (fp.sub RNE x4 x16)))
(assert (fp.leq (fp.sub RNE x6 x11) (fp.div RNE x6 x3)))
(assert (fp.geq (fp.mul RNE x14 x9) (fp.div RNE x14 x10)))
(assert (fp.gt (fp.div RNE x4 x15) (fp.neg x3)))
(assert (fp.gt (fp.add RNE x1 x9) (fp.mul RNE x13 x3)))
(assert (fp.leq (fp.mul RNE x2 x8) (fp.mul RNE x0 x10)))
(assert (fp.geq (fp.div RNE x8 x12) (fp.add RNE x7 x15)))
(check-sat)
