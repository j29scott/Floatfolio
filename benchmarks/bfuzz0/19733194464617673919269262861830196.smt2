(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.add RNE (fp.sub RNE x4 x25) (fp.neg x12)) (fp.mul RNE (fp.mul RNE x22 x16) (fp.neg x8))) (fp.add RNE (fp.neg (fp.sub RNE x0 x23)) (fp.mul RNE (fp.div RNE x22 x7) (fp.sub RNE x25 x9)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.div RNE x18 x2) (fp.sub RNE x22 x26)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x21 x3))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x17 x19) (fp.add RNE x2 x17)) (fp.div RNE (fp.sub RNE x2 x12) (fp.div RNE x8 x4))) (fp.neg (fp.sub RNE (fp.mul RNE x19 x12) (fp.mul RNE x14 x2)))) (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x8 x11) (fp.neg x17)) (fp.neg (fp.div RNE x7 x12))) (fp.sub RNE (fp.add RNE (fp.add RNE x10 x11) (fp.add RNE x2 x11)) (fp.neg (fp.add RNE x11 x3))))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x2 x2) (fp.neg x22)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x15 x19) (fp.sub RNE x24 x17)) (fp.mul RNE (fp.neg x12) (fp.add RNE x16 x19))) (fp.mul RNE (fp.div RNE (fp.neg x3) (fp.div RNE x22 x10)) (fp.add RNE (fp.neg x20) (fp.div RNE x14 x21))))))
(check-sat)
