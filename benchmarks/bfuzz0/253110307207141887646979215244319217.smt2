(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x3 x5) (fp.add RNE x6 x8)) (fp.neg (fp.div RNE x4 x3))) (fp.sub RNE (fp.neg (fp.div RNE x5 x5)) (fp.mul RNE (fp.sub RNE x8 x6) (fp.mul RNE x4 x8)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.add RNE x7 x0)) (fp.mul RNE (fp.sub RNE x7 x3) (fp.add RNE x5 x3))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x0 x0) (fp.mul RNE x8 x9)) (fp.div RNE (fp.sub RNE x4 x9) (fp.add RNE x2 x2)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.mul RNE x6 x9) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x2 x2) (fp.mul RNE x9 x0))) (fp.add RNE (fp.div RNE (fp.sub RNE x4 x4) (fp.div RNE x1 x8)) (fp.mul RNE (fp.neg x0) (fp.neg x8)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE x8 x3) (fp.sub RNE x3 x7)) (fp.sub RNE (fp.sub RNE x2 x7) (fp.sub RNE x2 x0))) (fp.neg (fp.neg (fp.neg x5)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x7 x9) (fp.add RNE x5 x7)) (fp.sub RNE (fp.add RNE x1 x4) (fp.neg x2))) (fp.add RNE (fp.neg (fp.neg x7)) (fp.sub RNE (fp.mul RNE x2 x2) (fp.neg x2)))))
(check-sat)
