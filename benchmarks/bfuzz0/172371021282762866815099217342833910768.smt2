(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.mul RNE x23 x3)) (fp.neg (fp.mul RNE x8 x1))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x10 x20) (fp.neg x13)) (fp.add RNE (fp.div RNE x18 x11) (fp.neg x24))))
(assert (fp.eq (fp.neg (fp.add RNE x5 x23)) (fp.neg (fp.sub RNE x8 x11))))
(assert (fp.lt (fp.add RNE (fp.add RNE x8 x24) (fp.sub RNE x26 x0)) (fp.mul RNE (fp.div RNE x22 x25) (fp.div RNE x1 x17))))
(assert (fp.lt (fp.neg (fp.mul RNE x0 x14)) (fp.mul RNE (fp.div RNE x22 x22) (fp.mul RNE x18 x12))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x22 x12) (fp.div RNE x14 x11)) (fp.neg (fp.sub RNE x22 x11))))
(assert (fp.gt (fp.div RNE (fp.neg x11) (fp.mul RNE x8 x22)) (fp.sub RNE (fp.mul RNE x15 x1) (fp.sub RNE x15 x14))))
(assert (fp.gt (fp.neg (fp.add RNE x25 x21)) (fp.div RNE (fp.mul RNE x21 x0) (fp.sub RNE x2 x18))))
(assert (fp.lt (fp.add RNE (fp.div RNE x11 x13) (fp.sub RNE x4 x7)) (fp.div RNE (fp.add RNE x15 x26) (fp.add RNE x4 x19))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x21 x7) (fp.neg x21)) (fp.mul RNE (fp.add RNE x26 x26) (fp.sub RNE x19 x23))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x4 x7) (fp.add RNE x17 x20)) (fp.add RNE (fp.add RNE x17 x13) (fp.mul RNE x1 x0))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x27 x3) (fp.mul RNE x1 x0)) (fp.add RNE (fp.sub RNE x19 x10) (fp.neg x16))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x15 x19) (fp.neg x6)) (fp.mul RNE (fp.add RNE x19 x11) (fp.neg x14))))
(assert (fp.gt (fp.add RNE (fp.neg x16) (fp.neg x19)) (fp.mul RNE (fp.mul RNE x10 x10) (fp.sub RNE x5 x5))))
(check-sat)
