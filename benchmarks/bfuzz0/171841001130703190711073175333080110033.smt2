(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x21 x20) (fp.sub RNE x9 x2)) (fp.mul RNE (fp.add RNE x15 x13) (fp.add RNE x14 x17))) (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.add RNE x10 x21)) (fp.add RNE (fp.add RNE x2 x16) (fp.sub RNE x17 x4)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE x1 x2) (fp.mul RNE x13 x17))) (fp.neg (fp.mul RNE (fp.mul RNE x13 x1) (fp.add RNE x12 x14)))))
(assert (fp.leq (fp.neg (fp.neg (fp.sub RNE x18 x18))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x17) (fp.div RNE x6 x14)) (fp.sub RNE (fp.sub RNE x7 x10) (fp.sub RNE x16 x15)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x20 x21) (fp.sub RNE x1 x0)) (fp.div RNE (fp.mul RNE x3 x18) (fp.sub RNE x4 x7))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x11 x12) (fp.div RNE x1 x14)) (fp.add RNE (fp.div RNE x7 x16) (fp.div RNE x5 x11)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.neg x12) (fp.div RNE x10 x0)) (fp.neg (fp.neg x15))) (fp.neg (fp.add RNE (fp.add RNE x21 x19) (fp.sub RNE x8 x10)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.neg x21) (fp.add RNE x1 x2)) (fp.mul RNE (fp.neg x3) (fp.div RNE x19 x5))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x10 x6) (fp.neg x2)) (fp.sub RNE (fp.sub RNE x15 x12) (fp.div RNE x16 x12)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x13 x19) (fp.div RNE x14 x8))) (fp.neg (fp.neg (fp.add RNE x14 x4)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE x8 x8) (fp.div RNE x1 x13)) (fp.div RNE (fp.sub RNE x11 x4) (fp.mul RNE x6 x20))) (fp.neg (fp.mul RNE (fp.add RNE x5 x14) (fp.sub RNE x1 x21)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x3) (fp.add RNE x11 x11)) (fp.add RNE (fp.div RNE x12 x2) (fp.div RNE x3 x4))) (fp.neg (fp.add RNE (fp.sub RNE x2 x3) (fp.sub RNE x16 x12)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.neg x19) (fp.add RNE x8 x21)) (fp.neg (fp.neg x11))) (fp.sub RNE (fp.sub RNE (fp.neg x6) (fp.mul RNE x5 x5)) (fp.add RNE (fp.add RNE x9 x10) (fp.add RNE x18 x7)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE x13 x14) (fp.div RNE x15 x2)) (fp.add RNE (fp.add RNE x0 x18) (fp.sub RNE x4 x15))) (fp.neg (fp.mul RNE (fp.neg x8) (fp.neg x21)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.div RNE x10 x2) (fp.mul RNE x19 x4))) (fp.neg (fp.mul RNE (fp.div RNE x13 x18) (fp.div RNE x19 x17)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg x19)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x16 x5))) (fp.neg (fp.neg (fp.div RNE x8 x12)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.mul RNE x12 x9) (fp.div RNE x10 x4)) (fp.sub RNE (fp.sub RNE x15 x17) (fp.neg x17))) (fp.neg (fp.div RNE (fp.div RNE x7 x18) (fp.sub RNE x13 x17)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x10) (fp.div RNE x8 x1)) (fp.sub RNE (fp.div RNE x18 x21) (fp.div RNE x16 x1))) (fp.mul RNE (fp.sub RNE (fp.div RNE x18 x3) (fp.div RNE x5 x0)) (fp.div RNE (fp.div RNE x15 x16) (fp.sub RNE x17 x14)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.mul RNE x5 x18) (fp.div RNE x12 x7)) (fp.add RNE (fp.mul RNE x10 x0) (fp.mul RNE x12 x7))) (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x13 x5)) (fp.neg (fp.div RNE x8 x12)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.add RNE x0 x13)) (fp.add RNE (fp.neg x21) (fp.neg x5))) (fp.neg (fp.sub RNE (fp.mul RNE x9 x16) (fp.div RNE x8 x7)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.div RNE x1 x14) (fp.sub RNE x8 x11)) (fp.mul RNE (fp.sub RNE x0 x0) (fp.mul RNE x11 x17))) (fp.mul RNE (fp.div RNE (fp.div RNE x18 x12) (fp.mul RNE x6 x12)) (fp.sub RNE (fp.add RNE x3 x10) (fp.sub RNE x2 x6)))))
(check-sat)
