(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.add RNE x5 x8)) (fp.sub RNE (fp.mul RNE x0 x11) (fp.div RNE x8 x1))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x0 x9) (fp.add RNE x5 x0)) (fp.sub RNE (fp.div RNE x8 x2) (fp.neg x10))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x7) (fp.div RNE x5 x11)) (fp.add RNE (fp.add RNE x6 x6) (fp.add RNE x3 x3))))
(assert (fp.eq (fp.div RNE (fp.neg x11) (fp.add RNE x1 x0)) (fp.neg (fp.neg x4))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x2 x2) (fp.neg x9)) (fp.neg (fp.add RNE x4 x8))))
(assert (fp.lt (fp.neg (fp.sub RNE x4 x7)) (fp.div RNE (fp.add RNE x5 x6) (fp.sub RNE x1 x2))))
(assert (fp.leq (fp.div RNE (fp.neg x8) (fp.mul RNE x5 x6)) (fp.neg (fp.add RNE x2 x2))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x1 x4) (fp.sub RNE x0 x1)) (fp.div RNE (fp.add RNE x5 x4) (fp.sub RNE x0 x11))))
(check-sat)
