(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x3) (fp.add RNE x5 x4)) (fp.mul RNE (fp.sub RNE x0 x1) (fp.neg x1))))
(assert (fp.gt (fp.add RNE (fp.add RNE x0 x5) (fp.div RNE x2 x4)) (fp.sub RNE (fp.neg x3) (fp.add RNE x6 x3))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x2 x0) (fp.mul RNE x5 x5)) (fp.div RNE (fp.neg x0) (fp.neg x3))))
(assert (fp.leq (fp.mul RNE (fp.neg x3) (fp.sub RNE x6 x0)) (fp.div RNE (fp.div RNE x2 x0) (fp.add RNE x1 x5))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x3 x3) (fp.div RNE x4 x3)) (fp.add RNE (fp.mul RNE x0 x3) (fp.neg x3))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x5 x6) (fp.neg x1)) (fp.add RNE (fp.add RNE x2 x1) (fp.add RNE x2 x4))))
(assert (fp.eq (fp.sub RNE (fp.neg x6) (fp.div RNE x0 x2)) (fp.div RNE (fp.div RNE x0 x1) (fp.div RNE x0 x3))))
(assert (fp.lt (fp.neg (fp.neg x6)) (fp.neg (fp.add RNE x0 x2))))
(check-sat)
