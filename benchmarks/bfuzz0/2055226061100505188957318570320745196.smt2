(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE x5 x10) (fp.div RNE x10 x0)))
(assert (fp.eq (fp.mul RNE x9 x10) (fp.mul RNE x11 x8)))
(assert (fp.eq (fp.sub RNE x4 x6) (fp.div RNE x10 x11)))
(assert (fp.eq (fp.mul RNE x11 x1) (fp.add RNE x10 x10)))
(assert (fp.leq (fp.div RNE x5 x10) (fp.add RNE x10 x9)))
(assert (fp.leq (fp.mul RNE x7 x1) (fp.div RNE x10 x5)))
(assert (fp.eq (fp.neg x3) (fp.mul RNE x2 x0)))
(assert (fp.eq (fp.sub RNE x1 x7) (fp.div RNE x7 x7)))
(assert (fp.gt (fp.sub RNE x1 x11) (fp.add RNE x5 x11)))
(assert (fp.lt (fp.mul RNE x9 x5) (fp.div RNE x6 x7)))
(assert (fp.leq (fp.neg x0) (fp.add RNE x4 x0)))
(check-sat)
