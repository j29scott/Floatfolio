(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.div RNE x9 x12) (fp.sub RNE x4 x5)) (fp.mul RNE (fp.div RNE x11 x12) (fp.sub RNE x2 x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x2 x10) (fp.add RNE x14 x1)) (fp.neg (fp.sub RNE x10 x16))))
(assert (fp.geq (fp.sub RNE (fp.neg x11) (fp.neg x16)) (fp.mul RNE (fp.div RNE x10 x2) (fp.neg x7))))
(assert (fp.leq (fp.add RNE (fp.add RNE x11 x15) (fp.neg x10)) (fp.add RNE (fp.sub RNE x12 x9) (fp.div RNE x11 x15))))
(assert (fp.leq (fp.neg (fp.sub RNE x10 x5)) (fp.div RNE (fp.div RNE x2 x15) (fp.sub RNE x9 x6))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x4 x2) (fp.div RNE x14 x13)) (fp.add RNE (fp.add RNE x5 x7) (fp.mul RNE x13 x10))))
(assert (fp.eq (fp.div RNE (fp.div RNE x11 x5) (fp.sub RNE x16 x4)) (fp.div RNE (fp.neg x12) (fp.sub RNE x8 x10))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x5) (fp.sub RNE x15 x13)) (fp.mul RNE (fp.sub RNE x12 x15) (fp.div RNE x16 x10))))
(assert (fp.eq (fp.div RNE (fp.neg x15) (fp.add RNE x5 x1)) (fp.mul RNE (fp.neg x12) (fp.sub RNE x11 x7))))
(assert (fp.leq (fp.add RNE (fp.div RNE x3 x0) (fp.div RNE x7 x1)) (fp.neg (fp.neg x16))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x8 x14) (fp.neg x15)) (fp.add RNE (fp.sub RNE x10 x16) (fp.mul RNE x12 x12))))
(check-sat)
