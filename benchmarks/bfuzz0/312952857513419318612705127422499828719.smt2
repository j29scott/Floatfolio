(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg x7)) (fp.add RNE (fp.mul RNE x15 x12) (fp.add RNE x3 x12))))
(assert (fp.geq (fp.neg (fp.sub RNE x10 x6)) (fp.div RNE (fp.neg x17) (fp.add RNE x12 x5))))
(assert (fp.gt (fp.mul RNE (fp.neg x17) (fp.add RNE x7 x3)) (fp.neg (fp.sub RNE x16 x11))))
(assert (fp.leq (fp.add RNE (fp.neg x17) (fp.neg x6)) (fp.mul RNE (fp.neg x8) (fp.neg x10))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x10 x14) (fp.neg x15)) (fp.sub RNE (fp.neg x8) (fp.div RNE x14 x1))))
(assert (fp.geq (fp.mul RNE (fp.neg x6) (fp.add RNE x4 x0)) (fp.sub RNE (fp.add RNE x14 x4) (fp.add RNE x3 x15))))
(assert (fp.eq (fp.neg (fp.mul RNE x5 x10)) (fp.add RNE (fp.mul RNE x11 x12) (fp.div RNE x5 x12))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x15 x6) (fp.neg x16)) (fp.neg (fp.add RNE x7 x1))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x10 x15) (fp.div RNE x3 x14)) (fp.sub RNE (fp.neg x15) (fp.div RNE x7 x18))))
(assert (fp.gt (fp.add RNE (fp.add RNE x9 x6) (fp.add RNE x3 x9)) (fp.mul RNE (fp.add RNE x3 x7) (fp.div RNE x14 x0))))
(check-sat)
