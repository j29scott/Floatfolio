(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE x1 x6)) (fp.add RNE (fp.div RNE x3 x4) (fp.mul RNE x8 x9))) (fp.div RNE (fp.add RNE (fp.sub RNE x7 x10) (fp.sub RNE x1 x10)) (fp.mul RNE (fp.div RNE x9 x8) (fp.mul RNE x2 x2)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x2 x1) (fp.neg x5))) (fp.neg (fp.div RNE (fp.div RNE x7 x4) (fp.div RNE x3 x3)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE x3 x11) (fp.neg x4)) (fp.add RNE (fp.div RNE x4 x5) (fp.div RNE x11 x3))) (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x7) (fp.mul RNE x12 x1)) (fp.sub RNE (fp.sub RNE x0 x3) (fp.div RNE x0 x6)))))
(assert (fp.geq (fp.neg (fp.neg (fp.add RNE x2 x5))) (fp.sub RNE (fp.neg (fp.mul RNE x2 x11)) (fp.neg (fp.add RNE x12 x9)))))
(check-sat)
