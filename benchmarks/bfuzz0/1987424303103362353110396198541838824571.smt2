(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.neg (fp.neg (fp.sub RNE x7 x0)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.div RNE x8 x11) (fp.add RNE x11 x4)) (fp.sub RNE (fp.mul RNE x11 x2) (fp.neg x5))) (fp.sub RNE (fp.div RNE (fp.sub RNE x11 x9) (fp.sub RNE x2 x13)) (fp.add RNE (fp.add RNE x4 x4) (fp.mul RNE x2 x0))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x9) (fp.sub RNE x0 x13)) (fp.sub RNE (fp.sub RNE x11 x2) (fp.mul RNE x5 x10))) (fp.neg (fp.add RNE (fp.sub RNE x10 x4) (fp.mul RNE x14 x2)))) (fp.div RNE (fp.sub RNE (fp.add RNE (fp.add RNE x6 x3) (fp.add RNE x3 x5)) (fp.mul RNE (fp.neg x3) (fp.neg x7))) (fp.neg (fp.div RNE (fp.add RNE x6 x9) (fp.div RNE x7 x9))))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.mul RNE (fp.div RNE x10 x0) (fp.sub RNE x11 x13))) (fp.neg (fp.mul RNE (fp.neg x14) (fp.mul RNE x7 x11)))) (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.sub RNE x13 x13) (fp.sub RNE x2 x11)) (fp.add RNE (fp.sub RNE x13 x2) (fp.mul RNE x9 x4))) (fp.div RNE (fp.sub RNE (fp.div RNE x9 x11) (fp.neg x11)) (fp.mul RNE (fp.sub RNE x5 x2) (fp.sub RNE x6 x7))))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.neg x14) (fp.mul RNE x5 x14)) (fp.mul RNE (fp.mul RNE x4 x2) (fp.mul RNE x14 x5))) (fp.mul RNE (fp.mul RNE (fp.div RNE x7 x9) (fp.div RNE x0 x5)) (fp.sub RNE (fp.neg x8) (fp.sub RNE x2 x9)))) (fp.add RNE (fp.div RNE (fp.sub RNE (fp.neg x2) (fp.neg x2)) (fp.div RNE (fp.sub RNE x6 x12) (fp.mul RNE x12 x4))) (fp.div RNE (fp.div RNE (fp.div RNE x2 x1) (fp.div RNE x0 x9)) (fp.add RNE (fp.sub RNE x13 x13) (fp.mul RNE x2 x6))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.sub RNE (fp.neg x10) (fp.neg x0)) (fp.neg (fp.mul RNE x13 x8)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.neg x2) (fp.mul RNE x1 x1)) (fp.sub RNE (fp.neg x0) (fp.neg x10))) (fp.add RNE (fp.mul RNE (fp.div RNE x10 x11) (fp.neg x7)) (fp.div RNE (fp.mul RNE x3 x14) (fp.mul RNE x3 x0))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.neg (fp.div RNE x8 x11)) (fp.mul RNE (fp.add RNE x8 x5) (fp.div RNE x9 x3))) (fp.add RNE (fp.mul RNE (fp.add RNE x1 x12) (fp.sub RNE x7 x5)) (fp.div RNE (fp.sub RNE x0 x7) (fp.div RNE x14 x3)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x1 x6) (fp.mul RNE x1 x10)) (fp.neg (fp.neg x4))) (fp.neg (fp.sub RNE (fp.div RNE x14 x14) (fp.mul RNE x7 x2))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE (fp.mul RNE x12 x5) (fp.add RNE x5 x11)) (fp.sub RNE (fp.sub RNE x14 x2) (fp.mul RNE x0 x12)))) (fp.div RNE (fp.add RNE (fp.add RNE (fp.sub RNE x6 x2) (fp.div RNE x10 x3)) (fp.add RNE (fp.sub RNE x7 x13) (fp.neg x2))) (fp.neg (fp.mul RNE (fp.neg x0) (fp.neg x14))))))
(check-sat)
