(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x17 x9) (fp.neg x6)) (fp.mul RNE (fp.div RNE x6 x3) (fp.mul RNE x0 x16))) (fp.div RNE (fp.neg (fp.sub RNE x1 x19)) (fp.add RNE (fp.mul RNE x11 x4) (fp.sub RNE x6 x11)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x17 x18) (fp.neg x11)) (fp.sub RNE (fp.add RNE x19 x13) (fp.add RNE x1 x14))) (fp.add RNE (fp.mul RNE (fp.sub RNE x3 x20) (fp.add RNE x6 x12)) (fp.sub RNE (fp.sub RNE x16 x18) (fp.neg x9))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.neg (fp.add RNE x17 x8))) (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.div RNE x8 x19)) (fp.add RNE (fp.mul RNE x6 x9) (fp.mul RNE x9 x14)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.div RNE x12 x3) (fp.mul RNE x20 x6)) (fp.neg (fp.mul RNE x9 x15))))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x9) (fp.div RNE x10 x13)) (fp.sub RNE (fp.mul RNE x19 x3) (fp.sub RNE x4 x9))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x18 x13) (fp.div RNE x13 x1)) (fp.sub RNE (fp.mul RNE x5 x0) (fp.div RNE x15 x5)))) (fp.neg (fp.div RNE (fp.mul RNE (fp.div RNE x2 x8) (fp.add RNE x14 x16)) (fp.sub RNE (fp.mul RNE x0 x12) (fp.neg x4))))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.sub RNE (fp.div RNE x3 x20) (fp.neg x1))) (fp.neg (fp.div RNE (fp.mul RNE x16 x11) (fp.div RNE x17 x0)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x1 x18) (fp.div RNE x3 x7)) (fp.sub RNE (fp.sub RNE x0 x10) (fp.div RNE x5 x7))) (fp.neg (fp.div RNE (fp.div RNE x12 x20) (fp.div RNE x14 x13))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x16 x7) (fp.add RNE x10 x3)) (fp.sub RNE (fp.add RNE x14 x18) (fp.div RNE x11 x15))) (fp.add RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x19 x14)) (fp.div RNE (fp.mul RNE x4 x18) (fp.div RNE x6 x13)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.mul RNE x20 x13) (fp.neg x2)) (fp.neg (fp.sub RNE x10 x1))))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x7) (fp.sub RNE x16 x16)) (fp.mul RNE (fp.add RNE x2 x19) (fp.div RNE x2 x13))) (fp.neg (fp.sub RNE (fp.add RNE x6 x17) (fp.neg x0)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x17 x20) (fp.div RNE x1 x2)) (fp.div RNE (fp.sub RNE x3 x6) (fp.div RNE x12 x5))) (fp.add RNE (fp.add RNE (fp.add RNE x12 x2) (fp.add RNE x16 x13)) (fp.div RNE (fp.mul RNE x14 x20) (fp.sub RNE x5 x20))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.mul RNE (fp.div RNE x11 x5) (fp.neg x12)) (fp.add RNE (fp.div RNE x6 x4) (fp.neg x14)))) (fp.add RNE (fp.neg (fp.div RNE (fp.mul RNE x4 x8) (fp.sub RNE x13 x20))) (fp.div RNE (fp.sub RNE (fp.div RNE x11 x20) (fp.sub RNE x2 x10)) (fp.div RNE (fp.div RNE x8 x5) (fp.div RNE x3 x20))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.div RNE (fp.sub RNE x7 x11) (fp.neg x2))) (fp.div RNE (fp.neg (fp.div RNE x5 x0)) (fp.sub RNE (fp.sub RNE x15 x15) (fp.div RNE x19 x15)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x20 x7) (fp.add RNE x3 x6)) (fp.neg (fp.add RNE x13 x18))) (fp.neg (fp.div RNE (fp.add RNE x15 x16) (fp.neg x15))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.neg (fp.mul RNE x10 x2)) (fp.neg (fp.div RNE x10 x5))) (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x6) (fp.add RNE x15 x14)) (fp.add RNE (fp.neg x12) (fp.mul RNE x12 x9)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.add RNE x15 x17)) (fp.neg (fp.neg x5))) (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x1 x7)) (fp.add RNE (fp.neg x2) (fp.neg x16))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.neg x13) (fp.sub RNE x18 x12)) (fp.sub RNE (fp.sub RNE x7 x18) (fp.add RNE x14 x10))) (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x4) (fp.neg x11)) (fp.add RNE (fp.sub RNE x6 x0) (fp.mul RNE x1 x0)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE x16 x12) (fp.add RNE x4 x9)) (fp.add RNE (fp.add RNE x11 x6) (fp.neg x5))) (fp.add RNE (fp.add RNE (fp.mul RNE x14 x4) (fp.mul RNE x13 x9)) (fp.mul RNE (fp.sub RNE x10 x10) (fp.sub RNE x3 x15))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.neg x9) (fp.add RNE x8 x17)) (fp.div RNE (fp.add RNE x15 x16) (fp.sub RNE x8 x18))) (fp.neg (fp.neg (fp.sub RNE x1 x16)))) (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.neg x3) (fp.mul RNE x4 x9)) (fp.mul RNE (fp.add RNE x16 x9) (fp.add RNE x3 x13))) (fp.neg (fp.div RNE (fp.sub RNE x3 x12) (fp.mul RNE x4 x19))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE (fp.mul RNE x18 x1) (fp.add RNE x5 x9)) (fp.neg (fp.add RNE x1 x15))) (fp.neg (fp.neg (fp.mul RNE x4 x0)))) (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x10 x10) (fp.add RNE x17 x2)) (fp.add RNE (fp.sub RNE x14 x3) (fp.neg x14))) (fp.add RNE (fp.mul RNE (fp.div RNE x1 x16) (fp.mul RNE x16 x14)) (fp.mul RNE (fp.add RNE x12 x12) (fp.sub RNE x13 x13))))))
(check-sat)
