(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE x0 x1) (fp.neg x4)) (fp.mul RNE (fp.neg x14) (fp.neg x14))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x6 x15) (fp.sub RNE x5 x8)) (fp.div RNE (fp.mul RNE x11 x16) (fp.div RNE x6 x0))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x12 x7) (fp.neg x6)) (fp.neg (fp.sub RNE x14 x0))))
(assert (fp.geq (fp.neg (fp.div RNE x11 x13)) (fp.add RNE (fp.mul RNE x1 x18) (fp.neg x8))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x1 x11) (fp.div RNE x0 x14)) (fp.sub RNE (fp.mul RNE x14 x11) (fp.add RNE x8 x17))))
(assert (fp.geq (fp.div RNE (fp.neg x3) (fp.neg x12)) (fp.div RNE (fp.div RNE x15 x16) (fp.add RNE x11 x11))))
(assert (fp.geq (fp.neg (fp.neg x1)) (fp.neg (fp.sub RNE x1 x11))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x18 x6) (fp.mul RNE x6 x5)) (fp.div RNE (fp.add RNE x4 x15) (fp.sub RNE x12 x16))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x15 x10) (fp.add RNE x15 x5)) (fp.div RNE (fp.sub RNE x4 x11) (fp.sub RNE x6 x18))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x9 x12) (fp.sub RNE x10 x12)) (fp.mul RNE (fp.div RNE x3 x2) (fp.mul RNE x15 x14))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x14 x13) (fp.sub RNE x3 x0)) (fp.div RNE (fp.neg x3) (fp.sub RNE x0 x1))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x15 x7) (fp.sub RNE x2 x8)) (fp.sub RNE (fp.sub RNE x16 x7) (fp.mul RNE x4 x4))))
(check-sat)
