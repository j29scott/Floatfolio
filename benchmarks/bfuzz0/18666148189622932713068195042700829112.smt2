(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x6 x1) (fp.sub RNE x18 x17)))
(assert (fp.gt (fp.neg x9) (fp.add RNE x10 x12)))
(assert (fp.lt (fp.div RNE x1 x22) (fp.neg x12)))
(assert (fp.leq (fp.div RNE x20 x13) (fp.mul RNE x0 x5)))
(assert (fp.eq (fp.div RNE x8 x17) (fp.neg x9)))
(assert (fp.geq (fp.mul RNE x9 x18) (fp.sub RNE x20 x14)))
(assert (fp.eq (fp.div RNE x6 x2) (fp.sub RNE x22 x15)))
(assert (fp.eq (fp.sub RNE x1 x9) (fp.add RNE x13 x20)))
(assert (fp.eq (fp.div RNE x17 x6) (fp.sub RNE x16 x1)))
(assert (fp.lt (fp.sub RNE x17 x9) (fp.add RNE x21 x3)))
(assert (fp.eq (fp.sub RNE x16 x1) (fp.add RNE x4 x0)))
(assert (fp.leq (fp.neg x3) (fp.neg x9)))
(assert (fp.gt (fp.sub RNE x9 x1) (fp.mul RNE x9 x16)))
(assert (fp.leq (fp.mul RNE x11 x12) (fp.mul RNE x19 x13)))
(assert (fp.eq (fp.sub RNE x19 x20) (fp.mul RNE x19 x10)))
(assert (fp.gt (fp.div RNE x18 x19) (fp.mul RNE x7 x17)))
(assert (fp.lt (fp.mul RNE x10 x19) (fp.neg x2)))
(check-sat)
