(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x12 x3) (fp.sub RNE x10 x8)))
(assert (fp.leq (fp.add RNE x4 x4) (fp.div RNE x6 x3)))
(assert (fp.eq (fp.neg x3) (fp.sub RNE x11 x11)))
(assert (fp.gt (fp.sub RNE x5 x12) (fp.sub RNE x1 x3)))
(assert (fp.eq (fp.div RNE x0 x13) (fp.div RNE x0 x6)))
(assert (fp.geq (fp.add RNE x2 x1) (fp.add RNE x7 x11)))
(assert (fp.geq (fp.sub RNE x10 x6) (fp.div RNE x14 x6)))
(assert (fp.eq (fp.div RNE x0 x6) (fp.add RNE x11 x13)))
(assert (fp.eq (fp.add RNE x5 x5) (fp.mul RNE x1 x8)))
(assert (fp.leq (fp.div RNE x6 x9) (fp.sub RNE x4 x3)))
(assert (fp.gt (fp.mul RNE x0 x9) (fp.div RNE x6 x4)))
(assert (fp.leq (fp.add RNE x6 x6) (fp.add RNE x2 x3)))
(assert (fp.gt (fp.neg x4) (fp.neg x1)))
(assert (fp.eq (fp.neg x2) (fp.div RNE x10 x3)))
(check-sat)
