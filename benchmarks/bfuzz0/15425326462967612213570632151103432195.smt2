(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.div RNE x7 x5) (fp.div RNE x3 x4)) (fp.neg (fp.sub RNE x2 x3))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x3) (fp.neg x2)) (fp.mul RNE (fp.add RNE x6 x1) (fp.add RNE x6 x0))))
(assert (fp.leq (fp.mul RNE (fp.neg x2) (fp.sub RNE x1 x4)) (fp.add RNE (fp.mul RNE x8 x2) (fp.div RNE x0 x6))))
(assert (fp.geq (fp.add RNE (fp.neg x1) (fp.mul RNE x8 x3)) (fp.mul RNE (fp.add RNE x4 x1) (fp.neg x8))))
(assert (fp.gt (fp.sub RNE (fp.neg x7) (fp.mul RNE x8 x5)) (fp.neg (fp.add RNE x8 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x8 x6) (fp.div RNE x0 x3)) (fp.mul RNE (fp.neg x2) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x5 x8) (fp.sub RNE x0 x8)) (fp.div RNE (fp.div RNE x1 x3) (fp.neg x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x7 x8) (fp.add RNE x8 x3)) (fp.neg (fp.mul RNE x5 x4))))
(check-sat)
