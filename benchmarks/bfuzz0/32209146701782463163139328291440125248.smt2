(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.sub RNE x3 x11) (fp.div RNE x4 x8)) (fp.div RNE (fp.sub RNE x4 x1) (fp.neg x1))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x8 x3) (fp.div RNE x11 x11)) (fp.mul RNE (fp.div RNE x9 x11) (fp.sub RNE x1 x10))))
(assert (fp.leq (fp.add RNE (fp.div RNE x6 x1) (fp.add RNE x5 x3)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x6 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x2 x9) (fp.mul RNE x9 x6)) (fp.add RNE (fp.sub RNE x6 x8) (fp.mul RNE x7 x10))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x2 x11) (fp.neg x0)) (fp.div RNE (fp.add RNE x1 x5) (fp.mul RNE x8 x10))))
(assert (fp.leq (fp.neg (fp.neg x9)) (fp.sub RNE (fp.mul RNE x8 x3) (fp.neg x3))))
(assert (fp.eq (fp.add RNE (fp.neg x7) (fp.sub RNE x11 x9)) (fp.div RNE (fp.div RNE x3 x5) (fp.mul RNE x0 x5))))
(assert (fp.eq (fp.neg (fp.add RNE x11 x1)) (fp.div RNE (fp.div RNE x6 x8) (fp.neg x0))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x0 x6) (fp.neg x0)) (fp.mul RNE (fp.div RNE x4 x11) (fp.div RNE x0 x4))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x6 x7) (fp.sub RNE x5 x11)) (fp.sub RNE (fp.mul RNE x10 x0) (fp.neg x8))))
(assert (fp.lt (fp.neg (fp.div RNE x3 x11)) (fp.div RNE (fp.sub RNE x0 x8) (fp.mul RNE x11 x2))))
(assert (fp.eq (fp.div RNE (fp.neg x7) (fp.div RNE x9 x11)) (fp.sub RNE (fp.add RNE x2 x3) (fp.add RNE x4 x11))))
(assert (fp.lt (fp.sub RNE (fp.neg x11) (fp.neg x0)) (fp.neg (fp.neg x4))))
(check-sat)
