(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE x3 x0) (fp.div RNE x9 x13)))
(assert (fp.gt (fp.add RNE x4 x18) (fp.div RNE x16 x15)))
(assert (fp.leq (fp.div RNE x11 x15) (fp.add RNE x12 x8)))
(assert (fp.gt (fp.sub RNE x3 x7) (fp.mul RNE x15 x4)))
(assert (fp.gt (fp.mul RNE x10 x12) (fp.div RNE x19 x10)))
(assert (fp.eq (fp.neg x3) (fp.neg x2)))
(assert (fp.leq (fp.div RNE x11 x3) (fp.neg x3)))
(assert (fp.gt (fp.neg x8) (fp.sub RNE x6 x16)))
(assert (fp.eq (fp.neg x9) (fp.mul RNE x6 x4)))
(assert (fp.leq (fp.neg x6) (fp.div RNE x7 x1)))
(check-sat)
