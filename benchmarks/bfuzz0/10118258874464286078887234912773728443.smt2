(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.div RNE x8 x10) (fp.add RNE x20 x15)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x13 x9))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x16 x1) (fp.mul RNE x19 x1)) (fp.neg (fp.div RNE x6 x0))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x17 x13) (fp.neg x8)) (fp.sub RNE (fp.mul RNE x13 x17) (fp.div RNE x8 x16))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x8 x9) (fp.neg x20)) (fp.sub RNE (fp.add RNE x15 x12) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x16 x19) (fp.mul RNE x14 x11)) (fp.div RNE (fp.mul RNE x7 x10) (fp.sub RNE x17 x18))))
(assert (fp.geq (fp.mul RNE (fp.neg x12) (fp.div RNE x1 x18)) (fp.mul RNE (fp.add RNE x3 x17) (fp.mul RNE x14 x14))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x9 x6) (fp.add RNE x17 x2)) (fp.sub RNE (fp.mul RNE x16 x1) (fp.div RNE x5 x7))))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x11)) (fp.div RNE (fp.sub RNE x18 x7) (fp.div RNE x2 x7))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x15 x16) (fp.add RNE x7 x3)) (fp.mul RNE (fp.neg x5) (fp.neg x12))))
(check-sat)
