(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x2 x5) (fp.mul RNE x8 x15)) (fp.neg (fp.sub RNE x1 x5))))
(assert (fp.leq (fp.neg (fp.div RNE x6 x11)) (fp.sub RNE (fp.sub RNE x10 x13) (fp.div RNE x9 x11))))
(assert (fp.gt (fp.neg (fp.neg x2)) (fp.div RNE (fp.mul RNE x1 x6) (fp.add RNE x9 x7))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x6 x4) (fp.mul RNE x6 x7)) (fp.add RNE (fp.sub RNE x6 x11) (fp.neg x1))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x1 x13) (fp.mul RNE x2 x15)) (fp.neg (fp.sub RNE x7 x6))))
(check-sat)
