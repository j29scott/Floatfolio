(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x5 x5) (fp.mul RNE x1 x11)))
(assert (fp.eq (fp.div RNE x2 x11) (fp.sub RNE x0 x9)))
(assert (fp.gt (fp.sub RNE x11 x11) (fp.mul RNE x11 x10)))
(assert (fp.geq (fp.add RNE x6 x3) (fp.neg x4)))
(assert (fp.gt (fp.div RNE x7 x1) (fp.add RNE x4 x9)))
(assert (fp.gt (fp.mul RNE x8 x4) (fp.add RNE x3 x6)))
(assert (fp.gt (fp.mul RNE x2 x8) (fp.sub RNE x1 x7)))
(assert (fp.lt (fp.neg x3) (fp.sub RNE x7 x8)))
(assert (fp.eq (fp.div RNE x5 x6) (fp.neg x6)))
(assert (fp.geq (fp.mul RNE x6 x4) (fp.add RNE x2 x5)))
(assert (fp.leq (fp.div RNE x10 x0) (fp.sub RNE x0 x1)))
(assert (fp.leq (fp.div RNE x5 x2) (fp.add RNE x1 x10)))
(assert (fp.lt (fp.add RNE x4 x8) (fp.add RNE x3 x2)))
(assert (fp.leq (fp.div RNE x6 x3) (fp.mul RNE x3 x3)))
(assert (fp.eq (fp.neg x3) (fp.add RNE x2 x3)))
(assert (fp.leq (fp.div RNE x10 x2) (fp.sub RNE x0 x10)))
(check-sat)
