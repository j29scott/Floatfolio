(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x4 x7) (fp.div RNE x0 x4)))
(assert (fp.leq (fp.div RNE x1 x2) (fp.div RNE x5 x9)))
(assert (fp.eq (fp.neg x5) (fp.mul RNE x12 x7)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x12 x11)))
(assert (fp.gt (fp.neg x6) (fp.neg x1)))
(assert (fp.geq (fp.sub RNE x12 x10) (fp.sub RNE x1 x2)))
(assert (fp.leq (fp.neg x12) (fp.neg x3)))
(assert (fp.lt (fp.neg x2) (fp.add RNE x12 x12)))
(assert (fp.eq (fp.mul RNE x9 x7) (fp.mul RNE x5 x10)))
(assert (fp.lt (fp.neg x5) (fp.sub RNE x13 x6)))
(assert (fp.leq (fp.add RNE x2 x7) (fp.sub RNE x8 x13)))
(assert (fp.eq (fp.div RNE x1 x1) (fp.sub RNE x4 x5)))
(assert (fp.eq (fp.sub RNE x6 x5) (fp.div RNE x8 x6)))
(assert (fp.lt (fp.neg x3) (fp.sub RNE x12 x10)))
(assert (fp.leq (fp.mul RNE x10 x0) (fp.div RNE x11 x11)))
(check-sat)
