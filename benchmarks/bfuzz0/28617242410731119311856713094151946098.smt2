(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.add RNE x15 x14) (fp.mul RNE x5 x21)) (fp.sub RNE (fp.mul RNE x9 x20) (fp.neg x21))) (fp.sub RNE (fp.neg (fp.add RNE x16 x0)) (fp.sub RNE (fp.neg x8) (fp.div RNE x7 x17)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x17) (fp.add RNE x20 x18)) (fp.sub RNE (fp.sub RNE x5 x17) (fp.add RNE x12 x12))) (fp.div RNE (fp.add RNE (fp.div RNE x8 x11) (fp.mul RNE x13 x19)) (fp.neg (fp.div RNE x9 x2)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x10 x0) (fp.neg x13)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x12 x9))) (fp.sub RNE (fp.mul RNE (fp.div RNE x8 x14) (fp.add RNE x6 x18)) (fp.div RNE (fp.sub RNE x9 x12) (fp.mul RNE x9 x9)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE x5 x10)) (fp.neg (fp.add RNE x8 x2))) (fp.add RNE (fp.mul RNE (fp.add RNE x4 x2) (fp.sub RNE x19 x11)) (fp.sub RNE (fp.add RNE x13 x4) (fp.sub RNE x2 x5)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x7 x0) (fp.neg x9)) (fp.neg (fp.sub RNE x1 x19))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x5) (fp.mul RNE x10 x19)) (fp.sub RNE (fp.sub RNE x0 x17) (fp.sub RNE x15 x16)))))
(check-sat)
