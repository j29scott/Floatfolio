(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.mul RNE x14 x8) (fp.div RNE x7 x9)) (fp.add RNE (fp.mul RNE x16 x3) (fp.sub RNE x5 x0))))
(assert (fp.gt (fp.div RNE (fp.add RNE x14 x10) (fp.mul RNE x15 x6)) (fp.neg (fp.sub RNE x4 x6))))
(assert (fp.gt (fp.add RNE (fp.neg x11) (fp.div RNE x5 x1)) (fp.sub RNE (fp.add RNE x8 x11) (fp.div RNE x10 x16))))
(assert (fp.leq (fp.neg (fp.neg x5)) (fp.mul RNE (fp.sub RNE x3 x13) (fp.sub RNE x14 x1))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x5 x8) (fp.div RNE x10 x11)) (fp.mul RNE (fp.div RNE x0 x8) (fp.sub RNE x13 x11))))
(check-sat)
