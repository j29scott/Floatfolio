(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE x2 x1) (fp.sub RNE x12 x2)) (fp.div RNE (fp.mul RNE x3 x3) (fp.neg x7))))
(assert (fp.eq (fp.neg (fp.neg x8)) (fp.div RNE (fp.div RNE x11 x5) (fp.add RNE x10 x11))))
(assert (fp.lt (fp.neg (fp.add RNE x12 x12)) (fp.div RNE (fp.sub RNE x3 x3) (fp.neg x11))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x12 x10) (fp.add RNE x12 x4)) (fp.add RNE (fp.sub RNE x8 x9) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.neg x6) (fp.sub RNE x7 x5)) (fp.div RNE (fp.sub RNE x4 x3) (fp.neg x7))))
(assert (fp.leq (fp.add RNE (fp.div RNE x0 x9) (fp.sub RNE x7 x1)) (fp.mul RNE (fp.mul RNE x2 x1) (fp.sub RNE x4 x7))))
(assert (fp.gt (fp.mul RNE (fp.neg x11) (fp.div RNE x5 x3)) (fp.sub RNE (fp.add RNE x10 x12) (fp.sub RNE x6 x4))))
(assert (fp.gt (fp.neg (fp.mul RNE x0 x1)) (fp.mul RNE (fp.add RNE x10 x7) (fp.add RNE x0 x1))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x3) (fp.add RNE x7 x1)) (fp.div RNE (fp.add RNE x11 x11) (fp.mul RNE x6 x10))))
(assert (fp.eq (fp.mul RNE (fp.neg x4) (fp.sub RNE x10 x2)) (fp.mul RNE (fp.neg x11) (fp.mul RNE x5 x4))))
(assert (fp.geq (fp.sub RNE (fp.neg x6) (fp.div RNE x12 x12)) (fp.neg (fp.mul RNE x12 x10))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x7 x5) (fp.div RNE x11 x11)) (fp.add RNE (fp.sub RNE x2 x2) (fp.neg x0))))
(assert (fp.leq (fp.add RNE (fp.add RNE x5 x6) (fp.mul RNE x4 x6)) (fp.neg (fp.div RNE x6 x11))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x5) (fp.mul RNE x3 x6)) (fp.mul RNE (fp.sub RNE x4 x10) (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x9 x9) (fp.mul RNE x6 x2)) (fp.neg (fp.neg x11))))
(assert (fp.gt (fp.sub RNE (fp.neg x6) (fp.mul RNE x3 x4)) (fp.sub RNE (fp.sub RNE x7 x4) (fp.add RNE x7 x5))))
(check-sat)
