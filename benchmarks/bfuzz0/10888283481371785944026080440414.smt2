(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x5) (fp.add RNE x7 x6)))
(assert (fp.eq (fp.neg x3) (fp.sub RNE x8 x7)))
(assert (fp.geq (fp.div RNE x0 x18) (fp.neg x10)))
(assert (fp.lt (fp.div RNE x3 x3) (fp.sub RNE x7 x0)))
(assert (fp.gt (fp.mul RNE x16 x6) (fp.neg x12)))
(assert (fp.leq (fp.div RNE x13 x16) (fp.sub RNE x15 x6)))
(assert (fp.lt (fp.neg x12) (fp.mul RNE x2 x13)))
(assert (fp.eq (fp.div RNE x15 x1) (fp.add RNE x11 x1)))
(assert (fp.geq (fp.div RNE x17 x18) (fp.mul RNE x3 x11)))
(assert (fp.leq (fp.sub RNE x1 x3) (fp.sub RNE x0 x10)))
(assert (fp.geq (fp.mul RNE x1 x12) (fp.neg x7)))
(assert (fp.lt (fp.neg x2) (fp.add RNE x9 x16)))
(assert (fp.eq (fp.mul RNE x1 x3) (fp.sub RNE x6 x8)))
(assert (fp.geq (fp.sub RNE x7 x17) (fp.neg x0)))
(assert (fp.geq (fp.neg x5) (fp.add RNE x8 x7)))
(assert (fp.lt (fp.neg x9) (fp.sub RNE x13 x4)))
(check-sat)
