(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.add RNE x3 x8)) (fp.neg (fp.sub RNE x14 x10))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x4 x16) (fp.mul RNE x5 x10)) (fp.div RNE (fp.mul RNE x18 x14) (fp.div RNE x10 x0))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x10 x15) (fp.div RNE x9 x6)) (fp.mul RNE (fp.neg x11) (fp.div RNE x10 x2))))
(assert (fp.leq (fp.add RNE (fp.neg x18) (fp.div RNE x17 x14)) (fp.sub RNE (fp.div RNE x5 x9) (fp.neg x2))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x10 x5) (fp.sub RNE x8 x2)) (fp.div RNE (fp.mul RNE x6 x9) (fp.sub RNE x18 x8))))
(check-sat)
