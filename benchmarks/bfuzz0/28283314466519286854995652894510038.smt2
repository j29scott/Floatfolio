(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.neg x3)) (fp.add RNE (fp.neg x3) (fp.neg x9))) (fp.add RNE (fp.div RNE (fp.neg x2) (fp.mul RNE x3 x12)) (fp.div RNE (fp.mul RNE x11 x10) (fp.div RNE x8 x0)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x1 x2) (fp.neg x10))) (fp.neg (fp.mul RNE (fp.div RNE x9 x3) (fp.mul RNE x11 x2)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.neg x4) (fp.mul RNE x11 x3))) (fp.neg (fp.neg (fp.mul RNE x9 x6)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE x11 x1) (fp.div RNE x0 x4)) (fp.sub RNE (fp.sub RNE x11 x2) (fp.sub RNE x0 x10))) (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x2) (fp.sub RNE x9 x5)) (fp.add RNE (fp.sub RNE x8 x6) (fp.neg x8)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg x5) (fp.mul RNE x3 x3)) (fp.div RNE (fp.div RNE x9 x3) (fp.neg x12))) (fp.add RNE (fp.neg (fp.add RNE x11 x0)) (fp.sub RNE (fp.neg x10) (fp.sub RNE x10 x1)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x5) (fp.sub RNE x2 x5)) (fp.sub RNE (fp.div RNE x8 x9) (fp.div RNE x12 x11))) (fp.div RNE (fp.add RNE (fp.div RNE x2 x6) (fp.add RNE x0 x10)) (fp.sub RNE (fp.sub RNE x1 x2) (fp.neg x2)))))
(check-sat)
