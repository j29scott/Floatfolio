(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x24 x0) (fp.div RNE x23 x21)) (fp.add RNE (fp.neg x1) (fp.neg x13))) (fp.div RNE (fp.div RNE (fp.sub RNE x9 x13) (fp.mul RNE x16 x23)) (fp.add RNE (fp.neg x10) (fp.neg x3)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.neg x18) (fp.add RNE x14 x10))) (fp.add RNE (fp.mul RNE (fp.div RNE x14 x4) (fp.mul RNE x16 x1)) (fp.div RNE (fp.mul RNE x0 x9) (fp.add RNE x7 x10)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.neg x23)) (fp.neg (fp.add RNE x13 x5))) (fp.mul RNE (fp.neg (fp.sub RNE x9 x5)) (fp.add RNE (fp.div RNE x21 x23) (fp.sub RNE x8 x7)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE x19 x8) (fp.sub RNE x24 x5)) (fp.mul RNE (fp.mul RNE x25 x9) (fp.sub RNE x17 x21))) (fp.add RNE (fp.add RNE (fp.sub RNE x15 x21) (fp.add RNE x13 x10)) (fp.sub RNE (fp.mul RNE x9 x2) (fp.add RNE x4 x3)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg x20) (fp.neg x24)) (fp.add RNE (fp.mul RNE x17 x25) (fp.div RNE x1 x4))) (fp.neg (fp.sub RNE (fp.div RNE x20 x12) (fp.sub RNE x20 x12)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.mul RNE x18 x3) (fp.add RNE x5 x17)) (fp.mul RNE (fp.sub RNE x13 x2) (fp.neg x16))) (fp.sub RNE (fp.neg (fp.neg x25)) (fp.div RNE (fp.sub RNE x20 x5) (fp.add RNE x5 x6)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.div RNE x19 x13) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x7 x2) (fp.div RNE x22 x10))) (fp.neg (fp.sub RNE (fp.mul RNE x23 x14) (fp.add RNE x8 x16)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE x23 x8) (fp.mul RNE x23 x21)) (fp.sub RNE (fp.neg x3) (fp.neg x10))) (fp.add RNE (fp.div RNE (fp.neg x14) (fp.neg x19)) (fp.add RNE (fp.sub RNE x22 x8) (fp.div RNE x2 x20)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x21 x11) (fp.neg x17)) (fp.sub RNE (fp.sub RNE x19 x15) (fp.add RNE x1 x22))) (fp.div RNE (fp.neg (fp.add RNE x20 x19)) (fp.neg (fp.mul RNE x25 x8)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg x14) (fp.sub RNE x21 x23)) (fp.add RNE (fp.div RNE x1 x15) (fp.mul RNE x6 x22))) (fp.mul RNE (fp.div RNE (fp.mul RNE x19 x23) (fp.div RNE x13 x23)) (fp.neg (fp.sub RNE x7 x6)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.neg x1) (fp.add RNE x10 x2))) (fp.neg (fp.mul RNE (fp.div RNE x0 x12) (fp.add RNE x10 x2)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.sub RNE x5 x23)) (fp.div RNE (fp.add RNE x21 x17) (fp.mul RNE x15 x24))) (fp.add RNE (fp.div RNE (fp.mul RNE x6 x25) (fp.mul RNE x17 x21)) (fp.sub RNE (fp.div RNE x3 x4) (fp.div RNE x3 x1)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg x23) (fp.mul RNE x18 x5)) (fp.div RNE (fp.sub RNE x19 x17) (fp.div RNE x9 x13))) (fp.sub RNE (fp.div RNE (fp.add RNE x18 x13) (fp.add RNE x22 x24)) (fp.sub RNE (fp.sub RNE x20 x2) (fp.neg x8)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x22)) (fp.mul RNE (fp.mul RNE x13 x19) (fp.mul RNE x3 x13))) (fp.mul RNE (fp.div RNE (fp.div RNE x23 x15) (fp.add RNE x3 x19)) (fp.add RNE (fp.add RNE x16 x11) (fp.add RNE x24 x24)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.div RNE x16 x18) (fp.sub RNE x14 x19)) (fp.div RNE (fp.sub RNE x15 x24) (fp.add RNE x16 x4))) (fp.sub RNE (fp.div RNE (fp.mul RNE x15 x10) (fp.neg x21)) (fp.neg (fp.neg x17)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.add RNE x1 x20)) (fp.sub RNE (fp.sub RNE x16 x16) (fp.sub RNE x12 x9))) (fp.div RNE (fp.sub RNE (fp.div RNE x13 x20) (fp.neg x20)) (fp.neg (fp.add RNE x13 x2)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.neg x2) (fp.sub RNE x12 x21)) (fp.add RNE (fp.neg x23) (fp.add RNE x11 x11))) (fp.neg (fp.div RNE (fp.add RNE x12 x15) (fp.add RNE x15 x10)))))
(check-sat)
