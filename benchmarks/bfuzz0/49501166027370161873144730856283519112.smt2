(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x8 x4))) (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x11) (fp.add RNE x5 x5)) (fp.sub RNE (fp.sub RNE x11 x13) (fp.neg x4)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x8 x7) (fp.sub RNE x11 x4)) (fp.sub RNE (fp.neg x5) (fp.div RNE x5 x8))) (fp.neg (fp.add RNE (fp.add RNE x12 x10) (fp.sub RNE x13 x7)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x4) (fp.mul RNE x13 x9)) (fp.div RNE (fp.sub RNE x1 x7) (fp.div RNE x4 x3))) (fp.add RNE (fp.neg (fp.mul RNE x4 x11)) (fp.sub RNE (fp.neg x11) (fp.div RNE x2 x8)))))
(check-sat)
