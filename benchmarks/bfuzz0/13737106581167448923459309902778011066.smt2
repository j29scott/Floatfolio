(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x11 x1) (fp.div RNE x9 x14)) (fp.div RNE (fp.add RNE x2 x8) (fp.sub RNE x0 x6))) (fp.div RNE (fp.mul RNE (fp.add RNE x4 x1) (fp.neg x4)) (fp.sub RNE (fp.mul RNE x13 x12) (fp.mul RNE x8 x4)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.neg x2)) (fp.sub RNE (fp.div RNE x4 x5) (fp.mul RNE x1 x13))) (fp.div RNE (fp.add RNE (fp.neg x5) (fp.add RNE x13 x12)) (fp.add RNE (fp.div RNE x4 x11) (fp.neg x4)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE x11 x7) (fp.add RNE x7 x4))) (fp.div RNE (fp.sub RNE (fp.div RNE x8 x1) (fp.add RNE x0 x14)) (fp.neg (fp.sub RNE x10 x11)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x8 x9) (fp.sub RNE x2 x1))) (fp.neg (fp.mul RNE (fp.neg x1) (fp.sub RNE x7 x8)))))
(check-sat)
