(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.sub RNE x12 x8)) (fp.div RNE (fp.mul RNE x5 x11) (fp.add RNE x0 x16))) (fp.mul RNE (fp.mul RNE (fp.div RNE x17 x4) (fp.neg x11)) (fp.add RNE (fp.mul RNE x12 x13) (fp.mul RNE x12 x2)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.mul RNE x15 x2) (fp.div RNE x13 x11))) (fp.add RNE (fp.div RNE (fp.mul RNE x1 x17) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x7 x4) (fp.mul RNE x4 x2))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.sub RNE (fp.add RNE x11 x5) (fp.add RNE x4 x10)) (fp.sub RNE (fp.add RNE x5 x11) (fp.div RNE x14 x11))) (fp.div RNE (fp.add RNE (fp.mul RNE x10 x15) (fp.sub RNE x12 x5)) (fp.sub RNE (fp.add RNE x2 x11) (fp.div RNE x13 x6)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.neg x11) (fp.neg x3)) (fp.add RNE (fp.sub RNE x16 x7) (fp.mul RNE x15 x9))))))
(check-sat)
