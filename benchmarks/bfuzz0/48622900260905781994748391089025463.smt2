(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE x2 x3)) (fp.sub RNE (fp.sub RNE x7 x0) (fp.sub RNE x1 x4))))
(assert (fp.lt (fp.div RNE (fp.add RNE x12 x3) (fp.neg x9)) (fp.mul RNE (fp.neg x11) (fp.sub RNE x0 x12))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x8 x1) (fp.neg x8)) (fp.sub RNE (fp.div RNE x0 x12) (fp.add RNE x1 x4))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x10 x12) (fp.mul RNE x9 x4)) (fp.add RNE (fp.mul RNE x5 x12) (fp.sub RNE x2 x8))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x12 x6) (fp.sub RNE x1 x7)) (fp.neg (fp.neg x8))))
(assert (fp.gt (fp.add RNE (fp.add RNE x7 x8) (fp.sub RNE x11 x2)) (fp.add RNE (fp.mul RNE x12 x1) (fp.neg x9))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x8 x1) (fp.sub RNE x7 x9)) (fp.add RNE (fp.neg x2) (fp.neg x0))))
(assert (fp.gt (fp.mul RNE (fp.neg x12) (fp.add RNE x9 x3)) (fp.sub RNE (fp.mul RNE x0 x7) (fp.mul RNE x8 x3))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x8 x1) (fp.sub RNE x11 x9)) (fp.sub RNE (fp.sub RNE x6 x8) (fp.sub RNE x11 x3))))
(assert (fp.geq (fp.add RNE (fp.neg x12) (fp.div RNE x7 x7)) (fp.div RNE (fp.sub RNE x12 x8) (fp.sub RNE x0 x3))))
(check-sat)
