(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE x7 x11) (fp.sub RNE x5 x0)) (fp.add RNE (fp.div RNE x10 x0) (fp.sub RNE x1 x10))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x13 x8) (fp.sub RNE x2 x0)) (fp.div RNE (fp.div RNE x6 x4) (fp.sub RNE x2 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x10 x3) (fp.div RNE x11 x8)) (fp.neg (fp.neg x10))))
(assert (fp.geq (fp.sub RNE (fp.neg x4) (fp.add RNE x3 x13)) (fp.neg (fp.add RNE x10 x6))))
(assert (fp.geq (fp.div RNE (fp.add RNE x4 x9) (fp.div RNE x13 x8)) (fp.div RNE (fp.neg x9) (fp.sub RNE x6 x0))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x12 x3) (fp.neg x1)) (fp.add RNE (fp.neg x6) (fp.sub RNE x7 x8))))
(assert (fp.lt (fp.add RNE (fp.neg x10) (fp.div RNE x3 x9)) (fp.sub RNE (fp.sub RNE x9 x6) (fp.mul RNE x2 x8))))
(assert (fp.leq (fp.add RNE (fp.neg x1) (fp.neg x7)) (fp.sub RNE (fp.div RNE x12 x7) (fp.div RNE x6 x7))))
(check-sat)
