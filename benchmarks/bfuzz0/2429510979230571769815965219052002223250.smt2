(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.add RNE x9 x3) (fp.mul RNE x7 x2)) (fp.mul RNE (fp.sub RNE x6 x10) (fp.div RNE x5 x13))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x13 x5) (fp.mul RNE x4 x11)) (fp.sub RNE (fp.sub RNE x4 x10) (fp.div RNE x2 x1))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x9 x11) (fp.div RNE x11 x4)) (fp.mul RNE (fp.div RNE x8 x3) (fp.div RNE x6 x11))))
(assert (fp.gt (fp.neg (fp.add RNE x2 x4)) (fp.sub RNE (fp.neg x3) (fp.div RNE x8 x0))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x6 x2) (fp.sub RNE x5 x13)) (fp.neg (fp.sub RNE x10 x11))))
(assert (fp.gt (fp.neg (fp.mul RNE x4 x7)) (fp.sub RNE (fp.mul RNE x10 x8) (fp.mul RNE x0 x11))))
(check-sat)
