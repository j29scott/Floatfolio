(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.add RNE x2 x0) (fp.mul RNE x3 x5)) (fp.div RNE (fp.neg x1) (fp.div RNE x4 x2))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x2 x4) (fp.sub RNE x7 x9)) (fp.mul RNE (fp.mul RNE x2 x8) (fp.mul RNE x5 x0))))
(assert (fp.gt (fp.div RNE (fp.neg x8) (fp.mul RNE x0 x3)) (fp.mul RNE (fp.mul RNE x3 x6) (fp.mul RNE x4 x8))))
(assert (fp.eq (fp.div RNE (fp.add RNE x9 x4) (fp.add RNE x8 x6)) (fp.div RNE (fp.add RNE x3 x8) (fp.div RNE x5 x8))))
(assert (fp.leq (fp.mul RNE (fp.neg x0) (fp.neg x9)) (fp.add RNE (fp.add RNE x1 x8) (fp.sub RNE x5 x7))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x8 x2) (fp.div RNE x0 x7)) (fp.add RNE (fp.div RNE x9 x7) (fp.div RNE x3 x8))))
(assert (fp.leq (fp.div RNE (fp.neg x5) (fp.sub RNE x2 x9)) (fp.neg (fp.neg x3))))
(assert (fp.leq (fp.add RNE (fp.div RNE x8 x3) (fp.div RNE x2 x7)) (fp.sub RNE (fp.mul RNE x6 x7) (fp.neg x2))))
(check-sat)
