(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.neg x4) (fp.neg x12)) (fp.add RNE (fp.sub RNE x6 x12) (fp.add RNE x4 x13))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x9 x6) (fp.neg x3)) (fp.neg (fp.add RNE x5 x15))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x9 x3) (fp.add RNE x13 x1)) (fp.sub RNE (fp.sub RNE x5 x10) (fp.div RNE x7 x15))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x9 x9) (fp.sub RNE x8 x3)) (fp.div RNE (fp.div RNE x0 x5) (fp.sub RNE x1 x9))))
(assert (fp.lt (fp.mul RNE (fp.neg x12) (fp.add RNE x3 x3)) (fp.div RNE (fp.add RNE x4 x9) (fp.div RNE x0 x11))))
(assert (fp.eq (fp.div RNE (fp.neg x8) (fp.mul RNE x8 x13)) (fp.sub RNE (fp.mul RNE x3 x5) (fp.div RNE x2 x0))))
(assert (fp.gt (fp.div RNE (fp.neg x3) (fp.add RNE x10 x5)) (fp.add RNE (fp.neg x5) (fp.add RNE x6 x15))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x10 x13) (fp.add RNE x9 x2)) (fp.div RNE (fp.sub RNE x12 x9) (fp.sub RNE x11 x10))))
(check-sat)
