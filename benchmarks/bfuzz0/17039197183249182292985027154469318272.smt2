(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE x17 x21) (fp.div RNE x20 x11)) (fp.sub RNE (fp.mul RNE x4 x15) (fp.add RNE x5 x3))) (fp.neg (fp.sub RNE (fp.mul RNE x9 x11) (fp.div RNE x21 x0)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE x17 x11) (fp.sub RNE x20 x3)) (fp.neg (fp.sub RNE x6 x19))) (fp.neg (fp.neg (fp.mul RNE x5 x18)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x3 x8) (fp.sub RNE x0 x17)) (fp.mul RNE (fp.neg x12) (fp.div RNE x0 x8))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x23 x3) (fp.add RNE x2 x22)) (fp.add RNE (fp.div RNE x13 x18) (fp.neg x7)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE x11 x7) (fp.add RNE x2 x8)) (fp.mul RNE (fp.div RNE x0 x12) (fp.sub RNE x19 x18))) (fp.neg (fp.neg (fp.add RNE x22 x4)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.div RNE x11 x13) (fp.neg x8))) (fp.add RNE (fp.div RNE (fp.add RNE x20 x19) (fp.add RNE x8 x9)) (fp.add RNE (fp.sub RNE x4 x13) (fp.div RNE x5 x6)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x23 x5) (fp.sub RNE x17 x14))) (fp.sub RNE (fp.mul RNE (fp.div RNE x6 x17) (fp.neg x6)) (fp.sub RNE (fp.mul RNE x13 x23) (fp.neg x8)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.neg x0) (fp.mul RNE x17 x11)) (fp.neg (fp.neg x15))) (fp.neg (fp.div RNE (fp.div RNE x15 x5) (fp.sub RNE x4 x9)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE x15 x13) (fp.neg x5)) (fp.div RNE (fp.add RNE x20 x17) (fp.add RNE x19 x0))) (fp.neg (fp.div RNE (fp.div RNE x23 x0) (fp.mul RNE x2 x4)))))
(assert (fp.gt (fp.neg (fp.neg (fp.neg x9))) (fp.sub RNE (fp.mul RNE (fp.neg x0) (fp.sub RNE x23 x11)) (fp.div RNE (fp.sub RNE x9 x20) (fp.neg x13)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.sub RNE x16 x21) (fp.add RNE x6 x23)) (fp.sub RNE (fp.add RNE x23 x15) (fp.sub RNE x6 x4))) (fp.div RNE (fp.mul RNE (fp.add RNE x3 x19) (fp.mul RNE x0 x10)) (fp.sub RNE (fp.sub RNE x8 x22) (fp.neg x12)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x18) (fp.div RNE x17 x10)) (fp.sub RNE (fp.mul RNE x0 x5) (fp.mul RNE x21 x8))) (fp.mul RNE (fp.neg (fp.mul RNE x7 x9)) (fp.neg (fp.add RNE x16 x21)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.add RNE x13 x4) (fp.neg x3)) (fp.div RNE (fp.mul RNE x15 x15) (fp.div RNE x19 x8))) (fp.sub RNE (fp.neg (fp.div RNE x10 x4)) (fp.add RNE (fp.sub RNE x7 x5) (fp.sub RNE x14 x10)))))
(check-sat)
