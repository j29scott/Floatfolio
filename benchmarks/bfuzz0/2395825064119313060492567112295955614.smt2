(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x5) (fp.div RNE x8 x4)))
(assert (fp.lt (fp.neg x3) (fp.div RNE x9 x3)))
(assert (fp.eq (fp.div RNE x4 x0) (fp.mul RNE x7 x9)))
(assert (fp.geq (fp.add RNE x8 x9) (fp.mul RNE x4 x1)))
(assert (fp.leq (fp.add RNE x2 x1) (fp.mul RNE x3 x3)))
(assert (fp.leq (fp.sub RNE x3 x2) (fp.add RNE x5 x5)))
(assert (fp.gt (fp.add RNE x6 x1) (fp.mul RNE x1 x1)))
(assert (fp.gt (fp.mul RNE x2 x2) (fp.sub RNE x4 x7)))
(assert (fp.lt (fp.sub RNE x2 x4) (fp.neg x8)))
(assert (fp.gt (fp.div RNE x0 x4) (fp.neg x10)))
(assert (fp.lt (fp.sub RNE x0 x9) (fp.mul RNE x2 x9)))
(assert (fp.leq (fp.neg x4) (fp.mul RNE x4 x9)))
(assert (fp.leq (fp.sub RNE x1 x6) (fp.div RNE x1 x5)))
(assert (fp.gt (fp.div RNE x3 x8) (fp.sub RNE x6 x7)))
(check-sat)
