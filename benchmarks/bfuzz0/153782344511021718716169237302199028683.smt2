(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x3 x9) (fp.div RNE x5 x2)) (fp.add RNE (fp.neg x3) (fp.mul RNE x1 x2))))
(assert (fp.geq (fp.neg (fp.mul RNE x9 x9)) (fp.div RNE (fp.div RNE x4 x4) (fp.add RNE x2 x6))))
(assert (fp.lt (fp.div RNE (fp.add RNE x0 x9) (fp.add RNE x7 x4)) (fp.div RNE (fp.mul RNE x4 x5) (fp.add RNE x3 x6))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x4 x9) (fp.div RNE x1 x7)) (fp.neg (fp.add RNE x1 x2))))
(assert (fp.lt (fp.div RNE (fp.neg x0) (fp.mul RNE x5 x5)) (fp.sub RNE (fp.div RNE x5 x0) (fp.mul RNE x1 x4))))
(assert (fp.leq (fp.neg (fp.add RNE x2 x4)) (fp.div RNE (fp.sub RNE x4 x9) (fp.neg x4))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x0 x3) (fp.div RNE x1 x2)) (fp.mul RNE (fp.neg x6) (fp.sub RNE x1 x8))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x8 x1) (fp.sub RNE x6 x1)) (fp.sub RNE (fp.mul RNE x0 x8) (fp.neg x2))))
(assert (fp.geq (fp.div RNE (fp.add RNE x6 x3) (fp.div RNE x7 x7)) (fp.div RNE (fp.add RNE x1 x8) (fp.mul RNE x9 x6))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x9 x3) (fp.neg x8)) (fp.mul RNE (fp.div RNE x3 x6) (fp.sub RNE x5 x3))))
(assert (fp.lt (fp.neg (fp.add RNE x3 x9)) (fp.neg (fp.div RNE x3 x6))))
(assert (fp.gt (fp.add RNE (fp.neg x6) (fp.sub RNE x1 x0)) (fp.sub RNE (fp.sub RNE x9 x4) (fp.sub RNE x9 x6))))
(check-sat)
