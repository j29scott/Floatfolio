(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE x9 x4) (fp.sub RNE x6 x5)) (fp.sub RNE (fp.mul RNE x0 x7) (fp.div RNE x9 x10))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x3 x11) (fp.mul RNE x1 x11)) (fp.mul RNE (fp.mul RNE x4 x0) (fp.neg x1))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x1) (fp.add RNE x10 x5)) (fp.div RNE (fp.add RNE x9 x1) (fp.neg x4))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x8 x11) (fp.mul RNE x4 x4)) (fp.mul RNE (fp.sub RNE x8 x2) (fp.sub RNE x1 x3))))
(assert (fp.geq (fp.neg (fp.sub RNE x3 x7)) (fp.div RNE (fp.neg x0) (fp.div RNE x11 x9))))
(assert (fp.gt (fp.mul RNE (fp.neg x12) (fp.mul RNE x2 x9)) (fp.sub RNE (fp.add RNE x0 x0) (fp.div RNE x5 x7))))
(assert (fp.geq (fp.div RNE (fp.add RNE x10 x6) (fp.sub RNE x0 x2)) (fp.neg (fp.sub RNE x12 x2))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x2 x8) (fp.div RNE x9 x2)) (fp.mul RNE (fp.sub RNE x0 x3) (fp.div RNE x12 x9))))
(assert (fp.eq (fp.add RNE (fp.add RNE x6 x11) (fp.neg x7)) (fp.div RNE (fp.mul RNE x2 x8) (fp.add RNE x5 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x0 x8) (fp.neg x0)) (fp.add RNE (fp.mul RNE x0 x6) (fp.neg x7))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x5 x8) (fp.div RNE x0 x2)) (fp.neg (fp.add RNE x0 x10))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x3 x9) (fp.add RNE x1 x5)) (fp.sub RNE (fp.neg x3) (fp.neg x0))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x11 x0) (fp.sub RNE x8 x12)) (fp.add RNE (fp.neg x11) (fp.neg x7))))
(assert (fp.geq (fp.neg (fp.add RNE x2 x0)) (fp.sub RNE (fp.neg x0) (fp.add RNE x5 x7))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x0 x4) (fp.add RNE x11 x9)) (fp.div RNE (fp.div RNE x9 x9) (fp.neg x12))))
(assert (fp.lt (fp.div RNE (fp.div RNE x10 x11) (fp.neg x1)) (fp.sub RNE (fp.neg x7) (fp.div RNE x9 x11))))
(assert (fp.eq (fp.neg (fp.neg x5)) (fp.div RNE (fp.add RNE x5 x3) (fp.add RNE x11 x8))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x8 x10) (fp.sub RNE x12 x9)) (fp.mul RNE (fp.div RNE x0 x10) (fp.neg x8))))
(assert (fp.eq (fp.add RNE (fp.div RNE x8 x11) (fp.mul RNE x8 x0)) (fp.div RNE (fp.mul RNE x2 x12) (fp.div RNE x9 x3))))
(check-sat)
