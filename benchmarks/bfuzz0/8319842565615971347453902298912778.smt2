(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x3 x3) (fp.neg x3)))
(assert (fp.leq (fp.add RNE x9 x9) (fp.sub RNE x7 x2)))
(assert (fp.lt (fp.mul RNE x10 x8) (fp.mul RNE x3 x6)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.neg x4)))
(assert (fp.leq (fp.div RNE x0 x5) (fp.add RNE x10 x10)))
(assert (fp.gt (fp.neg x6) (fp.neg x5)))
(assert (fp.lt (fp.mul RNE x9 x9) (fp.mul RNE x10 x0)))
(assert (fp.gt (fp.neg x5) (fp.neg x1)))
(assert (fp.geq (fp.div RNE x3 x9) (fp.add RNE x3 x0)))
(assert (fp.gt (fp.div RNE x8 x2) (fp.mul RNE x4 x9)))
(assert (fp.leq (fp.div RNE x9 x6) (fp.sub RNE x8 x6)))
(assert (fp.geq (fp.sub RNE x9 x3) (fp.neg x7)))
(assert (fp.lt (fp.neg x9) (fp.neg x4)))
(assert (fp.eq (fp.sub RNE x1 x0) (fp.mul RNE x1 x0)))
(check-sat)
