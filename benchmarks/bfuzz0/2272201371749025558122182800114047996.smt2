(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.mul RNE x5 x12) (fp.add RNE x7 x2)) (fp.neg (fp.neg x8))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x12 x4) (fp.neg x11)) (fp.sub RNE (fp.add RNE x5 x11) (fp.mul RNE x9 x1))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x0 x5) (fp.mul RNE x8 x4)) (fp.neg (fp.neg x1))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x12 x5) (fp.div RNE x10 x8)) (fp.add RNE (fp.add RNE x11 x9) (fp.neg x1))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x7 x6) (fp.mul RNE x12 x5)) (fp.sub RNE (fp.add RNE x8 x3) (fp.mul RNE x0 x5))))
(check-sat)
