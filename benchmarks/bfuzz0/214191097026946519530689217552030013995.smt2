(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg x7) (fp.div RNE x7 x3)) (fp.sub RNE (fp.add RNE x9 x19) (fp.div RNE x8 x11))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x19 x2) (fp.mul RNE x0 x0)) (fp.mul RNE (fp.div RNE x10 x5) (fp.div RNE x16 x7))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x10 x5) (fp.neg x14)) (fp.mul RNE (fp.div RNE x19 x9) (fp.neg x1))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x16 x12) (fp.neg x3)) (fp.add RNE (fp.add RNE x15 x10) (fp.add RNE x19 x7))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x2 x1) (fp.neg x12)) (fp.add RNE (fp.sub RNE x3 x6) (fp.mul RNE x11 x14))))
(assert (fp.leq (fp.neg (fp.neg x3)) (fp.add RNE (fp.div RNE x1 x0) (fp.sub RNE x1 x19))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x2 x15) (fp.sub RNE x0 x5)) (fp.div RNE (fp.add RNE x0 x6) (fp.add RNE x8 x12))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x5 x18) (fp.div RNE x0 x12)) (fp.add RNE (fp.sub RNE x7 x5) (fp.sub RNE x15 x11))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x12 x9) (fp.add RNE x16 x5)) (fp.add RNE (fp.sub RNE x18 x19) (fp.mul RNE x1 x3))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.add RNE x0 x1)) (fp.add RNE (fp.mul RNE x4 x8) (fp.mul RNE x11 x13))))
(assert (fp.geq (fp.neg (fp.sub RNE x4 x17)) (fp.add RNE (fp.sub RNE x5 x19) (fp.add RNE x2 x16))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x5 x1) (fp.sub RNE x13 x5)) (fp.add RNE (fp.div RNE x14 x16) (fp.sub RNE x7 x5))))
(assert (fp.geq (fp.div RNE (fp.div RNE x16 x15) (fp.add RNE x12 x16)) (fp.sub RNE (fp.mul RNE x2 x17) (fp.neg x17))))
(check-sat)
