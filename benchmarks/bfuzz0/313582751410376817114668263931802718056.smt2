(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE x7 x9) (fp.add RNE x9 x5)))
(assert (fp.geq (fp.mul RNE x4 x10) (fp.mul RNE x1 x1)))
(assert (fp.gt (fp.add RNE x6 x5) (fp.div RNE x2 x3)))
(assert (fp.leq (fp.sub RNE x11 x7) (fp.div RNE x1 x12)))
(assert (fp.lt (fp.neg x8) (fp.add RNE x10 x12)))
(assert (fp.gt (fp.add RNE x2 x5) (fp.mul RNE x0 x8)))
(assert (fp.lt (fp.add RNE x5 x3) (fp.neg x5)))
(assert (fp.geq (fp.div RNE x10 x2) (fp.neg x11)))
(assert (fp.lt (fp.sub RNE x0 x4) (fp.neg x2)))
(assert (fp.geq (fp.sub RNE x4 x11) (fp.add RNE x1 x10)))
(assert (fp.lt (fp.mul RNE x8 x11) (fp.neg x5)))
(assert (fp.leq (fp.add RNE x8 x6) (fp.div RNE x6 x4)))
(assert (fp.geq (fp.sub RNE x8 x6) (fp.div RNE x11 x7)))
(assert (fp.gt (fp.add RNE x9 x5) (fp.neg x2)))
(check-sat)
