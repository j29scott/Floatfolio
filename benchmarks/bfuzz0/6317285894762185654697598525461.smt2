(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.div RNE (fp.neg x6) (fp.sub RNE x9 x3))) (fp.add RNE (fp.div RNE (fp.mul RNE x7 x0) (fp.neg x8)) (fp.add RNE (fp.add RNE x2 x8) (fp.mul RNE x9 x9)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE x8 x8) (fp.div RNE x6 x2)) (fp.sub RNE (fp.mul RNE x8 x9) (fp.neg x8))) (fp.mul RNE (fp.sub RNE (fp.add RNE x6 x5) (fp.sub RNE x10 x9)) (fp.add RNE (fp.add RNE x4 x2) (fp.sub RNE x10 x5)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x2 x8) (fp.div RNE x0 x9)) (fp.mul RNE (fp.sub RNE x9 x2) (fp.add RNE x7 x8))) (fp.sub RNE (fp.div RNE (fp.add RNE x2 x1) (fp.neg x8)) (fp.div RNE (fp.sub RNE x8 x5) (fp.mul RNE x0 x5)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE x10 x9) (fp.neg x0)) (fp.add RNE (fp.add RNE x1 x6) (fp.add RNE x5 x0))) (fp.neg (fp.neg (fp.mul RNE x8 x8)))))
(check-sat)
