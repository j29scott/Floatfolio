(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x9 x9) (fp.add RNE x1 x7)))
(assert (fp.lt (fp.add RNE x8 x8) (fp.mul RNE x0 x10)))
(assert (fp.eq (fp.neg x9) (fp.sub RNE x7 x5)))
(assert (fp.leq (fp.add RNE x9 x3) (fp.neg x1)))
(assert (fp.lt (fp.add RNE x3 x2) (fp.mul RNE x0 x6)))
(assert (fp.lt (fp.sub RNE x0 x0) (fp.add RNE x7 x2)))
(assert (fp.geq (fp.neg x9) (fp.add RNE x3 x1)))
(assert (fp.geq (fp.add RNE x3 x1) (fp.add RNE x3 x3)))
(assert (fp.leq (fp.div RNE x10 x1) (fp.add RNE x6 x0)))
(assert (fp.gt (fp.mul RNE x5 x10) (fp.mul RNE x0 x1)))
(assert (fp.leq (fp.div RNE x10 x10) (fp.div RNE x1 x0)))
(assert (fp.eq (fp.mul RNE x8 x8) (fp.div RNE x8 x0)))
(assert (fp.eq (fp.neg x8) (fp.mul RNE x9 x1)))
(assert (fp.geq (fp.sub RNE x2 x5) (fp.neg x1)))
(assert (fp.eq (fp.div RNE x5 x10) (fp.div RNE x10 x2)))
(assert (fp.lt (fp.add RNE x9 x10) (fp.mul RNE x0 x8)))
(check-sat)
