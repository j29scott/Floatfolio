(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x8 x0) (fp.neg x12)))
(assert (fp.leq (fp.add RNE x5 x2) (fp.mul RNE x13 x21)))
(assert (fp.leq (fp.sub RNE x4 x19) (fp.div RNE x9 x15)))
(assert (fp.lt (fp.neg x10) (fp.mul RNE x18 x0)))
(assert (fp.eq (fp.add RNE x22 x22) (fp.sub RNE x0 x15)))
(assert (fp.lt (fp.sub RNE x20 x14) (fp.add RNE x10 x21)))
(assert (fp.lt (fp.add RNE x13 x15) (fp.add RNE x1 x9)))
(assert (fp.gt (fp.add RNE x4 x7) (fp.add RNE x13 x12)))
(assert (fp.geq (fp.neg x18) (fp.div RNE x20 x17)))
(check-sat)
