(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE x2 x9) (fp.sub RNE x5 x5)))
(assert (fp.leq (fp.neg x6) (fp.add RNE x1 x0)))
(assert (fp.leq (fp.mul RNE x0 x7) (fp.add RNE x3 x9)))
(assert (fp.gt (fp.neg x3) (fp.add RNE x9 x3)))
(assert (fp.lt (fp.add RNE x7 x10) (fp.add RNE x3 x0)))
(assert (fp.geq (fp.mul RNE x8 x5) (fp.neg x1)))
(assert (fp.geq (fp.add RNE x3 x6) (fp.sub RNE x4 x7)))
(assert (fp.eq (fp.div RNE x8 x3) (fp.sub RNE x4 x2)))
(assert (fp.gt (fp.sub RNE x0 x4) (fp.neg x4)))
(assert (fp.eq (fp.mul RNE x5 x8) (fp.div RNE x2 x4)))
(assert (fp.gt (fp.div RNE x3 x9) (fp.add RNE x3 x8)))
(assert (fp.gt (fp.neg x8) (fp.div RNE x5 x1)))
(assert (fp.lt (fp.sub RNE x9 x10) (fp.div RNE x5 x0)))
(check-sat)
