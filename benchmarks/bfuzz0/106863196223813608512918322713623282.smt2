(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.neg x8) (fp.sub RNE x10 x9)) (fp.mul RNE (fp.add RNE x3 x3) (fp.mul RNE x10 x9))) (fp.neg (fp.add RNE (fp.add RNE x11 x3) (fp.add RNE x4 x10)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE x5 x9) (fp.sub RNE x7 x4))) (fp.div RNE (fp.add RNE (fp.div RNE x3 x11) (fp.div RNE x12 x2)) (fp.sub RNE (fp.neg x7) (fp.div RNE x4 x3)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.mul RNE x9 x11)) (fp.div RNE (fp.add RNE x2 x3) (fp.div RNE x6 x1))) (fp.div RNE (fp.add RNE (fp.add RNE x4 x0) (fp.mul RNE x11 x7)) (fp.add RNE (fp.neg x11) (fp.sub RNE x8 x5)))))
(check-sat)
