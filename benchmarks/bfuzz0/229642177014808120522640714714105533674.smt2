(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.neg x5) (fp.sub RNE x6 x11)) (fp.neg (fp.add RNE x4 x3))) (fp.add RNE (fp.add RNE (fp.mul RNE x9 x8) (fp.neg x16)) (fp.add RNE (fp.add RNE x14 x15) (fp.neg x5)))) (fp.div RNE (fp.div RNE (fp.neg (fp.mul RNE x0 x15)) (fp.add RNE (fp.neg x0) (fp.neg x11))) (fp.mul RNE (fp.div RNE (fp.mul RNE x4 x6) (fp.sub RNE x1 x8)) (fp.sub RNE (fp.add RNE x17 x0) (fp.sub RNE x5 x9))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x8 x13) (fp.sub RNE x10 x7)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.div RNE x9 x2))) (fp.mul RNE (fp.sub RNE (fp.neg x13) (fp.sub RNE x12 x0)) (fp.mul RNE (fp.div RNE x6 x10) (fp.mul RNE x8 x1)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x2) (fp.add RNE x7 x9)) (fp.add RNE (fp.mul RNE x15 x10) (fp.sub RNE x6 x8))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE (fp.neg x16) (fp.mul RNE x15 x14))) (fp.div RNE (fp.div RNE (fp.mul RNE x0 x5) (fp.sub RNE x0 x5)) (fp.sub RNE (fp.div RNE x11 x5) (fp.div RNE x0 x3)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x13 x15) (fp.mul RNE x1 x1)) (fp.sub RNE (fp.neg x1) (fp.neg x4))) (fp.neg (fp.neg (fp.mul RNE x10 x7))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x12 x10) (fp.neg x10)) (fp.neg (fp.mul RNE x1 x17))) (fp.neg (fp.div RNE (fp.div RNE x16 x5) (fp.sub RNE x7 x12)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x5 x5) (fp.mul RNE x12 x14)) (fp.neg (fp.neg x1))) (fp.mul RNE (fp.neg (fp.div RNE x6 x4)) (fp.div RNE (fp.div RNE x11 x4) (fp.sub RNE x16 x4))))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE (fp.mul RNE x8 x8) (fp.neg x3)) (fp.neg (fp.add RNE x13 x11))) (fp.mul RNE (fp.neg (fp.add RNE x3 x11)) (fp.div RNE (fp.mul RNE x2 x2) (fp.neg x2)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.mul RNE x2 x0) (fp.neg x17)) (fp.neg (fp.mul RNE x3 x2))) (fp.mul RNE (fp.neg (fp.mul RNE x3 x0)) (fp.neg (fp.mul RNE x15 x14))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE (fp.mul RNE x1 x3) (fp.mul RNE x2 x0)) (fp.neg (fp.mul RNE x4 x7))) (fp.sub RNE (fp.mul RNE (fp.div RNE x17 x2) (fp.add RNE x8 x4)) (fp.add RNE (fp.div RNE x9 x10) (fp.mul RNE x16 x3)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.add RNE x10 x13) (fp.sub RNE x16 x3)) (fp.mul RNE (fp.mul RNE x1 x2) (fp.sub RNE x15 x6))) (fp.sub RNE (fp.add RNE (fp.div RNE x17 x4) (fp.sub RNE x11 x6)) (fp.div RNE (fp.sub RNE x16 x3) (fp.add RNE x7 x10))))))
(check-sat)
