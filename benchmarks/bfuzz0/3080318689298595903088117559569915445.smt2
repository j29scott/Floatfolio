(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.sub RNE x2 x14) (fp.sub RNE x14 x10)) (fp.mul RNE (fp.mul RNE x12 x1) (fp.add RNE x13 x12))) (fp.neg (fp.sub RNE (fp.neg x11) (fp.sub RNE x13 x11)))))
(assert (fp.gt (fp.neg (fp.neg (fp.neg x15))) (fp.div RNE (fp.add RNE (fp.add RNE x8 x6) (fp.mul RNE x13 x12)) (fp.neg (fp.sub RNE x11 x12)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x12 x7) (fp.sub RNE x13 x10)) (fp.add RNE (fp.mul RNE x10 x1) (fp.div RNE x14 x12))) (fp.div RNE (fp.div RNE (fp.add RNE x0 x10) (fp.div RNE x6 x5)) (fp.add RNE (fp.mul RNE x2 x14) (fp.add RNE x1 x2)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x12) (fp.neg x9)) (fp.sub RNE (fp.add RNE x13 x3) (fp.sub RNE x12 x13))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x7) (fp.sub RNE x9 x1)) (fp.sub RNE (fp.neg x12) (fp.mul RNE x11 x7)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg x12) (fp.sub RNE x11 x11))) (fp.mul RNE (fp.div RNE (fp.sub RNE x3 x14) (fp.add RNE x0 x5)) (fp.neg (fp.add RNE x4 x3)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.mul RNE x13 x10) (fp.mul RNE x7 x13))) (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.mul RNE x1 x12)) (fp.div RNE (fp.sub RNE x3 x4) (fp.mul RNE x0 x11)))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x4 x14) (fp.div RNE x1 x1)) (fp.sub RNE (fp.div RNE x8 x13) (fp.mul RNE x6 x0))) (fp.mul RNE (fp.add RNE (fp.add RNE x14 x11) (fp.sub RNE x2 x4)) (fp.neg (fp.sub RNE x9 x2)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x7 x5) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x7 x7) (fp.mul RNE x4 x1))) (fp.neg (fp.add RNE (fp.mul RNE x11 x13) (fp.sub RNE x15 x12)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.neg x0) (fp.add RNE x13 x10)) (fp.div RNE (fp.sub RNE x12 x3) (fp.mul RNE x13 x1))) (fp.mul RNE (fp.neg (fp.neg x0)) (fp.mul RNE (fp.mul RNE x0 x5) (fp.div RNE x0 x11)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.sub RNE x15 x13) (fp.mul RNE x8 x14))) (fp.neg (fp.div RNE (fp.div RNE x7 x15) (fp.neg x4)))))
(check-sat)
