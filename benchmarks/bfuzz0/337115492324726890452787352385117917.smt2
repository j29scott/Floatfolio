(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.sub RNE x5 x14) (fp.mul RNE x9 x1)) (fp.neg (fp.sub RNE x3 x8))) (fp.mul RNE (fp.div RNE (fp.div RNE x8 x10) (fp.div RNE x0 x14)) (fp.neg (fp.div RNE x5 x14)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x5 x13) (fp.neg x12)) (fp.div RNE (fp.div RNE x10 x13) (fp.div RNE x2 x14))) (fp.mul RNE (fp.add RNE (fp.div RNE x8 x5) (fp.mul RNE x10 x12)) (fp.div RNE (fp.mul RNE x3 x14) (fp.sub RNE x16 x16)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.mul RNE x8 x14)) (fp.div RNE (fp.add RNE x5 x13) (fp.div RNE x10 x12))) (fp.sub RNE (fp.mul RNE (fp.neg x12) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x12 x8) (fp.add RNE x2 x2)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg x1) (fp.mul RNE x8 x16))) (fp.div RNE (fp.neg (fp.mul RNE x15 x15)) (fp.add RNE (fp.add RNE x16 x7) (fp.neg x12)))))
(check-sat)
