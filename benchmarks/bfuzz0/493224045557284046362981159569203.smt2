(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x20 x5) (fp.add RNE x22 x3)))
(assert (fp.lt (fp.add RNE x11 x23) (fp.neg x2)))
(assert (fp.geq (fp.neg x19) (fp.sub RNE x11 x1)))
(assert (fp.lt (fp.div RNE x20 x5) (fp.div RNE x12 x5)))
(assert (fp.leq (fp.sub RNE x24 x21) (fp.mul RNE x21 x3)))
(assert (fp.leq (fp.neg x11) (fp.div RNE x9 x2)))
(assert (fp.geq (fp.add RNE x15 x22) (fp.neg x13)))
(assert (fp.gt (fp.add RNE x4 x11) (fp.sub RNE x15 x0)))
(assert (fp.leq (fp.neg x19) (fp.neg x8)))
(assert (fp.geq (fp.div RNE x0 x18) (fp.neg x17)))
(assert (fp.eq (fp.add RNE x3 x1) (fp.neg x3)))
(assert (fp.geq (fp.sub RNE x2 x3) (fp.add RNE x3 x5)))
(assert (fp.eq (fp.add RNE x9 x23) (fp.neg x8)))
(assert (fp.lt (fp.neg x23) (fp.add RNE x21 x24)))
(check-sat)
