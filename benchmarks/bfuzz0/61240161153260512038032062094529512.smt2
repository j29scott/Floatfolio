(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x1 x7))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x5 x7) (fp.add RNE x0 x6)) (fp.mul RNE (fp.add RNE x8 x1) (fp.add RNE x8 x5)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.mul RNE x1 x8) (fp.add RNE x6 x3)) (fp.neg (fp.neg x7))) (fp.sub RNE (fp.neg (fp.mul RNE x4 x7)) (fp.sub RNE (fp.sub RNE x5 x5) (fp.div RNE x8 x4)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.sub RNE x8 x1) (fp.mul RNE x2 x7)) (fp.add RNE (fp.neg x1) (fp.add RNE x5 x0))) (fp.div RNE (fp.sub RNE (fp.div RNE x2 x8) (fp.div RNE x3 x2)) (fp.add RNE (fp.sub RNE x1 x9) (fp.mul RNE x4 x1)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x4 x2) (fp.neg x0)) (fp.sub RNE (fp.mul RNE x4 x4) (fp.div RNE x9 x3))) (fp.add RNE (fp.add RNE (fp.add RNE x6 x5) (fp.mul RNE x3 x4)) (fp.mul RNE (fp.add RNE x4 x9) (fp.div RNE x9 x3)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.div RNE x5 x4) (fp.add RNE x2 x2)) (fp.mul RNE (fp.add RNE x9 x5) (fp.neg x2))) (fp.div RNE (fp.neg (fp.mul RNE x1 x5)) (fp.neg (fp.div RNE x7 x3)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x1 x6) (fp.mul RNE x0 x0)) (fp.add RNE (fp.div RNE x9 x4) (fp.add RNE x1 x3))) (fp.mul RNE (fp.add RNE (fp.add RNE x8 x8) (fp.add RNE x3 x8)) (fp.neg (fp.mul RNE x7 x4)))))
(check-sat)
