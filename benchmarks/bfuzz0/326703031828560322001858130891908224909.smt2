(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x21 x2) (fp.neg x7)) (fp.div RNE (fp.neg x13) (fp.mul RNE x2 x15))))
(assert (fp.lt (fp.div RNE (fp.neg x21) (fp.add RNE x17 x0)) (fp.mul RNE (fp.sub RNE x19 x3) (fp.add RNE x7 x12))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x14 x5) (fp.sub RNE x9 x14)) (fp.div RNE (fp.div RNE x21 x10) (fp.div RNE x6 x6))))
(assert (fp.geq (fp.neg (fp.mul RNE x19 x5)) (fp.mul RNE (fp.add RNE x4 x7) (fp.div RNE x0 x5))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x2 x22) (fp.div RNE x13 x1)) (fp.sub RNE (fp.sub RNE x21 x9) (fp.sub RNE x3 x20))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x8 x0) (fp.add RNE x0 x2)) (fp.add RNE (fp.sub RNE x4 x2) (fp.neg x10))))
(assert (fp.eq (fp.neg (fp.neg x20)) (fp.add RNE (fp.add RNE x2 x11) (fp.neg x0))))
(assert (fp.leq (fp.neg (fp.div RNE x16 x5)) (fp.neg (fp.neg x4))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x16 x5) (fp.sub RNE x14 x22)) (fp.add RNE (fp.mul RNE x11 x13) (fp.add RNE x11 x9))))
(assert (fp.gt (fp.neg (fp.mul RNE x22 x20)) (fp.div RNE (fp.div RNE x16 x2) (fp.neg x2))))
(assert (fp.geq (fp.sub RNE (fp.neg x12) (fp.mul RNE x3 x18)) (fp.add RNE (fp.div RNE x18 x18) (fp.neg x14))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x3 x11) (fp.sub RNE x3 x9)) (fp.add RNE (fp.neg x1) (fp.neg x7))))
(assert (fp.lt (fp.neg (fp.mul RNE x0 x16)) (fp.mul RNE (fp.sub RNE x11 x14) (fp.sub RNE x5 x10))))
(assert (fp.geq (fp.neg (fp.add RNE x3 x18)) (fp.add RNE (fp.sub RNE x5 x10) (fp.neg x1))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x18 x16) (fp.mul RNE x19 x12)) (fp.sub RNE (fp.mul RNE x10 x1) (fp.neg x14))))
(assert (fp.leq (fp.sub RNE (fp.neg x8) (fp.add RNE x8 x12)) (fp.mul RNE (fp.sub RNE x10 x22) (fp.add RNE x10 x2))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x6 x18) (fp.mul RNE x12 x12)) (fp.neg (fp.sub RNE x11 x20))))
(assert (fp.lt (fp.add RNE (fp.div RNE x22 x22) (fp.sub RNE x0 x4)) (fp.add RNE (fp.add RNE x10 x7) (fp.mul RNE x7 x10))))
(assert (fp.lt (fp.sub RNE (fp.neg x16) (fp.sub RNE x17 x12)) (fp.div RNE (fp.mul RNE x5 x10) (fp.neg x11))))
(check-sat)
