(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE x6 x3) (fp.mul RNE x5 x11)))
(assert (fp.leq (fp.neg x2) (fp.neg x5)))
(assert (fp.geq (fp.sub RNE x2 x5) (fp.sub RNE x8 x5)))
(assert (fp.geq (fp.sub RNE x8 x4) (fp.div RNE x4 x11)))
(assert (fp.geq (fp.neg x8) (fp.neg x5)))
(assert (fp.eq (fp.neg x10) (fp.add RNE x11 x0)))
(assert (fp.eq (fp.add RNE x10 x1) (fp.add RNE x10 x3)))
(assert (fp.gt (fp.sub RNE x9 x3) (fp.mul RNE x4 x8)))
(assert (fp.gt (fp.sub RNE x0 x1) (fp.add RNE x0 x8)))
(assert (fp.eq (fp.div RNE x3 x11) (fp.div RNE x7 x3)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x7 x1)))
(assert (fp.leq (fp.sub RNE x10 x7) (fp.sub RNE x7 x5)))
(assert (fp.leq (fp.div RNE x10 x9) (fp.sub RNE x2 x3)))
(check-sat)
