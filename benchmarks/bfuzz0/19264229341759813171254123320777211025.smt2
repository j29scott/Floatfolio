(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x9 x14) (fp.sub RNE x0 x14)))
(assert (fp.gt (fp.sub RNE x0 x9) (fp.neg x11)))
(assert (fp.gt (fp.div RNE x14 x1) (fp.mul RNE x7 x3)))
(assert (fp.leq (fp.neg x9) (fp.add RNE x3 x5)))
(assert (fp.eq (fp.div RNE x12 x7) (fp.div RNE x8 x12)))
(assert (fp.eq (fp.sub RNE x8 x9) (fp.div RNE x2 x12)))
(assert (fp.lt (fp.div RNE x4 x0) (fp.neg x6)))
(assert (fp.eq (fp.mul RNE x3 x0) (fp.neg x7)))
(assert (fp.eq (fp.mul RNE x7 x12) (fp.div RNE x7 x3)))
(assert (fp.leq (fp.div RNE x10 x10) (fp.mul RNE x6 x10)))
(assert (fp.gt (fp.add RNE x3 x10) (fp.mul RNE x9 x10)))
(assert (fp.geq (fp.div RNE x4 x9) (fp.add RNE x1 x9)))
(check-sat)
