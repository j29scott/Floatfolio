(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE (fp.div RNE x11 x11) (fp.mul RNE x21 x19)) (fp.mul RNE (fp.neg x2) (fp.div RNE x3 x6)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x8 x16) (fp.sub RNE x7 x16)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x3 x18))) (fp.mul RNE (fp.sub RNE (fp.neg x5) (fp.add RNE x11 x9)) (fp.add RNE (fp.sub RNE x20 x1) (fp.mul RNE x4 x12))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x1 x12) (fp.div RNE x21 x5)) (fp.neg (fp.sub RNE x16 x15))) (fp.div RNE (fp.sub RNE (fp.div RNE x6 x5) (fp.add RNE x21 x5)) (fp.add RNE (fp.mul RNE x12 x17) (fp.sub RNE x12 x12)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.neg x14)) (fp.mul RNE (fp.neg x9) (fp.sub RNE x21 x0))) (fp.neg (fp.add RNE (fp.mul RNE x4 x18) (fp.sub RNE x0 x14))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.mul RNE x13 x2)) (fp.add RNE (fp.sub RNE x18 x7) (fp.div RNE x6 x9))) (fp.neg (fp.add RNE (fp.sub RNE x4 x14) (fp.add RNE x14 x3)))) (fp.div RNE (fp.neg (fp.add RNE (fp.sub RNE x8 x19) (fp.div RNE x4 x19))) (fp.add RNE (fp.neg (fp.sub RNE x4 x9)) (fp.add RNE (fp.sub RNE x5 x15) (fp.neg x3))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg (fp.add RNE x16 x4)) (fp.neg (fp.mul RNE x15 x15))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x10 x7) (fp.add RNE x9 x16)) (fp.neg (fp.neg x14)))) (fp.sub RNE (fp.neg (fp.neg (fp.sub RNE x19 x5))) (fp.neg (fp.add RNE (fp.mul RNE x1 x19) (fp.div RNE x3 x17))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x0 x3) (fp.neg x1)) (fp.mul RNE (fp.neg x11) (fp.neg x0))) (fp.div RNE (fp.div RNE (fp.add RNE x2 x10) (fp.add RNE x12 x21)) (fp.div RNE (fp.neg x2) (fp.mul RNE x0 x11)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.mul RNE x19 x5)) (fp.neg (fp.div RNE x4 x17))) (fp.add RNE (fp.div RNE (fp.div RNE x19 x11) (fp.mul RNE x3 x0)) (fp.sub RNE (fp.div RNE x21 x3) (fp.add RNE x12 x16))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE (fp.add RNE x21 x0) (fp.mul RNE x3 x21)) (fp.mul RNE (fp.neg x18) (fp.div RNE x16 x12))) (fp.mul RNE (fp.div RNE (fp.mul RNE x11 x6) (fp.add RNE x12 x0)) (fp.sub RNE (fp.neg x15) (fp.mul RNE x16 x3)))) (fp.neg (fp.add RNE (fp.neg (fp.add RNE x14 x13)) (fp.add RNE (fp.neg x15) (fp.mul RNE x21 x4))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.neg x19) (fp.add RNE x12 x4)) (fp.div RNE (fp.div RNE x12 x2) (fp.div RNE x1 x8))) (fp.div RNE (fp.sub RNE (fp.add RNE x11 x14) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x5 x8) (fp.mul RNE x4 x17)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.div RNE x20 x13) (fp.div RNE x19 x14)) (fp.mul RNE (fp.add RNE x11 x3) (fp.sub RNE x11 x17))) (fp.add RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x16 x10)) (fp.div RNE (fp.div RNE x3 x12) (fp.add RNE x13 x1))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x13) (fp.add RNE x5 x16)) (fp.add RNE (fp.sub RNE x18 x11) (fp.neg x8))) (fp.neg (fp.add RNE (fp.add RNE x20 x17) (fp.div RNE x13 x14)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.div RNE x10 x8) (fp.div RNE x14 x17)) (fp.sub RNE (fp.neg x18) (fp.div RNE x3 x2))) (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x17) (fp.mul RNE x1 x4)) (fp.mul RNE (fp.div RNE x6 x1) (fp.mul RNE x8 x9))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.neg x12) (fp.neg x20)) (fp.div RNE (fp.sub RNE x4 x2) (fp.div RNE x7 x2))) (fp.div RNE (fp.neg (fp.div RNE x0 x20)) (fp.mul RNE (fp.mul RNE x10 x18) (fp.div RNE x5 x21)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x12)) (fp.sub RNE (fp.mul RNE x14 x1) (fp.mul RNE x4 x10))) (fp.add RNE (fp.div RNE (fp.sub RNE x12 x6) (fp.add RNE x2 x12)) (fp.div RNE (fp.div RNE x12 x6) (fp.sub RNE x3 x11))))))
(check-sat)
