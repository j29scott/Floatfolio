(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.mul RNE x5 x7) (fp.add RNE x10 x1)) (fp.div RNE (fp.add RNE x12 x13) (fp.add RNE x5 x5))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x0 x10) (fp.neg x0)) (fp.add RNE (fp.add RNE x0 x11) (fp.mul RNE x8 x5))))
(assert (fp.leq (fp.neg (fp.sub RNE x13 x7)) (fp.add RNE (fp.sub RNE x1 x5) (fp.mul RNE x6 x9))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x9 x1) (fp.add RNE x2 x11)) (fp.sub RNE (fp.neg x7) (fp.neg x5))))
(assert (fp.lt (fp.neg (fp.mul RNE x6 x2)) (fp.sub RNE (fp.div RNE x6 x2) (fp.add RNE x10 x1))))
(assert (fp.eq (fp.neg (fp.sub RNE x8 x4)) (fp.add RNE (fp.div RNE x10 x0) (fp.div RNE x3 x12))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x1 x7) (fp.mul RNE x7 x10)) (fp.add RNE (fp.neg x10) (fp.sub RNE x12 x3))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x9 x6) (fp.div RNE x12 x8)) (fp.add RNE (fp.add RNE x3 x6) (fp.mul RNE x9 x11))))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.sub RNE x12 x8)) (fp.add RNE (fp.div RNE x0 x4) (fp.add RNE x10 x0))))
(assert (fp.geq (fp.add RNE (fp.neg x9) (fp.div RNE x8 x4)) (fp.neg (fp.mul RNE x11 x2))))
(assert (fp.geq (fp.mul RNE (fp.neg x10) (fp.div RNE x2 x10)) (fp.div RNE (fp.mul RNE x10 x1) (fp.add RNE x7 x10))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x9 x12) (fp.mul RNE x12 x1)) (fp.div RNE (fp.div RNE x9 x1) (fp.mul RNE x7 x5))))
(check-sat)
