(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg x8) (fp.add RNE x15 x20)) (fp.div RNE (fp.sub RNE x4 x3) (fp.mul RNE x4 x16))) (fp.add RNE (fp.mul RNE (fp.neg x17) (fp.sub RNE x12 x19)) (fp.div RNE (fp.sub RNE x10 x2) (fp.neg x20)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x17 x1) (fp.sub RNE x10 x20))) (fp.sub RNE (fp.add RNE (fp.div RNE x4 x13) (fp.add RNE x8 x19)) (fp.add RNE (fp.div RNE x17 x4) (fp.sub RNE x3 x20)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.div RNE x16 x22)) (fp.mul RNE (fp.add RNE x6 x17) (fp.div RNE x17 x6))) (fp.div RNE (fp.add RNE (fp.sub RNE x0 x16) (fp.mul RNE x22 x16)) (fp.neg (fp.neg x0)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x21 x11) (fp.mul RNE x0 x0)) (fp.add RNE (fp.neg x3) (fp.sub RNE x0 x3))) (fp.mul RNE (fp.sub RNE (fp.add RNE x16 x8) (fp.div RNE x13 x10)) (fp.div RNE (fp.add RNE x14 x21) (fp.mul RNE x13 x13)))))
(check-sat)
