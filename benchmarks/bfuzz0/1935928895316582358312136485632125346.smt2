(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x18) (fp.div RNE x14 x6)))
(assert (fp.eq (fp.mul RNE x4 x10) (fp.add RNE x4 x11)))
(assert (fp.eq (fp.div RNE x20 x15) (fp.neg x17)))
(assert (fp.geq (fp.neg x17) (fp.neg x15)))
(assert (fp.eq (fp.mul RNE x14 x11) (fp.sub RNE x2 x18)))
(assert (fp.eq (fp.sub RNE x9 x7) (fp.mul RNE x9 x13)))
(assert (fp.leq (fp.add RNE x1 x15) (fp.add RNE x20 x2)))
(assert (fp.geq (fp.sub RNE x12 x5) (fp.sub RNE x15 x2)))
(assert (fp.leq (fp.mul RNE x6 x7) (fp.add RNE x10 x1)))
(check-sat)
