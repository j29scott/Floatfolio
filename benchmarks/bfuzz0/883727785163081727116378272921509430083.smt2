(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.neg x16) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x14 x13) (fp.add RNE x4 x9))) (fp.sub RNE (fp.neg (fp.mul RNE x3 x12)) (fp.div RNE (fp.add RNE x8 x16) (fp.div RNE x7 x1)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x10 x11) (fp.neg x6)) (fp.div RNE (fp.div RNE x10 x1) (fp.div RNE x15 x12))) (fp.sub RNE (fp.mul RNE (fp.neg x1) (fp.neg x3)) (fp.sub RNE (fp.div RNE x17 x12) (fp.sub RNE x13 x3)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.add RNE x14 x17) (fp.sub RNE x11 x18)) (fp.div RNE (fp.sub RNE x2 x18) (fp.mul RNE x7 x11))) (fp.add RNE (fp.add RNE (fp.mul RNE x4 x13) (fp.sub RNE x18 x16)) (fp.div RNE (fp.sub RNE x13 x13) (fp.add RNE x8 x6)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x1 x4) (fp.sub RNE x7 x3))) (fp.add RNE (fp.sub RNE (fp.add RNE x10 x18) (fp.div RNE x7 x5)) (fp.sub RNE (fp.sub RNE x5 x7) (fp.mul RNE x17 x18)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x4 x0) (fp.mul RNE x12 x11)) (fp.add RNE (fp.add RNE x8 x17) (fp.add RNE x6 x11))) (fp.mul RNE (fp.sub RNE (fp.div RNE x11 x8) (fp.sub RNE x10 x11)) (fp.sub RNE (fp.add RNE x12 x17) (fp.add RNE x12 x15)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x3 x14) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x5 x12) (fp.mul RNE x4 x6))) (fp.neg (fp.sub RNE (fp.sub RNE x18 x6) (fp.div RNE x10 x11)))))
(assert (fp.leq (fp.neg (fp.neg (fp.add RNE x10 x17))) (fp.neg (fp.sub RNE (fp.div RNE x17 x4) (fp.div RNE x16 x3)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.add RNE x12 x4) (fp.add RNE x12 x7)) (fp.neg (fp.add RNE x15 x1))) (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.sub RNE x10 x7)) (fp.sub RNE (fp.neg x1) (fp.neg x11)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE x8 x12) (fp.neg x4)) (fp.div RNE (fp.sub RNE x1 x4) (fp.div RNE x18 x18))) (fp.add RNE (fp.sub RNE (fp.mul RNE x18 x5) (fp.sub RNE x17 x8)) (fp.neg (fp.add RNE x4 x18)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.neg x14)) (fp.mul RNE (fp.div RNE x2 x6) (fp.add RNE x18 x9))) (fp.neg (fp.neg (fp.neg x9)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.add RNE x1 x12)) (fp.mul RNE (fp.sub RNE x13 x15) (fp.add RNE x10 x4))) (fp.mul RNE (fp.neg (fp.mul RNE x4 x9)) (fp.neg (fp.neg x6)))))
(check-sat)
