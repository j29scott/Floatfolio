(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x1) (fp.add RNE x2 x4)) (fp.add RNE (fp.div RNE x3 x4) (fp.sub RNE x1 x1))) (fp.neg (fp.mul RNE (fp.neg x4) (fp.sub RNE x4 x0)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x3 x1) (fp.neg x0)) (fp.neg (fp.mul RNE x4 x2))) (fp.div RNE (fp.mul RNE (fp.sub RNE x1 x2) (fp.neg x3)) (fp.add RNE (fp.div RNE x4 x4) (fp.mul RNE x2 x1)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x1 x2)) (fp.neg (fp.div RNE x4 x1))) (fp.neg (fp.neg (fp.neg x2)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x3 x1) (fp.mul RNE x4 x1)) (fp.sub RNE (fp.div RNE x2 x4) (fp.sub RNE x0 x4))) (fp.add RNE (fp.sub RNE (fp.mul RNE x3 x1) (fp.neg x1)) (fp.sub RNE (fp.mul RNE x1 x1) (fp.sub RNE x4 x0)))))
(check-sat)
