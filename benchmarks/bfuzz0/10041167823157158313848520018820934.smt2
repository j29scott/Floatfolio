(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE x2 x10) (fp.neg x4)))
(assert (fp.eq (fp.sub RNE x9 x13) (fp.mul RNE x14 x8)))
(assert (fp.leq (fp.div RNE x14 x9) (fp.add RNE x4 x2)))
(assert (fp.gt (fp.add RNE x5 x5) (fp.add RNE x1 x8)))
(assert (fp.lt (fp.div RNE x6 x8) (fp.neg x13)))
(assert (fp.geq (fp.div RNE x11 x3) (fp.mul RNE x0 x0)))
(assert (fp.gt (fp.sub RNE x1 x11) (fp.neg x7)))
(assert (fp.geq (fp.mul RNE x2 x2) (fp.sub RNE x4 x10)))
(assert (fp.geq (fp.mul RNE x0 x9) (fp.add RNE x1 x2)))
(assert (fp.eq (fp.div RNE x10 x11) (fp.sub RNE x5 x4)))
(assert (fp.gt (fp.sub RNE x9 x1) (fp.neg x11)))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x3 x14)))
(assert (fp.eq (fp.sub RNE x10 x0) (fp.sub RNE x0 x12)))
(assert (fp.lt (fp.neg x11) (fp.add RNE x7 x12)))
(assert (fp.leq (fp.div RNE x11 x4) (fp.add RNE x0 x7)))
(assert (fp.lt (fp.neg x3) (fp.mul RNE x2 x1)))
(check-sat)
