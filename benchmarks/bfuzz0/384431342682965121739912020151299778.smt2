(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.neg (fp.neg x3)) (fp.div RNE (fp.neg x6) (fp.neg x2))) (fp.div RNE (fp.add RNE (fp.mul RNE x1 x10) (fp.sub RNE x1 x14)) (fp.neg (fp.div RNE x5 x0)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg x1) (fp.mul RNE x14 x7)) (fp.add RNE (fp.div RNE x15 x5) (fp.neg x11))) (fp.sub RNE (fp.add RNE (fp.div RNE x10 x9) (fp.sub RNE x12 x14)) (fp.mul RNE (fp.neg x2) (fp.neg x4)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE x12 x13) (fp.mul RNE x15 x12)) (fp.add RNE (fp.add RNE x5 x14) (fp.mul RNE x5 x4))) (fp.sub RNE (fp.div RNE (fp.mul RNE x0 x7) (fp.div RNE x3 x12)) (fp.mul RNE (fp.div RNE x9 x16) (fp.mul RNE x2 x6)))))
(check-sat)
