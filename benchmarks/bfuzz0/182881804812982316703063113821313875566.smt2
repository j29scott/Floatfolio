(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.sub RNE x12 x20) (fp.mul RNE x13 x10)) (fp.add RNE (fp.add RNE x21 x7) (fp.sub RNE x2 x6))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x11 x16) (fp.mul RNE x21 x21)) (fp.mul RNE (fp.div RNE x4 x4) (fp.sub RNE x11 x6))))
(assert (fp.eq (fp.div RNE (fp.div RNE x21 x21) (fp.div RNE x12 x19)) (fp.add RNE (fp.mul RNE x14 x13) (fp.neg x14))))
(assert (fp.geq (fp.div RNE (fp.neg x11) (fp.div RNE x4 x6)) (fp.div RNE (fp.div RNE x0 x9) (fp.add RNE x7 x11))))
(assert (fp.geq (fp.div RNE (fp.div RNE x19 x11) (fp.add RNE x0 x2)) (fp.mul RNE (fp.sub RNE x0 x3) (fp.mul RNE x16 x19))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x2 x3) (fp.add RNE x15 x4)) (fp.sub RNE (fp.mul RNE x21 x3) (fp.add RNE x13 x18))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x6 x7) (fp.neg x11)) (fp.sub RNE (fp.div RNE x3 x2) (fp.add RNE x2 x17))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x14 x14) (fp.sub RNE x7 x4)) (fp.neg (fp.mul RNE x7 x13))))
(assert (fp.lt (fp.add RNE (fp.div RNE x12 x20) (fp.div RNE x18 x1)) (fp.add RNE (fp.neg x2) (fp.neg x9))))
(assert (fp.geq (fp.sub RNE (fp.neg x0) (fp.sub RNE x11 x11)) (fp.add RNE (fp.mul RNE x8 x16) (fp.neg x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x11 x21) (fp.sub RNE x6 x10)) (fp.sub RNE (fp.add RNE x7 x12) (fp.sub RNE x5 x8))))
(assert (fp.lt (fp.add RNE (fp.add RNE x3 x9) (fp.mul RNE x17 x20)) (fp.add RNE (fp.add RNE x20 x5) (fp.div RNE x4 x3))))
(assert (fp.lt (fp.div RNE (fp.div RNE x18 x17) (fp.neg x19)) (fp.mul RNE (fp.mul RNE x17 x7) (fp.mul RNE x8 x15))))
(check-sat)
