(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x17 x5) (fp.neg x20)) (fp.mul RNE (fp.div RNE x10 x11) (fp.add RNE x15 x2))) (fp.sub RNE (fp.neg (fp.add RNE x9 x13)) (fp.add RNE (fp.add RNE x1 x11) (fp.mul RNE x11 x4)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x14) (fp.neg x0)) (fp.neg (fp.sub RNE x14 x22))) (fp.mul RNE (fp.div RNE (fp.neg x15) (fp.add RNE x2 x8)) (fp.sub RNE (fp.div RNE x14 x7) (fp.mul RNE x16 x20)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE x4 x11) (fp.add RNE x2 x14)) (fp.mul RNE (fp.neg x11) (fp.add RNE x11 x7))) (fp.div RNE (fp.mul RNE (fp.div RNE x20 x8) (fp.add RNE x14 x18)) (fp.add RNE (fp.add RNE x19 x16) (fp.neg x5)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x7 x10) (fp.mul RNE x9 x12))) (fp.neg (fp.add RNE (fp.div RNE x22 x17) (fp.div RNE x20 x15)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x9 x11)) (fp.div RNE (fp.mul RNE x19 x6) (fp.neg x9))) (fp.div RNE (fp.mul RNE (fp.neg x22) (fp.add RNE x18 x22)) (fp.mul RNE (fp.mul RNE x14 x3) (fp.add RNE x0 x18)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.add RNE x21 x18) (fp.neg x1)) (fp.neg (fp.mul RNE x9 x11))) (fp.add RNE (fp.neg (fp.mul RNE x4 x14)) (fp.neg (fp.mul RNE x10 x12)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.sub RNE x20 x1)) (fp.mul RNE (fp.mul RNE x12 x12) (fp.neg x21))) (fp.neg (fp.sub RNE (fp.neg x8) (fp.neg x20)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x14))) (fp.mul RNE (fp.add RNE (fp.mul RNE x13 x6) (fp.div RNE x8 x22)) (fp.neg (fp.sub RNE x10 x9)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.sub RNE x22 x16) (fp.sub RNE x21 x8)) (fp.div RNE (fp.sub RNE x6 x8) (fp.neg x11))) (fp.div RNE (fp.div RNE (fp.add RNE x9 x11) (fp.add RNE x20 x5)) (fp.neg (fp.sub RNE x11 x22)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg x4) (fp.add RNE x14 x9)) (fp.neg (fp.div RNE x2 x4))) (fp.div RNE (fp.mul RNE (fp.add RNE x1 x8) (fp.div RNE x14 x22)) (fp.div RNE (fp.add RNE x15 x15) (fp.mul RNE x1 x21)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.sub RNE x8 x12) (fp.div RNE x1 x6))) (fp.add RNE (fp.neg (fp.neg x9)) (fp.mul RNE (fp.div RNE x11 x22) (fp.neg x8)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.mul RNE x20 x13) (fp.add RNE x0 x1)) (fp.mul RNE (fp.neg x16) (fp.mul RNE x3 x11))) (fp.add RNE (fp.mul RNE (fp.mul RNE x20 x3) (fp.neg x0)) (fp.div RNE (fp.sub RNE x18 x11) (fp.div RNE x4 x3)))))
(check-sat)
