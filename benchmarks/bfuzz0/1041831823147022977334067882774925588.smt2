(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE x0 x5) (fp.neg x3)) (fp.div RNE (fp.div RNE x10 x14) (fp.add RNE x2 x2))) (fp.neg (fp.add RNE (fp.div RNE x12 x2) (fp.sub RNE x12 x4)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x13) (fp.add RNE x8 x3)) (fp.sub RNE (fp.div RNE x10 x5) (fp.mul RNE x9 x3))) (fp.add RNE (fp.sub RNE (fp.add RNE x13 x6) (fp.div RNE x11 x6)) (fp.div RNE (fp.div RNE x2 x14) (fp.div RNE x13 x14)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.neg x8) (fp.neg x0))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x5) (fp.add RNE x8 x10)) (fp.neg (fp.add RNE x6 x6)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.add RNE x13 x12) (fp.mul RNE x5 x6)) (fp.neg (fp.add RNE x9 x14))) (fp.add RNE (fp.mul RNE (fp.neg x9) (fp.div RNE x13 x8)) (fp.div RNE (fp.add RNE x10 x11) (fp.sub RNE x12 x10)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x13) (fp.neg x13)) (fp.sub RNE (fp.add RNE x14 x4) (fp.neg x12))) (fp.div RNE (fp.sub RNE (fp.div RNE x0 x8) (fp.add RNE x4 x13)) (fp.div RNE (fp.mul RNE x1 x0) (fp.add RNE x2 x12)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.sub RNE x6 x8) (fp.add RNE x8 x9)) (fp.add RNE (fp.neg x2) (fp.neg x8))) (fp.sub RNE (fp.add RNE (fp.neg x7) (fp.div RNE x14 x6)) (fp.neg (fp.mul RNE x0 x2)))))
(check-sat)
