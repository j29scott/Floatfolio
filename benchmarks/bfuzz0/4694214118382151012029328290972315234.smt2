(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE x12 x24) (fp.add RNE x10 x19)) (fp.div RNE (fp.neg x25) (fp.neg x6))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x18 x24) (fp.add RNE x20 x13)) (fp.neg (fp.div RNE x17 x16))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x21 x17) (fp.add RNE x13 x9)) (fp.mul RNE (fp.mul RNE x19 x23) (fp.neg x10))))
(assert (fp.eq (fp.div RNE (fp.neg x22) (fp.add RNE x19 x5)) (fp.add RNE (fp.sub RNE x3 x16) (fp.sub RNE x12 x1))))
(assert (fp.eq (fp.sub RNE (fp.neg x6) (fp.mul RNE x11 x17)) (fp.mul RNE (fp.add RNE x21 x6) (fp.div RNE x23 x3))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x6 x13) (fp.div RNE x13 x7)) (fp.sub RNE (fp.sub RNE x15 x19) (fp.add RNE x6 x21))))
(assert (fp.lt (fp.neg (fp.mul RNE x24 x8)) (fp.div RNE (fp.add RNE x14 x12) (fp.div RNE x3 x26))))
(assert (fp.gt (fp.mul RNE (fp.neg x25) (fp.div RNE x23 x19)) (fp.mul RNE (fp.add RNE x19 x16) (fp.mul RNE x1 x16))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x1 x10) (fp.div RNE x17 x2)) (fp.mul RNE (fp.sub RNE x1 x11) (fp.add RNE x14 x9))))
(assert (fp.lt (fp.div RNE (fp.add RNE x19 x20) (fp.mul RNE x4 x7)) (fp.div RNE (fp.div RNE x6 x14) (fp.neg x20))))
(assert (fp.lt (fp.add RNE (fp.div RNE x6 x14) (fp.add RNE x15 x22)) (fp.neg (fp.add RNE x17 x5))))
(assert (fp.lt (fp.add RNE (fp.add RNE x16 x2) (fp.mul RNE x12 x9)) (fp.div RNE (fp.mul RNE x22 x26) (fp.mul RNE x16 x9))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x22 x5) (fp.div RNE x12 x9)) (fp.div RNE (fp.add RNE x15 x18) (fp.mul RNE x14 x1))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x8 x17) (fp.div RNE x1 x17)) (fp.add RNE (fp.add RNE x21 x24) (fp.neg x17))))
(check-sat)
