(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.neg x6) (fp.div RNE x11 x3)) (fp.add RNE (fp.add RNE x4 x1) (fp.neg x7))))
(assert (fp.geq (fp.div RNE (fp.add RNE x2 x0) (fp.div RNE x10 x10)) (fp.div RNE (fp.neg x0) (fp.mul RNE x1 x3))))
(assert (fp.eq (fp.add RNE (fp.add RNE x9 x7) (fp.mul RNE x5 x1)) (fp.mul RNE (fp.div RNE x4 x6) (fp.mul RNE x2 x0))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x8 x8) (fp.mul RNE x6 x8)) (fp.sub RNE (fp.div RNE x12 x3) (fp.add RNE x7 x5))))
(assert (fp.geq (fp.neg (fp.mul RNE x9 x10)) (fp.div RNE (fp.sub RNE x6 x8) (fp.add RNE x11 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x8 x8)) (fp.sub RNE (fp.add RNE x10 x7) (fp.mul RNE x7 x4))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x4 x9) (fp.div RNE x8 x8)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x1 x9))))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x3) (fp.div RNE x5 x6)) (fp.div RNE (fp.neg x6) (fp.neg x7))))
(check-sat)
