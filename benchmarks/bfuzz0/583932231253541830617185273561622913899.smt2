(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x0) (fp.mul RNE x2 x1)) (fp.neg (fp.sub RNE x10 x9))) (fp.neg (fp.neg (fp.div RNE x8 x10)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.div RNE x5 x3) (fp.neg x20)) (fp.neg (fp.mul RNE x6 x7))) (fp.add RNE (fp.div RNE (fp.div RNE x6 x10) (fp.mul RNE x11 x11)) (fp.div RNE (fp.add RNE x3 x6) (fp.neg x4)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x11 x11) (fp.neg x20))) (fp.sub RNE (fp.sub RNE (fp.add RNE x6 x7) (fp.mul RNE x19 x12)) (fp.add RNE (fp.sub RNE x3 x1) (fp.sub RNE x3 x4)))))
(check-sat)
