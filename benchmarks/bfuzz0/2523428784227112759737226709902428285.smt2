(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE x17 x13) (fp.mul RNE x2 x15)))
(assert (fp.geq (fp.div RNE x1 x4) (fp.div RNE x0 x0)))
(assert (fp.gt (fp.div RNE x12 x13) (fp.div RNE x2 x1)))
(assert (fp.lt (fp.sub RNE x1 x12) (fp.sub RNE x6 x15)))
(assert (fp.eq (fp.neg x18) (fp.div RNE x2 x2)))
(assert (fp.geq (fp.sub RNE x13 x7) (fp.sub RNE x16 x3)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x14 x6)))
(check-sat)
