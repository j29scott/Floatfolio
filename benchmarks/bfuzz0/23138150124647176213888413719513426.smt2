(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.div RNE x9 x23) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x16 x21) (fp.mul RNE x9 x23))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x20 x3) (fp.neg x19)) (fp.sub RNE (fp.add RNE x8 x4) (fp.mul RNE x2 x22))))
(assert (fp.leq (fp.neg (fp.neg x0)) (fp.div RNE (fp.neg x13) (fp.sub RNE x7 x9))))
(assert (fp.gt (fp.div RNE (fp.neg x17) (fp.sub RNE x10 x19)) (fp.mul RNE (fp.neg x10) (fp.neg x19))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x4 x22) (fp.sub RNE x16 x5)) (fp.sub RNE (fp.div RNE x8 x23) (fp.add RNE x23 x6))))
(assert (fp.gt (fp.add RNE (fp.neg x22) (fp.mul RNE x14 x20)) (fp.sub RNE (fp.div RNE x17 x17) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x16 x10) (fp.mul RNE x8 x8)) (fp.add RNE (fp.div RNE x15 x0) (fp.div RNE x23 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x20) (fp.neg x15)) (fp.add RNE (fp.neg x20) (fp.sub RNE x21 x11))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x22 x6) (fp.add RNE x13 x13)) (fp.div RNE (fp.mul RNE x8 x20) (fp.add RNE x22 x3))))
(assert (fp.leq (fp.neg (fp.add RNE x4 x17)) (fp.mul RNE (fp.sub RNE x8 x0) (fp.mul RNE x13 x19))))
(assert (fp.leq (fp.neg (fp.add RNE x17 x21)) (fp.sub RNE (fp.add RNE x3 x20) (fp.neg x0))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x0 x19) (fp.mul RNE x9 x12)) (fp.sub RNE (fp.neg x11) (fp.neg x4))))
(assert (fp.leq (fp.sub RNE (fp.neg x0) (fp.div RNE x22 x12)) (fp.add RNE (fp.add RNE x7 x11) (fp.mul RNE x8 x5))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x2 x1) (fp.div RNE x2 x21)) (fp.sub RNE (fp.div RNE x3 x15) (fp.add RNE x10 x10))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x1 x0) (fp.sub RNE x5 x23)) (fp.neg (fp.mul RNE x23 x13))))
(assert (fp.eq (fp.div RNE (fp.div RNE x22 x12) (fp.add RNE x20 x0)) (fp.sub RNE (fp.mul RNE x9 x7) (fp.neg x15))))
(assert (fp.geq (fp.div RNE (fp.div RNE x22 x4) (fp.neg x22)) (fp.div RNE (fp.div RNE x6 x13) (fp.div RNE x18 x13))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x14 x11) (fp.sub RNE x7 x14)) (fp.neg (fp.add RNE x12 x1))))
(check-sat)
