(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x11 x10) (fp.add RNE x5 x10)) (fp.div RNE (fp.mul RNE x2 x8) (fp.mul RNE x15 x7))))
(assert (fp.leq (fp.neg (fp.div RNE x16 x13)) (fp.div RNE (fp.div RNE x7 x2) (fp.div RNE x15 x14))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x15 x0) (fp.div RNE x15 x1)) (fp.sub RNE (fp.mul RNE x6 x6) (fp.div RNE x12 x8))))
(assert (fp.lt (fp.sub RNE (fp.neg x14) (fp.sub RNE x4 x11)) (fp.sub RNE (fp.mul RNE x0 x15) (fp.neg x2))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x10 x15) (fp.mul RNE x4 x7)) (fp.add RNE (fp.neg x15) (fp.neg x2))))
(assert (fp.geq (fp.div RNE (fp.div RNE x14 x14) (fp.mul RNE x4 x7)) (fp.sub RNE (fp.div RNE x2 x7) (fp.neg x10))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x14 x0) (fp.neg x12)) (fp.sub RNE (fp.neg x8) (fp.mul RNE x5 x10))))
(assert (fp.lt (fp.div RNE (fp.add RNE x8 x6) (fp.sub RNE x8 x6)) (fp.add RNE (fp.div RNE x1 x2) (fp.add RNE x14 x6))))
(assert (fp.gt (fp.neg (fp.neg x6)) (fp.mul RNE (fp.sub RNE x11 x7) (fp.div RNE x16 x0))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x8 x13) (fp.sub RNE x2 x15)) (fp.sub RNE (fp.div RNE x1 x13) (fp.add RNE x0 x10))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x1 x2) (fp.mul RNE x1 x15)) (fp.sub RNE (fp.sub RNE x10 x6) (fp.sub RNE x5 x7))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x4)) (fp.add RNE (fp.sub RNE x13 x3) (fp.add RNE x13 x1))))
(assert (fp.eq (fp.neg (fp.neg x9)) (fp.sub RNE (fp.div RNE x15 x13) (fp.add RNE x12 x13))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x4 x8) (fp.add RNE x12 x4)) (fp.neg (fp.mul RNE x14 x2))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x9 x5) (fp.sub RNE x12 x5)) (fp.neg (fp.neg x3))))
(assert (fp.leq (fp.add RNE (fp.neg x15) (fp.add RNE x11 x1)) (fp.sub RNE (fp.add RNE x10 x1) (fp.mul RNE x3 x11))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x13 x5) (fp.sub RNE x8 x6)) (fp.neg (fp.add RNE x4 x5))))
(check-sat)
