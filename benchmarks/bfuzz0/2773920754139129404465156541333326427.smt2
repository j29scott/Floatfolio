(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE x3 x8) (fp.add RNE x1 x6)) (fp.sub RNE (fp.div RNE x9 x3) (fp.sub RNE x7 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x7 x0) (fp.sub RNE x6 x8)) (fp.sub RNE (fp.sub RNE x9 x1) (fp.add RNE x6 x9))))
(assert (fp.leq (fp.neg (fp.mul RNE x5 x5)) (fp.sub RNE (fp.add RNE x6 x6) (fp.mul RNE x3 x7))))
(assert (fp.gt (fp.neg (fp.div RNE x4 x9)) (fp.add RNE (fp.div RNE x3 x6) (fp.mul RNE x0 x7))))
(assert (fp.eq (fp.div RNE (fp.add RNE x5 x3) (fp.mul RNE x1 x5)) (fp.div RNE (fp.add RNE x6 x9) (fp.add RNE x7 x1))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x4 x7) (fp.mul RNE x7 x7)) (fp.div RNE (fp.neg x9) (fp.sub RNE x0 x2))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x0 x4) (fp.neg x3)) (fp.sub RNE (fp.sub RNE x4 x2) (fp.mul RNE x2 x3))))
(assert (fp.geq (fp.add RNE (fp.neg x1) (fp.sub RNE x8 x3)) (fp.div RNE (fp.div RNE x4 x9) (fp.sub RNE x6 x4))))
(assert (fp.eq (fp.sub RNE (fp.neg x4) (fp.div RNE x0 x8)) (fp.div RNE (fp.mul RNE x9 x4) (fp.sub RNE x6 x1))))
(assert (fp.leq (fp.add RNE (fp.div RNE x2 x7) (fp.neg x1)) (fp.div RNE (fp.div RNE x8 x4) (fp.add RNE x9 x4))))
(check-sat)
