(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE x9 x5) (fp.div RNE x20 x19)) (fp.neg (fp.sub RNE x7 x12))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x4 x20) (fp.sub RNE x17 x16)) (fp.mul RNE (fp.div RNE x1 x4) (fp.div RNE x12 x11))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x8 x2) (fp.mul RNE x0 x1)) (fp.neg (fp.neg x15))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x5 x19) (fp.div RNE x10 x1)) (fp.neg (fp.div RNE x15 x18))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x20 x13) (fp.mul RNE x15 x13)) (fp.neg (fp.mul RNE x8 x12))))
(assert (fp.geq (fp.div RNE (fp.add RNE x9 x16) (fp.sub RNE x18 x3)) (fp.add RNE (fp.mul RNE x2 x0) (fp.add RNE x11 x16))))
(assert (fp.eq (fp.mul RNE (fp.neg x5) (fp.sub RNE x19 x3)) (fp.add RNE (fp.div RNE x1 x12) (fp.div RNE x13 x4))))
(assert (fp.leq (fp.div RNE (fp.neg x19) (fp.add RNE x13 x3)) (fp.add RNE (fp.mul RNE x11 x2) (fp.add RNE x20 x1))))
(assert (fp.leq (fp.sub RNE (fp.neg x20) (fp.sub RNE x10 x5)) (fp.mul RNE (fp.sub RNE x13 x17) (fp.neg x5))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.add RNE (fp.mul RNE x2 x14) (fp.sub RNE x8 x19))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x12 x18) (fp.sub RNE x5 x16)) (fp.mul RNE (fp.add RNE x3 x3) (fp.div RNE x10 x8))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x11 x5) (fp.mul RNE x10 x0)) (fp.neg (fp.mul RNE x6 x6))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x12 x10) (fp.div RNE x2 x18)) (fp.add RNE (fp.add RNE x8 x15) (fp.div RNE x15 x4))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x15 x8) (fp.add RNE x5 x13)) (fp.mul RNE (fp.div RNE x15 x10) (fp.sub RNE x10 x2))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x10 x17) (fp.neg x0)) (fp.add RNE (fp.sub RNE x7 x13) (fp.mul RNE x7 x4))))
(assert (fp.geq (fp.div RNE (fp.div RNE x3 x18) (fp.mul RNE x15 x13)) (fp.neg (fp.mul RNE x6 x10))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x7 x15) (fp.mul RNE x10 x7)) (fp.add RNE (fp.add RNE x13 x8) (fp.add RNE x19 x4))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x6 x12) (fp.sub RNE x5 x15)) (fp.div RNE (fp.sub RNE x16 x0) (fp.neg x4))))
(check-sat)
