(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.add RNE x0 x27) (fp.sub RNE x11 x13)) (fp.neg (fp.sub RNE x6 x4))))
(assert (fp.lt (fp.neg (fp.add RNE x19 x24)) (fp.sub RNE (fp.div RNE x13 x4) (fp.neg x5))))
(assert (fp.leq (fp.neg (fp.neg x12)) (fp.add RNE (fp.sub RNE x9 x14) (fp.sub RNE x5 x6))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x26 x16) (fp.add RNE x8 x17)) (fp.add RNE (fp.sub RNE x15 x22) (fp.add RNE x16 x2))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x10 x4) (fp.sub RNE x27 x7)) (fp.mul RNE (fp.sub RNE x0 x4) (fp.mul RNE x19 x5))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x24 x8) (fp.mul RNE x26 x20)) (fp.sub RNE (fp.mul RNE x16 x22) (fp.neg x6))))
(assert (fp.geq (fp.neg (fp.mul RNE x20 x1)) (fp.add RNE (fp.add RNE x22 x15) (fp.neg x3))))
(assert (fp.lt (fp.add RNE (fp.add RNE x21 x20) (fp.div RNE x2 x15)) (fp.neg (fp.add RNE x13 x19))))
(assert (fp.geq (fp.div RNE (fp.neg x7) (fp.neg x13)) (fp.sub RNE (fp.mul RNE x15 x5) (fp.add RNE x5 x7))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x27 x21) (fp.add RNE x12 x1)) (fp.div RNE (fp.neg x11) (fp.add RNE x14 x21))))
(assert (fp.geq (fp.neg (fp.div RNE x3 x9)) (fp.mul RNE (fp.neg x15) (fp.mul RNE x11 x13))))
(assert (fp.lt (fp.sub RNE (fp.neg x24) (fp.mul RNE x19 x26)) (fp.add RNE (fp.add RNE x22 x7) (fp.neg x2))))
(assert (fp.eq (fp.mul RNE (fp.neg x4) (fp.div RNE x24 x23)) (fp.div RNE (fp.neg x0) (fp.sub RNE x9 x4))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x9 x7) (fp.neg x27)) (fp.neg (fp.add RNE x6 x26))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x27 x3) (fp.add RNE x15 x7)) (fp.div RNE (fp.mul RNE x2 x19) (fp.div RNE x11 x2))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x7 x11) (fp.div RNE x8 x16)) (fp.mul RNE (fp.mul RNE x17 x19) (fp.add RNE x27 x13))))
(assert (fp.leq (fp.mul RNE (fp.neg x27) (fp.div RNE x21 x18)) (fp.sub RNE (fp.add RNE x5 x27) (fp.sub RNE x17 x17))))
(assert (fp.lt (fp.sub RNE (fp.neg x1) (fp.div RNE x24 x20)) (fp.mul RNE (fp.div RNE x12 x13) (fp.add RNE x20 x3))))
(check-sat)
