(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE x9 x15) (fp.sub RNE x3 x11)) (fp.mul RNE (fp.add RNE x24 x19) (fp.neg x25))) (fp.neg (fp.add RNE (fp.div RNE x22 x21) (fp.mul RNE x14 x9)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.div RNE x16 x10) (fp.neg x7)) (fp.div RNE (fp.neg x4) (fp.mul RNE x7 x24))) (fp.neg (fp.add RNE (fp.div RNE x7 x9) (fp.add RNE x10 x14)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE x4 x17) (fp.div RNE x22 x13))) (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x18) (fp.div RNE x17 x12)) (fp.div RNE (fp.div RNE x20 x1) (fp.mul RNE x16 x17)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.add RNE x15 x23) (fp.mul RNE x25 x19)) (fp.div RNE (fp.add RNE x17 x21) (fp.neg x2))) (fp.div RNE (fp.neg (fp.div RNE x23 x24)) (fp.mul RNE (fp.div RNE x8 x0) (fp.mul RNE x16 x7)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.div RNE x4 x16) (fp.mul RNE x25 x8)) (fp.sub RNE (fp.mul RNE x15 x7) (fp.sub RNE x25 x10))) (fp.neg (fp.add RNE (fp.mul RNE x13 x0) (fp.mul RNE x18 x15)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.mul RNE x4 x2) (fp.div RNE x5 x5))) (fp.neg (fp.sub RNE (fp.neg x19) (fp.div RNE x25 x0)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x3 x5) (fp.sub RNE x24 x2)) (fp.neg (fp.neg x20))) (fp.mul RNE (fp.div RNE (fp.neg x24) (fp.neg x8)) (fp.div RNE (fp.neg x17) (fp.mul RNE x2 x10)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.add RNE x22 x11) (fp.mul RNE x16 x1)) (fp.neg (fp.div RNE x2 x17))) (fp.mul RNE (fp.mul RNE (fp.div RNE x6 x25) (fp.div RNE x13 x0)) (fp.add RNE (fp.neg x2) (fp.div RNE x12 x16)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.div RNE x22 x17) (fp.mul RNE x14 x17)) (fp.mul RNE (fp.sub RNE x21 x22) (fp.sub RNE x20 x2))) (fp.mul RNE (fp.neg (fp.add RNE x20 x25)) (fp.div RNE (fp.neg x9) (fp.mul RNE x13 x23)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.sub RNE x11 x4)) (fp.mul RNE (fp.div RNE x24 x3) (fp.sub RNE x24 x25))) (fp.sub RNE (fp.mul RNE (fp.div RNE x0 x8) (fp.add RNE x25 x20)) (fp.div RNE (fp.mul RNE x15 x5) (fp.add RNE x24 x11)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.div RNE x24 x2) (fp.neg x1)) (fp.div RNE (fp.neg x3) (fp.neg x24))) (fp.add RNE (fp.mul RNE (fp.sub RNE x6 x15) (fp.sub RNE x16 x25)) (fp.sub RNE (fp.div RNE x8 x24) (fp.div RNE x12 x23)))))
(check-sat)
