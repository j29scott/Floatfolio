(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.div RNE x3 x18)) (fp.add RNE (fp.div RNE x11 x11) (fp.sub RNE x8 x2))) (fp.mul RNE (fp.sub RNE (fp.div RNE x15 x15) (fp.sub RNE x15 x13)) (fp.mul RNE (fp.mul RNE x11 x3) (fp.neg x0)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x6 x15) (fp.neg x6))) (fp.div RNE (fp.sub RNE (fp.neg x6) (fp.div RNE x0 x15)) (fp.mul RNE (fp.div RNE x9 x4) (fp.mul RNE x4 x12)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.add RNE x14 x0) (fp.mul RNE x4 x13)) (fp.div RNE (fp.neg x8) (fp.neg x13))) (fp.add RNE (fp.add RNE (fp.div RNE x1 x18) (fp.add RNE x18 x4)) (fp.sub RNE (fp.add RNE x1 x7) (fp.neg x18)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x14 x2)) (fp.neg (fp.div RNE x1 x12))) (fp.div RNE (fp.div RNE (fp.div RNE x7 x2) (fp.div RNE x6 x16)) (fp.div RNE (fp.mul RNE x16 x16) (fp.neg x5)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x10) (fp.sub RNE x6 x0))) (fp.add RNE (fp.div RNE (fp.mul RNE x18 x6) (fp.div RNE x1 x16)) (fp.sub RNE (fp.sub RNE x18 x0) (fp.div RNE x10 x9)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x17 x11) (fp.neg x14))) (fp.add RNE (fp.mul RNE (fp.div RNE x3 x18) (fp.div RNE x0 x16)) (fp.div RNE (fp.add RNE x2 x3) (fp.div RNE x5 x14)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x18 x1) (fp.add RNE x14 x4)) (fp.div RNE (fp.add RNE x11 x10) (fp.mul RNE x4 x11))) (fp.add RNE (fp.div RNE (fp.sub RNE x14 x5) (fp.mul RNE x12 x16)) (fp.mul RNE (fp.neg x10) (fp.div RNE x11 x10)))))
(check-sat)
