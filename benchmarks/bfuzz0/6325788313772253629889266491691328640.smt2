(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x9 x4) (fp.add RNE x10 x8)))
(assert (fp.geq (fp.mul RNE x2 x7) (fp.add RNE x10 x8)))
(assert (fp.gt (fp.add RNE x4 x9) (fp.neg x7)))
(assert (fp.eq (fp.add RNE x5 x8) (fp.add RNE x1 x7)))
(assert (fp.gt (fp.div RNE x4 x3) (fp.add RNE x3 x1)))
(assert (fp.lt (fp.div RNE x2 x1) (fp.add RNE x4 x1)))
(assert (fp.geq (fp.neg x9) (fp.neg x3)))
(assert (fp.gt (fp.div RNE x6 x0) (fp.mul RNE x9 x6)))
(assert (fp.eq (fp.neg x2) (fp.mul RNE x5 x1)))
(assert (fp.geq (fp.sub RNE x9 x5) (fp.div RNE x4 x1)))
(assert (fp.eq (fp.mul RNE x8 x5) (fp.div RNE x3 x8)))
(assert (fp.lt (fp.neg x5) (fp.mul RNE x7 x1)))
(assert (fp.leq (fp.sub RNE x9 x3) (fp.mul RNE x1 x8)))
(assert (fp.gt (fp.sub RNE x5 x1) (fp.add RNE x7 x0)))
(assert (fp.leq (fp.add RNE x1 x8) (fp.neg x3)))
(assert (fp.lt (fp.div RNE x10 x0) (fp.neg x10)))
(check-sat)
