(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.sub RNE x3 x9) (fp.neg x1)) (fp.div RNE (fp.add RNE x8 x7) (fp.mul RNE x12 x9))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x5 x9) (fp.add RNE x3 x9)) (fp.neg (fp.div RNE x5 x11))))
(assert (fp.lt (fp.neg (fp.add RNE x7 x3)) (fp.add RNE (fp.div RNE x12 x2) (fp.mul RNE x3 x11))))
(assert (fp.gt (fp.mul RNE (fp.neg x2) (fp.div RNE x3 x0)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x1 x12))))
(assert (fp.lt (fp.div RNE (fp.neg x7) (fp.sub RNE x3 x3)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x11 x8))))
(assert (fp.leq (fp.add RNE (fp.neg x3) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x3 x12) (fp.sub RNE x4 x3))))
(check-sat)
