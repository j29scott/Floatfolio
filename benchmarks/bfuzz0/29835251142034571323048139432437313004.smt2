(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x8 x11) (fp.neg x8))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x2 x11) (fp.add RNE x9 x8)) (fp.neg (fp.neg x6)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.div RNE x2 x9) (fp.add RNE x0 x1))) (fp.div RNE (fp.neg (fp.div RNE x1 x9)) (fp.mul RNE (fp.div RNE x6 x5) (fp.mul RNE x4 x9)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.div RNE x6 x6) (fp.neg x7)) (fp.add RNE (fp.mul RNE x5 x7) (fp.sub RNE x9 x1))) (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x9) (fp.add RNE x10 x2)) (fp.sub RNE (fp.mul RNE x2 x9) (fp.mul RNE x7 x6)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.add RNE x2 x0) (fp.add RNE x9 x9)) (fp.div RNE (fp.div RNE x8 x7) (fp.sub RNE x11 x3))) (fp.neg (fp.neg (fp.neg x2)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.mul RNE x10 x8) (fp.mul RNE x6 x11)) (fp.neg (fp.div RNE x6 x3))) (fp.mul RNE (fp.mul RNE (fp.div RNE x5 x2) (fp.div RNE x1 x7)) (fp.mul RNE (fp.sub RNE x8 x7) (fp.sub RNE x11 x6)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x8 x1) (fp.add RNE x3 x0)) (fp.mul RNE (fp.neg x2) (fp.sub RNE x6 x0))) (fp.mul RNE (fp.neg (fp.add RNE x8 x9)) (fp.mul RNE (fp.div RNE x11 x6) (fp.sub RNE x2 x0)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x6 x6) (fp.mul RNE x6 x8)) (fp.div RNE (fp.mul RNE x9 x9) (fp.div RNE x6 x2))) (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.mul RNE x2 x4)) (fp.add RNE (fp.mul RNE x0 x10) (fp.div RNE x2 x5)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x10 x11) (fp.div RNE x8 x11))) (fp.neg (fp.sub RNE (fp.sub RNE x7 x9) (fp.div RNE x0 x3)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x5) (fp.add RNE x10 x10)) (fp.add RNE (fp.sub RNE x2 x8) (fp.add RNE x6 x10))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x0 x3) (fp.sub RNE x5 x9)) (fp.neg (fp.sub RNE x2 x4)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.mul RNE x3 x9) (fp.div RNE x7 x5)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x8 x6))) (fp.add RNE (fp.add RNE (fp.div RNE x6 x10) (fp.add RNE x9 x10)) (fp.div RNE (fp.div RNE x10 x2) (fp.neg x7)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x1 x8) (fp.sub RNE x5 x0)) (fp.mul RNE (fp.mul RNE x8 x10) (fp.mul RNE x11 x10))) (fp.neg (fp.add RNE (fp.add RNE x3 x3) (fp.sub RNE x5 x10)))))
(check-sat)
