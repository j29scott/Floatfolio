(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.div RNE x9 x5) (fp.div RNE x2 x5)) (fp.mul RNE (fp.mul RNE x10 x1) (fp.add RNE x2 x7))))
(assert (fp.leq (fp.sub RNE (fp.neg x0) (fp.add RNE x1 x5)) (fp.neg (fp.sub RNE x10 x5))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x4 x10) (fp.sub RNE x0 x8)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x2 x5) (fp.neg x5)) (fp.mul RNE (fp.add RNE x4 x8) (fp.neg x6))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x5 x6) (fp.neg x5)) (fp.add RNE (fp.div RNE x3 x1) (fp.div RNE x7 x2))))
(assert (fp.lt (fp.add RNE (fp.div RNE x2 x10) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x2 x2) (fp.mul RNE x0 x4))))
(assert (fp.lt (fp.add RNE (fp.add RNE x6 x1) (fp.neg x7)) (fp.div RNE (fp.add RNE x5 x9) (fp.neg x0))))
(assert (fp.geq (fp.div RNE (fp.neg x0) (fp.neg x2)) (fp.sub RNE (fp.add RNE x1 x10) (fp.div RNE x4 x7))))
(assert (fp.lt (fp.sub RNE (fp.neg x2) (fp.neg x3)) (fp.sub RNE (fp.neg x4) (fp.sub RNE x4 x1))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x4 x4) (fp.sub RNE x5 x9)) (fp.div RNE (fp.neg x3) (fp.sub RNE x2 x9))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x0 x0) (fp.add RNE x6 x8)) (fp.neg (fp.sub RNE x0 x3))))
(check-sat)
