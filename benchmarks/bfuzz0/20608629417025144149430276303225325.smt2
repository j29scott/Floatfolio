(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE x3 x4) (fp.div RNE x7 x4))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x5 x4) (fp.neg x2)) (fp.div RNE (fp.sub RNE x2 x9) (fp.div RNE x4 x6)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.div RNE x0 x0) (fp.sub RNE x6 x8)) (fp.div RNE (fp.div RNE x6 x7) (fp.sub RNE x7 x8))) (fp.sub RNE (fp.mul RNE (fp.div RNE x7 x3) (fp.neg x9)) (fp.sub RNE (fp.sub RNE x3 x7) (fp.sub RNE x7 x8)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE x8 x6) (fp.mul RNE x4 x1)) (fp.add RNE (fp.sub RNE x3 x4) (fp.div RNE x9 x4))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x7) (fp.div RNE x0 x2)) (fp.neg (fp.div RNE x4 x2)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.add RNE x1 x3)) (fp.add RNE (fp.sub RNE x7 x6) (fp.div RNE x0 x4))) (fp.div RNE (fp.add RNE (fp.sub RNE x6 x1) (fp.sub RNE x3 x5)) (fp.add RNE (fp.neg x1) (fp.add RNE x7 x6)))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.mul RNE x4 x5) (fp.div RNE x8 x5))) (fp.sub RNE (fp.div RNE (fp.sub RNE x3 x0) (fp.add RNE x7 x3)) (fp.mul RNE (fp.mul RNE x8 x8) (fp.mul RNE x6 x5)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.add RNE x3 x6)) (fp.div RNE (fp.neg x8) (fp.mul RNE x3 x9))) (fp.div RNE (fp.div RNE (fp.add RNE x6 x0) (fp.sub RNE x2 x3)) (fp.mul RNE (fp.add RNE x5 x2) (fp.neg x8)))))
(check-sat)
