(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x7 x10) (fp.neg x3)))
(assert (fp.leq (fp.sub RNE x4 x1) (fp.div RNE x2 x2)))
(assert (fp.leq (fp.sub RNE x1 x8) (fp.mul RNE x6 x5)))
(assert (fp.gt (fp.sub RNE x11 x0) (fp.sub RNE x3 x7)))
(assert (fp.lt (fp.sub RNE x0 x2) (fp.div RNE x7 x7)))
(assert (fp.eq (fp.div RNE x3 x11) (fp.neg x0)))
(assert (fp.leq (fp.mul RNE x1 x9) (fp.div RNE x11 x2)))
(assert (fp.eq (fp.div RNE x8 x3) (fp.mul RNE x9 x8)))
(assert (fp.lt (fp.add RNE x5 x0) (fp.div RNE x11 x10)))
(assert (fp.gt (fp.sub RNE x7 x2) (fp.div RNE x1 x0)))
(assert (fp.lt (fp.div RNE x3 x5) (fp.div RNE x10 x1)))
(assert (fp.gt (fp.mul RNE x0 x3) (fp.neg x6)))
(assert (fp.eq (fp.add RNE x10 x10) (fp.add RNE x4 x4)))
(assert (fp.gt (fp.div RNE x6 x7) (fp.mul RNE x0 x3)))
(check-sat)
