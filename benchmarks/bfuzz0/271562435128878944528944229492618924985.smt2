(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x3) (fp.mul RNE x10 x14)))
(assert (fp.leq (fp.neg x14) (fp.div RNE x0 x2)))
(assert (fp.lt (fp.div RNE x9 x0) (fp.sub RNE x17 x6)))
(assert (fp.geq (fp.neg x1) (fp.sub RNE x18 x12)))
(assert (fp.lt (fp.sub RNE x18 x17) (fp.sub RNE x11 x1)))
(assert (fp.leq (fp.sub RNE x7 x11) (fp.div RNE x3 x13)))
(assert (fp.geq (fp.mul RNE x17 x0) (fp.neg x17)))
(assert (fp.geq (fp.mul RNE x10 x15) (fp.add RNE x9 x1)))
(assert (fp.lt (fp.mul RNE x0 x11) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x18 x11) (fp.mul RNE x5 x18)))
(check-sat)
