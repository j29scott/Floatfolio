(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.add RNE x20 x4)) (fp.neg (fp.add RNE x13 x17))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x10 x0) (fp.neg x11)) (fp.mul RNE (fp.div RNE x9 x18) (fp.add RNE x14 x16))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x8 x9) (fp.div RNE x6 x10)) (fp.sub RNE (fp.neg x11) (fp.div RNE x11 x9))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x13 x4) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x18 x7) (fp.add RNE x20 x7))))
(assert (fp.lt (fp.sub RNE (fp.neg x14) (fp.div RNE x9 x18)) (fp.mul RNE (fp.sub RNE x21 x4) (fp.sub RNE x17 x21))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x10 x18) (fp.add RNE x10 x9)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x18 x8))))
(assert (fp.eq (fp.add RNE (fp.add RNE x12 x6) (fp.mul RNE x18 x20)) (fp.div RNE (fp.div RNE x15 x9) (fp.mul RNE x2 x0))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x11 x8) (fp.mul RNE x17 x2)) (fp.add RNE (fp.mul RNE x18 x4) (fp.sub RNE x20 x8))))
(assert (fp.gt (fp.neg (fp.mul RNE x1 x5)) (fp.mul RNE (fp.sub RNE x6 x6) (fp.neg x20))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x19 x13) (fp.mul RNE x3 x13)) (fp.mul RNE (fp.add RNE x4 x9) (fp.mul RNE x9 x21))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x16 x14) (fp.sub RNE x16 x14)) (fp.sub RNE (fp.add RNE x20 x0) (fp.neg x3))))
(assert (fp.lt (fp.div RNE (fp.neg x14) (fp.mul RNE x9 x15)) (fp.div RNE (fp.mul RNE x18 x5) (fp.mul RNE x1 x11))))
(assert (fp.leq (fp.neg (fp.add RNE x4 x19)) (fp.neg (fp.sub RNE x11 x4))))
(assert (fp.gt (fp.add RNE (fp.add RNE x14 x2) (fp.sub RNE x4 x14)) (fp.neg (fp.mul RNE x12 x5))))
(assert (fp.lt (fp.neg (fp.sub RNE x15 x3)) (fp.div RNE (fp.sub RNE x1 x7) (fp.add RNE x21 x1))))
(assert (fp.gt (fp.mul RNE (fp.neg x6) (fp.sub RNE x20 x9)) (fp.sub RNE (fp.sub RNE x20 x3) (fp.neg x2))))
(assert (fp.gt (fp.mul RNE (fp.neg x4) (fp.div RNE x3 x7)) (fp.neg (fp.div RNE x6 x5))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x6 x19) (fp.div RNE x6 x21)) (fp.neg (fp.mul RNE x5 x12))))
(check-sat)
