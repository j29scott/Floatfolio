(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.neg x6) (fp.sub RNE x4 x2)) (fp.mul RNE (fp.mul RNE x2 x5) (fp.div RNE x6 x4))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x6 x1) (fp.add RNE x5 x0)) (fp.sub RNE (fp.mul RNE x0 x8) (fp.mul RNE x0 x0))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x2 x3) (fp.neg x4)) (fp.neg (fp.mul RNE x8 x0))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x3 x7) (fp.div RNE x7 x1)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x8 x2))))
(assert (fp.leq (fp.neg (fp.sub RNE x2 x1)) (fp.sub RNE (fp.neg x7) (fp.sub RNE x8 x0))))
(assert (fp.lt (fp.div RNE (fp.div RNE x5 x0) (fp.mul RNE x8 x0)) (fp.mul RNE (fp.div RNE x0 x0) (fp.div RNE x3 x4))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x3 x1) (fp.add RNE x6 x0)) (fp.neg (fp.div RNE x2 x5))))
(assert (fp.eq (fp.neg (fp.neg x4)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x1 x8))))
(assert (fp.lt (fp.neg (fp.neg x1)) (fp.neg (fp.sub RNE x3 x5))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x2 x4) (fp.neg x6)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x3 x2) (fp.div RNE x8 x3)) (fp.mul RNE (fp.neg x5) (fp.div RNE x4 x7))))
(assert (fp.eq (fp.add RNE (fp.div RNE x2 x1) (fp.neg x2)) (fp.add RNE (fp.add RNE x4 x8) (fp.add RNE x4 x3))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x2 x4) (fp.neg x4)) (fp.add RNE (fp.neg x6) (fp.div RNE x4 x6))))
(check-sat)
