(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x10) (fp.neg x5)) (fp.neg (fp.mul RNE x3 x17))) (fp.neg (fp.mul RNE (fp.mul RNE x8 x10) (fp.sub RNE x3 x15)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x9 x17)) (fp.div RNE (fp.div RNE x18 x15) (fp.mul RNE x5 x17))) (fp.div RNE (fp.sub RNE (fp.add RNE x3 x18) (fp.sub RNE x18 x16)) (fp.div RNE (fp.mul RNE x6 x3) (fp.mul RNE x14 x16)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg x3) (fp.div RNE x15 x1)) (fp.div RNE (fp.mul RNE x12 x5) (fp.sub RNE x7 x1))) (fp.mul RNE (fp.neg (fp.sub RNE x16 x0)) (fp.neg (fp.add RNE x4 x12)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x6 x0) (fp.neg x14))) (fp.neg (fp.mul RNE (fp.neg x18) (fp.add RNE x12 x6)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x14 x2) (fp.div RNE x8 x16)) (fp.sub RNE (fp.mul RNE x4 x4) (fp.neg x10))) (fp.sub RNE (fp.sub RNE (fp.div RNE x0 x2) (fp.neg x5)) (fp.sub RNE (fp.sub RNE x11 x8) (fp.div RNE x8 x10)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.add RNE x15 x13) (fp.sub RNE x17 x8))) (fp.sub RNE (fp.neg (fp.sub RNE x8 x2)) (fp.add RNE (fp.sub RNE x12 x8) (fp.neg x8)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x10 x7)) (fp.add RNE (fp.neg x18) (fp.sub RNE x0 x10))) (fp.div RNE (fp.sub RNE (fp.add RNE x8 x6) (fp.mul RNE x14 x0)) (fp.add RNE (fp.mul RNE x10 x4) (fp.div RNE x11 x0)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.div RNE x12 x10)) (fp.mul RNE (fp.mul RNE x13 x4) (fp.sub RNE x15 x10))) (fp.mul RNE (fp.neg (fp.mul RNE x4 x5)) (fp.neg (fp.mul RNE x18 x3)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.add RNE x10 x15) (fp.div RNE x13 x10)) (fp.mul RNE (fp.sub RNE x14 x17) (fp.div RNE x1 x3))) (fp.mul RNE (fp.div RNE (fp.neg x17) (fp.neg x13)) (fp.div RNE (fp.add RNE x10 x12) (fp.div RNE x12 x16)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x6 x2) (fp.neg x2))) (fp.add RNE (fp.neg (fp.mul RNE x14 x18)) (fp.add RNE (fp.neg x6) (fp.mul RNE x5 x4)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x17 x5) (fp.sub RNE x7 x4)) (fp.div RNE (fp.sub RNE x3 x2) (fp.sub RNE x15 x9))) (fp.mul RNE (fp.neg (fp.add RNE x3 x9)) (fp.add RNE (fp.sub RNE x14 x5) (fp.sub RNE x17 x0)))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.sub RNE x16 x6) (fp.mul RNE x12 x13)) (fp.neg (fp.div RNE x3 x15))) (fp.div RNE (fp.mul RNE (fp.sub RNE x1 x12) (fp.mul RNE x11 x12)) (fp.add RNE (fp.div RNE x11 x9) (fp.add RNE x5 x9)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x9 x18) (fp.div RNE x17 x10))) (fp.mul RNE (fp.neg (fp.neg x14)) (fp.add RNE (fp.mul RNE x3 x5) (fp.mul RNE x16 x6)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x5 x15) (fp.mul RNE x11 x12)) (fp.sub RNE (fp.div RNE x9 x16) (fp.add RNE x10 x11))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x11) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x15 x16) (fp.div RNE x11 x18)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE x11 x18) (fp.div RNE x6 x18)) (fp.sub RNE (fp.div RNE x18 x18) (fp.add RNE x7 x14))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x0 x9) (fp.neg x14)) (fp.add RNE (fp.sub RNE x7 x16) (fp.sub RNE x5 x9)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.mul RNE x12 x11) (fp.div RNE x18 x15)) (fp.div RNE (fp.mul RNE x15 x7) (fp.add RNE x6 x3))) (fp.mul RNE (fp.div RNE (fp.sub RNE x4 x13) (fp.add RNE x17 x1)) (fp.neg (fp.neg x1)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.div RNE x15 x6)) (fp.div RNE (fp.add RNE x12 x13) (fp.add RNE x3 x0))) (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x4) (fp.neg x15)) (fp.neg (fp.div RNE x3 x14)))))
(check-sat)
