(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE x9 x5) (fp.div RNE x3 x1)) (fp.div RNE (fp.sub RNE x10 x11) (fp.add RNE x9 x3))) (fp.div RNE (fp.add RNE (fp.sub RNE x2 x15) (fp.add RNE x15 x11)) (fp.neg (fp.add RNE x16 x6)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x6 x6) (fp.sub RNE x13 x16)) (fp.div RNE (fp.neg x4) (fp.sub RNE x5 x1))) (fp.neg (fp.div RNE (fp.div RNE x14 x0) (fp.div RNE x0 x12)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x13 x6) (fp.sub RNE x12 x5)) (fp.sub RNE (fp.mul RNE x0 x15) (fp.neg x11))) (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x11) (fp.div RNE x9 x4)) (fp.sub RNE (fp.div RNE x12 x8) (fp.sub RNE x10 x4)))))
(check-sat)
