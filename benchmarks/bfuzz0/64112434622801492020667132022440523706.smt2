(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x14))) (fp.mul RNE (fp.neg (fp.mul RNE x4 x12)) (fp.add RNE (fp.sub RNE x6 x2) (fp.neg x1)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x9) (fp.div RNE x16 x17)) (fp.mul RNE (fp.sub RNE x6 x11) (fp.add RNE x15 x15))) (fp.sub RNE (fp.mul RNE (fp.add RNE x0 x6) (fp.div RNE x15 x5)) (fp.add RNE (fp.sub RNE x6 x1) (fp.sub RNE x11 x2)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.add RNE x3 x16)) (fp.sub RNE (fp.add RNE x3 x13) (fp.div RNE x9 x10))) (fp.div RNE (fp.div RNE (fp.add RNE x6 x16) (fp.sub RNE x6 x9)) (fp.div RNE (fp.mul RNE x16 x13) (fp.div RNE x13 x5)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x9 x12) (fp.neg x15)) (fp.add RNE (fp.sub RNE x0 x3) (fp.neg x3))) (fp.sub RNE (fp.add RNE (fp.mul RNE x16 x3) (fp.div RNE x9 x12)) (fp.mul RNE (fp.neg x4) (fp.add RNE x11 x3)))))
(check-sat)
