(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.add RNE x7 x0) (fp.neg x9)) (fp.mul RNE (fp.mul RNE x1 x12) (fp.add RNE x9 x9))) (fp.neg (fp.neg (fp.mul RNE x15 x8)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE x3 x0)) (fp.add RNE (fp.neg x13) (fp.neg x13))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x11 x12) (fp.mul RNE x2 x7)) (fp.neg (fp.add RNE x10 x6)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg x9) (fp.add RNE x3 x4)) (fp.neg (fp.mul RNE x5 x8))) (fp.add RNE (fp.mul RNE (fp.mul RNE x2 x3) (fp.add RNE x0 x14)) (fp.mul RNE (fp.mul RNE x8 x2) (fp.neg x16)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg x15) (fp.add RNE x10 x16)) (fp.neg (fp.neg x7))) (fp.mul RNE (fp.neg (fp.add RNE x9 x16)) (fp.neg (fp.mul RNE x13 x8)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x2 x12) (fp.add RNE x9 x5)) (fp.add RNE (fp.sub RNE x15 x11) (fp.div RNE x0 x14))) (fp.neg (fp.div RNE (fp.neg x0) (fp.add RNE x8 x6)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x11 x8) (fp.sub RNE x14 x3))) (fp.mul RNE (fp.add RNE (fp.mul RNE x16 x16) (fp.div RNE x10 x6)) (fp.div RNE (fp.add RNE x11 x5) (fp.add RNE x15 x15)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.div RNE x8 x15) (fp.neg x1)) (fp.mul RNE (fp.add RNE x14 x0) (fp.sub RNE x3 x7))) (fp.mul RNE (fp.neg (fp.neg x8)) (fp.sub RNE (fp.sub RNE x12 x16) (fp.neg x12)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.div RNE x9 x0) (fp.add RNE x4 x11))) (fp.add RNE (fp.add RNE (fp.div RNE x4 x0) (fp.sub RNE x3 x8)) (fp.sub RNE (fp.mul RNE x5 x9) (fp.mul RNE x16 x16)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x3) (fp.sub RNE x10 x12)) (fp.sub RNE (fp.sub RNE x12 x16) (fp.sub RNE x16 x11))) (fp.add RNE (fp.neg (fp.mul RNE x2 x13)) (fp.div RNE (fp.add RNE x13 x7) (fp.neg x12)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.mul RNE x9 x16) (fp.div RNE x15 x16))) (fp.div RNE (fp.div RNE (fp.mul RNE x8 x7) (fp.sub RNE x10 x10)) (fp.sub RNE (fp.mul RNE x16 x12) (fp.add RNE x10 x9)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x9 x4)) (fp.add RNE (fp.add RNE x12 x1) (fp.mul RNE x9 x6))) (fp.neg (fp.add RNE (fp.div RNE x13 x10) (fp.add RNE x6 x5)))))
(check-sat)
