(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.add RNE x19 x22) (fp.add RNE x18 x22)) (fp.div RNE (fp.sub RNE x4 x23) (fp.sub RNE x6 x21))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x10 x17) (fp.sub RNE x2 x16)) (fp.neg (fp.div RNE x9 x18))))
(assert (fp.leq (fp.mul RNE (fp.neg x7) (fp.neg x23)) (fp.sub RNE (fp.add RNE x5 x15) (fp.add RNE x11 x25))))
(assert (fp.leq (fp.div RNE (fp.neg x0) (fp.div RNE x5 x17)) (fp.sub RNE (fp.add RNE x11 x15) (fp.div RNE x21 x4))))
(assert (fp.eq (fp.add RNE (fp.add RNE x12 x16) (fp.add RNE x14 x8)) (fp.add RNE (fp.sub RNE x11 x24) (fp.mul RNE x9 x6))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x7 x3) (fp.add RNE x5 x21)) (fp.add RNE (fp.div RNE x2 x1) (fp.sub RNE x24 x10))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x20 x4) (fp.sub RNE x13 x22)) (fp.mul RNE (fp.add RNE x7 x0) (fp.neg x7))))
(assert (fp.geq (fp.neg (fp.div RNE x17 x8)) (fp.mul RNE (fp.mul RNE x18 x17) (fp.div RNE x0 x22))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x4 x5) (fp.mul RNE x5 x18)) (fp.div RNE (fp.add RNE x21 x21) (fp.div RNE x22 x5))))
(assert (fp.geq (fp.mul RNE (fp.neg x12) (fp.div RNE x9 x10)) (fp.mul RNE (fp.add RNE x18 x24) (fp.mul RNE x3 x2))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x20 x5) (fp.mul RNE x1 x18)) (fp.add RNE (fp.add RNE x24 x24) (fp.mul RNE x8 x7))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x7 x4) (fp.div RNE x21 x0)) (fp.neg (fp.add RNE x8 x6))))
(assert (fp.geq (fp.neg (fp.neg x21)) (fp.sub RNE (fp.mul RNE x16 x20) (fp.div RNE x17 x13))))
(assert (fp.gt (fp.div RNE (fp.div RNE x4 x3) (fp.mul RNE x16 x19)) (fp.sub RNE (fp.sub RNE x7 x18) (fp.neg x7))))
(assert (fp.gt (fp.neg (fp.neg x16)) (fp.div RNE (fp.neg x13) (fp.neg x9))))
(assert (fp.eq (fp.neg (fp.div RNE x8 x8)) (fp.sub RNE (fp.neg x5) (fp.sub RNE x21 x25))))
(assert (fp.lt (fp.div RNE (fp.neg x14) (fp.neg x11)) (fp.div RNE (fp.add RNE x22 x7) (fp.div RNE x14 x12))))
(assert (fp.gt (fp.mul RNE (fp.neg x1) (fp.add RNE x4 x19)) (fp.mul RNE (fp.mul RNE x10 x6) (fp.sub RNE x11 x17))))
(assert (fp.geq (fp.add RNE (fp.div RNE x3 x3) (fp.add RNE x23 x8)) (fp.sub RNE (fp.mul RNE x18 x2) (fp.add RNE x20 x13))))
(check-sat)
