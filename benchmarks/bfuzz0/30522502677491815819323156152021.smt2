(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x2) (fp.add RNE x10 x11)) (fp.mul RNE (fp.neg x10) (fp.add RNE x2 x3))))
(assert (fp.gt (fp.div RNE (fp.div RNE x12 x8) (fp.sub RNE x14 x5)) (fp.div RNE (fp.neg x4) (fp.div RNE x7 x4))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x6 x10) (fp.sub RNE x8 x8)) (fp.sub RNE (fp.div RNE x3 x8) (fp.mul RNE x15 x15))))
(assert (fp.geq (fp.mul RNE (fp.neg x7) (fp.add RNE x15 x12)) (fp.div RNE (fp.div RNE x2 x11) (fp.neg x6))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x11 x9) (fp.neg x0)) (fp.div RNE (fp.neg x11) (fp.add RNE x15 x1))))
(assert (fp.lt (fp.mul RNE (fp.neg x10) (fp.mul RNE x7 x9)) (fp.sub RNE (fp.mul RNE x11 x9) (fp.neg x8))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x6 x7) (fp.neg x3)) (fp.add RNE (fp.add RNE x5 x2) (fp.sub RNE x9 x8))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x6 x11) (fp.div RNE x8 x15)) (fp.mul RNE (fp.mul RNE x4 x9) (fp.add RNE x14 x7))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x1) (fp.mul RNE x3 x12)) (fp.neg (fp.add RNE x14 x2))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x12 x4) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x15 x12) (fp.div RNE x13 x0))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x9 x6) (fp.sub RNE x12 x12)) (fp.sub RNE (fp.add RNE x8 x1) (fp.sub RNE x5 x12))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x14 x8) (fp.sub RNE x8 x13)) (fp.neg (fp.sub RNE x13 x8))))
(assert (fp.leq (fp.neg (fp.div RNE x10 x10)) (fp.sub RNE (fp.sub RNE x12 x3) (fp.div RNE x15 x11))))
(assert (fp.gt (fp.div RNE (fp.div RNE x7 x0) (fp.div RNE x7 x2)) (fp.sub RNE (fp.div RNE x8 x5) (fp.add RNE x4 x6))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x7 x9) (fp.add RNE x0 x1)) (fp.neg (fp.add RNE x7 x3))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x5) (fp.add RNE x9 x3)) (fp.neg (fp.add RNE x14 x7))))
(assert (fp.gt (fp.div RNE (fp.neg x0) (fp.mul RNE x6 x1)) (fp.div RNE (fp.add RNE x7 x3) (fp.neg x9))))
(assert (fp.lt (fp.div RNE (fp.add RNE x4 x13) (fp.sub RNE x12 x11)) (fp.mul RNE (fp.neg x14) (fp.div RNE x10 x8))))
(check-sat)
