(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.mul RNE x5 x17) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x1 x9) (fp.div RNE x9 x0))) (fp.mul RNE (fp.neg (fp.sub RNE x15 x2)) (fp.sub RNE (fp.add RNE x14 x19) (fp.add RNE x1 x2)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x11 x8) (fp.div RNE x8 x21)) (fp.sub RNE (fp.sub RNE x16 x8) (fp.mul RNE x20 x5))) (fp.mul RNE (fp.div RNE (fp.neg x7) (fp.add RNE x3 x5)) (fp.mul RNE (fp.sub RNE x9 x22) (fp.add RNE x21 x1)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x3) (fp.mul RNE x22 x5)) (fp.add RNE (fp.sub RNE x18 x13) (fp.neg x2))) (fp.add RNE (fp.add RNE (fp.add RNE x19 x3) (fp.sub RNE x17 x16)) (fp.sub RNE (fp.add RNE x7 x7) (fp.neg x5)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.neg x3) (fp.div RNE x7 x18)) (fp.neg (fp.div RNE x9 x18))) (fp.div RNE (fp.div RNE (fp.mul RNE x15 x8) (fp.mul RNE x1 x9)) (fp.mul RNE (fp.neg x17) (fp.div RNE x8 x15)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x13) (fp.add RNE x16 x17)) (fp.sub RNE (fp.mul RNE x5 x15) (fp.div RNE x22 x0))) (fp.div RNE (fp.div RNE (fp.mul RNE x6 x4) (fp.neg x14)) (fp.sub RNE (fp.add RNE x16 x2) (fp.sub RNE x19 x15)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.mul RNE x0 x19) (fp.div RNE x0 x22)) (fp.neg (fp.sub RNE x11 x16))) (fp.div RNE (fp.neg (fp.div RNE x6 x0)) (fp.sub RNE (fp.neg x18) (fp.mul RNE x18 x15)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x3 x4)) (fp.add RNE (fp.neg x0) (fp.add RNE x12 x18))) (fp.neg (fp.sub RNE (fp.div RNE x1 x10) (fp.add RNE x16 x18)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE x18 x9) (fp.add RNE x8 x20)) (fp.mul RNE (fp.sub RNE x19 x5) (fp.add RNE x1 x4))) (fp.div RNE (fp.mul RNE (fp.add RNE x4 x3) (fp.neg x4)) (fp.mul RNE (fp.div RNE x8 x14) (fp.div RNE x11 x22)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x3 x8) (fp.neg x20)) (fp.mul RNE (fp.sub RNE x8 x6) (fp.neg x17))) (fp.div RNE (fp.neg (fp.add RNE x11 x15)) (fp.neg (fp.mul RNE x20 x16)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x12 x13)) (fp.sub RNE (fp.div RNE x16 x20) (fp.sub RNE x22 x11))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x13 x1) (fp.add RNE x2 x17)) (fp.mul RNE (fp.sub RNE x3 x4) (fp.neg x14)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x18 x3) (fp.mul RNE x2 x14)) (fp.mul RNE (fp.div RNE x7 x12) (fp.div RNE x13 x7))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x17 x3) (fp.neg x0)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x11 x4)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.neg x0) (fp.mul RNE x13 x5)) (fp.add RNE (fp.sub RNE x17 x14) (fp.add RNE x6 x10))) (fp.add RNE (fp.mul RNE (fp.add RNE x9 x6) (fp.neg x3)) (fp.neg (fp.sub RNE x21 x4)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.neg x3)) (fp.mul RNE (fp.neg x11) (fp.neg x21))) (fp.add RNE (fp.mul RNE (fp.add RNE x20 x16) (fp.sub RNE x6 x16)) (fp.add RNE (fp.div RNE x9 x7) (fp.add RNE x7 x5)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x21) (fp.div RNE x22 x20))) (fp.div RNE (fp.add RNE (fp.mul RNE x5 x5) (fp.neg x17)) (fp.add RNE (fp.neg x22) (fp.div RNE x10 x15)))))
(check-sat)
