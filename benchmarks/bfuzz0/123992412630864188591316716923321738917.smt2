(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.neg x5) (fp.mul RNE x10 x14)) (fp.mul RNE (fp.mul RNE x1 x5) (fp.sub RNE x0 x2))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x4 x9) (fp.neg x4)) (fp.div RNE (fp.neg x10) (fp.mul RNE x14 x12))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x6 x2) (fp.add RNE x10 x14)) (fp.add RNE (fp.mul RNE x2 x5) (fp.sub RNE x12 x5))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x4 x10) (fp.neg x1)) (fp.add RNE (fp.div RNE x0 x0) (fp.neg x7))))
(assert (fp.lt (fp.neg (fp.mul RNE x0 x7)) (fp.div RNE (fp.div RNE x7 x1) (fp.div RNE x11 x8))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x10 x12) (fp.sub RNE x12 x10)) (fp.div RNE (fp.mul RNE x3 x2) (fp.div RNE x3 x6))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x9 x4) (fp.mul RNE x7 x13)) (fp.div RNE (fp.sub RNE x14 x7) (fp.neg x1))))
(assert (fp.gt (fp.add RNE (fp.add RNE x1 x14) (fp.div RNE x4 x4)) (fp.mul RNE (fp.add RNE x10 x5) (fp.mul RNE x13 x0))))
(assert (fp.lt (fp.neg (fp.div RNE x3 x7)) (fp.sub RNE (fp.neg x4) (fp.div RNE x7 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x6 x5)) (fp.add RNE (fp.sub RNE x0 x2) (fp.sub RNE x13 x9))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x8 x4) (fp.div RNE x1 x9)) (fp.sub RNE (fp.neg x14) (fp.sub RNE x5 x1))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x3 x13) (fp.add RNE x12 x10)) (fp.add RNE (fp.mul RNE x6 x4) (fp.sub RNE x7 x4))))
(assert (fp.geq (fp.neg (fp.mul RNE x6 x8)) (fp.div RNE (fp.mul RNE x6 x6) (fp.div RNE x8 x10))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x12) (fp.neg x12)) (fp.mul RNE (fp.mul RNE x2 x0) (fp.mul RNE x11 x13))))
(assert (fp.eq (fp.div RNE (fp.div RNE x8 x3) (fp.add RNE x13 x4)) (fp.neg (fp.add RNE x10 x4))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x13 x2) (fp.neg x6)) (fp.add RNE (fp.neg x0) (fp.mul RNE x11 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x5 x11) (fp.mul RNE x3 x6)) (fp.add RNE (fp.add RNE x13 x2) (fp.mul RNE x3 x6))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x12 x12) (fp.neg x14)) (fp.neg (fp.div RNE x7 x1))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x0 x14) (fp.mul RNE x13 x12)) (fp.mul RNE (fp.mul RNE x3 x13) (fp.div RNE x3 x6))))
(assert (fp.gt (fp.add RNE (fp.add RNE x7 x10) (fp.neg x8)) (fp.neg (fp.neg x10))))
(check-sat)
