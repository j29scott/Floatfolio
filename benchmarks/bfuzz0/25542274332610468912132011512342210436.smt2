(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg x3) (fp.mul RNE x9 x6)))
(assert (fp.eq (fp.sub RNE x7 x3) (fp.neg x6)))
(assert (fp.eq (fp.div RNE x11 x9) (fp.add RNE x11 x10)))
(assert (fp.leq (fp.sub RNE x3 x2) (fp.neg x4)))
(assert (fp.lt (fp.add RNE x9 x9) (fp.neg x5)))
(assert (fp.geq (fp.sub RNE x3 x6) (fp.div RNE x4 x7)))
(assert (fp.leq (fp.div RNE x10 x11) (fp.mul RNE x10 x2)))
(assert (fp.leq (fp.div RNE x0 x7) (fp.add RNE x10 x7)))
(assert (fp.geq (fp.sub RNE x9 x11) (fp.mul RNE x10 x3)))
(assert (fp.leq (fp.neg x7) (fp.div RNE x5 x1)))
(assert (fp.gt (fp.neg x9) (fp.neg x6)))
(assert (fp.leq (fp.div RNE x2 x4) (fp.sub RNE x3 x10)))
(assert (fp.eq (fp.neg x6) (fp.div RNE x11 x7)))
(assert (fp.lt (fp.mul RNE x7 x4) (fp.mul RNE x2 x10)))
(assert (fp.leq (fp.add RNE x6 x7) (fp.div RNE x4 x10)))
(check-sat)
