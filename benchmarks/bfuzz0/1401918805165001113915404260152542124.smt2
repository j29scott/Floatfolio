(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE x2 x7) (fp.neg x12)) (fp.mul RNE (fp.neg x6) (fp.mul RNE x9 x6))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x0) (fp.mul RNE x10 x8)) (fp.mul RNE (fp.mul RNE x7 x6) (fp.add RNE x4 x9))))
(assert (fp.leq (fp.mul RNE (fp.neg x12) (fp.add RNE x0 x11)) (fp.mul RNE (fp.sub RNE x13 x11) (fp.mul RNE x2 x10))))
(assert (fp.gt (fp.neg (fp.add RNE x3 x11)) (fp.mul RNE (fp.mul RNE x2 x5) (fp.div RNE x3 x10))))
(assert (fp.lt (fp.div RNE (fp.div RNE x10 x6) (fp.div RNE x5 x10)) (fp.add RNE (fp.mul RNE x3 x3) (fp.mul RNE x12 x13))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x1 x6) (fp.add RNE x8 x11)) (fp.mul RNE (fp.div RNE x5 x9) (fp.add RNE x1 x10))))
(assert (fp.gt (fp.mul RNE (fp.neg x9) (fp.mul RNE x3 x0)) (fp.add RNE (fp.neg x9) (fp.add RNE x4 x3))))
(assert (fp.eq (fp.add RNE (fp.div RNE x8 x5) (fp.sub RNE x2 x2)) (fp.add RNE (fp.sub RNE x0 x5) (fp.add RNE x2 x1))))
(assert (fp.geq (fp.add RNE (fp.neg x2) (fp.neg x4)) (fp.div RNE (fp.sub RNE x2 x0) (fp.sub RNE x9 x5))))
(assert (fp.leq (fp.div RNE (fp.div RNE x3 x12) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x10 x6) (fp.add RNE x13 x13))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x8 x5) (fp.mul RNE x0 x6)) (fp.add RNE (fp.mul RNE x10 x2) (fp.neg x0))))
(assert (fp.lt (fp.sub RNE (fp.neg x11) (fp.neg x3)) (fp.add RNE (fp.div RNE x5 x11) (fp.mul RNE x11 x7))))
(assert (fp.geq (fp.neg (fp.sub RNE x8 x13)) (fp.neg (fp.sub RNE x6 x9))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x12 x1) (fp.div RNE x12 x10)) (fp.div RNE (fp.neg x12) (fp.sub RNE x8 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x12 x13)) (fp.mul RNE (fp.add RNE x4 x1) (fp.neg x6))))
(check-sat)
