(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x11 x13) (fp.div RNE x19 x13)))
(assert (fp.leq (fp.mul RNE x14 x15) (fp.neg x20)))
(assert (fp.lt (fp.sub RNE x16 x10) (fp.neg x4)))
(assert (fp.eq (fp.neg x7) (fp.add RNE x6 x19)))
(assert (fp.gt (fp.add RNE x0 x18) (fp.div RNE x7 x20)))
(assert (fp.leq (fp.sub RNE x6 x21) (fp.neg x4)))
(assert (fp.eq (fp.div RNE x18 x11) (fp.div RNE x5 x16)))
(assert (fp.leq (fp.div RNE x11 x16) (fp.div RNE x5 x9)))
(assert (fp.geq (fp.add RNE x1 x12) (fp.sub RNE x4 x8)))
(assert (fp.geq (fp.sub RNE x8 x3) (fp.div RNE x5 x7)))
(assert (fp.lt (fp.mul RNE x14 x11) (fp.mul RNE x9 x5)))
(assert (fp.geq (fp.mul RNE x5 x17) (fp.sub RNE x0 x5)))
(check-sat)
