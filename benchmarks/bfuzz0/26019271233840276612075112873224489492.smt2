(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.neg x7) (fp.neg x5)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x1 x5))) (fp.mul RNE (fp.neg (fp.add RNE x11 x14)) (fp.add RNE (fp.sub RNE x8 x12) (fp.add RNE x12 x5)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.div RNE x11 x3) (fp.add RNE x7 x11)) (fp.sub RNE (fp.neg x12) (fp.sub RNE x7 x14))) (fp.add RNE (fp.div RNE (fp.sub RNE x7 x4) (fp.mul RNE x4 x6)) (fp.add RNE (fp.sub RNE x0 x8) (fp.add RNE x2 x11)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.add RNE x7 x12)) (fp.mul RNE (fp.add RNE x1 x2) (fp.mul RNE x1 x7))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x3 x0) (fp.sub RNE x0 x2)) (fp.neg (fp.div RNE x12 x12)))))
(check-sat)
