(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.neg x5) (fp.div RNE x12 x3)) (fp.sub RNE (fp.neg x5) (fp.div RNE x13 x2))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x14 x11) (fp.add RNE x7 x2)) (fp.div RNE (fp.mul RNE x1 x5) (fp.add RNE x10 x8))))
(assert (fp.leq (fp.div RNE (fp.div RNE x7 x5) (fp.mul RNE x8 x1)) (fp.div RNE (fp.div RNE x3 x2) (fp.add RNE x8 x0))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x11 x4) (fp.neg x14)) (fp.add RNE (fp.neg x6) (fp.sub RNE x11 x1))))
(assert (fp.eq (fp.mul RNE (fp.neg x8) (fp.add RNE x2 x5)) (fp.mul RNE (fp.sub RNE x5 x6) (fp.mul RNE x8 x12))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x7 x6) (fp.sub RNE x4 x5)) (fp.sub RNE (fp.add RNE x0 x8) (fp.div RNE x9 x7))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x11 x1) (fp.neg x12)) (fp.neg (fp.sub RNE x10 x11))))
(check-sat)
