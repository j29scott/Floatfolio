(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x3 x11) (fp.div RNE x1 x7)) (fp.sub RNE (fp.sub RNE x6 x10) (fp.sub RNE x10 x2))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x6 x8) (fp.neg x2)) (fp.add RNE (fp.div RNE x5 x6) (fp.sub RNE x2 x6))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x5 x9) (fp.mul RNE x1 x6)) (fp.add RNE (fp.div RNE x6 x1) (fp.sub RNE x4 x1))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x0 x3) (fp.add RNE x0 x10)) (fp.neg (fp.sub RNE x0 x6))))
(assert (fp.leq (fp.neg (fp.add RNE x11 x7)) (fp.sub RNE (fp.mul RNE x7 x1) (fp.mul RNE x6 x7))))
(assert (fp.leq (fp.neg (fp.add RNE x3 x9)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.add RNE (fp.add RNE x11 x6) (fp.add RNE x5 x1)) (fp.div RNE (fp.div RNE x11 x10) (fp.div RNE x0 x4))))
(assert (fp.eq (fp.add RNE (fp.add RNE x1 x7) (fp.sub RNE x5 x6)) (fp.neg (fp.mul RNE x5 x11))))
(assert (fp.lt (fp.neg (fp.neg x8)) (fp.div RNE (fp.add RNE x6 x4) (fp.sub RNE x1 x1))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x4 x5) (fp.div RNE x5 x2)) (fp.add RNE (fp.add RNE x0 x10) (fp.add RNE x2 x1))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x6 x0) (fp.sub RNE x3 x6)) (fp.add RNE (fp.div RNE x1 x10) (fp.sub RNE x7 x6))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x9 x2) (fp.mul RNE x2 x5)) (fp.sub RNE (fp.neg x4) (fp.neg x8))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x6 x11) (fp.sub RNE x10 x6)) (fp.neg (fp.add RNE x5 x1))))
(assert (fp.leq (fp.add RNE (fp.add RNE x2 x11) (fp.add RNE x10 x1)) (fp.mul RNE (fp.mul RNE x0 x7) (fp.mul RNE x7 x8))))
(check-sat)
