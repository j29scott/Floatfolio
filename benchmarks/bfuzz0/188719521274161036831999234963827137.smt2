(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.neg x7) (fp.div RNE x9 x14)) (fp.mul RNE (fp.sub RNE x5 x11) (fp.neg x4))))
(assert (fp.leq (fp.neg (fp.mul RNE x0 x3)) (fp.div RNE (fp.div RNE x9 x1) (fp.add RNE x4 x11))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x11 x16) (fp.sub RNE x16 x15)) (fp.add RNE (fp.add RNE x4 x7) (fp.mul RNE x16 x1))))
(assert (fp.gt (fp.neg (fp.add RNE x14 x11)) (fp.neg (fp.mul RNE x10 x3))))
(assert (fp.eq (fp.neg (fp.neg x7)) (fp.sub RNE (fp.sub RNE x6 x12) (fp.add RNE x14 x6))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x16 x2) (fp.div RNE x7 x4)) (fp.neg (fp.mul RNE x2 x14))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x15 x3) (fp.div RNE x13 x0)) (fp.mul RNE (fp.add RNE x11 x14) (fp.div RNE x3 x6))))
(assert (fp.gt (fp.neg (fp.div RNE x3 x11)) (fp.div RNE (fp.sub RNE x10 x16) (fp.add RNE x6 x0))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x11 x16) (fp.mul RNE x11 x3)) (fp.neg (fp.mul RNE x12 x1))))
(assert (fp.lt (fp.div RNE (fp.add RNE x15 x6) (fp.div RNE x7 x9)) (fp.add RNE (fp.sub RNE x15 x15) (fp.mul RNE x11 x16))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x9 x4) (fp.sub RNE x2 x6)) (fp.neg (fp.add RNE x7 x5))))
(assert (fp.lt (fp.add RNE (fp.neg x1) (fp.neg x14)) (fp.mul RNE (fp.mul RNE x13 x14) (fp.mul RNE x11 x16))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x15 x6) (fp.add RNE x16 x7)) (fp.div RNE (fp.div RNE x9 x10) (fp.mul RNE x8 x5))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x2 x6) (fp.sub RNE x9 x14)) (fp.sub RNE (fp.div RNE x9 x1) (fp.sub RNE x15 x9))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x10 x4) (fp.sub RNE x5 x8)) (fp.sub RNE (fp.mul RNE x12 x8) (fp.div RNE x6 x14))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x4 x15) (fp.div RNE x16 x14)) (fp.add RNE (fp.div RNE x7 x6) (fp.div RNE x3 x4))))
(check-sat)
