(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.div RNE x7 x5)) (fp.div RNE (fp.mul RNE x14 x1) (fp.sub RNE x16 x2))))
(assert (fp.geq (fp.div RNE (fp.add RNE x0 x12) (fp.neg x15)) (fp.mul RNE (fp.div RNE x6 x12) (fp.add RNE x12 x13))))
(assert (fp.geq (fp.add RNE (fp.neg x1) (fp.mul RNE x12 x1)) (fp.neg (fp.add RNE x19 x8))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x15 x2) (fp.div RNE x2 x7)) (fp.add RNE (fp.add RNE x12 x11) (fp.add RNE x2 x12))))
(assert (fp.geq (fp.add RNE (fp.neg x17) (fp.add RNE x8 x5)) (fp.div RNE (fp.add RNE x18 x3) (fp.mul RNE x19 x16))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x19 x18) (fp.sub RNE x17 x18)) (fp.div RNE (fp.mul RNE x15 x18) (fp.div RNE x6 x19))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x17 x15) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x7 x17) (fp.div RNE x19 x3))))
(assert (fp.gt (fp.div RNE (fp.neg x6) (fp.add RNE x1 x4)) (fp.div RNE (fp.mul RNE x11 x3) (fp.sub RNE x9 x11))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x8 x2) (fp.sub RNE x19 x12)) (fp.mul RNE (fp.sub RNE x10 x8) (fp.mul RNE x1 x7))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x19 x19) (fp.div RNE x14 x1)) (fp.mul RNE (fp.neg x3) (fp.div RNE x11 x14))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x14 x11) (fp.sub RNE x6 x8)) (fp.mul RNE (fp.mul RNE x3 x9) (fp.mul RNE x0 x1))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x15 x2) (fp.div RNE x6 x14)) (fp.sub RNE (fp.sub RNE x11 x19) (fp.mul RNE x11 x15))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x2 x5) (fp.sub RNE x1 x17)) (fp.sub RNE (fp.sub RNE x12 x6) (fp.mul RNE x5 x19))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x8 x13) (fp.div RNE x4 x8)) (fp.div RNE (fp.mul RNE x8 x19) (fp.add RNE x1 x5))))
(assert (fp.leq (fp.add RNE (fp.div RNE x14 x0) (fp.sub RNE x10 x4)) (fp.sub RNE (fp.sub RNE x18 x10) (fp.sub RNE x6 x7))))
(assert (fp.leq (fp.div RNE (fp.div RNE x14 x17) (fp.sub RNE x11 x0)) (fp.add RNE (fp.neg x11) (fp.mul RNE x7 x5))))
(assert (fp.geq (fp.neg (fp.mul RNE x2 x13)) (fp.sub RNE (fp.div RNE x10 x10) (fp.neg x8))))
(assert (fp.lt (fp.neg (fp.mul RNE x11 x11)) (fp.add RNE (fp.add RNE x17 x8) (fp.sub RNE x7 x0))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x11 x17) (fp.sub RNE x12 x8)) (fp.sub RNE (fp.sub RNE x14 x1) (fp.div RNE x10 x9))))
(check-sat)
