(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE x0 x5) (fp.sub RNE x11 x2)))
(assert (fp.eq (fp.mul RNE x22 x1) (fp.sub RNE x0 x12)))
(assert (fp.geq (fp.div RNE x12 x5) (fp.sub RNE x19 x12)))
(assert (fp.lt (fp.add RNE x2 x5) (fp.mul RNE x10 x14)))
(assert (fp.gt (fp.add RNE x9 x6) (fp.div RNE x5 x13)))
(assert (fp.leq (fp.neg x18) (fp.div RNE x1 x15)))
(assert (fp.lt (fp.add RNE x11 x18) (fp.neg x14)))
(assert (fp.lt (fp.sub RNE x6 x12) (fp.neg x5)))
(check-sat)
