(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x9 x10) (fp.add RNE x8 x10)))
(assert (fp.geq (fp.sub RNE x6 x3) (fp.neg x8)))
(assert (fp.eq (fp.add RNE x0 x11) (fp.neg x3)))
(assert (fp.leq (fp.add RNE x2 x1) (fp.add RNE x5 x8)))
(assert (fp.lt (fp.add RNE x8 x6) (fp.div RNE x0 x5)))
(assert (fp.geq (fp.add RNE x7 x0) (fp.mul RNE x9 x10)))
(assert (fp.geq (fp.sub RNE x11 x3) (fp.neg x5)))
(assert (fp.eq (fp.sub RNE x5 x7) (fp.mul RNE x10 x9)))
(assert (fp.gt (fp.neg x8) (fp.neg x6)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x9 x2)))
(assert (fp.geq (fp.sub RNE x2 x2) (fp.div RNE x6 x7)))
(assert (fp.gt (fp.sub RNE x4 x0) (fp.mul RNE x2 x5)))
(assert (fp.leq (fp.neg x9) (fp.sub RNE x0 x8)))
(assert (fp.geq (fp.div RNE x8 x10) (fp.sub RNE x2 x9)))
(assert (fp.lt (fp.add RNE x11 x1) (fp.add RNE x10 x5)))
(check-sat)
