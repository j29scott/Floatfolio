(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg x12) (fp.neg x17)) (fp.add RNE (fp.div RNE x15 x18) (fp.sub RNE x16 x6))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x3) (fp.add RNE x6 x14)) (fp.neg (fp.div RNE x12 x5)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.mul RNE x9 x8) (fp.add RNE x16 x16))) (fp.neg (fp.sub RNE (fp.mul RNE x17 x6) (fp.div RNE x6 x17)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.neg x4)) (fp.add RNE (fp.div RNE x9 x14) (fp.div RNE x11 x15))) (fp.add RNE (fp.mul RNE (fp.div RNE x9 x13) (fp.add RNE x16 x11)) (fp.neg (fp.mul RNE x9 x5)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.div RNE x5 x14)) (fp.mul RNE (fp.mul RNE x18 x18) (fp.mul RNE x15 x16))) (fp.div RNE (fp.neg (fp.mul RNE x10 x18)) (fp.mul RNE (fp.mul RNE x13 x1) (fp.sub RNE x2 x15)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.neg x0)) (fp.sub RNE (fp.mul RNE x16 x14) (fp.add RNE x11 x13))) (fp.div RNE (fp.div RNE (fp.sub RNE x9 x6) (fp.div RNE x3 x5)) (fp.neg (fp.sub RNE x9 x2)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x9 x10) (fp.div RNE x11 x12)) (fp.add RNE (fp.sub RNE x6 x13) (fp.mul RNE x3 x9))) (fp.add RNE (fp.mul RNE (fp.div RNE x9 x17) (fp.div RNE x6 x15)) (fp.add RNE (fp.sub RNE x15 x1) (fp.add RNE x16 x16)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.mul RNE x6 x12) (fp.div RNE x11 x3)) (fp.neg (fp.div RNE x15 x13))) (fp.add RNE (fp.neg (fp.mul RNE x12 x18)) (fp.mul RNE (fp.div RNE x12 x10) (fp.neg x11)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE x9 x6) (fp.sub RNE x4 x4)) (fp.add RNE (fp.div RNE x2 x6) (fp.add RNE x15 x6))) (fp.add RNE (fp.neg (fp.sub RNE x13 x18)) (fp.mul RNE (fp.neg x2) (fp.neg x6)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.neg x8) (fp.sub RNE x0 x8)) (fp.sub RNE (fp.mul RNE x5 x12) (fp.neg x3))) (fp.add RNE (fp.div RNE (fp.neg x7) (fp.mul RNE x0 x0)) (fp.neg (fp.add RNE x15 x18)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x6) (fp.div RNE x1 x11)) (fp.add RNE (fp.div RNE x9 x2) (fp.mul RNE x15 x7))) (fp.mul RNE (fp.mul RNE (fp.add RNE x13 x15) (fp.sub RNE x5 x4)) (fp.add RNE (fp.div RNE x2 x17) (fp.neg x1)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE x5 x11) (fp.neg x11)) (fp.mul RNE (fp.neg x10) (fp.neg x1))) (fp.add RNE (fp.neg (fp.div RNE x6 x11)) (fp.mul RNE (fp.sub RNE x15 x9) (fp.mul RNE x1 x5)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.sub RNE x1 x7) (fp.mul RNE x5 x10)) (fp.mul RNE (fp.add RNE x7 x12) (fp.div RNE x13 x17))) (fp.sub RNE (fp.neg (fp.add RNE x6 x12)) (fp.neg (fp.neg x18)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.neg x6) (fp.mul RNE x7 x2)) (fp.neg (fp.sub RNE x12 x14))) (fp.mul RNE (fp.add RNE (fp.add RNE x6 x4) (fp.mul RNE x18 x4)) (fp.sub RNE (fp.add RNE x8 x15) (fp.neg x12)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.add RNE x6 x17) (fp.mul RNE x3 x18)) (fp.add RNE (fp.sub RNE x11 x13) (fp.add RNE x15 x8))) (fp.sub RNE (fp.mul RNE (fp.div RNE x5 x10) (fp.add RNE x2 x16)) (fp.div RNE (fp.sub RNE x5 x8) (fp.neg x12)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE x7 x10) (fp.mul RNE x3 x11)) (fp.neg (fp.mul RNE x10 x18))) (fp.div RNE (fp.neg (fp.sub RNE x10 x1)) (fp.neg (fp.neg x15)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE x13 x8) (fp.sub RNE x6 x8)) (fp.neg (fp.neg x8))) (fp.div RNE (fp.div RNE (fp.add RNE x9 x17) (fp.sub RNE x13 x18)) (fp.sub RNE (fp.div RNE x11 x1) (fp.mul RNE x13 x13)))))
(check-sat)
