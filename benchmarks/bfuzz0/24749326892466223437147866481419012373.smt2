(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE x9 x19) (fp.mul RNE x6 x11)))
(assert (fp.geq (fp.div RNE x4 x2) (fp.mul RNE x5 x4)))
(assert (fp.leq (fp.neg x2) (fp.sub RNE x4 x18)))
(assert (fp.leq (fp.sub RNE x19 x11) (fp.add RNE x8 x12)))
(assert (fp.leq (fp.div RNE x12 x1) (fp.div RNE x16 x9)))
(assert (fp.eq (fp.neg x10) (fp.add RNE x19 x0)))
(assert (fp.lt (fp.mul RNE x1 x19) (fp.sub RNE x7 x8)))
(assert (fp.leq (fp.div RNE x2 x3) (fp.div RNE x17 x12)))
(assert (fp.geq (fp.mul RNE x7 x1) (fp.neg x2)))
(assert (fp.geq (fp.neg x17) (fp.sub RNE x11 x10)))
(check-sat)
