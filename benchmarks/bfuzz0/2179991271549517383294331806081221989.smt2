(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x10 x5) (fp.sub RNE x8 x9)))
(assert (fp.eq (fp.div RNE x6 x8) (fp.neg x9)))
(assert (fp.geq (fp.sub RNE x10 x9) (fp.sub RNE x4 x11)))
(assert (fp.eq (fp.sub RNE x11 x9) (fp.div RNE x3 x0)))
(assert (fp.leq (fp.div RNE x10 x4) (fp.neg x9)))
(assert (fp.geq (fp.add RNE x4 x7) (fp.sub RNE x7 x1)))
(assert (fp.lt (fp.mul RNE x4 x9) (fp.neg x10)))
(assert (fp.geq (fp.div RNE x3 x0) (fp.mul RNE x7 x0)))
(assert (fp.leq (fp.sub RNE x3 x6) (fp.add RNE x1 x0)))
(assert (fp.leq (fp.neg x0) (fp.mul RNE x10 x5)))
(assert (fp.geq (fp.sub RNE x8 x10) (fp.mul RNE x5 x10)))
(assert (fp.geq (fp.mul RNE x6 x0) (fp.add RNE x5 x10)))
(assert (fp.geq (fp.add RNE x7 x7) (fp.neg x8)))
(assert (fp.gt (fp.mul RNE x7 x1) (fp.add RNE x7 x8)))
(assert (fp.leq (fp.add RNE x7 x7) (fp.div RNE x6 x1)))
(assert (fp.eq (fp.add RNE x5 x5) (fp.div RNE x7 x9)))
(assert (fp.lt (fp.div RNE x7 x2) (fp.sub RNE x10 x11)))
(assert (fp.gt (fp.add RNE x8 x6) (fp.neg x4)))
(check-sat)
