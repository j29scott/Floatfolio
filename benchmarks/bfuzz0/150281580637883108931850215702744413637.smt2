(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.div RNE (fp.div RNE x3 x8) (fp.div RNE x0 x11)) (fp.add RNE (fp.div RNE x2 x9) (fp.add RNE x6 x1))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x11 x2) (fp.mul RNE x12 x8)) (fp.mul RNE (fp.div RNE x0 x7) (fp.sub RNE x12 x1)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.neg x13) (fp.div RNE x4 x4)) (fp.div RNE (fp.div RNE x6 x12) (fp.div RNE x13 x1))) (fp.add RNE (fp.mul RNE (fp.div RNE x8 x5) (fp.neg x0)) (fp.add RNE (fp.neg x3) (fp.div RNE x1 x11))))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.div RNE x11 x0) (fp.add RNE x6 x12)) (fp.div RNE (fp.div RNE x2 x0) (fp.sub RNE x6 x0))) (fp.mul RNE (fp.div RNE (fp.neg x4) (fp.div RNE x12 x12)) (fp.sub RNE (fp.mul RNE x3 x4) (fp.neg x3)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.sub RNE x5 x10) (fp.div RNE x10 x0)) (fp.sub RNE (fp.mul RNE x4 x12) (fp.add RNE x5 x0))) (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x12) (fp.sub RNE x11 x4)) (fp.sub RNE (fp.neg x5) (fp.neg x4))))))
(check-sat)
