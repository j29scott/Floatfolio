(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x15 x3) (fp.neg x6)) (fp.mul RNE (fp.add RNE x8 x14) (fp.div RNE x16 x17))) (fp.add RNE (fp.mul RNE (fp.sub RNE x15 x6) (fp.div RNE x8 x3)) (fp.div RNE (fp.sub RNE x12 x9) (fp.div RNE x11 x9)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.neg x3)) (fp.div RNE (fp.div RNE x9 x4) (fp.mul RNE x0 x9))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x15 x0) (fp.sub RNE x9 x9)) (fp.add RNE (fp.mul RNE x15 x16) (fp.div RNE x14 x14))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x9 x3) (fp.div RNE x6 x5)) (fp.mul RNE (fp.neg x6) (fp.div RNE x1 x7))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x13) (fp.add RNE x8 x5)) (fp.sub RNE (fp.sub RNE x14 x8) (fp.div RNE x8 x1)))) (fp.neg (fp.mul RNE (fp.sub RNE (fp.div RNE x17 x15) (fp.add RNE x11 x16)) (fp.sub RNE (fp.div RNE x15 x16) (fp.sub RNE x11 x15))))))
(check-sat)
