(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.add RNE x13 x12) (fp.add RNE x3 x15)) (fp.mul RNE (fp.neg x6) (fp.add RNE x2 x15))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x16 x8) (fp.neg x16)) (fp.add RNE (fp.div RNE x3 x3) (fp.sub RNE x16 x3))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x14 x0) (fp.add RNE x17 x2)) (fp.sub RNE (fp.mul RNE x8 x1) (fp.add RNE x3 x15))))
(assert (fp.lt (fp.div RNE (fp.add RNE x5 x16) (fp.sub RNE x17 x2)) (fp.neg (fp.mul RNE x9 x7))))
(check-sat)
