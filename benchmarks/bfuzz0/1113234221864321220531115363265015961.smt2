(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE x1 x7) (fp.sub RNE x1 x5)))
(assert (fp.lt (fp.add RNE x2 x4) (fp.add RNE x3 x2)))
(assert (fp.eq (fp.sub RNE x4 x7) (fp.mul RNE x4 x8)))
(assert (fp.gt (fp.neg x4) (fp.div RNE x1 x4)))
(assert (fp.eq (fp.sub RNE x6 x1) (fp.neg x8)))
(assert (fp.gt (fp.neg x0) (fp.add RNE x3 x9)))
(assert (fp.lt (fp.div RNE x9 x7) (fp.mul RNE x7 x0)))
(assert (fp.leq (fp.mul RNE x3 x1) (fp.add RNE x3 x5)))
(assert (fp.eq (fp.mul RNE x0 x5) (fp.div RNE x3 x2)))
(assert (fp.leq (fp.mul RNE x6 x4) (fp.neg x2)))
(assert (fp.gt (fp.add RNE x1 x8) (fp.neg x7)))
(assert (fp.eq (fp.div RNE x6 x1) (fp.add RNE x3 x0)))
(assert (fp.gt (fp.div RNE x8 x9) (fp.add RNE x3 x0)))
(assert (fp.eq (fp.add RNE x0 x4) (fp.mul RNE x7 x0)))
(assert (fp.geq (fp.mul RNE x6 x3) (fp.sub RNE x2 x6)))
(assert (fp.leq (fp.neg x2) (fp.sub RNE x4 x3)))
(check-sat)
