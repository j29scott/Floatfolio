(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.div RNE x8 x7)) (fp.add RNE (fp.mul RNE x5 x8) (fp.add RNE x3 x4))))
(assert (fp.eq (fp.mul RNE (fp.neg x3) (fp.div RNE x4 x7)) (fp.neg (fp.mul RNE x0 x6))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x0 x1) (fp.add RNE x6 x8)) (fp.add RNE (fp.mul RNE x5 x7) (fp.div RNE x5 x3))))
(assert (fp.eq (fp.div RNE (fp.add RNE x9 x4) (fp.mul RNE x7 x2)) (fp.div RNE (fp.mul RNE x4 x3) (fp.div RNE x8 x8))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x3) (fp.mul RNE x8 x7)) (fp.neg (fp.sub RNE x9 x9))))
(assert (fp.eq (fp.add RNE (fp.neg x5) (fp.sub RNE x1 x8)) (fp.mul RNE (fp.div RNE x3 x9) (fp.add RNE x3 x3))))
(assert (fp.gt (fp.neg (fp.neg x9)) (fp.sub RNE (fp.add RNE x7 x8) (fp.neg x1))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x1 x2) (fp.neg x3)) (fp.add RNE (fp.add RNE x1 x7) (fp.neg x7))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x7 x7) (fp.sub RNE x1 x9)) (fp.sub RNE (fp.add RNE x0 x9) (fp.div RNE x3 x8))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x6 x7) (fp.sub RNE x6 x1)) (fp.neg (fp.mul RNE x6 x6))))
(assert (fp.eq (fp.div RNE (fp.div RNE x4 x4) (fp.sub RNE x9 x1)) (fp.mul RNE (fp.add RNE x0 x3) (fp.mul RNE x1 x6))))
(assert (fp.geq (fp.neg (fp.mul RNE x1 x5)) (fp.add RNE (fp.sub RNE x0 x1) (fp.neg x0))))
(assert (fp.leq (fp.mul RNE (fp.neg x5) (fp.neg x9)) (fp.add RNE (fp.mul RNE x1 x6) (fp.sub RNE x1 x6))))
(assert (fp.gt (fp.neg (fp.mul RNE x3 x2)) (fp.mul RNE (fp.div RNE x9 x6) (fp.add RNE x5 x6))))
(assert (fp.eq (fp.neg (fp.neg x7)) (fp.neg (fp.div RNE x9 x8))))
(check-sat)
