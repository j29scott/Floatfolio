(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x2 x3) (fp.sub RNE x9 x3)))
(assert (fp.leq (fp.add RNE x10 x12) (fp.neg x11)))
(assert (fp.leq (fp.add RNE x6 x10) (fp.neg x9)))
(assert (fp.lt (fp.div RNE x11 x5) (fp.sub RNE x7 x1)))
(assert (fp.eq (fp.add RNE x12 x3) (fp.neg x6)))
(assert (fp.lt (fp.div RNE x11 x11) (fp.mul RNE x7 x11)))
(assert (fp.geq (fp.add RNE x12 x9) (fp.sub RNE x7 x7)))
(assert (fp.lt (fp.sub RNE x4 x10) (fp.mul RNE x0 x0)))
(assert (fp.gt (fp.neg x3) (fp.add RNE x12 x5)))
(assert (fp.eq (fp.neg x7) (fp.neg x1)))
(assert (fp.lt (fp.div RNE x10 x12) (fp.neg x10)))
(assert (fp.eq (fp.mul RNE x3 x2) (fp.sub RNE x2 x8)))
(assert (fp.lt (fp.sub RNE x3 x5) (fp.sub RNE x1 x11)))
(check-sat)
