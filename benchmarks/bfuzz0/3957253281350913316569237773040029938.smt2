(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE x11 x15) (fp.neg x4)) (fp.neg (fp.add RNE x0 x0))) (fp.mul RNE (fp.sub RNE (fp.add RNE x12 x4) (fp.sub RNE x17 x1)) (fp.mul RNE (fp.sub RNE x15 x14) (fp.sub RNE x14 x1)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.div RNE x0 x17)) (fp.sub RNE (fp.add RNE x18 x11) (fp.sub RNE x16 x16))) (fp.add RNE (fp.add RNE (fp.add RNE x2 x9) (fp.div RNE x15 x0)) (fp.div RNE (fp.mul RNE x3 x9) (fp.neg x6)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x8 x12)) (fp.add RNE (fp.div RNE x5 x15) (fp.sub RNE x4 x2))) (fp.mul RNE (fp.neg (fp.div RNE x18 x2)) (fp.mul RNE (fp.add RNE x11 x13) (fp.sub RNE x14 x8)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.neg x15) (fp.sub RNE x6 x4)) (fp.add RNE (fp.sub RNE x8 x18) (fp.mul RNE x14 x1))) (fp.div RNE (fp.neg (fp.mul RNE x3 x10)) (fp.mul RNE (fp.div RNE x12 x7) (fp.mul RNE x0 x16)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x2 x4) (fp.neg x6))) (fp.mul RNE (fp.mul RNE (fp.add RNE x9 x18) (fp.neg x4)) (fp.div RNE (fp.add RNE x6 x7) (fp.mul RNE x15 x17)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE x0 x18)) (fp.sub RNE (fp.div RNE x2 x12) (fp.add RNE x11 x11))) (fp.div RNE (fp.add RNE (fp.div RNE x9 x9) (fp.add RNE x12 x3)) (fp.sub RNE (fp.mul RNE x3 x8) (fp.div RNE x4 x10)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.div RNE x16 x11) (fp.add RNE x17 x16)) (fp.sub RNE (fp.div RNE x0 x3) (fp.sub RNE x18 x8))) (fp.neg (fp.div RNE (fp.sub RNE x11 x8) (fp.sub RNE x9 x13)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.div RNE x2 x11) (fp.div RNE x10 x15)) (fp.div RNE (fp.sub RNE x2 x8) (fp.sub RNE x9 x18))) (fp.neg (fp.add RNE (fp.mul RNE x3 x4) (fp.neg x17)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.neg x15)) (fp.mul RNE (fp.sub RNE x11 x0) (fp.add RNE x18 x11))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x7 x10) (fp.neg x9)) (fp.add RNE (fp.add RNE x2 x15) (fp.div RNE x15 x9)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.sub RNE x8 x4) (fp.mul RNE x7 x5)) (fp.mul RNE (fp.sub RNE x12 x4) (fp.neg x12))) (fp.neg (fp.div RNE (fp.sub RNE x2 x6) (fp.neg x8)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.mul RNE x5 x8) (fp.neg x14))) (fp.sub RNE (fp.neg (fp.add RNE x11 x8)) (fp.div RNE (fp.neg x3) (fp.sub RNE x7 x13)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.sub RNE x5 x13) (fp.mul RNE x2 x11)) (fp.mul RNE (fp.mul RNE x8 x3) (fp.sub RNE x11 x4))) (fp.div RNE (fp.mul RNE (fp.mul RNE x15 x14) (fp.sub RNE x3 x8)) (fp.neg (fp.mul RNE x18 x18)))))
(check-sat)
