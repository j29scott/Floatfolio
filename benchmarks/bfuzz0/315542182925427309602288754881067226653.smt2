(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.neg (fp.div RNE (fp.mul RNE x8 x12) (fp.sub RNE x4 x10))) (fp.div RNE (fp.add RNE (fp.mul RNE x7 x12) (fp.mul RNE x11 x3)) (fp.div RNE (fp.sub RNE x0 x2) (fp.add RNE x1 x3)))) (fp.sub RNE (fp.neg (fp.sub RNE (fp.mul RNE x13 x16) (fp.sub RNE x2 x1))) (fp.sub RNE (fp.mul RNE (fp.div RNE x3 x4) (fp.div RNE x2 x11)) (fp.neg (fp.div RNE x9 x15))))))
(assert (fp.geq (fp.div RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x7 x0) (fp.add RNE x10 x8)) (fp.neg (fp.add RNE x10 x15))) (fp.add RNE (fp.neg (fp.add RNE x2 x11)) (fp.sub RNE (fp.sub RNE x0 x2) (fp.sub RNE x8 x6)))) (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x0 x12) (fp.mul RNE x12 x1)) (fp.mul RNE (fp.mul RNE x16 x2) (fp.neg x7))) (fp.div RNE (fp.neg (fp.sub RNE x8 x12)) (fp.neg (fp.div RNE x8 x3))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg (fp.div RNE x10 x4)) (fp.add RNE (fp.mul RNE x11 x10) (fp.mul RNE x3 x3))) (fp.sub RNE (fp.mul RNE (fp.div RNE x5 x0) (fp.sub RNE x3 x4)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x0 x16)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.add RNE x6 x12)) (fp.add RNE (fp.add RNE x9 x3) (fp.mul RNE x13 x10))) (fp.div RNE (fp.div RNE (fp.sub RNE x15 x10) (fp.neg x2)) (fp.div RNE (fp.neg x6) (fp.div RNE x14 x6))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.sub RNE x9 x10) (fp.mul RNE x0 x1)) (fp.neg (fp.mul RNE x3 x6))) (fp.div RNE (fp.sub RNE (fp.mul RNE x9 x12) (fp.sub RNE x0 x15)) (fp.sub RNE (fp.mul RNE x16 x7) (fp.sub RNE x4 x14)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.neg x13) (fp.div RNE x3 x13)) (fp.div RNE (fp.mul RNE x12 x2) (fp.neg x11))) (fp.neg (fp.div RNE (fp.sub RNE x13 x6) (fp.mul RNE x16 x7))))))
(check-sat)
