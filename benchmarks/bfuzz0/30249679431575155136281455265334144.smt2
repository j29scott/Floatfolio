(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE (fp.neg x3) (fp.mul RNE x5 x7)) (fp.div RNE (fp.div RNE x4 x5) (fp.mul RNE x1 x6))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x1 x4) (fp.div RNE x5 x6)) (fp.div RNE (fp.add RNE x3 x4) (fp.mul RNE x0 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x1 x6) (fp.div RNE x2 x1)) (fp.div RNE (fp.mul RNE x7 x4) (fp.div RNE x7 x3))))
(assert (fp.leq (fp.mul RNE (fp.neg x3) (fp.neg x4)) (fp.mul RNE (fp.sub RNE x3 x7) (fp.add RNE x5 x3))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x1 x1) (fp.div RNE x7 x1)) (fp.sub RNE (fp.add RNE x7 x4) (fp.sub RNE x6 x1))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x2 x5) (fp.div RNE x7 x3)) (fp.mul RNE (fp.sub RNE x7 x3) (fp.sub RNE x4 x5))))
(assert (fp.geq (fp.div RNE (fp.neg x4) (fp.div RNE x1 x3)) (fp.neg (fp.add RNE x2 x4))))
(assert (fp.gt (fp.div RNE (fp.neg x5) (fp.add RNE x6 x2)) (fp.div RNE (fp.div RNE x2 x2) (fp.add RNE x1 x3))))
(check-sat)
