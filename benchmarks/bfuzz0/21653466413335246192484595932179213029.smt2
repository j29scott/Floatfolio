(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE x4 x0) (fp.sub RNE x5 x1)))
(assert (fp.gt (fp.add RNE x1 x7) (fp.div RNE x4 x0)))
(assert (fp.gt (fp.div RNE x5 x1) (fp.div RNE x3 x6)))
(assert (fp.geq (fp.add RNE x4 x8) (fp.sub RNE x0 x7)))
(assert (fp.gt (fp.mul RNE x6 x2) (fp.mul RNE x7 x7)))
(assert (fp.eq (fp.add RNE x3 x4) (fp.add RNE x4 x4)))
(assert (fp.lt (fp.add RNE x8 x8) (fp.div RNE x2 x6)))
(assert (fp.gt (fp.neg x4) (fp.mul RNE x3 x8)))
(assert (fp.lt (fp.add RNE x6 x7) (fp.neg x4)))
(assert (fp.eq (fp.div RNE x5 x8) (fp.add RNE x0 x3)))
(assert (fp.gt (fp.sub RNE x1 x1) (fp.div RNE x1 x3)))
(assert (fp.eq (fp.neg x1) (fp.div RNE x1 x6)))
(assert (fp.eq (fp.div RNE x6 x6) (fp.div RNE x3 x6)))
(check-sat)
