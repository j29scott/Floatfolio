(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.add RNE x4 x2) (fp.mul RNE x10 x0)) (fp.mul RNE (fp.div RNE x3 x1) (fp.div RNE x1 x10))) (fp.sub RNE (fp.sub RNE (fp.div RNE x15 x15) (fp.sub RNE x4 x5)) (fp.sub RNE (fp.add RNE x16 x6) (fp.mul RNE x4 x8)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x4 x2) (fp.add RNE x3 x12)) (fp.div RNE (fp.sub RNE x13 x0) (fp.add RNE x8 x1))) (fp.add RNE (fp.add RNE (fp.add RNE x9 x16) (fp.add RNE x4 x5)) (fp.div RNE (fp.mul RNE x10 x2) (fp.mul RNE x0 x14)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE x3 x4) (fp.neg x15)) (fp.sub RNE (fp.mul RNE x12 x11) (fp.add RNE x5 x1))) (fp.div RNE (fp.neg (fp.neg x13)) (fp.neg (fp.add RNE x9 x12)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x5) (fp.mul RNE x8 x11)) (fp.mul RNE (fp.add RNE x14 x5) (fp.sub RNE x8 x11))) (fp.neg (fp.sub RNE (fp.add RNE x11 x0) (fp.mul RNE x3 x3)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x7) (fp.neg x2)) (fp.mul RNE (fp.div RNE x2 x16) (fp.add RNE x3 x3))) (fp.div RNE (fp.sub RNE (fp.add RNE x7 x7) (fp.div RNE x4 x4)) (fp.neg (fp.neg x7)))))
(check-sat)
