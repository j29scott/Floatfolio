(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE x18 x6) (fp.add RNE x9 x5)) (fp.div RNE (fp.neg x1) (fp.div RNE x8 x12))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x22 x2) (fp.add RNE x18 x16)) (fp.neg (fp.neg x11))))
(assert (fp.gt (fp.div RNE (fp.add RNE x10 x17) (fp.neg x12)) (fp.add RNE (fp.sub RNE x2 x22) (fp.add RNE x12 x10))))
(assert (fp.leq (fp.add RNE (fp.neg x16) (fp.neg x10)) (fp.neg (fp.add RNE x9 x21))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x13 x21) (fp.neg x6)) (fp.sub RNE (fp.neg x8) (fp.mul RNE x18 x9))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x3) (fp.div RNE x12 x16)) (fp.div RNE (fp.div RNE x13 x6) (fp.sub RNE x6 x16))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x20 x15) (fp.sub RNE x10 x5)) (fp.mul RNE (fp.add RNE x15 x22) (fp.neg x13))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x6 x1) (fp.neg x12)) (fp.add RNE (fp.add RNE x21 x1) (fp.mul RNE x13 x3))))
(assert (fp.gt (fp.add RNE (fp.div RNE x1 x11) (fp.div RNE x3 x20)) (fp.div RNE (fp.mul RNE x13 x2) (fp.neg x11))))
(assert (fp.lt (fp.neg (fp.mul RNE x15 x18)) (fp.sub RNE (fp.mul RNE x12 x6) (fp.mul RNE x13 x12))))
(assert (fp.lt (fp.mul RNE (fp.neg x17) (fp.sub RNE x7 x2)) (fp.add RNE (fp.mul RNE x5 x9) (fp.sub RNE x22 x9))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x20 x16) (fp.add RNE x8 x9)) (fp.sub RNE (fp.add RNE x16 x12) (fp.neg x1))))
(assert (fp.eq (fp.div RNE (fp.add RNE x12 x22) (fp.add RNE x9 x6)) (fp.add RNE (fp.sub RNE x20 x20) (fp.mul RNE x22 x18))))
(assert (fp.lt (fp.neg (fp.div RNE x9 x18)) (fp.add RNE (fp.mul RNE x21 x14) (fp.sub RNE x12 x21))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x22)) (fp.add RNE (fp.sub RNE x17 x11) (fp.div RNE x2 x2))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x13 x4) (fp.neg x9)) (fp.div RNE (fp.add RNE x8 x7) (fp.add RNE x17 x17))))
(assert (fp.eq (fp.add RNE (fp.neg x6) (fp.add RNE x17 x13)) (fp.add RNE (fp.sub RNE x16 x13) (fp.sub RNE x3 x9))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x21 x9) (fp.div RNE x3 x22)) (fp.sub RNE (fp.div RNE x11 x22) (fp.add RNE x19 x20))))
(assert (fp.geq (fp.add RNE (fp.div RNE x7 x20) (fp.add RNE x2 x7)) (fp.div RNE (fp.add RNE x1 x18) (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x18 x7) (fp.sub RNE x21 x20)) (fp.div RNE (fp.div RNE x22 x22) (fp.sub RNE x13 x12))))
(check-sat)
