(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x4) (fp.div RNE x1 x2)))
(assert (fp.gt (fp.neg x6) (fp.mul RNE x6 x7)))
(assert (fp.leq (fp.div RNE x6 x2) (fp.add RNE x7 x7)))
(assert (fp.lt (fp.div RNE x8 x3) (fp.sub RNE x7 x1)))
(assert (fp.leq (fp.mul RNE x5 x6) (fp.neg x2)))
(assert (fp.geq (fp.sub RNE x8 x5) (fp.div RNE x4 x6)))
(assert (fp.geq (fp.div RNE x3 x4) (fp.mul RNE x8 x4)))
(assert (fp.geq (fp.neg x2) (fp.add RNE x5 x3)))
(assert (fp.lt (fp.sub RNE x7 x5) (fp.sub RNE x3 x1)))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x6 x2)))
(assert (fp.lt (fp.add RNE x7 x7) (fp.div RNE x0 x7)))
(assert (fp.leq (fp.div RNE x4 x5) (fp.div RNE x2 x1)))
(assert (fp.lt (fp.mul RNE x1 x0) (fp.sub RNE x4 x5)))
(assert (fp.gt (fp.div RNE x7 x8) (fp.mul RNE x4 x0)))
(assert (fp.gt (fp.div RNE x4 x3) (fp.neg x4)))
(assert (fp.eq (fp.mul RNE x5 x8) (fp.sub RNE x4 x2)))
(check-sat)
