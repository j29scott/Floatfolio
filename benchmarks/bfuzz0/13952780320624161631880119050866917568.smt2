(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg (fp.neg x16)) (fp.sub RNE (fp.add RNE x23 x18) (fp.neg x2))) (fp.neg (fp.mul RNE (fp.mul RNE x24 x21) (fp.mul RNE x11 x24)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x12 x10) (fp.sub RNE x3 x5)) (fp.sub RNE (fp.sub RNE x7 x22) (fp.mul RNE x6 x9))) (fp.div RNE (fp.mul RNE (fp.sub RNE x14 x10) (fp.sub RNE x1 x8)) (fp.add RNE (fp.div RNE x12 x7) (fp.sub RNE x10 x22))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x14 x1) (fp.add RNE x13 x7)) (fp.sub RNE (fp.sub RNE x2 x13) (fp.neg x13))) (fp.neg (fp.div RNE (fp.add RNE x3 x17) (fp.div RNE x14 x16)))) (fp.mul RNE (fp.neg (fp.add RNE (fp.mul RNE x19 x16) (fp.mul RNE x21 x4))) (fp.add RNE (fp.mul RNE (fp.neg x20) (fp.neg x0)) (fp.mul RNE (fp.add RNE x4 x13) (fp.mul RNE x6 x8))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x8 x17) (fp.sub RNE x16 x25)) (fp.mul RNE (fp.sub RNE x23 x6) (fp.div RNE x15 x16))) (fp.div RNE (fp.neg (fp.mul RNE x6 x11)) (fp.neg (fp.add RNE x9 x5)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.neg x25) (fp.mul RNE x3 x5)) (fp.sub RNE (fp.mul RNE x25 x9) (fp.add RNE x11 x2))) (fp.add RNE (fp.mul RNE (fp.add RNE x7 x23) (fp.add RNE x2 x12)) (fp.sub RNE (fp.mul RNE x12 x5) (fp.div RNE x14 x12))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.neg (fp.div RNE x7 x3)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x2 x17))) (fp.mul RNE (fp.neg (fp.div RNE x21 x4)) (fp.neg (fp.div RNE x7 x15)))) (fp.neg (fp.mul RNE (fp.neg (fp.sub RNE x4 x25)) (fp.mul RNE (fp.mul RNE x7 x1) (fp.div RNE x22 x10))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.add RNE x13 x20) (fp.mul RNE x15 x21)) (fp.neg (fp.div RNE x16 x24))) (fp.add RNE (fp.neg (fp.sub RNE x10 x7)) (fp.div RNE (fp.neg x13) (fp.sub RNE x10 x12)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x8 x17) (fp.mul RNE x1 x21)) (fp.div RNE (fp.add RNE x8 x20) (fp.sub RNE x6 x20))) (fp.sub RNE (fp.mul RNE (fp.div RNE x13 x1) (fp.sub RNE x20 x0)) (fp.neg (fp.add RNE x18 x2))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE (fp.div RNE x9 x11) (fp.div RNE x18 x11)) (fp.mul RNE (fp.neg x9) (fp.add RNE x12 x20)))) (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.add RNE x20 x9) (fp.mul RNE x3 x0)) (fp.div RNE (fp.sub RNE x14 x11) (fp.sub RNE x3 x14))) (fp.neg (fp.add RNE (fp.neg x6) (fp.sub RNE x8 x16))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.div RNE (fp.sub RNE x24 x15) (fp.add RNE x15 x2)) (fp.div RNE (fp.sub RNE x22 x9) (fp.neg x20))) (fp.add RNE (fp.neg (fp.neg x17)) (fp.sub RNE (fp.add RNE x25 x1) (fp.mul RNE x9 x4)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.add RNE x0 x19) (fp.sub RNE x9 x0)) (fp.div RNE (fp.neg x13) (fp.sub RNE x0 x22))) (fp.mul RNE (fp.mul RNE (fp.div RNE x20 x23) (fp.neg x3)) (fp.mul RNE (fp.div RNE x17 x17) (fp.add RNE x10 x13))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.div RNE x6 x7) (fp.mul RNE x12 x22)) (fp.div RNE (fp.div RNE x10 x18) (fp.div RNE x15 x6))) (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x19) (fp.neg x22)) (fp.div RNE (fp.neg x5) (fp.div RNE x22 x25)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x18 x6) (fp.neg x10)) (fp.mul RNE (fp.div RNE x19 x17) (fp.mul RNE x14 x19))) (fp.sub RNE (fp.div RNE (fp.neg x4) (fp.mul RNE x23 x22)) (fp.div RNE (fp.div RNE x15 x15) (fp.sub RNE x18 x9))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x23 x5) (fp.add RNE x23 x13)) (fp.sub RNE (fp.add RNE x6 x7) (fp.mul RNE x12 x14))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x7 x18) (fp.add RNE x8 x6)) (fp.sub RNE (fp.add RNE x25 x20) (fp.neg x13)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.div RNE x22 x19) (fp.div RNE x3 x6)) (fp.div RNE (fp.div RNE x24 x15) (fp.mul RNE x15 x12))) (fp.add RNE (fp.add RNE (fp.sub RNE x21 x21) (fp.mul RNE x17 x22)) (fp.mul RNE (fp.add RNE x15 x19) (fp.div RNE x23 x1))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE (fp.div RNE x5 x14) (fp.sub RNE x10 x13)) (fp.div RNE (fp.sub RNE x9 x20) (fp.add RNE x15 x5)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x0 x14) (fp.neg x9)) (fp.mul RNE (fp.neg x2) (fp.add RNE x15 x1))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x13 x22) (fp.sub RNE x5 x19)) (fp.add RNE (fp.neg x22) (fp.mul RNE x21 x8))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x24 x24) (fp.sub RNE x2 x19)) (fp.add RNE (fp.neg x3) (fp.sub RNE x20 x3))) (fp.mul RNE (fp.sub RNE (fp.neg x16) (fp.div RNE x9 x6)) (fp.mul RNE (fp.div RNE x3 x11) (fp.add RNE x13 x2)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.sub RNE x19 x6)) (fp.mul RNE (fp.neg x11) (fp.neg x6))) (fp.sub RNE (fp.add RNE (fp.div RNE x3 x24) (fp.add RNE x8 x6)) (fp.div RNE (fp.add RNE x1 x18) (fp.sub RNE x11 x18))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.add RNE (fp.add RNE x10 x20) (fp.sub RNE x11 x4))) (fp.sub RNE (fp.neg (fp.div RNE x20 x7)) (fp.sub RNE (fp.add RNE x15 x12) (fp.neg x17)))) (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x7 x24) (fp.mul RNE x12 x10))) (fp.add RNE (fp.mul RNE (fp.neg x22) (fp.mul RNE x3 x10)) (fp.neg (fp.neg x10))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.div RNE x24 x4) (fp.div RNE x8 x8)) (fp.mul RNE (fp.sub RNE x18 x5) (fp.sub RNE x1 x15))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x6 x4) (fp.add RNE x20 x5)) (fp.add RNE (fp.div RNE x15 x14) (fp.mul RNE x9 x19)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x0 x0) (fp.div RNE x9 x6))) (fp.div RNE (fp.neg (fp.mul RNE x11 x16)) (fp.add RNE (fp.mul RNE x10 x22) (fp.div RNE x22 x10))))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x11 x25) (fp.sub RNE x14 x16)) (fp.neg (fp.neg x21))) (fp.sub RNE (fp.mul RNE (fp.div RNE x15 x13) (fp.div RNE x22 x4)) (fp.mul RNE (fp.neg x20) (fp.mul RNE x24 x7)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.add RNE x8 x16)) (fp.add RNE (fp.add RNE x13 x11) (fp.neg x19))) (fp.add RNE (fp.sub RNE (fp.sub RNE x22 x0) (fp.sub RNE x1 x12)) (fp.neg (fp.div RNE x11 x7))))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg (fp.neg x9)) (fp.neg (fp.neg x25)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.div RNE x24 x5)) (fp.add RNE (fp.div RNE x14 x0) (fp.neg x11))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x11 x9) (fp.mul RNE x2 x24)) (fp.add RNE (fp.add RNE x22 x25) (fp.neg x0))))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.div RNE (fp.add RNE x17 x2) (fp.sub RNE x0 x6)) (fp.add RNE (fp.add RNE x13 x5) (fp.sub RNE x22 x5))) (fp.mul RNE (fp.div RNE (fp.sub RNE x1 x2) (fp.mul RNE x12 x6)) (fp.add RNE (fp.neg x19) (fp.add RNE x3 x10)))) (fp.div RNE (fp.neg (fp.mul RNE (fp.add RNE x10 x3) (fp.div RNE x16 x5))) (fp.mul RNE (fp.div RNE (fp.mul RNE x13 x5) (fp.neg x14)) (fp.sub RNE (fp.div RNE x13 x14) (fp.div RNE x19 x21))))))
(check-sat)
