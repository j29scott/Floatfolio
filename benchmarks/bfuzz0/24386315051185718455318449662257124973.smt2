(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.neg (fp.sub RNE (fp.mul RNE x0 x8) (fp.neg x0))) (fp.neg (fp.neg (fp.div RNE x22 x24)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.mul RNE x19 x0)) (fp.mul RNE (fp.mul RNE x21 x22) (fp.mul RNE x15 x0))) (fp.mul RNE (fp.neg (fp.add RNE x6 x22)) (fp.add RNE (fp.mul RNE x1 x11) (fp.div RNE x0 x11))))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x4 x12) (fp.neg x3)) (fp.div RNE (fp.mul RNE x22 x24) (fp.add RNE x17 x19))) (fp.sub RNE (fp.add RNE (fp.sub RNE x3 x9) (fp.div RNE x6 x24)) (fp.neg (fp.mul RNE x15 x7)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.add RNE x1 x5) (fp.div RNE x16 x0)) (fp.div RNE (fp.neg x8) (fp.add RNE x14 x24))) (fp.neg (fp.div RNE (fp.div RNE x10 x23) (fp.div RNE x19 x4))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x23) (fp.neg x17)) (fp.add RNE (fp.neg x14) (fp.add RNE x4 x8)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.sub RNE x24 x15) (fp.mul RNE x12 x18))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x4 x13) (fp.div RNE x6 x8)) (fp.mul RNE (fp.div RNE x0 x25) (fp.add RNE x1 x4))))))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE (fp.neg x2) (fp.mul RNE x12 x3)))) (fp.neg (fp.mul RNE (fp.neg (fp.mul RNE x10 x21)) (fp.sub RNE (fp.div RNE x1 x12) (fp.add RNE x1 x0))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x18 x2) (fp.add RNE x11 x2)) (fp.add RNE (fp.add RNE x11 x7) (fp.mul RNE x4 x2))) (fp.add RNE (fp.add RNE (fp.mul RNE x8 x4) (fp.mul RNE x8 x20)) (fp.sub RNE (fp.neg x10) (fp.add RNE x15 x2)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.neg x20) (fp.neg x3)) (fp.sub RNE (fp.add RNE x14 x13) (fp.add RNE x14 x21))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x9 x21) (fp.sub RNE x9 x4)) (fp.div RNE (fp.sub RNE x8 x9) (fp.neg x4))) (fp.neg (fp.sub RNE (fp.div RNE x23 x5) (fp.add RNE x12 x12)))) (fp.neg (fp.neg (fp.neg (fp.neg x12))))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE (fp.add RNE x16 x14) (fp.add RNE x14 x19))) (fp.neg (fp.neg (fp.add RNE x3 x25)))) (fp.neg (fp.div RNE (fp.neg (fp.neg x22)) (fp.mul RNE (fp.div RNE x25 x7) (fp.neg x17))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg (fp.neg x25)) (fp.div RNE (fp.mul RNE x0 x11) (fp.mul RNE x6 x21))) (fp.div RNE (fp.mul RNE (fp.sub RNE x20 x17) (fp.mul RNE x2 x17)) (fp.sub RNE (fp.add RNE x12 x3) (fp.div RNE x10 x25)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.div RNE x11 x21) (fp.add RNE x6 x24)) (fp.add RNE (fp.div RNE x18 x17) (fp.sub RNE x22 x9))) (fp.neg (fp.neg (fp.add RNE x20 x7))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE (fp.neg x23) (fp.div RNE x15 x24)) (fp.mul RNE (fp.sub RNE x18 x21) (fp.add RNE x9 x10))) (fp.sub RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.mul RNE x7 x7) (fp.div RNE x10 x18)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x15 x6) (fp.div RNE x17 x25)) (fp.neg (fp.neg x10))) (fp.add RNE (fp.mul RNE (fp.div RNE x11 x7) (fp.sub RNE x6 x11)) (fp.neg (fp.mul RNE x1 x7))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.sub RNE (fp.add RNE x15 x11) (fp.div RNE x23 x16)) (fp.div RNE (fp.div RNE x9 x24) (fp.neg x20)))) (fp.neg (fp.add RNE (fp.neg (fp.add RNE x23 x14)) (fp.sub RNE (fp.sub RNE x7 x9) (fp.div RNE x15 x12))))))
(check-sat)
