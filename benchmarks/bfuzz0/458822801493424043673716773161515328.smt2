(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x6 x10) (fp.div RNE x11 x11))) (fp.add RNE (fp.div RNE (fp.sub RNE x0 x3) (fp.neg x11)) (fp.div RNE (fp.add RNE x16 x4) (fp.sub RNE x1 x21)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x14 x1)) (fp.mul RNE (fp.neg x15) (fp.add RNE x1 x17))) (fp.div RNE (fp.div RNE (fp.sub RNE x16 x3) (fp.mul RNE x3 x17)) (fp.add RNE (fp.add RNE x13 x0) (fp.div RNE x8 x10)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.div RNE x11 x8)) (fp.div RNE (fp.add RNE x11 x2) (fp.mul RNE x16 x0))) (fp.mul RNE (fp.div RNE (fp.neg x3) (fp.add RNE x13 x11)) (fp.sub RNE (fp.sub RNE x12 x4) (fp.mul RNE x0 x16)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x2))) (fp.add RNE (fp.sub RNE (fp.sub RNE x4 x6) (fp.add RNE x5 x14)) (fp.mul RNE (fp.add RNE x4 x3) (fp.sub RNE x16 x0)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE x20 x14)) (fp.div RNE (fp.mul RNE x8 x8) (fp.sub RNE x19 x14))) (fp.add RNE (fp.add RNE (fp.sub RNE x4 x5) (fp.mul RNE x16 x11)) (fp.div RNE (fp.neg x4) (fp.div RNE x17 x0)))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE x1 x8))) (fp.neg (fp.sub RNE (fp.mul RNE x3 x5) (fp.neg x20)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.div RNE x8 x14) (fp.sub RNE x7 x14)) (fp.mul RNE (fp.add RNE x9 x9) (fp.div RNE x17 x2))) (fp.add RNE (fp.mul RNE (fp.add RNE x6 x21) (fp.add RNE x11 x20)) (fp.div RNE (fp.mul RNE x2 x2) (fp.add RNE x0 x11)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE x1 x15) (fp.div RNE x13 x6)) (fp.neg (fp.div RNE x11 x8))) (fp.mul RNE (fp.neg (fp.neg x15)) (fp.mul RNE (fp.neg x20) (fp.neg x21)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE x18 x12) (fp.neg x15)) (fp.mul RNE (fp.mul RNE x14 x10) (fp.neg x12))) (fp.sub RNE (fp.sub RNE (fp.div RNE x19 x21) (fp.sub RNE x1 x4)) (fp.add RNE (fp.mul RNE x16 x11) (fp.neg x11)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x16 x21) (fp.div RNE x19 x5))) (fp.add RNE (fp.neg (fp.mul RNE x16 x12)) (fp.add RNE (fp.sub RNE x17 x19) (fp.mul RNE x8 x19)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x0 x0) (fp.mul RNE x12 x17))) (fp.sub RNE (fp.div RNE (fp.add RNE x5 x16) (fp.sub RNE x3 x8)) (fp.sub RNE (fp.div RNE x7 x12) (fp.mul RNE x20 x9)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x18 x1)) (fp.neg (fp.neg x15))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x4 x4) (fp.div RNE x16 x19)) (fp.mul RNE (fp.add RNE x13 x17) (fp.sub RNE x4 x8)))))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE x14 x19))) (fp.sub RNE (fp.sub RNE (fp.neg x15) (fp.neg x4)) (fp.neg (fp.div RNE x7 x0)))))
(check-sat)
