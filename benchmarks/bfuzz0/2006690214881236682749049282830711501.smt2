(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE x8 x0) (fp.add RNE x4 x6)) (fp.div RNE (fp.neg x11) (fp.sub RNE x5 x11))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x10 x9) (fp.add RNE x0 x9)) (fp.neg (fp.add RNE x7 x7))))
(assert (fp.eq (fp.div RNE (fp.div RNE x6 x5) (fp.mul RNE x4 x12)) (fp.sub RNE (fp.add RNE x11 x0) (fp.add RNE x6 x8))))
(assert (fp.gt (fp.neg (fp.neg x12)) (fp.mul RNE (fp.add RNE x0 x11) (fp.div RNE x9 x6))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x1 x10) (fp.sub RNE x5 x7)) (fp.mul RNE (fp.div RNE x9 x10) (fp.add RNE x10 x12))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x13 x0) (fp.sub RNE x5 x5)) (fp.add RNE (fp.neg x3) (fp.mul RNE x1 x8))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x3 x9) (fp.add RNE x7 x12)) (fp.sub RNE (fp.neg x0) (fp.neg x7))))
(assert (fp.leq (fp.sub RNE (fp.neg x5) (fp.neg x3)) (fp.div RNE (fp.div RNE x4 x4) (fp.add RNE x13 x9))))
(check-sat)
