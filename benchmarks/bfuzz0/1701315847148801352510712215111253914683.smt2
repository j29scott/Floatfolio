(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE x3 x13) (fp.mul RNE x1 x15)) (fp.div RNE (fp.div RNE x13 x19) (fp.div RNE x11 x17))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x17 x7) (fp.mul RNE x11 x13)) (fp.sub RNE (fp.div RNE x19 x17) (fp.mul RNE x9 x20))))
(assert (fp.gt (fp.sub RNE (fp.neg x1) (fp.neg x3)) (fp.div RNE (fp.div RNE x8 x6) (fp.mul RNE x0 x10))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x1) (fp.div RNE x16 x18)) (fp.neg (fp.neg x12))))
(assert (fp.leq (fp.neg (fp.sub RNE x16 x5)) (fp.neg (fp.div RNE x9 x9))))
(assert (fp.geq (fp.mul RNE (fp.neg x11) (fp.sub RNE x7 x21)) (fp.neg (fp.neg x16))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x1 x19) (fp.add RNE x11 x21)) (fp.sub RNE (fp.mul RNE x15 x9) (fp.neg x21))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x10 x21) (fp.add RNE x5 x15)) (fp.add RNE (fp.neg x18) (fp.mul RNE x1 x8))))
(assert (fp.gt (fp.neg (fp.neg x7)) (fp.sub RNE (fp.neg x14) (fp.neg x12))))
(assert (fp.gt (fp.sub RNE (fp.neg x16) (fp.sub RNE x18 x0)) (fp.add RNE (fp.add RNE x16 x21) (fp.mul RNE x13 x18))))
(assert (fp.geq (fp.neg (fp.mul RNE x2 x7)) (fp.neg (fp.neg x17))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x16 x1) (fp.add RNE x6 x16)) (fp.mul RNE (fp.add RNE x17 x7) (fp.div RNE x12 x13))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x17 x14) (fp.add RNE x13 x6)) (fp.div RNE (fp.mul RNE x17 x18) (fp.add RNE x5 x17))))
(assert (fp.geq (fp.neg (fp.div RNE x5 x13)) (fp.add RNE (fp.sub RNE x18 x19) (fp.sub RNE x4 x10))))
(assert (fp.gt (fp.sub RNE (fp.neg x6) (fp.div RNE x3 x9)) (fp.sub RNE (fp.sub RNE x12 x2) (fp.sub RNE x14 x7))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x0 x17) (fp.add RNE x11 x7)) (fp.neg (fp.mul RNE x7 x19))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x1 x11) (fp.div RNE x14 x20)) (fp.add RNE (fp.mul RNE x18 x15) (fp.neg x0))))
(assert (fp.geq (fp.mul RNE (fp.neg x5) (fp.neg x6)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x12 x9))))
(check-sat)
