(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x2 x10) (fp.sub RNE x0 x11)))
(assert (fp.eq (fp.add RNE x2 x5) (fp.add RNE x10 x2)))
(assert (fp.gt (fp.neg x4) (fp.mul RNE x12 x2)))
(assert (fp.leq (fp.mul RNE x5 x5) (fp.div RNE x5 x1)))
(assert (fp.eq (fp.add RNE x10 x6) (fp.mul RNE x11 x2)))
(assert (fp.eq (fp.neg x2) (fp.sub RNE x11 x7)))
(assert (fp.lt (fp.add RNE x12 x0) (fp.mul RNE x10 x2)))
(assert (fp.eq (fp.mul RNE x8 x0) (fp.mul RNE x9 x9)))
(assert (fp.leq (fp.div RNE x11 x6) (fp.sub RNE x2 x8)))
(assert (fp.gt (fp.sub RNE x3 x12) (fp.div RNE x8 x3)))
(assert (fp.eq (fp.add RNE x8 x11) (fp.div RNE x8 x12)))
(check-sat)
