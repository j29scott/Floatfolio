(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x7 x11) (fp.sub RNE x10 x8))) (fp.sub RNE (fp.mul RNE (fp.add RNE x8 x5) (fp.div RNE x2 x10)) (fp.mul RNE (fp.neg x3) (fp.add RNE x10 x0)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x5) (fp.div RNE x2 x1)) (fp.neg (fp.add RNE x0 x1))) (fp.div RNE (fp.add RNE (fp.neg x10) (fp.div RNE x5 x5)) (fp.div RNE (fp.sub RNE x9 x2) (fp.add RNE x1 x6)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE x5 x11) (fp.add RNE x9 x10)) (fp.mul RNE (fp.sub RNE x11 x10) (fp.div RNE x3 x2))) (fp.sub RNE (fp.neg (fp.mul RNE x4 x1)) (fp.neg (fp.neg x0)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE x4 x10) (fp.neg x5))) (fp.div RNE (fp.div RNE (fp.sub RNE x8 x5) (fp.sub RNE x2 x2)) (fp.div RNE (fp.neg x6) (fp.neg x7)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.add RNE x3 x0) (fp.mul RNE x11 x1)) (fp.div RNE (fp.div RNE x6 x7) (fp.neg x8))) (fp.add RNE (fp.div RNE (fp.sub RNE x0 x2) (fp.neg x8)) (fp.sub RNE (fp.div RNE x0 x0) (fp.add RNE x4 x5)))))
(check-sat)
