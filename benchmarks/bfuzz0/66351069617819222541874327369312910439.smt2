(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x1 x0) (fp.add RNE x6 x6)) (fp.sub RNE (fp.sub RNE x3 x6) (fp.add RNE x1 x6))))
(assert (fp.geq (fp.add RNE (fp.div RNE x5 x1) (fp.add RNE x4 x1)) (fp.mul RNE (fp.div RNE x1 x2) (fp.sub RNE x0 x0))))
(assert (fp.lt (fp.mul RNE (fp.neg x1) (fp.neg x3)) (fp.neg (fp.add RNE x1 x6))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x2) (fp.sub RNE x6 x0)) (fp.neg (fp.sub RNE x6 x1))))
(assert (fp.leq (fp.add RNE (fp.div RNE x0 x3) (fp.div RNE x0 x0)) (fp.neg (fp.neg x5))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x1 x6) (fp.div RNE x4 x3)) (fp.div RNE (fp.sub RNE x6 x4) (fp.div RNE x4 x6))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x0 x6) (fp.div RNE x5 x6)) (fp.mul RNE (fp.sub RNE x5 x0) (fp.add RNE x4 x1))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x2 x6) (fp.neg x4)) (fp.neg (fp.mul RNE x6 x2))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x3 x2) (fp.div RNE x1 x0)) (fp.neg (fp.mul RNE x3 x2))))
(check-sat)
