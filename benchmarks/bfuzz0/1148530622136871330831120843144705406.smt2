(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.neg x4)) (fp.add RNE (fp.neg x7) (fp.add RNE x10 x13))))
(assert (fp.lt (fp.div RNE (fp.add RNE x10 x8) (fp.sub RNE x20 x18)) (fp.mul RNE (fp.add RNE x13 x3) (fp.div RNE x8 x16))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x0 x21) (fp.sub RNE x18 x6)) (fp.neg (fp.div RNE x10 x1))))
(assert (fp.lt (fp.mul RNE (fp.neg x2) (fp.div RNE x10 x7)) (fp.add RNE (fp.div RNE x9 x7) (fp.mul RNE x15 x0))))
(assert (fp.leq (fp.neg (fp.neg x13)) (fp.neg (fp.neg x21))))
(assert (fp.lt (fp.div RNE (fp.div RNE x16 x19) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x11 x22) (fp.add RNE x0 x20))))
(check-sat)
