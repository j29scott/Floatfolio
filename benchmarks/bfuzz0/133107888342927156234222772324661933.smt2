(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE x6 x9) (fp.neg x1)))
(assert (fp.geq (fp.mul RNE x9 x7) (fp.add RNE x2 x6)))
(assert (fp.lt (fp.sub RNE x11 x1) (fp.div RNE x7 x3)))
(assert (fp.gt (fp.mul RNE x10 x3) (fp.add RNE x12 x12)))
(assert (fp.leq (fp.neg x10) (fp.div RNE x0 x0)))
(assert (fp.geq (fp.sub RNE x8 x2) (fp.div RNE x1 x10)))
(assert (fp.geq (fp.div RNE x13 x10) (fp.add RNE x2 x7)))
(assert (fp.geq (fp.sub RNE x3 x1) (fp.add RNE x7 x7)))
(assert (fp.lt (fp.neg x10) (fp.sub RNE x12 x3)))
(check-sat)
