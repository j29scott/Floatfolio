(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.neg x3) (fp.neg x2)) (fp.mul RNE (fp.add RNE x8 x4) (fp.neg x1))))
(assert (fp.geq (fp.neg (fp.add RNE x13 x15)) (fp.add RNE (fp.sub RNE x3 x7) (fp.add RNE x0 x2))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x14 x13) (fp.div RNE x2 x12)) (fp.neg (fp.sub RNE x1 x4))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x12 x10) (fp.sub RNE x5 x15)) (fp.div RNE (fp.neg x8) (fp.add RNE x1 x12))))
(assert (fp.leq (fp.sub RNE (fp.neg x0) (fp.neg x7)) (fp.div RNE (fp.mul RNE x0 x11) (fp.sub RNE x8 x11))))
(assert (fp.eq (fp.neg (fp.add RNE x2 x15)) (fp.add RNE (fp.mul RNE x4 x2) (fp.neg x8))))
(assert (fp.eq (fp.sub RNE (fp.neg x8) (fp.sub RNE x15 x2)) (fp.neg (fp.neg x9))))
(assert (fp.gt (fp.div RNE (fp.div RNE x6 x7) (fp.neg x11)) (fp.mul RNE (fp.div RNE x10 x4) (fp.neg x3))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x0 x13) (fp.sub RNE x10 x4)) (fp.sub RNE (fp.mul RNE x15 x7) (fp.add RNE x9 x11))))
(check-sat)
