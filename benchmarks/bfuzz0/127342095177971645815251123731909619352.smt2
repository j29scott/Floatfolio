(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.neg (fp.neg (fp.add RNE x8 x8))) (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x11) (fp.neg x12)) (fp.neg (fp.neg x8)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.add RNE x0 x8) (fp.div RNE x0 x8)) (fp.div RNE (fp.mul RNE x1 x2) (fp.sub RNE x12 x14))) (fp.neg (fp.sub RNE (fp.neg x12) (fp.neg x1))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE (fp.div RNE x6 x2) (fp.add RNE x13 x3)) (fp.neg (fp.neg x10)))) (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.neg x6) (fp.sub RNE x7 x9)) (fp.neg (fp.add RNE x8 x5))) (fp.sub RNE (fp.add RNE (fp.div RNE x5 x7) (fp.neg x10)) (fp.neg (fp.sub RNE x4 x9))))))
(check-sat)
