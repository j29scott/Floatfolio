(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x7) (fp.div RNE x0 x0)))
(assert (fp.leq (fp.neg x0) (fp.mul RNE x3 x3)))
(assert (fp.gt (fp.mul RNE x3 x5) (fp.sub RNE x3 x6)))
(assert (fp.geq (fp.sub RNE x5 x0) (fp.neg x3)))
(assert (fp.gt (fp.div RNE x6 x5) (fp.neg x5)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x1 x7)))
(assert (fp.geq (fp.add RNE x6 x1) (fp.neg x1)))
(assert (fp.lt (fp.div RNE x7 x4) (fp.mul RNE x3 x0)))
(assert (fp.gt (fp.div RNE x7 x6) (fp.sub RNE x6 x7)))
(assert (fp.gt (fp.mul RNE x4 x5) (fp.div RNE x4 x4)))
(assert (fp.lt (fp.div RNE x5 x0) (fp.neg x7)))
(assert (fp.gt (fp.neg x0) (fp.neg x0)))
(assert (fp.leq (fp.div RNE x5 x4) (fp.div RNE x5 x0)))
(check-sat)
