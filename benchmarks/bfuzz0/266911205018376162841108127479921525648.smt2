(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.add RNE x5 x5) (fp.add RNE x10 x7))) (fp.neg (fp.div RNE (fp.mul RNE x5 x1) (fp.div RNE x4 x1)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x2 x4) (fp.add RNE x10 x8)) (fp.neg (fp.mul RNE x5 x6))) (fp.div RNE (fp.sub RNE (fp.mul RNE x9 x5) (fp.add RNE x8 x8)) (fp.div RNE (fp.neg x8) (fp.sub RNE x3 x3)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg x3) (fp.add RNE x3 x4)) (fp.mul RNE (fp.add RNE x11 x1) (fp.neg x2))) (fp.div RNE (fp.div RNE (fp.sub RNE x9 x10) (fp.div RNE x1 x10)) (fp.mul RNE (fp.sub RNE x6 x11) (fp.add RNE x7 x9)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE x7 x11) (fp.sub RNE x6 x5)) (fp.sub RNE (fp.mul RNE x5 x3) (fp.sub RNE x0 x7))) (fp.neg (fp.mul RNE (fp.neg x3) (fp.div RNE x11 x8)))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.div RNE x9 x0) (fp.div RNE x2 x10)) (fp.neg (fp.add RNE x5 x3))) (fp.add RNE (fp.neg (fp.mul RNE x2 x4)) (fp.div RNE (fp.div RNE x2 x5) (fp.add RNE x10 x7)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x9) (fp.add RNE x2 x0)) (fp.div RNE (fp.mul RNE x7 x9) (fp.add RNE x5 x9))) (fp.sub RNE (fp.neg (fp.add RNE x11 x10)) (fp.add RNE (fp.mul RNE x4 x10) (fp.div RNE x11 x7)))))
(check-sat)
