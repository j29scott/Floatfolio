(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE x4 x3) (fp.mul RNE x10 x0)) (fp.mul RNE (fp.mul RNE x1 x11) (fp.add RNE x5 x11))) (fp.sub RNE (fp.div RNE (fp.neg x0) (fp.sub RNE x3 x9)) (fp.neg (fp.add RNE x7 x8)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.sub RNE x12 x4) (fp.add RNE x3 x14)) (fp.div RNE (fp.neg x13) (fp.add RNE x2 x7))) (fp.neg (fp.neg (fp.neg x1)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE x5 x0) (fp.add RNE x3 x1)) (fp.sub RNE (fp.sub RNE x0 x1) (fp.mul RNE x7 x7))) (fp.add RNE (fp.neg (fp.mul RNE x2 x2)) (fp.mul RNE (fp.mul RNE x4 x2) (fp.add RNE x1 x12)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.neg x5) (fp.add RNE x12 x3)) (fp.div RNE (fp.neg x7) (fp.add RNE x11 x6))) (fp.sub RNE (fp.div RNE (fp.mul RNE x3 x13) (fp.mul RNE x1 x4)) (fp.neg (fp.add RNE x12 x3)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE x7 x3) (fp.add RNE x12 x1)) (fp.add RNE (fp.sub RNE x14 x0) (fp.add RNE x0 x13))) (fp.add RNE (fp.mul RNE (fp.sub RNE x13 x6) (fp.mul RNE x2 x14)) (fp.neg (fp.neg x6)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE x0 x2) (fp.sub RNE x13 x0)) (fp.div RNE (fp.add RNE x7 x0) (fp.sub RNE x12 x11))) (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x2) (fp.add RNE x0 x9)) (fp.mul RNE (fp.add RNE x6 x10) (fp.div RNE x12 x14)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.neg x8) (fp.div RNE x14 x13)) (fp.neg (fp.neg x7))) (fp.neg (fp.neg (fp.neg x11)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.div RNE x10 x12) (fp.div RNE x13 x11)) (fp.mul RNE (fp.div RNE x5 x7) (fp.sub RNE x8 x2))) (fp.add RNE (fp.mul RNE (fp.neg x5) (fp.div RNE x0 x3)) (fp.div RNE (fp.div RNE x13 x0) (fp.neg x1)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x2 x9) (fp.div RNE x9 x2)) (fp.add RNE (fp.add RNE x3 x2) (fp.sub RNE x5 x1))) (fp.div RNE (fp.neg (fp.neg x1)) (fp.div RNE (fp.sub RNE x12 x5) (fp.sub RNE x8 x0)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x2 x8) (fp.mul RNE x14 x7))) (fp.neg (fp.mul RNE (fp.div RNE x9 x13) (fp.sub RNE x13 x0)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x8 x0) (fp.add RNE x9 x9))) (fp.div RNE (fp.div RNE (fp.div RNE x11 x11) (fp.div RNE x1 x10)) (fp.div RNE (fp.mul RNE x13 x10) (fp.add RNE x12 x9)))))
(check-sat)
