(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.div RNE x2 x2) (fp.div RNE x9 x8)) (fp.mul RNE (fp.add RNE x1 x5) (fp.neg x7))) (fp.neg (fp.mul RNE (fp.sub RNE x2 x10) (fp.neg x0)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE x0 x6) (fp.neg x5)) (fp.sub RNE (fp.div RNE x2 x9) (fp.add RNE x0 x0))) (fp.add RNE (fp.div RNE (fp.neg x10) (fp.add RNE x2 x8)) (fp.sub RNE (fp.mul RNE x6 x4) (fp.sub RNE x7 x10)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.add RNE x0 x10) (fp.add RNE x9 x9)) (fp.add RNE (fp.sub RNE x3 x1) (fp.add RNE x1 x9))) (fp.add RNE (fp.div RNE (fp.neg x3) (fp.add RNE x7 x9)) (fp.mul RNE (fp.mul RNE x10 x5) (fp.neg x3)))))
(check-sat)
