(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x11 x3) (fp.add RNE x1 x7)))
(assert (fp.eq (fp.div RNE x11 x8) (fp.neg x2)))
(assert (fp.geq (fp.div RNE x1 x6) (fp.div RNE x8 x4)))
(assert (fp.eq (fp.div RNE x2 x1) (fp.div RNE x10 x3)))
(assert (fp.geq (fp.add RNE x2 x11) (fp.sub RNE x4 x2)))
(assert (fp.leq (fp.mul RNE x3 x10) (fp.div RNE x11 x7)))
(assert (fp.eq (fp.add RNE x7 x5) (fp.sub RNE x5 x10)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.sub RNE x3 x0)))
(assert (fp.geq (fp.add RNE x6 x7) (fp.div RNE x9 x10)))
(assert (fp.geq (fp.mul RNE x1 x1) (fp.div RNE x8 x11)))
(assert (fp.eq (fp.sub RNE x7 x9) (fp.mul RNE x3 x11)))
(check-sat)
