(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x3 x4) (fp.add RNE x5 x5)) (fp.neg (fp.add RNE x5 x5))) (fp.mul RNE (fp.div RNE (fp.mul RNE x1 x0) (fp.mul RNE x0 x1)) (fp.div RNE (fp.neg x5) (fp.neg x1)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.neg x0)) (fp.neg (fp.mul RNE x2 x0))) (fp.div RNE (fp.add RNE (fp.neg x0) (fp.sub RNE x2 x1)) (fp.mul RNE (fp.neg x1) (fp.sub RNE x3 x0)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x1 x4) (fp.mul RNE x5 x5)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x3 x0))) (fp.add RNE (fp.sub RNE (fp.mul RNE x4 x0) (fp.add RNE x2 x0)) (fp.div RNE (fp.neg x4) (fp.neg x4)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x5 x4) (fp.mul RNE x4 x3)) (fp.sub RNE (fp.sub RNE x2 x2) (fp.add RNE x5 x0))) (fp.div RNE (fp.add RNE (fp.sub RNE x4 x0) (fp.neg x3)) (fp.div RNE (fp.neg x0) (fp.sub RNE x1 x4)))))
(check-sat)
