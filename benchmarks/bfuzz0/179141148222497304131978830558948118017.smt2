(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.neg x1) (fp.mul RNE x0 x7)) (fp.div RNE (fp.sub RNE x5 x0) (fp.add RNE x1 x5))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x4 x0) (fp.div RNE x2 x3)) (fp.add RNE (fp.add RNE x4 x3) (fp.sub RNE x6 x9))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x7 x1) (fp.add RNE x7 x0)) (fp.mul RNE (fp.mul RNE x2 x8) (fp.sub RNE x9 x8))))
(assert (fp.eq (fp.neg (fp.div RNE x3 x0)) (fp.sub RNE (fp.div RNE x2 x4) (fp.div RNE x5 x5))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x2 x0) (fp.neg x5)) (fp.div RNE (fp.mul RNE x9 x2) (fp.div RNE x8 x7))))
(check-sat)
