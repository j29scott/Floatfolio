(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.div RNE x1 x5) (fp.neg x4)) (fp.neg (fp.mul RNE x4 x2))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x2 x2) (fp.div RNE x4 x3)) (fp.add RNE (fp.mul RNE x1 x6) (fp.neg x5))))
(assert (fp.leq (fp.neg (fp.div RNE x2 x2)) (fp.sub RNE (fp.add RNE x1 x6) (fp.neg x4))))
(assert (fp.eq (fp.add RNE (fp.add RNE x1 x1) (fp.sub RNE x3 x1)) (fp.add RNE (fp.mul RNE x2 x0) (fp.mul RNE x0 x5))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x6 x0) (fp.add RNE x4 x2)) (fp.sub RNE (fp.neg x5) (fp.add RNE x0 x1))))
(assert (fp.gt (fp.neg (fp.sub RNE x3 x2)) (fp.div RNE (fp.div RNE x0 x6) (fp.neg x2))))
(assert (fp.gt (fp.div RNE (fp.div RNE x6 x6) (fp.div RNE x6 x5)) (fp.sub RNE (fp.mul RNE x2 x2) (fp.mul RNE x5 x4))))
(check-sat)
