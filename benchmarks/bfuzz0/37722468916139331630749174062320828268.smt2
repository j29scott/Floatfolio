(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.add RNE (fp.mul RNE x23 x18) (fp.sub RNE x10 x6))) (fp.div RNE (fp.sub RNE (fp.neg x6) (fp.div RNE x20 x23)) (fp.mul RNE (fp.neg x13) (fp.neg x1)))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE x13 x22))) (fp.add RNE (fp.sub RNE (fp.neg x11) (fp.div RNE x17 x0)) (fp.div RNE (fp.mul RNE x4 x17) (fp.sub RNE x13 x13)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE x17 x22) (fp.neg x12)) (fp.mul RNE (fp.neg x1) (fp.add RNE x7 x21))) (fp.sub RNE (fp.neg (fp.div RNE x2 x15)) (fp.div RNE (fp.sub RNE x8 x4) (fp.mul RNE x21 x24)))))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE x14 x13))) (fp.sub RNE (fp.div RNE (fp.sub RNE x10 x10) (fp.mul RNE x16 x2)) (fp.add RNE (fp.mul RNE x18 x2) (fp.mul RNE x22 x24)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x9) (fp.sub RNE x17 x0)) (fp.add RNE (fp.sub RNE x22 x5) (fp.sub RNE x16 x24))) (fp.mul RNE (fp.sub RNE (fp.div RNE x24 x20) (fp.mul RNE x23 x23)) (fp.sub RNE (fp.add RNE x19 x0) (fp.div RNE x11 x3)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.sub RNE x17 x17)) (fp.sub RNE (fp.sub RNE x3 x12) (fp.neg x6))) (fp.div RNE (fp.neg (fp.div RNE x5 x19)) (fp.add RNE (fp.add RNE x13 x2) (fp.neg x21)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE x10 x10) (fp.sub RNE x12 x12))) (fp.add RNE (fp.sub RNE (fp.neg x16) (fp.neg x10)) (fp.neg (fp.mul RNE x11 x16)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg x19)) (fp.div RNE (fp.div RNE x23 x20) (fp.neg x6))) (fp.mul RNE (fp.neg (fp.neg x18)) (fp.neg (fp.div RNE x24 x23)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x18) (fp.div RNE x19 x19)) (fp.sub RNE (fp.div RNE x2 x24) (fp.div RNE x12 x5))) (fp.div RNE (fp.div RNE (fp.div RNE x1 x9) (fp.sub RNE x12 x10)) (fp.add RNE (fp.neg x6) (fp.div RNE x3 x15)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE x13 x6) (fp.mul RNE x1 x24)) (fp.sub RNE (fp.neg x12) (fp.mul RNE x1 x13))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x10 x11) (fp.neg x4)) (fp.add RNE (fp.div RNE x8 x14) (fp.add RNE x10 x4)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE x18 x24) (fp.neg x0)) (fp.add RNE (fp.div RNE x9 x22) (fp.add RNE x21 x10))) (fp.div RNE (fp.add RNE (fp.div RNE x24 x3) (fp.neg x9)) (fp.div RNE (fp.neg x4) (fp.add RNE x17 x6)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.mul RNE x22 x5) (fp.neg x21)) (fp.div RNE (fp.div RNE x15 x6) (fp.sub RNE x4 x17))) (fp.div RNE (fp.div RNE (fp.neg x18) (fp.mul RNE x6 x16)) (fp.div RNE (fp.div RNE x20 x2) (fp.mul RNE x2 x1)))))
(check-sat)
