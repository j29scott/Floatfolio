(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.add RNE x8 x4) (fp.div RNE x5 x2))) (fp.mul RNE (fp.neg (fp.mul RNE x2 x4)) (fp.div RNE (fp.add RNE x3 x7) (fp.sub RNE x5 x6)))))
(assert (fp.lt (fp.neg (fp.neg (fp.neg x4))) (fp.add RNE (fp.mul RNE (fp.add RNE x0 x8) (fp.mul RNE x5 x1)) (fp.neg (fp.add RNE x3 x3)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE x2 x4) (fp.sub RNE x5 x6)) (fp.mul RNE (fp.div RNE x7 x7) (fp.div RNE x2 x7))) (fp.add RNE (fp.add RNE (fp.mul RNE x1 x2) (fp.add RNE x1 x3)) (fp.div RNE (fp.div RNE x4 x7) (fp.mul RNE x3 x5)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x7 x0) (fp.mul RNE x4 x0)) (fp.sub RNE (fp.mul RNE x8 x4) (fp.neg x6))) (fp.neg (fp.div RNE (fp.add RNE x3 x7) (fp.sub RNE x7 x8)))))
(check-sat)
