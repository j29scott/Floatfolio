(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x7 x4) (fp.sub RNE x4 x7)) (fp.mul RNE (fp.mul RNE x4 x8) (fp.neg x7))))
(assert (fp.lt (fp.add RNE (fp.div RNE x5 x6) (fp.sub RNE x2 x8)) (fp.div RNE (fp.add RNE x7 x1) (fp.div RNE x9 x0))))
(assert (fp.leq (fp.neg (fp.add RNE x2 x9)) (fp.div RNE (fp.neg x2) (fp.neg x4))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x3 x6) (fp.add RNE x5 x9)) (fp.sub RNE (fp.sub RNE x6 x4) (fp.sub RNE x7 x11))))
(assert (fp.gt (fp.neg (fp.neg x1)) (fp.sub RNE (fp.add RNE x11 x5) (fp.add RNE x5 x3))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x11 x3) (fp.sub RNE x0 x11)) (fp.mul RNE (fp.mul RNE x9 x1) (fp.sub RNE x9 x11))))
(assert (fp.geq (fp.neg (fp.sub RNE x10 x6)) (fp.sub RNE (fp.sub RNE x9 x9) (fp.add RNE x6 x4))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x5 x0) (fp.add RNE x4 x4)) (fp.add RNE (fp.sub RNE x4 x11) (fp.div RNE x4 x3))))
(check-sat)
