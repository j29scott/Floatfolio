(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.div RNE (fp.add RNE x3 x2) (fp.div RNE x4 x9)) (fp.sub RNE (fp.add RNE x3 x3) (fp.add RNE x8 x10))) (fp.div RNE (fp.mul RNE (fp.div RNE x8 x9) (fp.div RNE x5 x3)) (fp.neg (fp.mul RNE x4 x7)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.div RNE x8 x1) (fp.neg x4)) (fp.div RNE (fp.add RNE x3 x8) (fp.div RNE x1 x4))) (fp.sub RNE (fp.add RNE (fp.neg x10) (fp.mul RNE x2 x3)) (fp.sub RNE (fp.div RNE x5 x6) (fp.div RNE x7 x9))))))
(check-sat)
