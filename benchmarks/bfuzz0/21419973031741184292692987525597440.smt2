(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.add RNE x2 x14)) (fp.mul RNE (fp.neg x8) (fp.sub RNE x10 x12))))
(assert (fp.gt (fp.sub RNE (fp.neg x13) (fp.neg x14)) (fp.mul RNE (fp.sub RNE x10 x3) (fp.div RNE x2 x8))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x10 x1) (fp.div RNE x9 x12)) (fp.sub RNE (fp.mul RNE x14 x6) (fp.sub RNE x13 x9))))
(assert (fp.geq (fp.div RNE (fp.add RNE x12 x10) (fp.mul RNE x0 x1)) (fp.div RNE (fp.neg x11) (fp.add RNE x11 x13))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x7 x13) (fp.sub RNE x8 x9)) (fp.neg (fp.sub RNE x2 x13))))
(assert (fp.eq (fp.div RNE (fp.add RNE x8 x8) (fp.add RNE x5 x5)) (fp.neg (fp.neg x6))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x13 x7) (fp.div RNE x9 x8)) (fp.add RNE (fp.sub RNE x3 x1) (fp.add RNE x14 x6))))
(assert (fp.eq (fp.neg (fp.sub RNE x12 x4)) (fp.neg (fp.sub RNE x5 x2))))
(assert (fp.geq (fp.neg (fp.sub RNE x7 x15)) (fp.add RNE (fp.sub RNE x9 x13) (fp.div RNE x14 x9))))
(assert (fp.gt (fp.div RNE (fp.neg x13) (fp.div RNE x2 x9)) (fp.div RNE (fp.sub RNE x9 x10) (fp.sub RNE x13 x13))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x8 x14) (fp.neg x15)) (fp.div RNE (fp.div RNE x2 x10) (fp.div RNE x10 x2))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x5 x7) (fp.mul RNE x5 x8)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x10 x13))))
(assert (fp.lt (fp.add RNE (fp.div RNE x10 x13) (fp.neg x0)) (fp.mul RNE (fp.div RNE x11 x3) (fp.div RNE x7 x6))))
(assert (fp.geq (fp.div RNE (fp.div RNE x13 x15) (fp.neg x13)) (fp.sub RNE (fp.add RNE x11 x0) (fp.sub RNE x0 x12))))
(assert (fp.lt (fp.neg (fp.mul RNE x13 x14)) (fp.sub RNE (fp.mul RNE x9 x12) (fp.neg x9))))
(assert (fp.gt (fp.add RNE (fp.neg x9) (fp.sub RNE x0 x7)) (fp.neg (fp.neg x7))))
(assert (fp.leq (fp.sub RNE (fp.neg x14) (fp.neg x0)) (fp.div RNE (fp.mul RNE x11 x9) (fp.sub RNE x14 x1))))
(assert (fp.leq (fp.neg (fp.add RNE x13 x7)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x7 x15))))
(check-sat)
