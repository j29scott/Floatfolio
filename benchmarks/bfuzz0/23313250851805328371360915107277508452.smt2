(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.div RNE x4 x6) (fp.sub RNE x2 x14)) (fp.sub RNE (fp.neg x20) (fp.sub RNE x2 x7))) (fp.add RNE (fp.sub RNE (fp.neg x0) (fp.sub RNE x21 x12)) (fp.mul RNE (fp.mul RNE x19 x21) (fp.mul RNE x15 x13)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x20)) (fp.mul RNE (fp.neg x14) (fp.sub RNE x21 x6))) (fp.sub RNE (fp.div RNE (fp.div RNE x11 x17) (fp.sub RNE x3 x13)) (fp.mul RNE (fp.mul RNE x19 x12) (fp.mul RNE x18 x11)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.sub RNE x2 x4) (fp.div RNE x2 x8)) (fp.neg (fp.mul RNE x19 x8))) (fp.neg (fp.mul RNE (fp.add RNE x20 x18) (fp.mul RNE x13 x5)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x21 x7) (fp.sub RNE x16 x14)) (fp.sub RNE (fp.div RNE x14 x10) (fp.mul RNE x18 x15))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x4 x1) (fp.neg x11)) (fp.add RNE (fp.div RNE x20 x15) (fp.sub RNE x13 x9)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.mul RNE x3 x11) (fp.div RNE x16 x13)) (fp.sub RNE (fp.mul RNE x13 x17) (fp.div RNE x5 x1))) (fp.neg (fp.sub RNE (fp.neg x8) (fp.neg x1)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE x19 x9) (fp.div RNE x20 x2)) (fp.div RNE (fp.sub RNE x3 x21) (fp.sub RNE x11 x4))) (fp.neg (fp.neg (fp.div RNE x11 x4)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE x20 x11) (fp.div RNE x6 x4)) (fp.neg (fp.sub RNE x9 x1))) (fp.sub RNE (fp.add RNE (fp.add RNE x3 x15) (fp.div RNE x20 x15)) (fp.mul RNE (fp.sub RNE x2 x0) (fp.div RNE x15 x18)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.add RNE x21 x1) (fp.sub RNE x18 x9)) (fp.neg (fp.add RNE x10 x11))) (fp.add RNE (fp.sub RNE (fp.add RNE x13 x14) (fp.div RNE x2 x22)) (fp.neg (fp.add RNE x5 x2)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg x18) (fp.mul RNE x5 x3)) (fp.sub RNE (fp.div RNE x18 x9) (fp.div RNE x7 x5))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x21 x11) (fp.sub RNE x2 x16)) (fp.neg (fp.div RNE x1 x1)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x19 x7) (fp.neg x21)) (fp.sub RNE (fp.div RNE x5 x5) (fp.div RNE x10 x16))) (fp.neg (fp.div RNE (fp.sub RNE x14 x2) (fp.neg x18)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x16) (fp.add RNE x2 x5)) (fp.div RNE (fp.mul RNE x5 x2) (fp.add RNE x13 x7))) (fp.add RNE (fp.sub RNE (fp.sub RNE x5 x5) (fp.div RNE x20 x6)) (fp.mul RNE (fp.sub RNE x11 x14) (fp.sub RNE x20 x22)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.sub RNE x13 x6)) (fp.div RNE (fp.div RNE x8 x3) (fp.neg x0))) (fp.sub RNE (fp.neg (fp.add RNE x15 x8)) (fp.sub RNE (fp.sub RNE x12 x5) (fp.mul RNE x1 x13)))))
(check-sat)
