(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE x13 x13) (fp.add RNE x1 x1)))
(assert (fp.eq (fp.sub RNE x11 x12) (fp.add RNE x4 x10)))
(assert (fp.lt (fp.sub RNE x7 x7) (fp.sub RNE x3 x10)))
(assert (fp.lt (fp.add RNE x11 x6) (fp.add RNE x14 x1)))
(assert (fp.eq (fp.sub RNE x0 x5) (fp.div RNE x11 x11)))
(assert (fp.gt (fp.add RNE x4 x2) (fp.sub RNE x5 x7)))
(assert (fp.leq (fp.mul RNE x13 x13) (fp.sub RNE x2 x9)))
(assert (fp.lt (fp.sub RNE x3 x1) (fp.mul RNE x13 x1)))
(check-sat)
