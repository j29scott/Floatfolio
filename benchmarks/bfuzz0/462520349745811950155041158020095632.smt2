(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.add RNE x7 x4)) (fp.add RNE (fp.div RNE x5 x5) (fp.neg x4))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x8 x3) (fp.mul RNE x3 x9)) (fp.div RNE (fp.div RNE x11 x5) (fp.neg x6))))
(assert (fp.gt (fp.add RNE (fp.neg x8) (fp.add RNE x1 x3)) (fp.div RNE (fp.neg x12) (fp.neg x0))))
(assert (fp.leq (fp.mul RNE (fp.neg x9) (fp.add RNE x9 x0)) (fp.neg (fp.div RNE x2 x4))))
(assert (fp.lt (fp.sub RNE (fp.neg x12) (fp.sub RNE x1 x11)) (fp.add RNE (fp.mul RNE x5 x5) (fp.mul RNE x1 x9))))
(assert (fp.lt (fp.sub RNE (fp.neg x1) (fp.mul RNE x3 x4)) (fp.mul RNE (fp.add RNE x6 x7) (fp.div RNE x7 x8))))
(assert (fp.lt (fp.neg (fp.sub RNE x5 x2)) (fp.sub RNE (fp.add RNE x5 x3) (fp.add RNE x5 x3))))
(assert (fp.geq (fp.neg (fp.sub RNE x9 x11)) (fp.div RNE (fp.div RNE x9 x7) (fp.sub RNE x6 x12))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x6 x10) (fp.div RNE x10 x11)) (fp.neg (fp.sub RNE x11 x4))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x7 x2) (fp.mul RNE x11 x9)) (fp.sub RNE (fp.div RNE x0 x3) (fp.mul RNE x3 x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x10) (fp.div RNE x12 x8)) (fp.add RNE (fp.add RNE x11 x0) (fp.sub RNE x0 x8))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x11 x5) (fp.div RNE x4 x9)) (fp.add RNE (fp.sub RNE x0 x12) (fp.neg x4))))
(assert (fp.gt (fp.neg (fp.neg x11)) (fp.div RNE (fp.sub RNE x7 x4) (fp.mul RNE x8 x6))))
(check-sat)
