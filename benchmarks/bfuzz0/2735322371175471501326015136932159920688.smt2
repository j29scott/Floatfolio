(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.sub RNE x9 x14) (fp.sub RNE x16 x15)) (fp.add RNE (fp.sub RNE x2 x9) (fp.neg x14))) (fp.sub RNE (fp.neg (fp.sub RNE x3 x5)) (fp.div RNE (fp.sub RNE x6 x8) (fp.neg x6)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.add RNE x1 x3) (fp.mul RNE x8 x11)) (fp.mul RNE (fp.sub RNE x6 x14) (fp.div RNE x3 x9))) (fp.mul RNE (fp.neg (fp.mul RNE x11 x17)) (fp.add RNE (fp.add RNE x6 x10) (fp.sub RNE x16 x4)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.neg x11) (fp.neg x6)) (fp.mul RNE (fp.neg x6) (fp.div RNE x14 x7))) (fp.sub RNE (fp.sub RNE (fp.neg x7) (fp.div RNE x2 x14)) (fp.mul RNE (fp.add RNE x3 x15) (fp.sub RNE x9 x3)))))
(check-sat)
