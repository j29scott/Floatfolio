(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE x19 x12) (fp.mul RNE x14 x12)))
(assert (fp.gt (fp.div RNE x4 x1) (fp.div RNE x9 x12)))
(assert (fp.leq (fp.mul RNE x17 x10) (fp.add RNE x10 x4)))
(assert (fp.geq (fp.sub RNE x9 x16) (fp.sub RNE x3 x12)))
(assert (fp.eq (fp.mul RNE x10 x14) (fp.neg x6)))
(assert (fp.geq (fp.sub RNE x9 x4) (fp.div RNE x18 x18)))
(assert (fp.geq (fp.div RNE x17 x12) (fp.sub RNE x2 x3)))
(assert (fp.leq (fp.add RNE x19 x11) (fp.div RNE x15 x14)))
(assert (fp.geq (fp.sub RNE x11 x7) (fp.div RNE x8 x6)))
(assert (fp.geq (fp.mul RNE x2 x11) (fp.mul RNE x7 x19)))
(check-sat)
