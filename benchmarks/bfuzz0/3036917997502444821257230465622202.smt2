(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x5 x0) (fp.mul RNE x5 x7)) (fp.add RNE (fp.mul RNE x3 x6) (fp.sub RNE x9 x1))) (fp.neg (fp.div RNE (fp.mul RNE x9 x0) (fp.div RNE x0 x9)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.sub RNE x8 x8)) (fp.div RNE (fp.mul RNE x0 x3) (fp.sub RNE x4 x5))) (fp.add RNE (fp.add RNE (fp.add RNE x1 x5) (fp.sub RNE x8 x8)) (fp.add RNE (fp.sub RNE x8 x1) (fp.add RNE x2 x6)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.mul RNE x9 x7) (fp.div RNE x5 x6)) (fp.neg (fp.div RNE x4 x5))) (fp.mul RNE (fp.add RNE (fp.add RNE x2 x0) (fp.mul RNE x0 x5)) (fp.neg (fp.sub RNE x7 x0)))))
(assert (fp.gt (fp.neg (fp.neg (fp.mul RNE x0 x2))) (fp.sub RNE (fp.div RNE (fp.neg x5) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x1 x3) (fp.add RNE x1 x7)))))
(check-sat)
