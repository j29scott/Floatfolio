(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x7 x7) (fp.div RNE x4 x7)))
(assert (fp.leq (fp.add RNE x3 x7) (fp.div RNE x2 x8)))
(assert (fp.leq (fp.neg x0) (fp.sub RNE x0 x0)))
(assert (fp.geq (fp.add RNE x8 x2) (fp.mul RNE x5 x1)))
(assert (fp.geq (fp.neg x5) (fp.mul RNE x7 x3)))
(assert (fp.geq (fp.div RNE x0 x0) (fp.add RNE x1 x6)))
(assert (fp.geq (fp.neg x7) (fp.sub RNE x0 x6)))
(assert (fp.leq (fp.sub RNE x4 x1) (fp.mul RNE x5 x5)))
(assert (fp.leq (fp.add RNE x3 x0) (fp.add RNE x0 x7)))
(assert (fp.geq (fp.sub RNE x1 x2) (fp.neg x7)))
(assert (fp.lt (fp.mul RNE x1 x3) (fp.mul RNE x8 x7)))
(assert (fp.eq (fp.add RNE x8 x6) (fp.div RNE x4 x8)))
(assert (fp.leq (fp.sub RNE x2 x5) (fp.mul RNE x8 x6)))
(check-sat)
