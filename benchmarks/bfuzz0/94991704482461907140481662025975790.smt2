(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x24)) (fp.div RNE (fp.mul RNE x12 x6) (fp.mul RNE x0 x7))) (fp.add RNE (fp.sub RNE (fp.sub RNE x18 x17) (fp.add RNE x11 x17)) (fp.add RNE (fp.add RNE x11 x19) (fp.div RNE x7 x20)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.sub RNE x2 x24) (fp.sub RNE x2 x22)) (fp.sub RNE (fp.add RNE x3 x20) (fp.sub RNE x24 x17))) (fp.div RNE (fp.add RNE (fp.add RNE x6 x24) (fp.div RNE x6 x24)) (fp.sub RNE (fp.div RNE x22 x20) (fp.sub RNE x12 x13))))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x8 x7) (fp.div RNE x4 x7)) (fp.neg (fp.sub RNE x7 x10))) (fp.sub RNE (fp.neg (fp.add RNE x21 x8)) (fp.add RNE (fp.sub RNE x21 x0) (fp.neg x20)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x7 x3) (fp.add RNE x12 x22)) (fp.mul RNE (fp.sub RNE x8 x13) (fp.add RNE x4 x24))) (fp.add RNE (fp.mul RNE (fp.add RNE x16 x2) (fp.neg x21)) (fp.add RNE (fp.mul RNE x21 x23) (fp.mul RNE x8 x0))))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x7 x0) (fp.sub RNE x4 x12)) (fp.mul RNE (fp.mul RNE x6 x4) (fp.sub RNE x22 x6))) (fp.add RNE (fp.mul RNE (fp.add RNE x4 x16) (fp.sub RNE x20 x1)) (fp.add RNE (fp.add RNE x10 x16) (fp.mul RNE x3 x1)))) (fp.neg (fp.neg (fp.sub RNE (fp.add RNE x1 x5) (fp.sub RNE x10 x23))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE (fp.add RNE x0 x19) (fp.div RNE x2 x1))) (fp.neg (fp.add RNE (fp.add RNE x12 x16) (fp.add RNE x12 x14)))) (fp.div RNE (fp.add RNE (fp.sub RNE (fp.div RNE x12 x5) (fp.div RNE x12 x1)) (fp.div RNE (fp.add RNE x15 x0) (fp.add RNE x5 x23))) (fp.neg (fp.div RNE (fp.mul RNE x11 x24) (fp.add RNE x10 x20))))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.neg x18) (fp.mul RNE x8 x23)) (fp.add RNE (fp.div RNE x21 x16) (fp.div RNE x21 x8))) (fp.div RNE (fp.mul RNE (fp.div RNE x14 x20) (fp.sub RNE x18 x6)) (fp.sub RNE (fp.div RNE x15 x23) (fp.sub RNE x2 x23)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x8 x20) (fp.add RNE x22 x4)) (fp.mul RNE (fp.add RNE x5 x14) (fp.sub RNE x4 x23))) (fp.add RNE (fp.add RNE (fp.sub RNE x18 x18) (fp.sub RNE x21 x13)) (fp.sub RNE (fp.add RNE x22 x21) (fp.neg x14))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.sub RNE (fp.sub RNE x11 x11) (fp.add RNE x22 x19))) (fp.div RNE (fp.mul RNE (fp.add RNE x8 x10) (fp.sub RNE x0 x12)) (fp.neg (fp.div RNE x2 x23)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.div RNE x6 x18) (fp.div RNE x23 x5)) (fp.add RNE (fp.mul RNE x15 x0) (fp.mul RNE x4 x18))) (fp.mul RNE (fp.neg (fp.add RNE x5 x12)) (fp.mul RNE (fp.mul RNE x18 x22) (fp.add RNE x15 x8))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.neg (fp.mul RNE x9 x24)) (fp.neg (fp.add RNE x14 x14))) (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x23) (fp.div RNE x21 x11)) (fp.div RNE (fp.div RNE x5 x19) (fp.mul RNE x5 x8)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.sub RNE x21 x9) (fp.div RNE x17 x22)) (fp.add RNE (fp.mul RNE x24 x11) (fp.mul RNE x3 x4))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x12 x24) (fp.sub RNE x3 x17)) (fp.mul RNE (fp.sub RNE x9 x1) (fp.div RNE x18 x15))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x13 x1) (fp.sub RNE x14 x23)) (fp.neg (fp.div RNE x11 x14)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x0 x11) (fp.div RNE x4 x19)) (fp.add RNE (fp.neg x24) (fp.mul RNE x21 x14))) (fp.neg (fp.mul RNE (fp.neg x4) (fp.mul RNE x12 x19))))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE x21 x1) (fp.div RNE x6 x3)) (fp.mul RNE (fp.div RNE x8 x12) (fp.div RNE x12 x13))) (fp.add RNE (fp.neg (fp.sub RNE x12 x8)) (fp.sub RNE (fp.div RNE x5 x5) (fp.mul RNE x10 x3)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.neg x20) (fp.add RNE x14 x15)) (fp.neg (fp.mul RNE x7 x8))) (fp.add RNE (fp.add RNE (fp.add RNE x17 x19) (fp.add RNE x22 x15)) (fp.mul RNE (fp.neg x23) (fp.mul RNE x1 x16))))))
(check-sat)
