(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg x5) (fp.sub RNE x0 x6)) (fp.add RNE (fp.neg x2) (fp.add RNE x7 x0))))
(assert (fp.leq (fp.add RNE (fp.add RNE x1 x8) (fp.mul RNE x7 x2)) (fp.mul RNE (fp.neg x5) (fp.div RNE x0 x1))))
(assert (fp.geq (fp.add RNE (fp.div RNE x0 x0) (fp.sub RNE x10 x9)) (fp.neg (fp.div RNE x4 x0))))
(assert (fp.lt (fp.div RNE (fp.neg x1) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x5 x11) (fp.div RNE x3 x2))))
(assert (fp.lt (fp.mul RNE (fp.neg x11) (fp.sub RNE x11 x0)) (fp.add RNE (fp.mul RNE x4 x4) (fp.sub RNE x0 x9))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x8 x9) (fp.neg x10)) (fp.neg (fp.mul RNE x9 x9))))
(assert (fp.geq (fp.neg (fp.div RNE x10 x11)) (fp.sub RNE (fp.div RNE x7 x9) (fp.add RNE x8 x11))))
(assert (fp.eq (fp.add RNE (fp.add RNE x5 x3) (fp.mul RNE x11 x7)) (fp.add RNE (fp.neg x10) (fp.div RNE x5 x5))))
(check-sat)
