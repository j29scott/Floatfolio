(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.mul RNE x8 x2) (fp.add RNE x5 x5)) (fp.mul RNE (fp.neg x9) (fp.mul RNE x8 x3))) (fp.sub RNE (fp.div RNE (fp.mul RNE x0 x10) (fp.div RNE x7 x9)) (fp.add RNE (fp.sub RNE x2 x1) (fp.add RNE x2 x0)))))
(assert (fp.gt (fp.neg (fp.neg (fp.neg x0))) (fp.div RNE (fp.sub RNE (fp.add RNE x1 x0) (fp.mul RNE x10 x7)) (fp.neg (fp.div RNE x9 x1)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x1 x5) (fp.mul RNE x2 x3)) (fp.neg (fp.mul RNE x9 x6))) (fp.sub RNE (fp.sub RNE (fp.div RNE x10 x9) (fp.sub RNE x2 x1)) (fp.neg (fp.mul RNE x0 x3)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.neg x2) (fp.neg x1)) (fp.div RNE (fp.add RNE x6 x10) (fp.neg x2))) (fp.add RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x11 x8)) (fp.add RNE (fp.add RNE x6 x2) (fp.div RNE x4 x8)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.mul RNE x11 x6) (fp.neg x8)) (fp.neg (fp.div RNE x7 x3))) (fp.neg (fp.mul RNE (fp.div RNE x5 x1) (fp.mul RNE x7 x0)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x5) (fp.sub RNE x3 x9))) (fp.neg (fp.neg (fp.neg x11)))))
(check-sat)
