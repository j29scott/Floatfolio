(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.mul RNE x21 x9) (fp.neg x12)) (fp.add RNE (fp.div RNE x3 x10) (fp.mul RNE x18 x22))))
(assert (fp.eq (fp.neg (fp.neg x4)) (fp.div RNE (fp.sub RNE x15 x14) (fp.mul RNE x20 x17))))
(assert (fp.eq (fp.add RNE (fp.add RNE x20 x2) (fp.neg x13)) (fp.div RNE (fp.sub RNE x16 x21) (fp.add RNE x16 x13))))
(assert (fp.lt (fp.div RNE (fp.add RNE x10 x6) (fp.div RNE x9 x22)) (fp.add RNE (fp.mul RNE x15 x1) (fp.mul RNE x22 x4))))
(assert (fp.geq (fp.div RNE (fp.div RNE x13 x7) (fp.mul RNE x20 x16)) (fp.neg (fp.add RNE x8 x0))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x23 x1) (fp.sub RNE x19 x6)) (fp.div RNE (fp.sub RNE x12 x18) (fp.mul RNE x22 x17))))
(check-sat)
