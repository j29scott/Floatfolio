(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x5 x6) (fp.sub RNE x8 x2)))
(assert (fp.leq (fp.sub RNE x10 x0) (fp.mul RNE x5 x0)))
(assert (fp.lt (fp.div RNE x8 x4) (fp.neg x9)))
(assert (fp.lt (fp.neg x2) (fp.div RNE x1 x0)))
(assert (fp.lt (fp.div RNE x4 x4) (fp.mul RNE x6 x10)))
(assert (fp.eq (fp.sub RNE x1 x0) (fp.div RNE x7 x5)))
(assert (fp.eq (fp.div RNE x5 x9) (fp.sub RNE x8 x4)))
(assert (fp.eq (fp.mul RNE x2 x1) (fp.div RNE x5 x10)))
(assert (fp.geq (fp.sub RNE x8 x8) (fp.div RNE x4 x10)))
(assert (fp.eq (fp.mul RNE x2 x0) (fp.mul RNE x8 x8)))
(assert (fp.gt (fp.div RNE x1 x2) (fp.sub RNE x8 x6)))
(assert (fp.lt (fp.neg x3) (fp.neg x8)))
(assert (fp.geq (fp.div RNE x4 x3) (fp.div RNE x9 x5)))
(assert (fp.eq (fp.neg x6) (fp.mul RNE x4 x6)))
(assert (fp.geq (fp.mul RNE x2 x8) (fp.div RNE x0 x4)))
(assert (fp.lt (fp.mul RNE x5 x7) (fp.add RNE x9 x3)))
(assert (fp.leq (fp.div RNE x2 x4) (fp.mul RNE x9 x3)))
(check-sat)
