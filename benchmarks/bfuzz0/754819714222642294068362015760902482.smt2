(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE x2 x15)) (fp.div RNE (fp.div RNE x17 x12) (fp.mul RNE x20 x11))) (fp.mul RNE (fp.add RNE (fp.mul RNE x15 x2) (fp.div RNE x26 x2)) (fp.div RNE (fp.div RNE x12 x19) (fp.div RNE x13 x4)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.div RNE x4 x13) (fp.sub RNE x16 x15)) (fp.div RNE (fp.add RNE x0 x14) (fp.add RNE x18 x9))) (fp.mul RNE (fp.neg (fp.div RNE x16 x5)) (fp.sub RNE (fp.add RNE x1 x1) (fp.div RNE x15 x22)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.neg x20) (fp.sub RNE x0 x21)) (fp.neg (fp.add RNE x15 x25))) (fp.neg (fp.add RNE (fp.neg x2) (fp.mul RNE x24 x3)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE x14 x24) (fp.add RNE x14 x20)) (fp.sub RNE (fp.div RNE x14 x21) (fp.neg x16))) (fp.add RNE (fp.add RNE (fp.div RNE x0 x4) (fp.neg x15)) (fp.sub RNE (fp.div RNE x13 x15) (fp.mul RNE x25 x15)))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.mul RNE x11 x19) (fp.div RNE x13 x6)) (fp.add RNE (fp.neg x22) (fp.sub RNE x6 x20))) (fp.neg (fp.mul RNE (fp.sub RNE x26 x21) (fp.div RNE x25 x2)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE x8 x13) (fp.mul RNE x9 x20)) (fp.neg (fp.mul RNE x6 x17))) (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x26) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x23 x7) (fp.add RNE x9 x5)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg x8) (fp.add RNE x5 x10)) (fp.div RNE (fp.mul RNE x14 x5) (fp.div RNE x18 x12))) (fp.mul RNE (fp.mul RNE (fp.div RNE x11 x8) (fp.add RNE x5 x5)) (fp.neg (fp.sub RNE x22 x4)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.div RNE x9 x22) (fp.add RNE x25 x25))) (fp.add RNE (fp.sub RNE (fp.sub RNE x21 x14) (fp.div RNE x25 x6)) (fp.mul RNE (fp.div RNE x24 x19) (fp.neg x22)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE x12 x14) (fp.add RNE x12 x8)) (fp.div RNE (fp.sub RNE x21 x22) (fp.add RNE x9 x11))) (fp.div RNE (fp.sub RNE (fp.add RNE x26 x7) (fp.neg x22)) (fp.mul RNE (fp.div RNE x19 x2) (fp.add RNE x23 x25)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x22 x4) (fp.add RNE x21 x18)) (fp.div RNE (fp.neg x14) (fp.mul RNE x1 x2))) (fp.add RNE (fp.div RNE (fp.div RNE x0 x15) (fp.add RNE x21 x1)) (fp.neg (fp.add RNE x16 x24)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE x24 x19) (fp.mul RNE x3 x1)) (fp.neg (fp.sub RNE x4 x17))) (fp.neg (fp.add RNE (fp.div RNE x8 x4) (fp.mul RNE x25 x15)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.add RNE x18 x19) (fp.sub RNE x21 x18)) (fp.add RNE (fp.add RNE x19 x18) (fp.div RNE x21 x24))) (fp.div RNE (fp.div RNE (fp.add RNE x23 x23) (fp.sub RNE x6 x3)) (fp.mul RNE (fp.div RNE x4 x0) (fp.neg x1)))))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x26 x0) (fp.div RNE x14 x26)) (fp.mul RNE (fp.div RNE x4 x5) (fp.div RNE x3 x21))) (fp.add RNE (fp.neg (fp.neg x19)) (fp.add RNE (fp.neg x16) (fp.sub RNE x1 x0)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.neg x25) (fp.mul RNE x11 x24)) (fp.neg (fp.div RNE x8 x11))) (fp.add RNE (fp.neg (fp.add RNE x2 x22)) (fp.div RNE (fp.neg x22) (fp.div RNE x2 x6)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.add RNE x1 x17) (fp.sub RNE x17 x18)) (fp.add RNE (fp.neg x18) (fp.sub RNE x8 x15))) (fp.mul RNE (fp.add RNE (fp.add RNE x24 x11) (fp.sub RNE x8 x6)) (fp.add RNE (fp.add RNE x0 x6) (fp.div RNE x8 x12)))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.sub RNE x13 x5) (fp.mul RNE x24 x8)) (fp.add RNE (fp.sub RNE x11 x20) (fp.mul RNE x6 x5))) (fp.add RNE (fp.add RNE (fp.mul RNE x20 x15) (fp.div RNE x9 x14)) (fp.div RNE (fp.add RNE x25 x20) (fp.sub RNE x23 x26)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.sub RNE x17 x23) (fp.sub RNE x6 x6)) (fp.add RNE (fp.sub RNE x23 x8) (fp.sub RNE x21 x14))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x18 x20) (fp.mul RNE x12 x16)) (fp.sub RNE (fp.mul RNE x23 x23) (fp.div RNE x5 x9)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE x6 x1) (fp.mul RNE x3 x2)) (fp.mul RNE (fp.mul RNE x26 x20) (fp.div RNE x23 x8))) (fp.add RNE (fp.neg (fp.neg x25)) (fp.add RNE (fp.sub RNE x9 x15) (fp.add RNE x25 x3)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.mul RNE x0 x7)) (fp.neg (fp.mul RNE x26 x4))) (fp.div RNE (fp.sub RNE (fp.add RNE x22 x25) (fp.sub RNE x12 x19)) (fp.neg (fp.div RNE x2 x25)))))
(check-sat)
