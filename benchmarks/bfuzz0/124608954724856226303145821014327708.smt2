(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x8 x11) (fp.div RNE x3 x9)) (fp.add RNE (fp.add RNE x10 x1) (fp.add RNE x20 x17))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x0) (fp.neg x20)) (fp.neg (fp.mul RNE x0 x17)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.mul RNE x3 x19) (fp.div RNE x12 x2))) (fp.div RNE (fp.add RNE (fp.div RNE x14 x11) (fp.div RNE x8 x5)) (fp.neg (fp.add RNE x14 x2))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.neg (fp.add RNE x20 x7)) (fp.div RNE (fp.div RNE x14 x14) (fp.div RNE x16 x16)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.neg x3) (fp.neg x1)) (fp.sub RNE (fp.add RNE x7 x19) (fp.neg x17))) (fp.mul RNE (fp.add RNE (fp.sub RNE x10 x16) (fp.mul RNE x5 x7)) (fp.add RNE (fp.neg x10) (fp.neg x2))))))
(check-sat)
