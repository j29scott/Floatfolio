(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x4 x10) (fp.add RNE x4 x8)))
(assert (fp.eq (fp.neg x9) (fp.mul RNE x15 x9)))
(assert (fp.geq (fp.neg x11) (fp.div RNE x4 x11)))
(assert (fp.eq (fp.div RNE x2 x6) (fp.add RNE x0 x3)))
(assert (fp.eq (fp.add RNE x12 x10) (fp.div RNE x2 x1)))
(assert (fp.gt (fp.add RNE x3 x11) (fp.mul RNE x14 x3)))
(assert (fp.geq (fp.neg x10) (fp.mul RNE x6 x9)))
(assert (fp.eq (fp.mul RNE x11 x12) (fp.div RNE x0 x6)))
(assert (fp.eq (fp.add RNE x11 x9) (fp.div RNE x4 x10)))
(assert (fp.lt (fp.div RNE x1 x10) (fp.div RNE x4 x1)))
(assert (fp.lt (fp.sub RNE x2 x13) (fp.mul RNE x0 x7)))
(assert (fp.geq (fp.mul RNE x8 x13) (fp.add RNE x3 x7)))
(assert (fp.eq (fp.sub RNE x1 x2) (fp.sub RNE x1 x10)))
(assert (fp.leq (fp.div RNE x1 x0) (fp.mul RNE x7 x5)))
(check-sat)
