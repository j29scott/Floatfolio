(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.mul RNE x10 x0) (fp.mul RNE x2 x10)) (fp.neg (fp.div RNE x6 x5))) (fp.div RNE (fp.add RNE (fp.mul RNE x2 x7) (fp.div RNE x3 x10)) (fp.div RNE (fp.add RNE x0 x7) (fp.sub RNE x10 x8)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE x6 x3) (fp.add RNE x12 x10)) (fp.sub RNE (fp.sub RNE x0 x7) (fp.div RNE x5 x12))) (fp.div RNE (fp.add RNE (fp.sub RNE x5 x4) (fp.mul RNE x7 x1)) (fp.neg (fp.add RNE x10 x0)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x6 x0) (fp.neg x13)) (fp.mul RNE (fp.div RNE x8 x2) (fp.div RNE x9 x13))) (fp.mul RNE (fp.mul RNE (fp.neg x9) (fp.sub RNE x0 x8)) (fp.neg (fp.sub RNE x8 x9)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.add RNE x13 x3) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x8 x8) (fp.add RNE x2 x10))) (fp.add RNE (fp.neg (fp.div RNE x5 x9)) (fp.sub RNE (fp.mul RNE x1 x4) (fp.add RNE x1 x4)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x10 x13) (fp.sub RNE x13 x3))) (fp.add RNE (fp.neg (fp.div RNE x6 x12)) (fp.mul RNE (fp.neg x5) (fp.add RNE x8 x13)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE x10 x8) (fp.mul RNE x12 x9)) (fp.neg (fp.sub RNE x5 x5))) (fp.neg (fp.div RNE (fp.sub RNE x2 x11) (fp.sub RNE x11 x9)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE x3 x10) (fp.neg x13)) (fp.sub RNE (fp.neg x11) (fp.mul RNE x11 x13))) (fp.neg (fp.add RNE (fp.mul RNE x0 x5) (fp.add RNE x6 x0)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE x0 x11) (fp.neg x8)) (fp.mul RNE (fp.neg x12) (fp.sub RNE x2 x8))) (fp.add RNE (fp.add RNE (fp.sub RNE x13 x13) (fp.mul RNE x2 x7)) (fp.sub RNE (fp.add RNE x1 x5) (fp.neg x11)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x4 x2) (fp.mul RNE x7 x2)) (fp.add RNE (fp.sub RNE x3 x9) (fp.sub RNE x3 x9))) (fp.neg (fp.mul RNE (fp.mul RNE x12 x6) (fp.div RNE x9 x10)))))
(check-sat)
