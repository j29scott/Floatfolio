(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE x3 x1) (fp.add RNE x0 x10)))
(assert (fp.eq (fp.neg x12) (fp.add RNE x0 x4)))
(assert (fp.eq (fp.add RNE x2 x2) (fp.mul RNE x6 x12)))
(assert (fp.eq (fp.add RNE x3 x2) (fp.neg x10)))
(assert (fp.lt (fp.div RNE x5 x11) (fp.sub RNE x5 x2)))
(assert (fp.geq (fp.mul RNE x6 x6) (fp.div RNE x5 x7)))
(assert (fp.geq (fp.mul RNE x3 x6) (fp.sub RNE x10 x12)))
(assert (fp.gt (fp.div RNE x3 x3) (fp.neg x9)))
(assert (fp.gt (fp.div RNE x11 x11) (fp.add RNE x7 x11)))
(assert (fp.eq (fp.add RNE x2 x1) (fp.neg x4)))
(assert (fp.eq (fp.mul RNE x10 x0) (fp.div RNE x3 x8)))
(assert (fp.leq (fp.div RNE x0 x3) (fp.div RNE x11 x2)))
(assert (fp.lt (fp.neg x11) (fp.sub RNE x3 x10)))
(assert (fp.eq (fp.add RNE x10 x10) (fp.neg x2)))
(assert (fp.lt (fp.div RNE x4 x0) (fp.div RNE x3 x7)))
(assert (fp.lt (fp.neg x9) (fp.mul RNE x3 x4)))
(assert (fp.lt (fp.add RNE x0 x8) (fp.add RNE x5 x2)))
(assert (fp.lt (fp.add RNE x12 x7) (fp.add RNE x7 x3)))
(assert (fp.eq (fp.sub RNE x10 x8) (fp.sub RNE x12 x0)))
(check-sat)
