(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.sub RNE x15 x19) (fp.div RNE x12 x18)) (fp.add RNE (fp.neg x4) (fp.add RNE x0 x11))))
(assert (fp.leq (fp.neg (fp.sub RNE x10 x10)) (fp.mul RNE (fp.sub RNE x7 x7) (fp.neg x14))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x18 x9) (fp.div RNE x15 x2)) (fp.add RNE (fp.div RNE x14 x19) (fp.div RNE x2 x3))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x19 x0) (fp.neg x9)) (fp.neg (fp.sub RNE x4 x13))))
(check-sat)
