(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.mul RNE x23 x4) (fp.add RNE x11 x24)) (fp.sub RNE (fp.mul RNE x10 x2) (fp.mul RNE x13 x13))) (fp.sub RNE (fp.sub RNE (fp.div RNE x4 x16) (fp.neg x10)) (fp.sub RNE (fp.mul RNE x11 x10) (fp.mul RNE x17 x16)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE x12 x8) (fp.mul RNE x13 x10)) (fp.div RNE (fp.neg x1) (fp.mul RNE x4 x24))) (fp.div RNE (fp.div RNE (fp.div RNE x10 x7) (fp.neg x8)) (fp.sub RNE (fp.mul RNE x0 x7) (fp.mul RNE x5 x2)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE x16 x22) (fp.neg x3)) (fp.div RNE (fp.mul RNE x9 x19) (fp.sub RNE x12 x6))) (fp.neg (fp.neg (fp.sub RNE x0 x11)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.add RNE x12 x21) (fp.neg x10)) (fp.div RNE (fp.mul RNE x8 x15) (fp.neg x0))) (fp.mul RNE (fp.mul RNE (fp.neg x8) (fp.neg x16)) (fp.mul RNE (fp.neg x12) (fp.add RNE x13 x8)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x17 x11)) (fp.neg (fp.sub RNE x12 x18))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x21 x3) (fp.neg x11)) (fp.neg (fp.add RNE x14 x9)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x23) (fp.sub RNE x8 x19)) (fp.neg (fp.sub RNE x16 x23))) (fp.mul RNE (fp.add RNE (fp.div RNE x5 x6) (fp.div RNE x14 x6)) (fp.div RNE (fp.sub RNE x24 x18) (fp.div RNE x4 x12)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x24 x3)) (fp.neg (fp.mul RNE x20 x13))) (fp.add RNE (fp.mul RNE (fp.add RNE x7 x3) (fp.neg x11)) (fp.sub RNE (fp.add RNE x15 x13) (fp.div RNE x0 x3)))))
(check-sat)
