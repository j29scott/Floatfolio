(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE x7 x4) (fp.neg x5)))
(assert (fp.geq (fp.sub RNE x6 x6) (fp.neg x3)))
(assert (fp.gt (fp.sub RNE x7 x6) (fp.sub RNE x7 x2)))
(assert (fp.geq (fp.add RNE x1 x0) (fp.neg x1)))
(assert (fp.eq (fp.mul RNE x1 x7) (fp.neg x6)))
(assert (fp.gt (fp.add RNE x4 x0) (fp.neg x7)))
(assert (fp.gt (fp.neg x0) (fp.div RNE x4 x3)))
(assert (fp.eq (fp.neg x1) (fp.sub RNE x7 x0)))
(assert (fp.gt (fp.neg x1) (fp.mul RNE x3 x2)))
(assert (fp.leq (fp.add RNE x1 x6) (fp.mul RNE x1 x1)))
(assert (fp.lt (fp.mul RNE x6 x3) (fp.mul RNE x5 x1)))
(assert (fp.lt (fp.div RNE x7 x3) (fp.sub RNE x5 x6)))
(assert (fp.eq (fp.div RNE x6 x4) (fp.div RNE x2 x7)))
(assert (fp.geq (fp.add RNE x2 x4) (fp.neg x0)))
(check-sat)
