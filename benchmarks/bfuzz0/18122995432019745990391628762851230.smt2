(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg (fp.div RNE x7 x4)) (fp.add RNE (fp.div RNE x2 x9) (fp.add RNE x11 x19))) (fp.neg (fp.add RNE (fp.div RNE x4 x16) (fp.neg x9)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.neg x18) (fp.div RNE x19 x17))) (fp.sub RNE (fp.neg (fp.neg x10)) (fp.neg (fp.add RNE x19 x18)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x3 x20) (fp.neg x17)) (fp.neg (fp.mul RNE x1 x0))) (fp.neg (fp.neg (fp.mul RNE x15 x10)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE x17 x3)) (fp.add RNE (fp.div RNE x5 x8) (fp.mul RNE x4 x15))) (fp.div RNE (fp.sub RNE (fp.sub RNE x11 x13) (fp.neg x10)) (fp.sub RNE (fp.add RNE x23 x1) (fp.mul RNE x6 x1)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.sub RNE x9 x0) (fp.mul RNE x19 x7))) (fp.neg (fp.div RNE (fp.neg x23) (fp.sub RNE x0 x18)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.add RNE x5 x16) (fp.mul RNE x18 x18)) (fp.mul RNE (fp.mul RNE x22 x5) (fp.add RNE x3 x4))) (fp.sub RNE (fp.div RNE (fp.neg x14) (fp.add RNE x16 x23)) (fp.neg (fp.neg x2)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x14 x10) (fp.sub RNE x11 x0))) (fp.sub RNE (fp.div RNE (fp.div RNE x2 x10) (fp.neg x23)) (fp.neg (fp.add RNE x17 x1)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x7 x22) (fp.add RNE x12 x1))) (fp.mul RNE (fp.sub RNE (fp.add RNE x9 x1) (fp.neg x12)) (fp.neg (fp.sub RNE x18 x4)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg x10) (fp.div RNE x22 x5)) (fp.neg (fp.div RNE x2 x14))) (fp.add RNE (fp.mul RNE (fp.mul RNE x15 x11) (fp.sub RNE x10 x6)) (fp.div RNE (fp.mul RNE x3 x0) (fp.add RNE x20 x16)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x5) (fp.add RNE x12 x6)) (fp.add RNE (fp.sub RNE x20 x10) (fp.neg x15))) (fp.neg (fp.add RNE (fp.neg x8) (fp.add RNE x6 x8)))))
(check-sat)
