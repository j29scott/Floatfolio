(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.div RNE (fp.neg (fp.sub RNE x12 x1)) (fp.sub RNE (fp.add RNE x4 x9) (fp.add RNE x6 x11)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x10) (fp.sub RNE x10 x7)) (fp.mul RNE (fp.add RNE x1 x9) (fp.add RNE x9 x11))) (fp.neg (fp.div RNE (fp.neg x11) (fp.add RNE x7 x9))))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x2 x5) (fp.div RNE x4 x14)) (fp.add RNE (fp.sub RNE x0 x5) (fp.div RNE x0 x14))) (fp.add RNE (fp.sub RNE (fp.div RNE x8 x3) (fp.neg x8)) (fp.div RNE (fp.neg x3) (fp.div RNE x3 x6)))) (fp.sub RNE (fp.mul RNE (fp.neg (fp.neg x13)) (fp.div RNE (fp.sub RNE x10 x13) (fp.div RNE x4 x8))) (fp.neg (fp.sub RNE (fp.sub RNE x6 x10) (fp.neg x0))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.neg (fp.add RNE x9 x1)) (fp.mul RNE (fp.neg x14) (fp.sub RNE x7 x13))) (fp.add RNE (fp.div RNE (fp.neg x8) (fp.neg x6)) (fp.neg (fp.neg x0)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE x5 x10) (fp.neg x8)) (fp.sub RNE (fp.add RNE x8 x13) (fp.neg x2))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x9 x6) (fp.add RNE x11 x3)) (fp.neg (fp.neg x7))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x8 x6) (fp.div RNE x10 x9)) (fp.neg (fp.neg x7))) (fp.sub RNE (fp.add RNE (fp.neg x2) (fp.sub RNE x4 x13)) (fp.neg (fp.neg x14)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.neg x10) (fp.add RNE x4 x6))) (fp.add RNE (fp.neg (fp.div RNE x12 x0)) (fp.neg (fp.neg x13))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.div RNE (fp.mul RNE x8 x6) (fp.neg x5)) (fp.div RNE (fp.mul RNE x1 x11) (fp.div RNE x1 x2))) (fp.add RNE (fp.div RNE (fp.sub RNE x11 x1) (fp.div RNE x8 x7)) (fp.sub RNE (fp.add RNE x11 x14) (fp.div RNE x8 x0)))) (fp.neg (fp.add RNE (fp.div RNE (fp.sub RNE x14 x6) (fp.sub RNE x10 x3)) (fp.sub RNE (fp.sub RNE x9 x13) (fp.mul RNE x13 x1))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.neg (fp.add RNE x4 x3)) (fp.sub RNE (fp.div RNE x13 x8) (fp.mul RNE x7 x13)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x3 x3) (fp.neg x5)) (fp.add RNE (fp.neg x3) (fp.sub RNE x7 x13))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x11 x6) (fp.add RNE x2 x7)) (fp.mul RNE (fp.mul RNE x3 x14) (fp.add RNE x5 x13))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE (fp.sub RNE x13 x8) (fp.sub RNE x13 x11)) (fp.neg (fp.mul RNE x3 x13)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.mul RNE x3 x4) (fp.sub RNE x3 x14)) (fp.neg (fp.sub RNE x4 x2))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE (fp.div RNE x10 x9) (fp.sub RNE x14 x14)) (fp.div RNE (fp.neg x5) (fp.mul RNE x0 x14)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.div RNE x14 x3) (fp.mul RNE x2 x11)) (fp.sub RNE (fp.div RNE x7 x7) (fp.sub RNE x12 x2))) (fp.add RNE (fp.add RNE (fp.add RNE x3 x10) (fp.mul RNE x3 x7)) (fp.mul RNE (fp.add RNE x6 x0) (fp.neg x2))))))
(check-sat)
