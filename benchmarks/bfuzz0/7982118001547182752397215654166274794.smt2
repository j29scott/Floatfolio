(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.neg (fp.div RNE x3 x24)) (fp.div RNE (fp.add RNE x0 x15) (fp.div RNE x12 x3))) (fp.neg (fp.mul RNE (fp.sub RNE x5 x13) (fp.sub RNE x9 x3)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.sub RNE x19 x6) (fp.div RNE x23 x12)) (fp.div RNE (fp.add RNE x9 x4) (fp.div RNE x12 x16))) (fp.div RNE (fp.sub RNE (fp.mul RNE x7 x19) (fp.div RNE x24 x15)) (fp.mul RNE (fp.neg x1) (fp.mul RNE x7 x19)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE x23 x21) (fp.neg x3)) (fp.div RNE (fp.add RNE x10 x8) (fp.sub RNE x4 x9))) (fp.sub RNE (fp.neg (fp.add RNE x17 x6)) (fp.add RNE (fp.div RNE x7 x13) (fp.mul RNE x1 x22)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x8 x20) (fp.mul RNE x19 x19)) (fp.neg (fp.mul RNE x23 x19))) (fp.neg (fp.neg (fp.div RNE x19 x6)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.add RNE x22 x19)) (fp.neg (fp.mul RNE x7 x21))) (fp.sub RNE (fp.neg (fp.sub RNE x20 x21)) (fp.add RNE (fp.add RNE x24 x22) (fp.mul RNE x15 x13)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.div RNE x23 x3) (fp.neg x20)) (fp.add RNE (fp.add RNE x15 x8) (fp.sub RNE x5 x9))) (fp.add RNE (fp.sub RNE (fp.neg x19) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x18 x16) (fp.add RNE x19 x10)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.mul RNE x7 x19) (fp.mul RNE x0 x16))) (fp.sub RNE (fp.div RNE (fp.sub RNE x23 x9) (fp.mul RNE x18 x11)) (fp.mul RNE (fp.div RNE x3 x22) (fp.mul RNE x18 x24)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.mul RNE x21 x11) (fp.mul RNE x24 x24)) (fp.sub RNE (fp.neg x17) (fp.div RNE x12 x16))) (fp.div RNE (fp.sub RNE (fp.neg x3) (fp.div RNE x9 x0)) (fp.sub RNE (fp.mul RNE x10 x12) (fp.mul RNE x19 x13)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x15 x14) (fp.add RNE x13 x13)) (fp.sub RNE (fp.mul RNE x21 x11) (fp.add RNE x21 x15))) (fp.neg (fp.add RNE (fp.div RNE x12 x0) (fp.add RNE x12 x14)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x12) (fp.sub RNE x4 x22)) (fp.neg (fp.div RNE x17 x15))) (fp.mul RNE (fp.neg (fp.add RNE x22 x3)) (fp.neg (fp.div RNE x0 x14)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.mul RNE x15 x4) (fp.neg x23))) (fp.div RNE (fp.div RNE (fp.neg x23) (fp.neg x2)) (fp.mul RNE (fp.div RNE x24 x1) (fp.sub RNE x21 x4)))))
(assert (fp.gt (fp.add RNE (fp.neg (fp.neg x0)) (fp.neg (fp.div RNE x22 x13))) (fp.div RNE (fp.add RNE (fp.neg x4) (fp.div RNE x19 x4)) (fp.sub RNE (fp.neg x11) (fp.div RNE x12 x1)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg x4) (fp.neg x14)) (fp.mul RNE (fp.sub RNE x21 x21) (fp.add RNE x12 x20))) (fp.div RNE (fp.neg (fp.mul RNE x19 x15)) (fp.sub RNE (fp.mul RNE x21 x0) (fp.mul RNE x14 x9)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x17 x3) (fp.div RNE x15 x7))) (fp.neg (fp.neg (fp.mul RNE x23 x1)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.add RNE x12 x11)) (fp.add RNE (fp.mul RNE x23 x13) (fp.div RNE x22 x10))) (fp.neg (fp.mul RNE (fp.mul RNE x19 x13) (fp.sub RNE x7 x9)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.neg x8) (fp.sub RNE x10 x17)) (fp.add RNE (fp.add RNE x13 x6) (fp.sub RNE x22 x23))) (fp.add RNE (fp.neg (fp.sub RNE x6 x14)) (fp.neg (fp.mul RNE x22 x7)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x9 x22) (fp.add RNE x16 x3)) (fp.div RNE (fp.add RNE x20 x11) (fp.add RNE x10 x16))) (fp.div RNE (fp.add RNE (fp.neg x4) (fp.add RNE x3 x8)) (fp.neg (fp.add RNE x23 x6)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.div RNE x6 x14) (fp.add RNE x15 x3)) (fp.div RNE (fp.div RNE x12 x7) (fp.mul RNE x19 x19))) (fp.sub RNE (fp.add RNE (fp.add RNE x10 x0) (fp.div RNE x19 x19)) (fp.add RNE (fp.div RNE x3 x7) (fp.sub RNE x1 x18)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.neg x22) (fp.div RNE x4 x11)) (fp.mul RNE (fp.add RNE x1 x15) (fp.div RNE x10 x20))) (fp.mul RNE (fp.add RNE (fp.div RNE x4 x21) (fp.add RNE x24 x4)) (fp.mul RNE (fp.mul RNE x24 x17) (fp.mul RNE x11 x24)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.sub RNE x6 x12) (fp.mul RNE x13 x0)) (fp.sub RNE (fp.add RNE x8 x15) (fp.div RNE x21 x3))) (fp.div RNE (fp.neg (fp.add RNE x19 x1)) (fp.div RNE (fp.div RNE x0 x13) (fp.add RNE x8 x16)))))
(check-sat)
