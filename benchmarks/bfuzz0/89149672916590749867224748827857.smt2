(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.div RNE x5 x12) (fp.add RNE x18 x6)) (fp.add RNE (fp.sub RNE x4 x20) (fp.sub RNE x4 x22))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x21 x8) (fp.sub RNE x22 x20)) (fp.add RNE (fp.sub RNE x12 x19) (fp.sub RNE x3 x17))))
(assert (fp.eq (fp.sub RNE (fp.neg x22) (fp.div RNE x9 x18)) (fp.mul RNE (fp.mul RNE x1 x12) (fp.div RNE x16 x18))))
(assert (fp.lt (fp.div RNE (fp.add RNE x2 x0) (fp.mul RNE x9 x9)) (fp.sub RNE (fp.mul RNE x6 x19) (fp.mul RNE x8 x4))))
(check-sat)
