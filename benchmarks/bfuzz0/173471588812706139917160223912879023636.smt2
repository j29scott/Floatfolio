(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg x7) (fp.add RNE x0 x1)))
(assert (fp.eq (fp.div RNE x1 x3) (fp.neg x0)))
(assert (fp.eq (fp.div RNE x8 x5) (fp.sub RNE x8 x2)))
(assert (fp.lt (fp.neg x7) (fp.mul RNE x9 x3)))
(assert (fp.eq (fp.neg x3) (fp.div RNE x9 x7)))
(assert (fp.gt (fp.add RNE x4 x6) (fp.div RNE x9 x5)))
(assert (fp.eq (fp.neg x2) (fp.sub RNE x4 x8)))
(assert (fp.gt (fp.add RNE x6 x9) (fp.mul RNE x1 x5)))
(assert (fp.lt (fp.div RNE x8 x0) (fp.sub RNE x7 x3)))
(assert (fp.eq (fp.neg x0) (fp.div RNE x4 x7)))
(assert (fp.eq (fp.sub RNE x0 x0) (fp.div RNE x5 x6)))
(assert (fp.geq (fp.mul RNE x2 x4) (fp.add RNE x10 x10)))
(assert (fp.eq (fp.add RNE x9 x10) (fp.div RNE x5 x6)))
(check-sat)
