(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.div RNE x10 x15) (fp.mul RNE x12 x5)) (fp.add RNE (fp.div RNE x3 x10) (fp.div RNE x8 x14))))
(assert (fp.gt (fp.div RNE (fp.neg x14) (fp.add RNE x1 x6)) (fp.mul RNE (fp.div RNE x13 x5) (fp.sub RNE x4 x11))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x1 x14) (fp.neg x1)) (fp.add RNE (fp.mul RNE x12 x10) (fp.sub RNE x4 x7))))
(assert (fp.lt (fp.div RNE (fp.add RNE x5 x1) (fp.mul RNE x12 x1)) (fp.neg (fp.add RNE x7 x6))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x12 x6) (fp.add RNE x14 x5)) (fp.sub RNE (fp.div RNE x10 x8) (fp.neg x14))))
(assert (fp.geq (fp.sub RNE (fp.neg x2) (fp.neg x14)) (fp.neg (fp.sub RNE x3 x12))))
(assert (fp.leq (fp.neg (fp.neg x7)) (fp.mul RNE (fp.neg x5) (fp.div RNE x1 x11))))
(assert (fp.leq (fp.div RNE (fp.neg x5) (fp.sub RNE x13 x5)) (fp.add RNE (fp.sub RNE x11 x7) (fp.mul RNE x1 x3))))
(assert (fp.eq (fp.add RNE (fp.add RNE x7 x15) (fp.add RNE x8 x12)) (fp.div RNE (fp.mul RNE x6 x15) (fp.mul RNE x5 x6))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x3 x8) (fp.neg x10)) (fp.neg (fp.sub RNE x13 x12))))
(check-sat)
