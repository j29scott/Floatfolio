(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.add RNE x2 x3)) (fp.sub RNE (fp.add RNE x3 x8) (fp.mul RNE x0 x5))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x8 x7) (fp.add RNE x7 x5)) (fp.neg (fp.mul RNE x8 x0))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x7 x6) (fp.neg x7)) (fp.neg (fp.sub RNE x4 x2))))
(assert (fp.gt (fp.div RNE (fp.neg x7) (fp.div RNE x8 x3)) (fp.add RNE (fp.neg x4) (fp.sub RNE x8 x5))))
(assert (fp.lt (fp.div RNE (fp.neg x7) (fp.add RNE x7 x3)) (fp.div RNE (fp.neg x2) (fp.div RNE x6 x8))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x7) (fp.div RNE x6 x3)) (fp.sub RNE (fp.sub RNE x4 x2) (fp.add RNE x2 x0))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x2 x8) (fp.div RNE x7 x2)) (fp.sub RNE (fp.mul RNE x0 x3) (fp.mul RNE x1 x2))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x6 x6) (fp.mul RNE x2 x0)) (fp.neg (fp.sub RNE x5 x7))))
(assert (fp.eq (fp.mul RNE (fp.neg x4) (fp.mul RNE x3 x7)) (fp.div RNE (fp.mul RNE x6 x5) (fp.div RNE x3 x0))))
(check-sat)
