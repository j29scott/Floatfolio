(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x13) (fp.neg x23)) (fp.add RNE (fp.neg x10) (fp.neg x9))) (fp.add RNE (fp.div RNE (fp.sub RNE x3 x1) (fp.div RNE x16 x18)) (fp.add RNE (fp.sub RNE x15 x14) (fp.sub RNE x8 x19)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE x2 x18) (fp.sub RNE x23 x17)) (fp.add RNE (fp.neg x9) (fp.add RNE x17 x14))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x21) (fp.neg x7)) (fp.sub RNE (fp.sub RNE x24 x24) (fp.add RNE x17 x6)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.div RNE x18 x13) (fp.div RNE x7 x23))) (fp.mul RNE (fp.div RNE (fp.add RNE x19 x14) (fp.neg x3)) (fp.neg (fp.sub RNE x5 x9)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE x23 x0) (fp.sub RNE x11 x22)) (fp.div RNE (fp.mul RNE x22 x19) (fp.add RNE x17 x21))) (fp.sub RNE (fp.sub RNE (fp.div RNE x11 x18) (fp.sub RNE x12 x10)) (fp.add RNE (fp.div RNE x13 x4) (fp.div RNE x0 x24)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE x3 x14)) (fp.add RNE (fp.div RNE x0 x12) (fp.div RNE x5 x15))) (fp.neg (fp.mul RNE (fp.neg x7) (fp.add RNE x13 x5)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.neg x10) (fp.neg x9))) (fp.add RNE (fp.mul RNE (fp.mul RNE x18 x17) (fp.sub RNE x3 x24)) (fp.neg (fp.neg x6)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.sub RNE x8 x10) (fp.sub RNE x24 x12)) (fp.neg (fp.sub RNE x11 x6))) (fp.div RNE (fp.sub RNE (fp.neg x14) (fp.sub RNE x24 x10)) (fp.mul RNE (fp.div RNE x5 x0) (fp.sub RNE x12 x13)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg x11) (fp.mul RNE x23 x13)) (fp.mul RNE (fp.neg x15) (fp.add RNE x20 x15))) (fp.neg (fp.sub RNE (fp.add RNE x19 x22) (fp.mul RNE x11 x19)))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.add RNE x6 x7)) (fp.add RNE (fp.div RNE x9 x20) (fp.sub RNE x13 x21))) (fp.mul RNE (fp.mul RNE (fp.add RNE x8 x24) (fp.add RNE x7 x14)) (fp.mul RNE (fp.neg x20) (fp.add RNE x16 x18)))))
(check-sat)
