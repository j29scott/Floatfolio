(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.add RNE (fp.sub RNE x0 x6) (fp.add RNE x6 x1)) (fp.mul RNE (fp.mul RNE x16 x10) (fp.sub RNE x9 x13))) (fp.mul RNE (fp.neg (fp.add RNE x9 x19)) (fp.mul RNE (fp.sub RNE x6 x9) (fp.div RNE x3 x7)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.neg x15)) (fp.add RNE (fp.neg x12) (fp.mul RNE x0 x16))) (fp.add RNE (fp.div RNE (fp.div RNE x10 x17) (fp.sub RNE x2 x12)) (fp.div RNE (fp.sub RNE x0 x13) (fp.div RNE x13 x3))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.sub RNE x12 x9) (fp.mul RNE x1 x18)) (fp.neg (fp.div RNE x6 x7))) (fp.add RNE (fp.add RNE (fp.sub RNE x11 x15) (fp.div RNE x7 x5)) (fp.sub RNE (fp.neg x5) (fp.div RNE x17 x16)))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.div RNE x15 x0) (fp.div RNE x0 x2)) (fp.add RNE (fp.neg x3) (fp.sub RNE x5 x7))) (fp.add RNE (fp.neg (fp.add RNE x5 x19)) (fp.neg (fp.neg x13))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.neg x14) (fp.mul RNE x1 x5)) (fp.neg (fp.div RNE x12 x8))) (fp.sub RNE (fp.add RNE (fp.mul RNE x12 x14) (fp.add RNE x6 x3)) (fp.add RNE (fp.sub RNE x15 x17) (fp.add RNE x17 x19)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.mul RNE x13 x3) (fp.add RNE x2 x1))) (fp.neg (fp.sub RNE (fp.sub RNE x1 x0) (fp.div RNE x13 x18))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE (fp.add RNE x15 x2) (fp.neg x18))) (fp.add RNE (fp.add RNE (fp.mul RNE x3 x15) (fp.neg x15)) (fp.div RNE (fp.div RNE x12 x9) (fp.neg x15)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x14 x9) (fp.mul RNE x12 x4)) (fp.add RNE (fp.mul RNE x18 x4) (fp.div RNE x1 x1))) (fp.sub RNE (fp.add RNE (fp.add RNE x10 x13) (fp.neg x13)) (fp.neg (fp.add RNE x16 x7))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.div RNE x14 x8) (fp.mul RNE x10 x2)) (fp.sub RNE (fp.mul RNE x4 x4) (fp.mul RNE x7 x16))) (fp.div RNE (fp.add RNE (fp.mul RNE x0 x11) (fp.sub RNE x5 x0)) (fp.neg (fp.sub RNE x6 x7)))) (fp.div RNE (fp.neg (fp.div RNE (fp.div RNE x4 x0) (fp.sub RNE x3 x18))) (fp.div RNE (fp.sub RNE (fp.add RNE x12 x15) (fp.sub RNE x6 x13)) (fp.div RNE (fp.mul RNE x3 x9) (fp.div RNE x7 x17))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE (fp.add RNE x6 x16) (fp.div RNE x17 x2)) (fp.div RNE (fp.div RNE x16 x14) (fp.div RNE x11 x11))) (fp.div RNE (fp.mul RNE (fp.sub RNE x9 x15) (fp.neg x4)) (fp.mul RNE (fp.neg x19) (fp.sub RNE x11 x7)))) (fp.neg (fp.neg (fp.neg (fp.add RNE x3 x3))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x6 x6) (fp.div RNE x5 x13)) (fp.neg (fp.div RNE x1 x4))) (fp.add RNE (fp.div RNE (fp.div RNE x11 x14) (fp.add RNE x9 x7)) (fp.mul RNE (fp.sub RNE x10 x5) (fp.neg x6)))) (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x8 x6) (fp.add RNE x0 x16))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.mul RNE (fp.add RNE x16 x16) (fp.mul RNE x18 x14))) (fp.div RNE (fp.div RNE (fp.div RNE x14 x2) (fp.neg x12)) (fp.add RNE (fp.sub RNE x6 x10) (fp.mul RNE x5 x18)))) (fp.mul RNE (fp.neg (fp.neg (fp.sub RNE x5 x13))) (fp.div RNE (fp.neg (fp.div RNE x2 x7)) (fp.neg (fp.div RNE x12 x4))))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x0) (fp.neg x16)) (fp.add RNE (fp.neg x12) (fp.div RNE x8 x3))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x17 x0) (fp.div RNE x13 x18)) (fp.mul RNE (fp.neg x18) (fp.div RNE x19 x7)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.div RNE x17 x7)) (fp.mul RNE (fp.add RNE x12 x12) (fp.add RNE x6 x10))) (fp.add RNE (fp.sub RNE (fp.mul RNE x14 x11) (fp.mul RNE x8 x16)) (fp.neg (fp.div RNE x8 x8))))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE (fp.add RNE x17 x4) (fp.sub RNE x1 x7))) (fp.add RNE (fp.add RNE (fp.mul RNE x12 x17) (fp.mul RNE x6 x12)) (fp.sub RNE (fp.div RNE x12 x11) (fp.div RNE x17 x2)))) (fp.neg (fp.add RNE (fp.add RNE (fp.neg x11) (fp.add RNE x13 x3)) (fp.add RNE (fp.div RNE x3 x3) (fp.mul RNE x12 x5))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x12) (fp.mul RNE x0 x0)) (fp.add RNE (fp.mul RNE x4 x2) (fp.mul RNE x0 x2))) (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x8) (fp.div RNE x18 x15)) (fp.neg (fp.sub RNE x4 x9)))) (fp.sub RNE (fp.neg (fp.neg (fp.sub RNE x8 x5))) (fp.add RNE (fp.neg (fp.mul RNE x8 x3)) (fp.mul RNE (fp.mul RNE x13 x3) (fp.sub RNE x5 x14))))))
(check-sat)
