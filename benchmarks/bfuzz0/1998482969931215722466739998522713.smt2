(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x1 x2) (fp.mul RNE x5 x7)) (fp.neg (fp.add RNE x6 x7))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x5 x4) (fp.sub RNE x7 x6)) (fp.mul RNE (fp.add RNE x3 x5) (fp.div RNE x7 x0))))
(assert (fp.lt (fp.div RNE (fp.neg x1) (fp.neg x3)) (fp.neg (fp.neg x7))))
(assert (fp.eq (fp.neg (fp.mul RNE x1 x3)) (fp.sub RNE (fp.sub RNE x7 x5) (fp.sub RNE x6 x0))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x4 x0) (fp.neg x5)) (fp.add RNE (fp.neg x0) (fp.sub RNE x1 x7))))
(assert (fp.geq (fp.div RNE (fp.add RNE x2 x5) (fp.mul RNE x3 x5)) (fp.div RNE (fp.mul RNE x6 x3) (fp.mul RNE x3 x4))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x2 x4) (fp.mul RNE x4 x7)) (fp.add RNE (fp.add RNE x6 x6) (fp.mul RNE x1 x2))))
(assert (fp.lt (fp.div RNE (fp.neg x3) (fp.neg x2)) (fp.neg (fp.mul RNE x7 x7))))
(assert (fp.gt (fp.div RNE (fp.div RNE x4 x3) (fp.sub RNE x0 x0)) (fp.add RNE (fp.div RNE x0 x3) (fp.div RNE x6 x4))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x5 x1) (fp.neg x7)) (fp.add RNE (fp.mul RNE x1 x1) (fp.neg x5))))
(check-sat)
