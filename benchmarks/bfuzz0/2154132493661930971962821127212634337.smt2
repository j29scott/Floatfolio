(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE x10 x2) (fp.sub RNE x1 x0)) (fp.neg (fp.add RNE x1 x6))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x9 x7) (fp.neg x12)) (fp.add RNE (fp.div RNE x2 x7) (fp.mul RNE x5 x5))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x2 x2) (fp.sub RNE x12 x2)) (fp.mul RNE (fp.add RNE x5 x11) (fp.sub RNE x4 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x5 x12) (fp.sub RNE x12 x1)) (fp.sub RNE (fp.mul RNE x8 x11) (fp.add RNE x0 x6))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x9 x3) (fp.add RNE x3 x3)) (fp.div RNE (fp.neg x8) (fp.neg x8))))
(assert (fp.gt (fp.div RNE (fp.add RNE x12 x0) (fp.sub RNE x1 x6)) (fp.mul RNE (fp.sub RNE x12 x0) (fp.neg x1))))
(check-sat)
