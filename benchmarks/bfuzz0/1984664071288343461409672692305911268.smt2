(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x3 x5) (fp.div RNE x12 x0)) (fp.mul RNE (fp.neg x1) (fp.add RNE x8 x11))))
(assert (fp.eq (fp.neg (fp.div RNE x2 x10)) (fp.div RNE (fp.div RNE x4 x8) (fp.mul RNE x11 x5))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x2 x0) (fp.neg x8)) (fp.div RNE (fp.sub RNE x12 x12) (fp.mul RNE x12 x8))))
(assert (fp.lt (fp.add RNE (fp.div RNE x9 x1) (fp.neg x0)) (fp.sub RNE (fp.mul RNE x11 x10) (fp.mul RNE x3 x7))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x1 x4) (fp.add RNE x0 x8)) (fp.mul RNE (fp.sub RNE x10 x11) (fp.add RNE x11 x7))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x12) (fp.div RNE x7 x9)) (fp.div RNE (fp.mul RNE x5 x11) (fp.neg x9))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x12 x12) (fp.neg x0)) (fp.sub RNE (fp.div RNE x5 x8) (fp.sub RNE x9 x10))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x1 x1) (fp.neg x10)) (fp.neg (fp.sub RNE x7 x12))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x3 x11) (fp.neg x6)) (fp.add RNE (fp.div RNE x8 x4) (fp.div RNE x8 x5))))
(check-sat)
