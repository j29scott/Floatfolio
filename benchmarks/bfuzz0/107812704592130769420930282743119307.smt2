(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x10 x12) (fp.neg x11)) (fp.mul RNE (fp.add RNE x9 x14) (fp.add RNE x11 x6))) (fp.add RNE (fp.neg (fp.add RNE x13 x10)) (fp.div RNE (fp.div RNE x15 x13) (fp.sub RNE x4 x4)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x5 x2) (fp.neg x4))) (fp.add RNE (fp.sub RNE (fp.mul RNE x11 x8) (fp.sub RNE x13 x6)) (fp.neg (fp.add RNE x1 x1)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.sub RNE x12 x13) (fp.add RNE x15 x12))) (fp.neg (fp.add RNE (fp.div RNE x0 x8) (fp.add RNE x11 x8)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.add RNE x2 x5) (fp.sub RNE x7 x8)) (fp.mul RNE (fp.sub RNE x6 x15) (fp.mul RNE x3 x11))) (fp.neg (fp.neg (fp.neg x7)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.neg x12) (fp.neg x5)) (fp.add RNE (fp.sub RNE x6 x9) (fp.div RNE x14 x11))) (fp.div RNE (fp.add RNE (fp.div RNE x4 x12) (fp.mul RNE x9 x6)) (fp.sub RNE (fp.add RNE x13 x13) (fp.add RNE x6 x14)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.add RNE x1 x6) (fp.sub RNE x8 x5)) (fp.sub RNE (fp.neg x9) (fp.neg x9))) (fp.add RNE (fp.mul RNE (fp.sub RNE x13 x2) (fp.mul RNE x14 x3)) (fp.neg (fp.mul RNE x3 x13)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.add RNE x9 x7) (fp.neg x8)) (fp.mul RNE (fp.neg x1) (fp.div RNE x8 x15))) (fp.add RNE (fp.div RNE (fp.sub RNE x0 x10) (fp.mul RNE x6 x3)) (fp.mul RNE (fp.div RNE x12 x15) (fp.sub RNE x8 x13)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x15 x13) (fp.div RNE x8 x0)) (fp.add RNE (fp.div RNE x14 x6) (fp.div RNE x10 x4))) (fp.div RNE (fp.neg (fp.add RNE x15 x7)) (fp.neg (fp.sub RNE x5 x6)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE x7 x7) (fp.mul RNE x5 x1)) (fp.mul RNE (fp.neg x12) (fp.div RNE x0 x2))) (fp.div RNE (fp.sub RNE (fp.neg x10) (fp.neg x9)) (fp.div RNE (fp.add RNE x11 x8) (fp.add RNE x6 x14)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x5) (fp.div RNE x11 x10)) (fp.neg (fp.div RNE x2 x6))) (fp.add RNE (fp.add RNE (fp.mul RNE x9 x4) (fp.add RNE x3 x0)) (fp.neg (fp.sub RNE x5 x7)))))
(assert (fp.eq (fp.neg (fp.neg (fp.div RNE x8 x8))) (fp.add RNE (fp.sub RNE (fp.add RNE x6 x12) (fp.sub RNE x9 x3)) (fp.add RNE (fp.mul RNE x5 x0) (fp.sub RNE x4 x12)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.add RNE x5 x1)) (fp.mul RNE (fp.sub RNE x3 x4) (fp.neg x11))) (fp.div RNE (fp.sub RNE (fp.div RNE x7 x13) (fp.div RNE x15 x0)) (fp.mul RNE (fp.neg x5) (fp.mul RNE x11 x11)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x6) (fp.neg x6)) (fp.sub RNE (fp.add RNE x9 x0) (fp.add RNE x11 x9))) (fp.mul RNE (fp.sub RNE (fp.div RNE x11 x9) (fp.sub RNE x5 x3)) (fp.mul RNE (fp.sub RNE x9 x6) (fp.mul RNE x2 x8)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.sub RNE x7 x7) (fp.mul RNE x9 x11))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x13 x13) (fp.div RNE x7 x0)) (fp.sub RNE (fp.sub RNE x7 x15) (fp.sub RNE x7 x13)))))
(assert (fp.gt (fp.neg (fp.neg (fp.sub RNE x5 x1))) (fp.mul RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x3 x10)) (fp.div RNE (fp.div RNE x5 x4) (fp.div RNE x6 x9)))))
(assert (fp.gt (fp.neg (fp.neg (fp.add RNE x10 x5))) (fp.div RNE (fp.mul RNE (fp.neg x1) (fp.sub RNE x2 x11)) (fp.add RNE (fp.div RNE x0 x2) (fp.sub RNE x15 x13)))))
(check-sat)
