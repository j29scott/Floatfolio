(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE x1 x7) (fp.sub RNE x3 x4)))
(assert (fp.lt (fp.mul RNE x7 x3) (fp.sub RNE x2 x7)))
(assert (fp.lt (fp.sub RNE x0 x2) (fp.sub RNE x7 x0)))
(assert (fp.leq (fp.div RNE x6 x6) (fp.add RNE x5 x2)))
(assert (fp.eq (fp.sub RNE x2 x6) (fp.add RNE x3 x3)))
(assert (fp.geq (fp.add RNE x5 x0) (fp.add RNE x0 x6)))
(assert (fp.eq (fp.sub RNE x8 x5) (fp.add RNE x8 x6)))
(assert (fp.lt (fp.sub RNE x0 x4) (fp.sub RNE x8 x6)))
(assert (fp.geq (fp.add RNE x8 x0) (fp.div RNE x6 x6)))
(assert (fp.lt (fp.sub RNE x5 x7) (fp.neg x2)))
(assert (fp.geq (fp.mul RNE x0 x6) (fp.neg x6)))
(assert (fp.leq (fp.sub RNE x8 x2) (fp.mul RNE x2 x5)))
(assert (fp.lt (fp.mul RNE x3 x4) (fp.neg x4)))
(check-sat)
