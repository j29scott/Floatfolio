(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE x11 x8) (fp.sub RNE x20 x12)) (fp.add RNE (fp.neg x6) (fp.sub RNE x3 x15))) (fp.sub RNE (fp.add RNE (fp.neg x5) (fp.mul RNE x3 x13)) (fp.mul RNE (fp.add RNE x12 x11) (fp.div RNE x18 x14)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg x18) (fp.sub RNE x11 x12)) (fp.neg (fp.div RNE x7 x14))) (fp.sub RNE (fp.div RNE (fp.div RNE x12 x15) (fp.mul RNE x13 x11)) (fp.mul RNE (fp.neg x14) (fp.mul RNE x18 x18)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.mul RNE x1 x8) (fp.neg x9)) (fp.div RNE (fp.div RNE x4 x5) (fp.div RNE x9 x17))) (fp.mul RNE (fp.neg (fp.div RNE x9 x21)) (fp.div RNE (fp.div RNE x8 x14) (fp.sub RNE x0 x20)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE x17 x7) (fp.neg x1))) (fp.add RNE (fp.neg (fp.div RNE x5 x11)) (fp.mul RNE (fp.sub RNE x18 x17) (fp.add RNE x5 x18)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x11 x15) (fp.sub RNE x1 x10)) (fp.div RNE (fp.add RNE x17 x0) (fp.mul RNE x11 x1))) (fp.neg (fp.neg (fp.neg x8)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.add RNE x13 x6) (fp.neg x5))) (fp.mul RNE (fp.mul RNE (fp.add RNE x13 x8) (fp.div RNE x18 x5)) (fp.mul RNE (fp.add RNE x9 x1) (fp.neg x19)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.div RNE x14 x1) (fp.mul RNE x7 x15)) (fp.div RNE (fp.neg x20) (fp.div RNE x5 x13))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x0 x5) (fp.mul RNE x21 x3)) (fp.sub RNE (fp.mul RNE x5 x15) (fp.sub RNE x19 x11)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.mul RNE x5 x21) (fp.neg x18)) (fp.div RNE (fp.neg x19) (fp.div RNE x18 x17))) (fp.div RNE (fp.add RNE (fp.div RNE x5 x10) (fp.mul RNE x19 x19)) (fp.mul RNE (fp.neg x20) (fp.div RNE x4 x2)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE x7 x15) (fp.div RNE x10 x19)) (fp.mul RNE (fp.sub RNE x14 x5) (fp.sub RNE x11 x1))) (fp.div RNE (fp.neg (fp.mul RNE x12 x15)) (fp.div RNE (fp.add RNE x11 x2) (fp.add RNE x5 x12)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE x3 x18) (fp.mul RNE x20 x18)) (fp.div RNE (fp.div RNE x12 x8) (fp.mul RNE x8 x21))) (fp.div RNE (fp.div RNE (fp.mul RNE x0 x9) (fp.add RNE x16 x0)) (fp.neg (fp.neg x0)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.div RNE x12 x13) (fp.sub RNE x16 x14)) (fp.add RNE (fp.neg x14) (fp.mul RNE x6 x9))) (fp.neg (fp.neg (fp.mul RNE x4 x0)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE x21 x9) (fp.sub RNE x8 x19)) (fp.add RNE (fp.mul RNE x17 x20) (fp.neg x0))) (fp.neg (fp.div RNE (fp.sub RNE x16 x1) (fp.neg x14)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x12 x2) (fp.div RNE x19 x10)) (fp.sub RNE (fp.add RNE x0 x5) (fp.mul RNE x9 x20))) (fp.neg (fp.div RNE (fp.mul RNE x1 x0) (fp.sub RNE x8 x15)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE x16 x8) (fp.mul RNE x8 x20)) (fp.neg (fp.div RNE x9 x8))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x0 x16) (fp.sub RNE x2 x17)) (fp.neg (fp.div RNE x5 x0)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.sub RNE x13 x6) (fp.add RNE x1 x5)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x21 x7))) (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x17) (fp.neg x1)) (fp.div RNE (fp.sub RNE x20 x16) (fp.sub RNE x16 x5)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x13 x15)) (fp.sub RNE (fp.add RNE x3 x8) (fp.neg x0))) (fp.neg (fp.div RNE (fp.sub RNE x15 x20) (fp.add RNE x5 x4)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.sub RNE x5 x2)) (fp.sub RNE (fp.mul RNE x13 x21) (fp.sub RNE x11 x16))) (fp.neg (fp.sub RNE (fp.sub RNE x17 x4) (fp.mul RNE x4 x0)))))
(check-sat)
