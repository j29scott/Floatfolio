(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.mul RNE x5 x20) (fp.neg x17))) (fp.neg (fp.div RNE (fp.neg x16) (fp.mul RNE x10 x20)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.neg x0) (fp.sub RNE x2 x17)) (fp.div RNE (fp.neg x15) (fp.add RNE x1 x0))) (fp.sub RNE (fp.mul RNE (fp.neg x12) (fp.add RNE x12 x11)) (fp.add RNE (fp.mul RNE x15 x3) (fp.mul RNE x6 x11)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.add RNE x2 x1) (fp.add RNE x0 x5)) (fp.div RNE (fp.mul RNE x8 x14) (fp.sub RNE x3 x14))) (fp.add RNE (fp.div RNE (fp.add RNE x19 x11) (fp.div RNE x11 x12)) (fp.add RNE (fp.sub RNE x21 x20) (fp.mul RNE x1 x10)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x11 x7) (fp.sub RNE x17 x14)) (fp.add RNE (fp.sub RNE x6 x20) (fp.div RNE x14 x3))) (fp.mul RNE (fp.sub RNE (fp.add RNE x0 x12) (fp.div RNE x20 x0)) (fp.neg (fp.sub RNE x7 x6)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE x13 x10) (fp.sub RNE x4 x1)) (fp.div RNE (fp.mul RNE x19 x6) (fp.div RNE x17 x15))) (fp.div RNE (fp.div RNE (fp.add RNE x10 x7) (fp.add RNE x13 x15)) (fp.neg (fp.mul RNE x19 x1)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE x5 x3) (fp.div RNE x2 x15)) (fp.sub RNE (fp.neg x19) (fp.sub RNE x18 x19))) (fp.add RNE (fp.sub RNE (fp.mul RNE x14 x15) (fp.div RNE x10 x19)) (fp.neg (fp.mul RNE x7 x13)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.sub RNE x11 x3) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x21 x3) (fp.sub RNE x18 x4))) (fp.div RNE (fp.add RNE (fp.sub RNE x7 x5) (fp.neg x15)) (fp.mul RNE (fp.neg x13) (fp.neg x15)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE x0 x12) (fp.sub RNE x5 x8)) (fp.add RNE (fp.neg x3) (fp.div RNE x17 x13))) (fp.mul RNE (fp.div RNE (fp.div RNE x8 x3) (fp.div RNE x14 x9)) (fp.neg (fp.mul RNE x13 x21)))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.sub RNE x13 x18) (fp.div RNE x18 x14)) (fp.sub RNE (fp.div RNE x15 x9) (fp.neg x8))) (fp.div RNE (fp.sub RNE (fp.div RNE x7 x10) (fp.neg x12)) (fp.div RNE (fp.add RNE x11 x6) (fp.div RNE x21 x5)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.neg x6) (fp.div RNE x14 x5))) (fp.add RNE (fp.add RNE (fp.add RNE x7 x2) (fp.sub RNE x7 x9)) (fp.neg (fp.div RNE x1 x20)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE x16 x20) (fp.neg x15))) (fp.neg (fp.add RNE (fp.neg x18) (fp.mul RNE x14 x18)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x2 x18) (fp.neg x3)) (fp.mul RNE (fp.add RNE x15 x3) (fp.sub RNE x7 x16))) (fp.sub RNE (fp.add RNE (fp.add RNE x8 x11) (fp.add RNE x4 x16)) (fp.div RNE (fp.neg x2) (fp.add RNE x19 x9)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.sub RNE x15 x7)) (fp.mul RNE (fp.sub RNE x21 x17) (fp.mul RNE x11 x21))) (fp.mul RNE (fp.mul RNE (fp.neg x21) (fp.neg x11)) (fp.add RNE (fp.sub RNE x17 x16) (fp.mul RNE x3 x8)))))
(check-sat)
