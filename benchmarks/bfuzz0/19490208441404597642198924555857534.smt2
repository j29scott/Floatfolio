(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.neg x20) (fp.mul RNE x4 x0)) (fp.add RNE (fp.neg x1) (fp.neg x12))) (fp.div RNE (fp.div RNE (fp.neg x4) (fp.div RNE x8 x22)) (fp.add RNE (fp.mul RNE x0 x5) (fp.div RNE x12 x2)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x18 x2)) (fp.mul RNE (fp.neg x5) (fp.neg x10))) (fp.mul RNE (fp.neg (fp.sub RNE x5 x19)) (fp.mul RNE (fp.neg x7) (fp.sub RNE x18 x4)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.add RNE x19 x23)) (fp.sub RNE (fp.mul RNE x5 x7) (fp.sub RNE x5 x8))) (fp.add RNE (fp.add RNE (fp.mul RNE x20 x1) (fp.neg x21)) (fp.sub RNE (fp.mul RNE x17 x11) (fp.add RNE x6 x14)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x20 x20) (fp.mul RNE x20 x2)) (fp.neg (fp.sub RNE x11 x19))) (fp.sub RNE (fp.add RNE (fp.sub RNE x19 x23) (fp.div RNE x1 x8)) (fp.mul RNE (fp.sub RNE x19 x16) (fp.div RNE x7 x15)))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.mul RNE x11 x11) (fp.add RNE x10 x10)) (fp.mul RNE (fp.mul RNE x12 x6) (fp.add RNE x13 x3))) (fp.div RNE (fp.neg (fp.mul RNE x6 x17)) (fp.add RNE (fp.div RNE x8 x11) (fp.mul RNE x11 x11)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x3 x20)) (fp.neg (fp.div RNE x9 x21))) (fp.add RNE (fp.mul RNE (fp.mul RNE x1 x5) (fp.sub RNE x10 x2)) (fp.mul RNE (fp.add RNE x17 x6) (fp.div RNE x19 x2)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x1 x22) (fp.mul RNE x16 x5)) (fp.div RNE (fp.mul RNE x1 x7) (fp.mul RNE x15 x18))) (fp.add RNE (fp.add RNE (fp.add RNE x18 x18) (fp.add RNE x18 x20)) (fp.neg (fp.add RNE x16 x17)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x22 x18) (fp.add RNE x2 x23))) (fp.sub RNE (fp.mul RNE (fp.div RNE x21 x3) (fp.add RNE x15 x7)) (fp.add RNE (fp.neg x16) (fp.div RNE x13 x12)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE x22 x20) (fp.add RNE x20 x9))) (fp.neg (fp.add RNE (fp.sub RNE x9 x17) (fp.div RNE x10 x2)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.mul RNE x22 x16)) (fp.mul RNE (fp.sub RNE x21 x4) (fp.add RNE x22 x10))) (fp.add RNE (fp.div RNE (fp.sub RNE x20 x14) (fp.add RNE x3 x3)) (fp.mul RNE (fp.add RNE x10 x11) (fp.mul RNE x3 x4)))))
(check-sat)
