(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x2 x6) (fp.mul RNE x0 x14)) (fp.div RNE (fp.add RNE x15 x3) (fp.add RNE x8 x1))) (fp.add RNE (fp.sub RNE (fp.sub RNE x17 x1) (fp.neg x2)) (fp.neg (fp.mul RNE x2 x7)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x5) (fp.mul RNE x16 x9)) (fp.mul RNE (fp.sub RNE x3 x8) (fp.neg x15))) (fp.neg (fp.sub RNE (fp.mul RNE x7 x15) (fp.neg x0)))))
(check-sat)
