(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.add RNE x11 x12) (fp.sub RNE x20 x15)) (fp.sub RNE (fp.div RNE x19 x6) (fp.mul RNE x18 x2))))
(assert (fp.gt (fp.neg (fp.mul RNE x8 x13)) (fp.neg (fp.mul RNE x9 x10))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x19 x10) (fp.sub RNE x4 x13)) (fp.mul RNE (fp.div RNE x14 x15) (fp.add RNE x6 x7))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x16 x8) (fp.neg x22)) (fp.div RNE (fp.mul RNE x9 x1) (fp.div RNE x17 x15))))
(assert (fp.lt (fp.neg (fp.add RNE x20 x14)) (fp.div RNE (fp.sub RNE x6 x14) (fp.div RNE x1 x1))))
(assert (fp.geq (fp.div RNE (fp.neg x14) (fp.add RNE x17 x8)) (fp.div RNE (fp.neg x8) (fp.div RNE x7 x12))))
(assert (fp.lt (fp.div RNE (fp.div RNE x18 x5) (fp.sub RNE x18 x10)) (fp.add RNE (fp.add RNE x20 x18) (fp.mul RNE x0 x7))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x12 x16) (fp.sub RNE x4 x11)) (fp.mul RNE (fp.neg x20) (fp.div RNE x5 x3))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x20 x1) (fp.sub RNE x3 x13)) (fp.mul RNE (fp.mul RNE x1 x14) (fp.mul RNE x2 x19))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x9 x18) (fp.neg x19)) (fp.neg (fp.neg x11))))
(assert (fp.geq (fp.sub RNE (fp.neg x19) (fp.sub RNE x19 x13)) (fp.add RNE (fp.neg x20) (fp.mul RNE x4 x7))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x15 x0) (fp.div RNE x4 x20)) (fp.mul RNE (fp.mul RNE x3 x10) (fp.add RNE x7 x20))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x6 x12) (fp.mul RNE x17 x1)) (fp.mul RNE (fp.mul RNE x20 x9) (fp.neg x21))))
(assert (fp.gt (fp.neg (fp.add RNE x3 x0)) (fp.neg (fp.neg x15))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x0 x9) (fp.mul RNE x18 x1)) (fp.sub RNE (fp.sub RNE x1 x21) (fp.mul RNE x22 x20))))
(assert (fp.leq (fp.add RNE (fp.div RNE x3 x5) (fp.mul RNE x21 x22)) (fp.sub RNE (fp.add RNE x14 x9) (fp.sub RNE x16 x5))))
(assert (fp.leq (fp.sub RNE (fp.neg x13) (fp.div RNE x0 x8)) (fp.add RNE (fp.add RNE x2 x14) (fp.sub RNE x18 x17))))
(assert (fp.gt (fp.add RNE (fp.div RNE x7 x6) (fp.add RNE x6 x20)) (fp.mul RNE (fp.add RNE x3 x19) (fp.div RNE x12 x6))))
(assert (fp.leq (fp.neg (fp.mul RNE x1 x5)) (fp.mul RNE (fp.sub RNE x10 x22) (fp.div RNE x3 x1))))
(check-sat)
