(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.neg (fp.sub RNE (fp.sub RNE x24 x19) (fp.mul RNE x11 x22))) (fp.sub RNE (fp.neg (fp.sub RNE x15 x14)) (fp.add RNE (fp.sub RNE x23 x5) (fp.sub RNE x14 x4)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.neg x10) (fp.div RNE x12 x4)) (fp.sub RNE (fp.neg x16) (fp.sub RNE x2 x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x20 x6) (fp.mul RNE x2 x17)) (fp.mul RNE (fp.add RNE x17 x19) (fp.add RNE x16 x7))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.neg (fp.mul RNE x12 x12)) (fp.add RNE (fp.div RNE x10 x0) (fp.mul RNE x10 x4))) (fp.div RNE (fp.neg (fp.neg x11)) (fp.sub RNE (fp.mul RNE x3 x19) (fp.neg x16)))) (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x7 x3) (fp.add RNE x16 x0)) (fp.add RNE (fp.add RNE x14 x2) (fp.neg x15))) (fp.neg (fp.div RNE (fp.neg x24) (fp.mul RNE x11 x12))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.add RNE (fp.add RNE x8 x12) (fp.sub RNE x23 x20)) (fp.div RNE (fp.add RNE x23 x20) (fp.sub RNE x7 x1))) (fp.sub RNE (fp.div RNE (fp.sub RNE x22 x6) (fp.sub RNE x24 x24)) (fp.mul RNE (fp.sub RNE x23 x10) (fp.sub RNE x1 x8)))) (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x11 x22)) (fp.neg (fp.neg x5))) (fp.sub RNE (fp.mul RNE (fp.neg x2) (fp.add RNE x13 x4)) (fp.sub RNE (fp.add RNE x3 x16) (fp.add RNE x16 x1))))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg (fp.sub RNE x19 x6)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.sub RNE x23 x14) (fp.mul RNE x11 x24)) (fp.mul RNE (fp.neg x12) (fp.add RNE x21 x20))) (fp.neg (fp.add RNE (fp.neg x24) (fp.mul RNE x2 x21))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x7 x13) (fp.sub RNE x15 x0)) (fp.div RNE (fp.div RNE x15 x17) (fp.div RNE x10 x0))) (fp.mul RNE (fp.sub RNE (fp.div RNE x4 x10) (fp.sub RNE x23 x5)) (fp.mul RNE (fp.add RNE x22 x2) (fp.sub RNE x3 x3)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.neg x8) (fp.add RNE x9 x9)) (fp.neg (fp.neg x10))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x23 x8) (fp.div RNE x11 x19)) (fp.add RNE (fp.neg x0) (fp.mul RNE x14 x21))) (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x21) (fp.div RNE x11 x6)) (fp.sub RNE (fp.div RNE x16 x8) (fp.add RNE x17 x20)))) (fp.add RNE (fp.neg (fp.div RNE (fp.add RNE x20 x8) (fp.sub RNE x23 x4))) (fp.sub RNE (fp.mul RNE (fp.neg x21) (fp.mul RNE x7 x24)) (fp.mul RNE (fp.neg x18) (fp.sub RNE x0 x22))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg (fp.mul RNE x9 x0)) (fp.neg (fp.div RNE x9 x14)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.div RNE x6 x16)) (fp.div RNE (fp.add RNE x8 x20) (fp.sub RNE x2 x14))) (fp.add RNE (fp.div RNE (fp.add RNE x7 x12) (fp.neg x2)) (fp.div RNE (fp.sub RNE x17 x16) (fp.div RNE x12 x0))))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg (fp.sub RNE x14 x4)) (fp.div RNE (fp.neg x24) (fp.mul RNE x11 x11))) (fp.add RNE (fp.add RNE (fp.sub RNE x1 x13) (fp.div RNE x18 x24)) (fp.add RNE (fp.div RNE x19 x10) (fp.div RNE x1 x16)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.add RNE x15 x11) (fp.div RNE x23 x17)) (fp.div RNE (fp.neg x7) (fp.sub RNE x15 x12))) (fp.neg (fp.mul RNE (fp.mul RNE x6 x6) (fp.neg x3))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.neg x21) (fp.div RNE x13 x9)) (fp.add RNE (fp.div RNE x8 x6) (fp.div RNE x8 x6))) (fp.div RNE (fp.neg (fp.sub RNE x4 x17)) (fp.add RNE (fp.mul RNE x2 x9) (fp.sub RNE x16 x15)))) (fp.add RNE (fp.neg (fp.neg (fp.neg x11))) (fp.neg (fp.neg (fp.add RNE x18 x22))))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x17 x10) (fp.sub RNE x7 x18)) (fp.sub RNE (fp.mul RNE x15 x2) (fp.mul RNE x16 x17))) (fp.sub RNE (fp.add RNE (fp.sub RNE x3 x18) (fp.mul RNE x24 x10)) (fp.mul RNE (fp.sub RNE x5 x20) (fp.mul RNE x0 x2)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.neg x8) (fp.mul RNE x4 x23))) (fp.mul RNE (fp.div RNE (fp.add RNE x15 x24) (fp.div RNE x2 x14)) (fp.add RNE (fp.sub RNE x10 x20) (fp.add RNE x20 x9))))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.neg (fp.neg x21)) (fp.mul RNE (fp.sub RNE x24 x19) (fp.neg x10)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.neg x7) (fp.div RNE x4 x17))) (fp.add RNE (fp.div RNE (fp.sub RNE x21 x6) (fp.neg x10)) (fp.add RNE (fp.sub RNE x22 x10) (fp.add RNE x10 x4))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x2 x17) (fp.mul RNE x5 x23)) (fp.div RNE (fp.neg x21) (fp.neg x22))) (fp.div RNE (fp.neg (fp.add RNE x10 x10)) (fp.neg (fp.div RNE x13 x22)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.neg x17) (fp.neg x3)) (fp.sub RNE (fp.neg x24) (fp.div RNE x6 x15))) (fp.div RNE (fp.div RNE (fp.div RNE x12 x22) (fp.add RNE x1 x24)) (fp.sub RNE (fp.div RNE x0 x10) (fp.add RNE x19 x6))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x19) (fp.div RNE x2 x4)) (fp.mul RNE (fp.sub RNE x3 x20) (fp.mul RNE x17 x23))) (fp.div RNE (fp.mul RNE (fp.add RNE x5 x16) (fp.add RNE x17 x22)) (fp.div RNE (fp.sub RNE x8 x11) (fp.sub RNE x23 x18)))) (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x4 x15) (fp.add RNE x1 x8)) (fp.mul RNE (fp.sub RNE x24 x21) (fp.neg x19))) (fp.div RNE (fp.mul RNE (fp.neg x12) (fp.mul RNE x17 x11)) (fp.neg (fp.mul RNE x5 x18))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.add RNE x17 x5) (fp.sub RNE x11 x13)) (fp.mul RNE (fp.div RNE x22 x2) (fp.add RNE x18 x6))) (fp.div RNE (fp.add RNE (fp.div RNE x0 x8) (fp.add RNE x15 x14)) (fp.sub RNE (fp.add RNE x2 x0) (fp.sub RNE x3 x8)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.neg x13)) (fp.mul RNE (fp.sub RNE x18 x17) (fp.neg x7))) (fp.mul RNE (fp.add RNE (fp.div RNE x8 x23) (fp.sub RNE x12 x23)) (fp.neg (fp.add RNE x22 x23))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.add RNE x12 x7)) (fp.mul RNE (fp.mul RNE x2 x16) (fp.div RNE x0 x17))) (fp.div RNE (fp.add RNE (fp.neg x12) (fp.neg x0)) (fp.sub RNE (fp.add RNE x22 x16) (fp.mul RNE x3 x1)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x2 x21)) (fp.sub RNE (fp.sub RNE x4 x4) (fp.div RNE x7 x15))) (fp.add RNE (fp.sub RNE (fp.div RNE x22 x21) (fp.mul RNE x5 x5)) (fp.mul RNE (fp.add RNE x24 x17) (fp.neg x16))))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x17 x16)) (fp.neg (fp.neg x18)))) (fp.neg (fp.div RNE (fp.neg (fp.mul RNE x18 x1)) (fp.mul RNE (fp.add RNE x19 x8) (fp.neg x6))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x6 x18) (fp.div RNE x3 x10)) (fp.mul RNE (fp.add RNE x6 x3) (fp.mul RNE x1 x12))) (fp.neg (fp.sub RNE (fp.neg x2) (fp.div RNE x22 x11)))) (fp.add RNE (fp.add RNE (fp.div RNE (fp.add RNE x6 x18) (fp.div RNE x18 x0)) (fp.sub RNE (fp.neg x4) (fp.neg x21))) (fp.add RNE (fp.neg (fp.mul RNE x9 x9)) (fp.div RNE (fp.neg x21) (fp.sub RNE x23 x6))))))
(check-sat)
