(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x0 x0) (fp.add RNE x0 x4)) (fp.div RNE (fp.add RNE x4 x4) (fp.neg x2))) (fp.div RNE (fp.div RNE (fp.mul RNE x2 x0) (fp.add RNE x3 x5)) (fp.mul RNE (fp.mul RNE x4 x1) (fp.div RNE x4 x6)))) (fp.add RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x2 x5) (fp.mul RNE x1 x4)) (fp.add RNE (fp.sub RNE x0 x6) (fp.neg x5))) (fp.add RNE (fp.neg (fp.neg x3)) (fp.mul RNE (fp.mul RNE x0 x1) (fp.neg x1))))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.neg (fp.sub RNE x3 x2))) (fp.add RNE (fp.neg (fp.mul RNE x6 x6)) (fp.neg (fp.neg x0)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.add RNE x3 x0) (fp.neg x3)) (fp.add RNE (fp.div RNE x1 x5) (fp.neg x2))) (fp.div RNE (fp.div RNE (fp.div RNE x2 x6) (fp.div RNE x1 x6)) (fp.add RNE (fp.mul RNE x4 x0) (fp.div RNE x6 x6))))))
(check-sat)
