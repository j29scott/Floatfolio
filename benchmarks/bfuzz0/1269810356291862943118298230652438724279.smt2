(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.div RNE (fp.neg x6) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x0 x2) (fp.div RNE x4 x11))) (fp.add RNE (fp.sub RNE (fp.mul RNE x13 x8) (fp.add RNE x12 x5)) (fp.mul RNE (fp.mul RNE x8 x5) (fp.add RNE x15 x6)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.add RNE x7 x11) (fp.sub RNE x4 x6)) (fp.mul RNE (fp.neg x14) (fp.div RNE x10 x13))) (fp.neg (fp.sub RNE (fp.mul RNE x13 x6) (fp.neg x0))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.neg (fp.sub RNE x15 x0))) (fp.add RNE (fp.mul RNE (fp.mul RNE x7 x8) (fp.add RNE x11 x12)) (fp.add RNE (fp.sub RNE x15 x15) (fp.mul RNE x3 x11)))) (fp.neg (fp.neg (fp.mul RNE (fp.neg x7) (fp.div RNE x12 x10))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.div RNE x12 x4) (fp.div RNE x5 x0)) (fp.sub RNE (fp.neg x3) (fp.div RNE x6 x6))) (fp.add RNE (fp.mul RNE (fp.div RNE x4 x12) (fp.neg x6)) (fp.mul RNE (fp.add RNE x11 x9) (fp.add RNE x15 x14)))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.mul RNE x3 x12) (fp.sub RNE x7 x2)) (fp.mul RNE (fp.add RNE x3 x15) (fp.neg x9))) (fp.neg (fp.mul RNE (fp.add RNE x8 x7) (fp.sub RNE x2 x12))))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.neg (fp.neg x6))) (fp.neg (fp.sub RNE (fp.add RNE x14 x6) (fp.mul RNE x12 x13)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x5 x9) (fp.mul RNE x9 x1)) (fp.div RNE (fp.add RNE x15 x5) (fp.add RNE x8 x14))) (fp.add RNE (fp.div RNE (fp.mul RNE x2 x6) (fp.mul RNE x9 x3)) (fp.div RNE (fp.sub RNE x7 x9) (fp.neg x1))))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.div RNE (fp.sub RNE x3 x10) (fp.mul RNE x6 x3)) (fp.add RNE (fp.div RNE x7 x5) (fp.mul RNE x10 x7))) (fp.sub RNE (fp.add RNE (fp.mul RNE x0 x15) (fp.div RNE x2 x3)) (fp.add RNE (fp.mul RNE x15 x4) (fp.mul RNE x14 x10)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.add RNE x7 x5) (fp.add RNE x13 x5)) (fp.neg (fp.mul RNE x2 x2))) (fp.neg (fp.mul RNE (fp.add RNE x2 x5) (fp.neg x6))))))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE (fp.div RNE x3 x6) (fp.neg x7)) (fp.neg (fp.sub RNE x4 x4))) (fp.neg (fp.add RNE (fp.add RNE x6 x0) (fp.add RNE x6 x3)))) (fp.add RNE (fp.div RNE (fp.mul RNE (fp.neg x11) (fp.sub RNE x12 x7)) (fp.mul RNE (fp.add RNE x2 x10) (fp.add RNE x10 x4))) (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.add RNE x0 x13)) (fp.sub RNE (fp.div RNE x12 x11) (fp.mul RNE x3 x8))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg (fp.sub RNE x2 x10)) (fp.sub RNE (fp.sub RNE x11 x3) (fp.mul RNE x0 x8))) (fp.div RNE (fp.div RNE (fp.neg x11) (fp.mul RNE x8 x4)) (fp.div RNE (fp.neg x6) (fp.div RNE x11 x0)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.add RNE x15 x9) (fp.add RNE x13 x11)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x14 x9))) (fp.neg (fp.mul RNE (fp.add RNE x9 x6) (fp.div RNE x0 x10))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x12) (fp.add RNE x8 x7)) (fp.sub RNE (fp.div RNE x10 x9) (fp.add RNE x14 x1))) (fp.sub RNE (fp.neg (fp.div RNE x15 x3)) (fp.neg (fp.add RNE x0 x4)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.add RNE x11 x11) (fp.mul RNE x13 x10)) (fp.mul RNE (fp.sub RNE x12 x14) (fp.mul RNE x9 x1))) (fp.sub RNE (fp.neg (fp.mul RNE x15 x14)) (fp.sub RNE (fp.mul RNE x4 x13) (fp.add RNE x8 x11))))))
(check-sat)
