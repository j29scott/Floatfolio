(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.div RNE x10 x8) (fp.sub RNE x1 x8)) (fp.neg (fp.add RNE x1 x6))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x4 x3) (fp.sub RNE x3 x14)) (fp.add RNE (fp.mul RNE x5 x4) (fp.add RNE x9 x12))))
(assert (fp.lt (fp.neg (fp.neg x2)) (fp.mul RNE (fp.div RNE x7 x2) (fp.sub RNE x13 x3))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x13 x11) (fp.neg x0)) (fp.sub RNE (fp.sub RNE x0 x14) (fp.neg x14))))
(assert (fp.gt (fp.neg (fp.add RNE x11 x11)) (fp.neg (fp.mul RNE x0 x12))))
(assert (fp.geq (fp.mul RNE (fp.neg x10) (fp.div RNE x8 x10)) (fp.div RNE (fp.sub RNE x9 x3) (fp.mul RNE x7 x6))))
(assert (fp.lt (fp.neg (fp.neg x9)) (fp.mul RNE (fp.mul RNE x5 x0) (fp.div RNE x5 x11))))
(assert (fp.geq (fp.div RNE (fp.div RNE x7 x4) (fp.sub RNE x7 x13)) (fp.mul RNE (fp.add RNE x3 x2) (fp.add RNE x13 x14))))
(assert (fp.lt (fp.neg (fp.sub RNE x4 x5)) (fp.add RNE (fp.add RNE x11 x5) (fp.sub RNE x11 x14))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x14 x10) (fp.add RNE x3 x2)) (fp.add RNE (fp.mul RNE x3 x0) (fp.div RNE x9 x13))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x0 x0) (fp.neg x7)) (fp.mul RNE (fp.add RNE x4 x8) (fp.sub RNE x11 x12))))
(assert (fp.gt (fp.add RNE (fp.add RNE x12 x4) (fp.add RNE x14 x0)) (fp.neg (fp.add RNE x5 x3))))
(assert (fp.gt (fp.div RNE (fp.div RNE x3 x13) (fp.div RNE x4 x3)) (fp.add RNE (fp.add RNE x5 x0) (fp.mul RNE x10 x13))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x7) (fp.sub RNE x4 x5)) (fp.sub RNE (fp.mul RNE x0 x1) (fp.mul RNE x4 x11))))
(assert (fp.eq (fp.sub RNE (fp.neg x12) (fp.neg x3)) (fp.add RNE (fp.div RNE x8 x8) (fp.mul RNE x10 x10))))
(assert (fp.gt (fp.sub RNE (fp.neg x9) (fp.neg x12)) (fp.neg (fp.add RNE x12 x7))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x3 x5) (fp.sub RNE x14 x7)) (fp.neg (fp.mul RNE x14 x11))))
(check-sat)
