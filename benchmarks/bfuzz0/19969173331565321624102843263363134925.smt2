(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x0 x12) (fp.sub RNE x9 x11)) (fp.add RNE (fp.sub RNE x9 x5) (fp.add RNE x0 x2))))
(assert (fp.gt (fp.neg (fp.add RNE x5 x8)) (fp.add RNE (fp.mul RNE x6 x8) (fp.neg x1))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x11 x1) (fp.neg x7)) (fp.add RNE (fp.mul RNE x4 x11) (fp.neg x1))))
(assert (fp.geq (fp.div RNE (fp.add RNE x5 x10) (fp.sub RNE x0 x2)) (fp.div RNE (fp.neg x5) (fp.sub RNE x9 x0))))
(assert (fp.lt (fp.add RNE (fp.add RNE x9 x11) (fp.add RNE x3 x7)) (fp.neg (fp.div RNE x12 x3))))
(assert (fp.gt (fp.sub RNE (fp.neg x6) (fp.sub RNE x9 x2)) (fp.sub RNE (fp.sub RNE x4 x5) (fp.add RNE x4 x2))))
(assert (fp.leq (fp.div RNE (fp.neg x0) (fp.neg x10)) (fp.neg (fp.add RNE x7 x9))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x0 x2) (fp.mul RNE x4 x4)) (fp.add RNE (fp.neg x10) (fp.add RNE x2 x2))))
(check-sat)
