(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.neg x15) (fp.sub RNE x2 x3)) (fp.div RNE (fp.neg x15) (fp.sub RNE x16 x3))) (fp.mul RNE (fp.add RNE (fp.sub RNE x16 x15) (fp.sub RNE x8 x12)) (fp.sub RNE (fp.mul RNE x7 x7) (fp.div RNE x16 x0)))) (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x10 x16) (fp.div RNE x5 x5)) (fp.neg (fp.sub RNE x6 x14))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x3 x12) (fp.add RNE x1 x6)) (fp.div RNE (fp.neg x10) (fp.mul RNE x15 x15))))))
(check-sat)
