(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x9 x8) (fp.add RNE x13 x13))) (fp.mul RNE (fp.neg (fp.div RNE x14 x18)) (fp.neg (fp.div RNE x3 x19)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE x8 x20) (fp.div RNE x13 x9))) (fp.mul RNE (fp.neg (fp.div RNE x1 x20)) (fp.div RNE (fp.add RNE x15 x1) (fp.sub RNE x21 x21)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE x5 x13) (fp.sub RNE x7 x17)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x20 x19))) (fp.neg (fp.div RNE (fp.add RNE x17 x11) (fp.div RNE x17 x13)))))
(check-sat)
