(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x9) (fp.sub RNE x12 x16)) (fp.add RNE (fp.add RNE x11 x15) (fp.add RNE x15 x7))) (fp.mul RNE (fp.add RNE (fp.add RNE x13 x20) (fp.sub RNE x1 x9)) (fp.sub RNE (fp.sub RNE x3 x7) (fp.neg x6)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.mul RNE x19 x16) (fp.div RNE x6 x1))) (fp.sub RNE (fp.sub RNE (fp.div RNE x3 x16) (fp.mul RNE x13 x12)) (fp.mul RNE (fp.div RNE x20 x11) (fp.mul RNE x5 x3)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE x16 x20) (fp.mul RNE x10 x4)) (fp.div RNE (fp.add RNE x8 x7) (fp.div RNE x19 x1))) (fp.neg (fp.sub RNE (fp.neg x15) (fp.neg x16)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x2 x7)) (fp.sub RNE (fp.neg x3) (fp.neg x19))) (fp.add RNE (fp.neg (fp.div RNE x13 x20)) (fp.mul RNE (fp.div RNE x11 x20) (fp.div RNE x10 x14)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.sub RNE x19 x20) (fp.add RNE x7 x2))) (fp.sub RNE (fp.add RNE (fp.div RNE x17 x4) (fp.mul RNE x16 x6)) (fp.mul RNE (fp.neg x8) (fp.mul RNE x10 x19)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.neg x17) (fp.sub RNE x7 x16)) (fp.sub RNE (fp.div RNE x8 x8) (fp.add RNE x13 x10))) (fp.neg (fp.add RNE (fp.sub RNE x2 x1) (fp.add RNE x16 x0)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.sub RNE x13 x6) (fp.mul RNE x2 x9)) (fp.mul RNE (fp.sub RNE x2 x3) (fp.neg x10))) (fp.sub RNE (fp.neg (fp.div RNE x2 x3)) (fp.mul RNE (fp.neg x3) (fp.div RNE x3 x2)))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.neg x2) (fp.sub RNE x3 x18)) (fp.div RNE (fp.neg x8) (fp.neg x11))) (fp.div RNE (fp.sub RNE (fp.add RNE x13 x7) (fp.sub RNE x4 x6)) (fp.sub RNE (fp.mul RNE x3 x10) (fp.div RNE x0 x7)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.neg x18) (fp.mul RNE x0 x13)) (fp.sub RNE (fp.neg x12) (fp.sub RNE x1 x13))) (fp.neg (fp.sub RNE (fp.div RNE x2 x20) (fp.neg x1)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x4) (fp.sub RNE x10 x2)) (fp.neg (fp.sub RNE x11 x1))) (fp.add RNE (fp.sub RNE (fp.div RNE x1 x9) (fp.neg x13)) (fp.mul RNE (fp.sub RNE x15 x2) (fp.add RNE x15 x14)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.add RNE x2 x4) (fp.div RNE x20 x12))) (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x5) (fp.sub RNE x14 x11)) (fp.div RNE (fp.add RNE x4 x7) (fp.div RNE x11 x3)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.add RNE x4 x18) (fp.div RNE x12 x2)) (fp.neg (fp.div RNE x3 x7))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x5) (fp.sub RNE x9 x12)) (fp.sub RNE (fp.add RNE x1 x8) (fp.neg x9)))))
(check-sat)
