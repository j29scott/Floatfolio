(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE x6 x6) (fp.sub RNE x8 x8)) (fp.neg (fp.add RNE x15 x8))) (fp.neg (fp.mul RNE (fp.sub RNE x7 x15) (fp.mul RNE x7 x17)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE x16 x2) (fp.mul RNE x4 x1)) (fp.add RNE (fp.neg x6) (fp.add RNE x0 x15))) (fp.div RNE (fp.div RNE (fp.mul RNE x9 x7) (fp.add RNE x2 x16)) (fp.neg (fp.mul RNE x13 x1)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x5 x0) (fp.add RNE x13 x16)) (fp.sub RNE (fp.sub RNE x10 x0) (fp.neg x7))) (fp.neg (fp.add RNE (fp.div RNE x16 x2) (fp.mul RNE x2 x4)))))
(assert (fp.geq (fp.div RNE (fp.sub RNE (fp.sub RNE x14 x14) (fp.mul RNE x17 x5)) (fp.div RNE (fp.neg x8) (fp.neg x15))) (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x9) (fp.mul RNE x0 x11)) (fp.add RNE (fp.div RNE x5 x14) (fp.mul RNE x0 x0)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.add RNE x2 x3) (fp.add RNE x3 x2)) (fp.add RNE (fp.sub RNE x15 x12) (fp.add RNE x1 x7))) (fp.div RNE (fp.mul RNE (fp.mul RNE x11 x0) (fp.sub RNE x10 x7)) (fp.div RNE (fp.mul RNE x14 x14) (fp.neg x10)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x17 x7))) (fp.neg (fp.neg (fp.add RNE x11 x8)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.sub RNE x14 x14) (fp.neg x15)) (fp.mul RNE (fp.add RNE x10 x10) (fp.add RNE x10 x11))) (fp.sub RNE (fp.sub RNE (fp.add RNE x11 x10) (fp.neg x1)) (fp.sub RNE (fp.add RNE x1 x14) (fp.add RNE x1 x2)))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.add RNE x17 x4) (fp.mul RNE x3 x2)) (fp.div RNE (fp.mul RNE x4 x13) (fp.neg x14))) (fp.neg (fp.div RNE (fp.mul RNE x5 x13) (fp.sub RNE x17 x15)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE x17 x15) (fp.mul RNE x6 x15)) (fp.add RNE (fp.div RNE x11 x10) (fp.div RNE x9 x10))) (fp.neg (fp.div RNE (fp.add RNE x6 x12) (fp.div RNE x3 x4)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.mul RNE x5 x15) (fp.mul RNE x16 x11)) (fp.mul RNE (fp.mul RNE x17 x6) (fp.neg x1))) (fp.mul RNE (fp.sub RNE (fp.div RNE x0 x11) (fp.neg x1)) (fp.mul RNE (fp.add RNE x7 x17) (fp.div RNE x8 x0)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.neg x16)) (fp.neg (fp.mul RNE x12 x11))) (fp.div RNE (fp.neg (fp.add RNE x3 x16)) (fp.neg (fp.neg x14)))))
(check-sat)
