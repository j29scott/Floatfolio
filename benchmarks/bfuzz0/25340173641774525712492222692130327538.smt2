(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x6 x11) (fp.add RNE x5 x3)) (fp.div RNE (fp.add RNE x8 x8) (fp.neg x12))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x8 x3) (fp.neg x7)) (fp.mul RNE (fp.neg x8) (fp.neg x10))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x5 x2) (fp.sub RNE x4 x8)) (fp.div RNE (fp.sub RNE x0 x0) (fp.add RNE x11 x6))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x6 x8) (fp.div RNE x3 x11)) (fp.neg (fp.neg x5))))
(assert (fp.gt (fp.neg (fp.div RNE x4 x5)) (fp.add RNE (fp.div RNE x9 x1) (fp.div RNE x6 x6))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x3 x5) (fp.div RNE x9 x2)) (fp.div RNE (fp.mul RNE x0 x9) (fp.sub RNE x5 x6))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x2 x4) (fp.neg x8)) (fp.div RNE (fp.mul RNE x4 x4) (fp.mul RNE x0 x5))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x12 x10) (fp.add RNE x4 x3)) (fp.add RNE (fp.mul RNE x12 x1) (fp.add RNE x6 x0))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x6)) (fp.neg (fp.neg x10))))
(check-sat)
