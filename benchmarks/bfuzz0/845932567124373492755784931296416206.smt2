(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg x11) (fp.neg x11)) (fp.mul RNE (fp.add RNE x8 x3) (fp.add RNE x4 x18))) (fp.neg (fp.mul RNE (fp.mul RNE x5 x1) (fp.div RNE x12 x8)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE x4 x0) (fp.sub RNE x9 x13)) (fp.mul RNE (fp.div RNE x0 x10) (fp.sub RNE x13 x6))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x15) (fp.div RNE x1 x15)) (fp.neg (fp.neg x8)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE x18 x17) (fp.neg x11)) (fp.add RNE (fp.sub RNE x6 x10) (fp.sub RNE x18 x12))) (fp.div RNE (fp.sub RNE (fp.neg x0) (fp.mul RNE x3 x18)) (fp.mul RNE (fp.neg x13) (fp.div RNE x6 x3)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.add RNE x13 x15)) (fp.neg (fp.sub RNE x17 x12))) (fp.div RNE (fp.div RNE (fp.sub RNE x11 x1) (fp.div RNE x11 x10)) (fp.mul RNE (fp.neg x11) (fp.mul RNE x3 x2)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg x0) (fp.div RNE x3 x9))) (fp.mul RNE (fp.sub RNE (fp.neg x6) (fp.neg x6)) (fp.neg (fp.neg x13)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.neg x3) (fp.add RNE x0 x16)) (fp.div RNE (fp.add RNE x8 x2) (fp.sub RNE x0 x12))) (fp.neg (fp.neg (fp.add RNE x16 x18)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x1 x2) (fp.neg x12)) (fp.sub RNE (fp.add RNE x14 x0) (fp.add RNE x17 x13))) (fp.div RNE (fp.sub RNE (fp.sub RNE x5 x6) (fp.add RNE x13 x0)) (fp.mul RNE (fp.add RNE x9 x14) (fp.add RNE x18 x4)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.mul RNE x18 x9) (fp.add RNE x10 x0)) (fp.mul RNE (fp.div RNE x17 x2) (fp.sub RNE x3 x4))) (fp.sub RNE (fp.neg (fp.mul RNE x10 x14)) (fp.sub RNE (fp.sub RNE x12 x16) (fp.sub RNE x16 x4)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x15) (fp.neg x15)) (fp.add RNE (fp.sub RNE x12 x8) (fp.add RNE x3 x4))) (fp.add RNE (fp.div RNE (fp.neg x18) (fp.sub RNE x1 x13)) (fp.sub RNE (fp.mul RNE x10 x4) (fp.add RNE x0 x5)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE x14 x15)) (fp.neg (fp.sub RNE x3 x8))) (fp.sub RNE (fp.mul RNE (fp.add RNE x9 x5) (fp.mul RNE x7 x3)) (fp.add RNE (fp.add RNE x16 x6) (fp.neg x1)))))
(check-sat)
