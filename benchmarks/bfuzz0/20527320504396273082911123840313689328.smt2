(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.add RNE x15 x5) (fp.add RNE x12 x7)) (fp.mul RNE (fp.mul RNE x5 x12) (fp.div RNE x8 x15))) (fp.div RNE (fp.div RNE (fp.neg x20) (fp.add RNE x4 x15)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x14 x15)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.sub RNE x10 x11)) (fp.neg (fp.sub RNE x1 x16))) (fp.div RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x11 x20)) (fp.sub RNE (fp.sub RNE x11 x10) (fp.sub RNE x9 x16)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.sub RNE x1 x1) (fp.div RNE x16 x2)) (fp.neg (fp.div RNE x15 x14))) (fp.neg (fp.neg (fp.sub RNE x16 x5)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE x18 x13) (fp.neg x2))) (fp.div RNE (fp.neg (fp.neg x4)) (fp.sub RNE (fp.div RNE x20 x1) (fp.add RNE x11 x13)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.add RNE x15 x16) (fp.mul RNE x15 x14)) (fp.neg (fp.sub RNE x7 x6))) (fp.neg (fp.sub RNE (fp.add RNE x20 x5) (fp.add RNE x7 x20)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.neg x17) (fp.div RNE x19 x13)) (fp.sub RNE (fp.div RNE x17 x19) (fp.div RNE x9 x1))) (fp.add RNE (fp.add RNE (fp.neg x20) (fp.sub RNE x12 x5)) (fp.sub RNE (fp.div RNE x20 x3) (fp.sub RNE x8 x8)))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.add RNE x12 x18) (fp.neg x4)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x20 x5))) (fp.div RNE (fp.neg (fp.add RNE x5 x12)) (fp.sub RNE (fp.div RNE x14 x0) (fp.mul RNE x5 x4)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.neg x9) (fp.div RNE x17 x15)) (fp.neg (fp.mul RNE x12 x3))) (fp.mul RNE (fp.sub RNE (fp.neg x11) (fp.mul RNE x17 x16)) (fp.add RNE (fp.mul RNE x14 x9) (fp.mul RNE x3 x9)))))
(check-sat)
