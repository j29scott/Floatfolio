(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE x13 x0) (fp.div RNE x10 x4)))
(assert (fp.gt (fp.add RNE x1 x2) (fp.div RNE x5 x1)))
(assert (fp.eq (fp.sub RNE x10 x6) (fp.add RNE x3 x8)))
(assert (fp.lt (fp.sub RNE x8 x3) (fp.div RNE x7 x3)))
(assert (fp.eq (fp.add RNE x4 x3) (fp.add RNE x0 x13)))
(assert (fp.lt (fp.sub RNE x8 x0) (fp.mul RNE x1 x7)))
(assert (fp.eq (fp.sub RNE x9 x7) (fp.add RNE x8 x8)))
(assert (fp.gt (fp.add RNE x9 x12) (fp.neg x6)))
(assert (fp.leq (fp.add RNE x11 x6) (fp.mul RNE x1 x11)))
(assert (fp.gt (fp.sub RNE x2 x13) (fp.sub RNE x3 x8)))
(check-sat)
