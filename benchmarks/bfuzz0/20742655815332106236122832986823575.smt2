(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.mul RNE x14 x4) (fp.add RNE x11 x7)) (fp.div RNE (fp.div RNE x3 x9) (fp.sub RNE x13 x18))))
(assert (fp.geq (fp.neg (fp.sub RNE x16 x3)) (fp.sub RNE (fp.sub RNE x7 x3) (fp.add RNE x3 x1))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x0 x1) (fp.mul RNE x18 x19)) (fp.sub RNE (fp.sub RNE x1 x4) (fp.neg x5))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x12 x13) (fp.mul RNE x0 x17)) (fp.add RNE (fp.sub RNE x10 x14) (fp.div RNE x8 x1))))
(assert (fp.eq (fp.add RNE (fp.add RNE x9 x14) (fp.sub RNE x16 x4)) (fp.div RNE (fp.mul RNE x17 x5) (fp.div RNE x13 x11))))
(assert (fp.leq (fp.add RNE (fp.add RNE x18 x17) (fp.neg x5)) (fp.div RNE (fp.mul RNE x3 x3) (fp.div RNE x18 x9))))
(assert (fp.lt (fp.neg (fp.neg x0)) (fp.div RNE (fp.div RNE x2 x19) (fp.add RNE x10 x16))))
(check-sat)
