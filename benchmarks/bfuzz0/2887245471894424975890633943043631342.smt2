(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x5 x1) (fp.mul RNE x1 x3)))
(assert (fp.eq (fp.neg x17) (fp.neg x16)))
(assert (fp.leq (fp.div RNE x8 x16) (fp.mul RNE x3 x4)))
(assert (fp.leq (fp.neg x2) (fp.add RNE x8 x20)))
(assert (fp.lt (fp.add RNE x18 x2) (fp.neg x10)))
(assert (fp.geq (fp.div RNE x17 x8) (fp.neg x6)))
(assert (fp.gt (fp.sub RNE x6 x11) (fp.div RNE x7 x6)))
(assert (fp.geq (fp.neg x20) (fp.sub RNE x17 x16)))
(assert (fp.eq (fp.div RNE x17 x18) (fp.mul RNE x9 x9)))
(assert (fp.leq (fp.mul RNE x14 x10) (fp.div RNE x9 x12)))
(assert (fp.gt (fp.div RNE x13 x0) (fp.neg x9)))
(assert (fp.geq (fp.add RNE x2 x5) (fp.div RNE x10 x3)))
(assert (fp.geq (fp.add RNE x11 x8) (fp.neg x11)))
(check-sat)
