(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.neg x13) (fp.sub RNE x16 x13)) (fp.sub RNE (fp.add RNE x14 x14) (fp.sub RNE x7 x0))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x16 x8) (fp.div RNE x1 x14)) (fp.sub RNE (fp.add RNE x6 x17) (fp.sub RNE x9 x0)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.neg x10) (fp.div RNE x9 x2)) (fp.neg (fp.neg x9))) (fp.div RNE (fp.mul RNE (fp.neg x15) (fp.neg x12)) (fp.sub RNE (fp.add RNE x9 x12) (fp.mul RNE x8 x11)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.div RNE x17 x0) (fp.div RNE x7 x13)) (fp.div RNE (fp.mul RNE x16 x8) (fp.sub RNE x17 x9))) (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x4) (fp.add RNE x14 x2)) (fp.div RNE (fp.sub RNE x3 x10) (fp.add RNE x17 x6)))))
(assert (fp.eq (fp.neg (fp.neg (fp.sub RNE x0 x12))) (fp.add RNE (fp.add RNE (fp.div RNE x0 x13) (fp.mul RNE x14 x16)) (fp.add RNE (fp.div RNE x2 x6) (fp.div RNE x0 x6)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.mul RNE x16 x10)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x15 x17))) (fp.mul RNE (fp.div RNE (fp.neg x15) (fp.neg x0)) (fp.neg (fp.add RNE x4 x14)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.neg x6) (fp.div RNE x3 x8)) (fp.mul RNE (fp.mul RNE x2 x4) (fp.mul RNE x12 x17))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x7 x14) (fp.div RNE x14 x7)) (fp.neg (fp.sub RNE x14 x7)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.div RNE x9 x9)) (fp.div RNE (fp.sub RNE x14 x11) (fp.div RNE x12 x8))) (fp.sub RNE (fp.div RNE (fp.neg x4) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x17 x10) (fp.neg x3)))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x5 x11) (fp.mul RNE x4 x3)) (fp.neg (fp.add RNE x0 x14))) (fp.mul RNE (fp.sub RNE (fp.neg x15) (fp.add RNE x17 x3)) (fp.neg (fp.neg x4)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg x2) (fp.neg x11)) (fp.add RNE (fp.mul RNE x8 x8) (fp.add RNE x17 x12))) (fp.div RNE (fp.mul RNE (fp.sub RNE x16 x4) (fp.div RNE x0 x7)) (fp.neg (fp.neg x16)))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.sub RNE x4 x9) (fp.mul RNE x1 x15)) (fp.neg (fp.add RNE x12 x9))) (fp.neg (fp.mul RNE (fp.sub RNE x14 x9) (fp.add RNE x1 x7)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE x13 x16)) (fp.div RNE (fp.mul RNE x16 x7) (fp.sub RNE x3 x14))) (fp.neg (fp.add RNE (fp.mul RNE x2 x11) (fp.mul RNE x7 x12)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.div RNE x0 x6) (fp.mul RNE x13 x15))) (fp.sub RNE (fp.add RNE (fp.neg x6) (fp.add RNE x14 x3)) (fp.add RNE (fp.add RNE x3 x6) (fp.sub RNE x2 x3)))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x14 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x2 x8) (fp.add RNE x7 x11)) (fp.add RNE (fp.mul RNE x14 x11) (fp.neg x0)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x14 x1) (fp.neg x1)) (fp.div RNE (fp.mul RNE x4 x2) (fp.add RNE x7 x0))) (fp.mul RNE (fp.add RNE (fp.neg x7) (fp.sub RNE x7 x5)) (fp.add RNE (fp.add RNE x16 x10) (fp.add RNE x9 x6)))))
(check-sat)
