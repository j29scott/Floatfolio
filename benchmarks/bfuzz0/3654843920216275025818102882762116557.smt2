(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.mul RNE x9 x3) (fp.div RNE x0 x3)) (fp.div RNE (fp.mul RNE x5 x6) (fp.mul RNE x13 x1))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x1 x13) (fp.div RNE x11 x2)) (fp.sub RNE (fp.mul RNE x9 x9) (fp.mul RNE x5 x7))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x6 x3) (fp.sub RNE x9 x10)) (fp.sub RNE (fp.mul RNE x1 x9) (fp.div RNE x9 x13))))
(assert (fp.gt (fp.neg (fp.neg x0)) (fp.div RNE (fp.div RNE x0 x0) (fp.div RNE x12 x3))))
(assert (fp.leq (fp.sub RNE (fp.neg x3) (fp.add RNE x7 x11)) (fp.mul RNE (fp.add RNE x7 x5) (fp.add RNE x12 x6))))
(assert (fp.gt (fp.sub RNE (fp.neg x5) (fp.div RNE x0 x13)) (fp.div RNE (fp.neg x12) (fp.neg x3))))
(assert (fp.leq (fp.mul RNE (fp.neg x13) (fp.add RNE x4 x0)) (fp.div RNE (fp.sub RNE x0 x2) (fp.neg x0))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x0 x1) (fp.div RNE x10 x13)) (fp.div RNE (fp.div RNE x3 x9) (fp.sub RNE x10 x5))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x8 x3) (fp.sub RNE x3 x3)) (fp.div RNE (fp.sub RNE x5 x13) (fp.neg x13))))
(check-sat)
