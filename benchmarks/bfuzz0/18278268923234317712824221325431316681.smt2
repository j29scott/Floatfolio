(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.add RNE x17 x10) (fp.sub RNE x15 x13)) (fp.div RNE (fp.add RNE x11 x5) (fp.mul RNE x9 x24))))
(assert (fp.geq (fp.neg (fp.mul RNE x1 x8)) (fp.mul RNE (fp.mul RNE x23 x12) (fp.sub RNE x5 x18))))
(assert (fp.lt (fp.mul RNE (fp.neg x16) (fp.div RNE x19 x1)) (fp.sub RNE (fp.mul RNE x8 x0) (fp.div RNE x24 x3))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x5 x24) (fp.mul RNE x18 x20)) (fp.add RNE (fp.mul RNE x13 x0) (fp.neg x10))))
(assert (fp.eq (fp.div RNE (fp.neg x2) (fp.sub RNE x21 x20)) (fp.add RNE (fp.sub RNE x9 x3) (fp.div RNE x5 x20))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x6 x12) (fp.neg x5)) (fp.div RNE (fp.div RNE x7 x8) (fp.sub RNE x6 x24))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x1 x6) (fp.div RNE x7 x7)) (fp.mul RNE (fp.div RNE x17 x11) (fp.sub RNE x13 x8))))
(assert (fp.leq (fp.neg (fp.neg x23)) (fp.mul RNE (fp.neg x15) (fp.div RNE x20 x11))))
(assert (fp.lt (fp.div RNE (fp.div RNE x16 x0) (fp.add RNE x17 x16)) (fp.sub RNE (fp.sub RNE x18 x22) (fp.div RNE x15 x12))))
(assert (fp.lt (fp.neg (fp.mul RNE x15 x0)) (fp.div RNE (fp.add RNE x6 x16) (fp.sub RNE x0 x3))))
(assert (fp.gt (fp.div RNE (fp.div RNE x10 x9) (fp.mul RNE x25 x7)) (fp.add RNE (fp.div RNE x24 x18) (fp.sub RNE x14 x6))))
(assert (fp.geq (fp.div RNE (fp.neg x7) (fp.div RNE x0 x10)) (fp.add RNE (fp.mul RNE x10 x12) (fp.div RNE x18 x24))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x17 x10) (fp.mul RNE x16 x16)) (fp.div RNE (fp.div RNE x9 x19) (fp.sub RNE x11 x7))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x8 x24) (fp.add RNE x14 x14)) (fp.neg (fp.div RNE x0 x10))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x2 x6) (fp.mul RNE x7 x16)) (fp.neg (fp.add RNE x21 x4))))
(assert (fp.eq (fp.div RNE (fp.add RNE x4 x13) (fp.div RNE x13 x22)) (fp.neg (fp.sub RNE x18 x17))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x11 x3) (fp.mul RNE x23 x20)) (fp.add RNE (fp.neg x4) (fp.sub RNE x16 x23))))
(check-sat)
