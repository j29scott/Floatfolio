(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x9 x3) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x5 x13) (fp.add RNE x15 x15))) (fp.mul RNE (fp.sub RNE (fp.neg x17) (fp.mul RNE x18 x12)) (fp.neg (fp.mul RNE x9 x14)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x12 x10) (fp.neg x15)) (fp.neg (fp.div RNE x6 x11))) (fp.sub RNE (fp.neg (fp.add RNE x8 x17)) (fp.mul RNE (fp.add RNE x0 x7) (fp.neg x0))))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x17)) (fp.div RNE (fp.neg x10) (fp.neg x0))) (fp.add RNE (fp.sub RNE (fp.mul RNE x0 x11) (fp.neg x2)) (fp.add RNE (fp.div RNE x7 x10) (fp.neg x6)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.neg x2) (fp.div RNE x11 x14)) (fp.add RNE (fp.add RNE x14 x0) (fp.mul RNE x8 x13))) (fp.neg (fp.add RNE (fp.add RNE x18 x15) (fp.add RNE x3 x4))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.add RNE x6 x0) (fp.neg x18)) (fp.div RNE (fp.sub RNE x12 x2) (fp.neg x12))) (fp.neg (fp.div RNE (fp.add RNE x8 x13) (fp.sub RNE x3 x11)))) (fp.div RNE (fp.div RNE (fp.div RNE (fp.sub RNE x9 x6) (fp.div RNE x2 x18)) (fp.mul RNE (fp.sub RNE x6 x9) (fp.sub RNE x8 x12))) (fp.div RNE (fp.div RNE (fp.sub RNE x4 x15) (fp.neg x17)) (fp.mul RNE (fp.div RNE x11 x18) (fp.add RNE x7 x11))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.neg (fp.add RNE x5 x17)) (fp.mul RNE (fp.neg x18) (fp.mul RNE x7 x15)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.neg x14) (fp.sub RNE x2 x7)) (fp.div RNE (fp.div RNE x0 x2) (fp.neg x1))) (fp.add RNE (fp.neg (fp.div RNE x3 x3)) (fp.add RNE (fp.div RNE x2 x4) (fp.sub RNE x17 x5))))))
(check-sat)
