(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x11 x3) (fp.sub RNE x10 x3)) (fp.mul RNE (fp.sub RNE x11 x0) (fp.add RNE x6 x0))))
(assert (fp.leq (fp.mul RNE (fp.neg x6) (fp.mul RNE x0 x5)) (fp.div RNE (fp.add RNE x0 x8) (fp.sub RNE x4 x5))))
(assert (fp.geq (fp.add RNE (fp.neg x9) (fp.sub RNE x2 x2)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x11 x10))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x5 x5) (fp.sub RNE x9 x11)) (fp.neg (fp.neg x3))))
(assert (fp.leq (fp.neg (fp.div RNE x4 x9)) (fp.sub RNE (fp.mul RNE x1 x8) (fp.sub RNE x6 x0))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x1 x9) (fp.add RNE x11 x6)) (fp.mul RNE (fp.sub RNE x6 x11) (fp.div RNE x9 x6))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x7 x0) (fp.div RNE x6 x2)) (fp.div RNE (fp.mul RNE x10 x0) (fp.mul RNE x10 x10))))
(assert (fp.gt (fp.sub RNE (fp.neg x0) (fp.add RNE x11 x5)) (fp.add RNE (fp.div RNE x1 x1) (fp.div RNE x3 x6))))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x1) (fp.neg x11)) (fp.mul RNE (fp.div RNE x5 x9) (fp.div RNE x5 x3))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x7 x9) (fp.add RNE x3 x7)) (fp.add RNE (fp.sub RNE x6 x9) (fp.div RNE x0 x7))))
(assert (fp.lt (fp.div RNE (fp.add RNE x4 x11) (fp.mul RNE x9 x5)) (fp.neg (fp.sub RNE x2 x5))))
(assert (fp.eq (fp.div RNE (fp.add RNE x2 x9) (fp.neg x0)) (fp.neg (fp.neg x4))))
(assert (fp.leq (fp.neg (fp.mul RNE x7 x0)) (fp.neg (fp.div RNE x5 x10))))
(assert (fp.leq (fp.neg (fp.neg x5)) (fp.sub RNE (fp.div RNE x2 x9) (fp.add RNE x1 x1))))
(assert (fp.eq (fp.neg (fp.sub RNE x0 x11)) (fp.sub RNE (fp.sub RNE x6 x2) (fp.neg x1))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x10 x3) (fp.mul RNE x3 x5)) (fp.neg (fp.div RNE x9 x11))))
(assert (fp.gt (fp.neg (fp.mul RNE x3 x8)) (fp.mul RNE (fp.div RNE x4 x1) (fp.mul RNE x4 x11))))
(check-sat)
