(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE x1 x24) (fp.sub RNE x12 x2)) (fp.add RNE (fp.neg x8) (fp.sub RNE x23 x17))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x23 x17) (fp.add RNE x0 x26)) (fp.add RNE (fp.add RNE x4 x16) (fp.sub RNE x26 x23)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.neg x25)) (fp.add RNE (fp.neg x24) (fp.neg x14))) (fp.sub RNE (fp.mul RNE (fp.neg x18) (fp.div RNE x2 x5)) (fp.div RNE (fp.mul RNE x11 x22) (fp.mul RNE x15 x22)))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.mul RNE x8 x8) (fp.sub RNE x25 x24))) (fp.div RNE (fp.mul RNE (fp.add RNE x10 x23) (fp.sub RNE x4 x23)) (fp.div RNE (fp.div RNE x11 x23) (fp.sub RNE x17 x24)))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.mul RNE x18 x16) (fp.sub RNE x17 x22)) (fp.neg (fp.sub RNE x25 x1))) (fp.sub RNE (fp.sub RNE (fp.add RNE x24 x4) (fp.mul RNE x17 x8)) (fp.sub RNE (fp.div RNE x19 x20) (fp.neg x10)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x14 x4) (fp.mul RNE x4 x14)) (fp.div RNE (fp.mul RNE x16 x26) (fp.div RNE x19 x9))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x23) (fp.mul RNE x18 x26)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x25 x22) (fp.add RNE x15 x23))) (fp.neg (fp.mul RNE (fp.div RNE x21 x0) (fp.add RNE x1 x3)))))
(check-sat)
