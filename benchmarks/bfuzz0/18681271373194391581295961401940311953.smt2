(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x14 x9) (fp.neg x14)) (fp.div RNE (fp.sub RNE x8 x5) (fp.add RNE x4 x13))))
(assert (fp.geq (fp.neg (fp.mul RNE x12 x5)) (fp.mul RNE (fp.div RNE x4 x4) (fp.neg x8))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x3 x3) (fp.sub RNE x11 x10)) (fp.sub RNE (fp.sub RNE x2 x6) (fp.sub RNE x1 x1))))
(assert (fp.lt (fp.add RNE (fp.add RNE x1 x7) (fp.sub RNE x12 x6)) (fp.mul RNE (fp.neg x12) (fp.neg x4))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x1 x5) (fp.div RNE x11 x15)) (fp.sub RNE (fp.sub RNE x12 x15) (fp.div RNE x1 x0))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x6 x3) (fp.add RNE x4 x10)) (fp.mul RNE (fp.div RNE x12 x1) (fp.mul RNE x3 x12))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x6 x6) (fp.div RNE x0 x14)) (fp.div RNE (fp.sub RNE x0 x15) (fp.add RNE x8 x9))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x6 x9) (fp.add RNE x2 x15)) (fp.div RNE (fp.sub RNE x9 x2) (fp.neg x14))))
(check-sat)
