(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.div RNE x0 x1) (fp.sub RNE x11 x5)) (fp.add RNE (fp.div RNE x5 x6) (fp.add RNE x11 x0))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x1 x3) (fp.div RNE x4 x2)) (fp.sub RNE (fp.add RNE x0 x2) (fp.neg x12))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x5 x8) (fp.div RNE x11 x7)) (fp.add RNE (fp.sub RNE x2 x3) (fp.neg x4))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x3 x5) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x2 x10) (fp.mul RNE x4 x8))))
(assert (fp.geq (fp.div RNE (fp.neg x1) (fp.mul RNE x2 x2)) (fp.add RNE (fp.neg x10) (fp.neg x4))))
(check-sat)
