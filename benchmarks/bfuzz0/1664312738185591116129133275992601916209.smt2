(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE x7 x11) (fp.add RNE x6 x15)) (fp.sub RNE (fp.neg x5) (fp.div RNE x8 x4))) (fp.mul RNE (fp.add RNE (fp.add RNE x15 x3) (fp.add RNE x15 x11)) (fp.div RNE (fp.mul RNE x13 x6) (fp.add RNE x10 x8)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.sub RNE x1 x1) (fp.div RNE x6 x15))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x2 x14) (fp.add RNE x3 x3)) (fp.neg (fp.sub RNE x13 x15)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.add RNE x15 x13)) (fp.mul RNE (fp.div RNE x10 x1) (fp.neg x7))) (fp.mul RNE (fp.mul RNE (fp.neg x1) (fp.mul RNE x6 x15)) (fp.div RNE (fp.sub RNE x0 x0) (fp.add RNE x9 x3)))))
(assert (fp.gt (fp.div RNE (fp.neg (fp.add RNE x13 x1)) (fp.mul RNE (fp.neg x14) (fp.add RNE x15 x14))) (fp.div RNE (fp.div RNE (fp.neg x1) (fp.add RNE x13 x7)) (fp.div RNE (fp.add RNE x13 x7) (fp.mul RNE x7 x0)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.div RNE x14 x5)) (fp.add RNE (fp.mul RNE x8 x10) (fp.add RNE x13 x1))) (fp.div RNE (fp.mul RNE (fp.add RNE x11 x7) (fp.div RNE x7 x1)) (fp.sub RNE (fp.mul RNE x15 x2) (fp.sub RNE x9 x14)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.neg x9) (fp.add RNE x15 x2)) (fp.sub RNE (fp.mul RNE x2 x2) (fp.sub RNE x1 x10))) (fp.add RNE (fp.add RNE (fp.neg x11) (fp.neg x13)) (fp.neg (fp.div RNE x1 x6)))))
(check-sat)
