(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.neg x7) (fp.mul RNE x7 x11)) (fp.mul RNE (fp.div RNE x5 x0) (fp.neg x2))))
(assert (fp.gt (fp.add RNE (fp.div RNE x8 x5) (fp.sub RNE x11 x0)) (fp.add RNE (fp.div RNE x2 x1) (fp.neg x6))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x7 x4) (fp.neg x3)) (fp.mul RNE (fp.div RNE x1 x0) (fp.div RNE x9 x11))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x8 x8) (fp.neg x10)) (fp.div RNE (fp.sub RNE x6 x3) (fp.neg x1))))
(assert (fp.gt (fp.div RNE (fp.add RNE x10 x7) (fp.neg x10)) (fp.mul RNE (fp.mul RNE x0 x11) (fp.add RNE x7 x11))))
(assert (fp.gt (fp.sub RNE (fp.neg x4) (fp.div RNE x7 x10)) (fp.neg (fp.neg x8))))
(assert (fp.gt (fp.div RNE (fp.neg x10) (fp.div RNE x3 x7)) (fp.mul RNE (fp.mul RNE x0 x2) (fp.neg x8))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x6 x10) (fp.div RNE x2 x2)) (fp.neg (fp.div RNE x6 x6))))
(assert (fp.leq (fp.neg (fp.neg x1)) (fp.mul RNE (fp.add RNE x4 x5) (fp.mul RNE x8 x1))))
(assert (fp.lt (fp.add RNE (fp.neg x6) (fp.sub RNE x6 x9)) (fp.neg (fp.sub RNE x8 x4))))
(assert (fp.leq (fp.neg (fp.add RNE x8 x2)) (fp.mul RNE (fp.neg x11) (fp.add RNE x6 x1))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x5 x10) (fp.add RNE x11 x5)) (fp.div RNE (fp.mul RNE x3 x5) (fp.sub RNE x5 x2))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x9 x1) (fp.mul RNE x6 x11)) (fp.mul RNE (fp.div RNE x0 x8) (fp.neg x3))))
(check-sat)
