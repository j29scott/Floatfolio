(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.mul RNE x3 x0) (fp.mul RNE x6 x9)) (fp.neg (fp.mul RNE x4 x9))) (fp.mul RNE (fp.add RNE (fp.mul RNE x13 x4) (fp.neg x13)) (fp.add RNE (fp.neg x5) (fp.add RNE x4 x15)))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.sub RNE x14 x8) (fp.add RNE x2 x4))) (fp.mul RNE (fp.sub RNE (fp.add RNE x3 x11) (fp.add RNE x9 x6)) (fp.sub RNE (fp.sub RNE x1 x13) (fp.sub RNE x7 x12)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.div RNE x15 x11) (fp.neg x5)) (fp.add RNE (fp.sub RNE x14 x3) (fp.div RNE x4 x7))) (fp.mul RNE (fp.add RNE (fp.mul RNE x10 x3) (fp.neg x1)) (fp.div RNE (fp.neg x9) (fp.neg x13)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.add RNE x10 x7) (fp.add RNE x15 x15)) (fp.div RNE (fp.add RNE x3 x7) (fp.div RNE x10 x2))) (fp.add RNE (fp.div RNE (fp.neg x6) (fp.neg x11)) (fp.div RNE (fp.mul RNE x9 x10) (fp.mul RNE x4 x10)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x5 x10) (fp.div RNE x1 x15)) (fp.div RNE (fp.add RNE x4 x5) (fp.add RNE x2 x13))) (fp.sub RNE (fp.add RNE (fp.neg x0) (fp.div RNE x15 x5)) (fp.div RNE (fp.mul RNE x4 x2) (fp.neg x13)))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.sub RNE x6 x0) (fp.mul RNE x8 x15)) (fp.sub RNE (fp.div RNE x5 x11) (fp.sub RNE x8 x14))) (fp.add RNE (fp.add RNE (fp.add RNE x5 x2) (fp.add RNE x2 x13)) (fp.sub RNE (fp.div RNE x14 x2) (fp.div RNE x9 x8)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.sub RNE x1 x2) (fp.sub RNE x7 x2)) (fp.div RNE (fp.neg x0) (fp.neg x10))) (fp.add RNE (fp.sub RNE (fp.div RNE x10 x6) (fp.div RNE x12 x7)) (fp.sub RNE (fp.add RNE x7 x11) (fp.sub RNE x12 x6)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x6) (fp.mul RNE x11 x11)) (fp.div RNE (fp.sub RNE x3 x7) (fp.mul RNE x7 x0))) (fp.add RNE (fp.neg (fp.add RNE x0 x5)) (fp.mul RNE (fp.add RNE x7 x3) (fp.add RNE x9 x6)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.neg x0)) (fp.add RNE (fp.sub RNE x10 x14) (fp.div RNE x7 x2))) (fp.mul RNE (fp.add RNE (fp.add RNE x2 x2) (fp.neg x13)) (fp.neg (fp.sub RNE x14 x1)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x8 x3) (fp.sub RNE x1 x3))) (fp.add RNE (fp.neg (fp.sub RNE x15 x8)) (fp.div RNE (fp.div RNE x13 x7) (fp.add RNE x14 x7)))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x8) (fp.neg x14)) (fp.add RNE (fp.sub RNE x8 x6) (fp.mul RNE x6 x3))) (fp.sub RNE (fp.add RNE (fp.add RNE x7 x15) (fp.neg x2)) (fp.add RNE (fp.neg x3) (fp.div RNE x15 x3)))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.add RNE x4 x13) (fp.add RNE x5 x14)) (fp.mul RNE (fp.add RNE x2 x8) (fp.div RNE x0 x3))) (fp.sub RNE (fp.div RNE (fp.add RNE x15 x11) (fp.sub RNE x2 x3)) (fp.neg (fp.add RNE x15 x4)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x12 x13) (fp.div RNE x7 x12)) (fp.div RNE (fp.div RNE x0 x13) (fp.add RNE x0 x2))) (fp.sub RNE (fp.add RNE (fp.div RNE x9 x11) (fp.div RNE x13 x3)) (fp.div RNE (fp.div RNE x6 x12) (fp.mul RNE x3 x9)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.neg x2) (fp.neg x7))) (fp.sub RNE (fp.add RNE (fp.sub RNE x0 x5) (fp.sub RNE x13 x10)) (fp.div RNE (fp.neg x7) (fp.sub RNE x1 x1)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.mul RNE x0 x12) (fp.neg x4)) (fp.div RNE (fp.add RNE x6 x6) (fp.mul RNE x12 x8))) (fp.sub RNE (fp.mul RNE (fp.add RNE x13 x3) (fp.neg x8)) (fp.sub RNE (fp.div RNE x6 x10) (fp.sub RNE x10 x9)))))
(check-sat)
