(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x4) (fp.sub RNE x26 x19)) (fp.sub RNE (fp.neg x13) (fp.mul RNE x17 x7))) (fp.div RNE (fp.div RNE (fp.neg x13) (fp.div RNE x13 x13)) (fp.div RNE (fp.div RNE x6 x17) (fp.neg x10)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.add RNE x13 x1)) (fp.div RNE (fp.add RNE x16 x17) (fp.neg x16))) (fp.div RNE (fp.div RNE (fp.mul RNE x20 x19) (fp.div RNE x17 x13)) (fp.neg (fp.add RNE x3 x22))))))
(assert (fp.eq (fp.neg (fp.neg (fp.mul RNE (fp.mul RNE x10 x1) (fp.mul RNE x22 x16)))) (fp.div RNE (fp.neg (fp.add RNE (fp.add RNE x23 x4) (fp.add RNE x0 x7))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x6 x0) (fp.div RNE x9 x0)) (fp.mul RNE (fp.mul RNE x21 x27) (fp.mul RNE x12 x25))))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x5 x9) (fp.sub RNE x9 x25)) (fp.neg (fp.mul RNE x1 x25))) (fp.mul RNE (fp.div RNE (fp.div RNE x22 x23) (fp.add RNE x22 x20)) (fp.neg (fp.sub RNE x8 x27)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x7 x10) (fp.add RNE x6 x22)) (fp.div RNE (fp.div RNE x0 x1) (fp.sub RNE x22 x26))) (fp.neg (fp.sub RNE (fp.add RNE x5 x1) (fp.sub RNE x8 x11))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE (fp.div RNE x3 x12) (fp.mul RNE x25 x23))) (fp.sub RNE (fp.div RNE (fp.sub RNE x11 x1) (fp.neg x0)) (fp.div RNE (fp.div RNE x14 x1) (fp.sub RNE x17 x13)))) (fp.add RNE (fp.sub RNE (fp.neg (fp.neg x19)) (fp.neg (fp.sub RNE x9 x18))) (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x24) (fp.mul RNE x14 x17)) (fp.mul RNE (fp.div RNE x15 x13) (fp.mul RNE x8 x23))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x1 x27)) (fp.neg (fp.add RNE x26 x20)))) (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.div RNE x14 x3) (fp.mul RNE x27 x3)) (fp.div RNE (fp.sub RNE x22 x2) (fp.neg x21))) (fp.div RNE (fp.add RNE (fp.add RNE x21 x5) (fp.neg x10)) (fp.div RNE (fp.add RNE x25 x24) (fp.neg x9))))))
(check-sat)
