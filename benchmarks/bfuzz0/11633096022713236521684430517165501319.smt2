(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.mul RNE x17 x2) (fp.mul RNE x1 x8)) (fp.div RNE (fp.add RNE x7 x16) (fp.add RNE x14 x1))) (fp.neg (fp.div RNE (fp.div RNE x16 x11) (fp.add RNE x8 x13)))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.div RNE x18 x14)) (fp.neg (fp.sub RNE x15 x8))) (fp.mul RNE (fp.add RNE (fp.div RNE x5 x14) (fp.neg x13)) (fp.sub RNE (fp.neg x1) (fp.add RNE x18 x10)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x16) (fp.neg x8)) (fp.neg (fp.neg x14))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x16 x1) (fp.add RNE x8 x10)) (fp.div RNE (fp.div RNE x5 x9) (fp.mul RNE x15 x2)))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.mul RNE x12 x8) (fp.sub RNE x10 x10))) (fp.mul RNE (fp.neg (fp.div RNE x2 x16)) (fp.mul RNE (fp.add RNE x4 x7) (fp.sub RNE x4 x15)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.sub RNE x13 x12)) (fp.mul RNE (fp.sub RNE x3 x15) (fp.div RNE x8 x14))) (fp.neg (fp.div RNE (fp.mul RNE x7 x1) (fp.div RNE x16 x2)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.sub RNE x17 x10) (fp.add RNE x18 x12))) (fp.div RNE (fp.mul RNE (fp.add RNE x11 x9) (fp.sub RNE x8 x6)) (fp.div RNE (fp.sub RNE x12 x11) (fp.neg x15)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.sub RNE x7 x4) (fp.div RNE x5 x2))) (fp.neg (fp.div RNE (fp.div RNE x2 x9) (fp.neg x13)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE x8 x5) (fp.mul RNE x1 x12)) (fp.div RNE (fp.neg x2) (fp.mul RNE x13 x15))) (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.add RNE x12 x18)) (fp.mul RNE (fp.neg x2) (fp.div RNE x6 x15)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE x18 x8)) (fp.add RNE (fp.neg x0) (fp.sub RNE x1 x0))) (fp.neg (fp.sub RNE (fp.sub RNE x16 x17) (fp.div RNE x3 x8)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x12 x11) (fp.sub RNE x11 x9)) (fp.add RNE (fp.neg x16) (fp.mul RNE x14 x15))) (fp.div RNE (fp.add RNE (fp.sub RNE x7 x16) (fp.add RNE x3 x10)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x17 x17)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x5 x12) (fp.div RNE x5 x2)) (fp.mul RNE (fp.neg x15) (fp.sub RNE x16 x18))) (fp.neg (fp.mul RNE (fp.mul RNE x11 x5) (fp.add RNE x12 x5)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.mul RNE x14 x14)) (fp.div RNE (fp.div RNE x6 x4) (fp.add RNE x3 x18))) (fp.add RNE (fp.div RNE (fp.mul RNE x16 x11) (fp.mul RNE x5 x11)) (fp.div RNE (fp.sub RNE x9 x18) (fp.mul RNE x7 x13)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x6) (fp.sub RNE x12 x2)) (fp.add RNE (fp.neg x4) (fp.sub RNE x16 x0))) (fp.mul RNE (fp.div RNE (fp.add RNE x18 x14) (fp.add RNE x11 x7)) (fp.sub RNE (fp.neg x6) (fp.mul RNE x1 x12)))))
(check-sat)
