(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE x9 x1) (fp.add RNE x8 x1)))
(assert (fp.leq (fp.div RNE x8 x2) (fp.add RNE x7 x11)))
(assert (fp.lt (fp.mul RNE x6 x0) (fp.div RNE x10 x11)))
(assert (fp.lt (fp.neg x11) (fp.add RNE x6 x4)))
(assert (fp.gt (fp.add RNE x0 x2) (fp.sub RNE x0 x8)))
(assert (fp.gt (fp.mul RNE x5 x5) (fp.mul RNE x11 x9)))
(assert (fp.eq (fp.mul RNE x4 x10) (fp.neg x1)))
(assert (fp.leq (fp.mul RNE x3 x7) (fp.sub RNE x0 x3)))
(assert (fp.eq (fp.mul RNE x9 x9) (fp.neg x0)))
(assert (fp.geq (fp.div RNE x4 x8) (fp.neg x3)))
(assert (fp.eq (fp.div RNE x4 x5) (fp.div RNE x4 x4)))
(assert (fp.eq (fp.neg x7) (fp.mul RNE x2 x7)))
(assert (fp.geq (fp.div RNE x1 x6) (fp.mul RNE x3 x3)))
(assert (fp.lt (fp.mul RNE x8 x11) (fp.sub RNE x5 x1)))
(assert (fp.leq (fp.neg x8) (fp.sub RNE x3 x3)))
(assert (fp.eq (fp.neg x3) (fp.div RNE x8 x3)))
(assert (fp.gt (fp.add RNE x4 x6) (fp.neg x6)))
(check-sat)
