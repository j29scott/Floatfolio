(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE (fp.add RNE x20 x8) (fp.neg x2)) (fp.neg (fp.sub RNE x0 x7))))
(assert (fp.lt (fp.neg (fp.div RNE x5 x4)) (fp.mul RNE (fp.div RNE x20 x8) (fp.neg x11))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x16 x21) (fp.mul RNE x22 x24)) (fp.mul RNE (fp.add RNE x23 x5) (fp.add RNE x11 x8))))
(assert (fp.gt (fp.div RNE (fp.neg x16) (fp.neg x11)) (fp.sub RNE (fp.div RNE x18 x25) (fp.neg x5))))
(assert (fp.eq (fp.add RNE (fp.neg x13) (fp.neg x11)) (fp.div RNE (fp.mul RNE x25 x18) (fp.neg x23))))
(assert (fp.eq (fp.mul RNE (fp.neg x7) (fp.neg x0)) (fp.mul RNE (fp.div RNE x15 x4) (fp.neg x21))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x20 x21) (fp.div RNE x15 x16)) (fp.neg (fp.neg x17))))
(assert (fp.leq (fp.mul RNE (fp.neg x18) (fp.div RNE x10 x8)) (fp.div RNE (fp.mul RNE x3 x15) (fp.div RNE x4 x17))))
(assert (fp.eq (fp.add RNE (fp.div RNE x9 x7) (fp.mul RNE x25 x1)) (fp.add RNE (fp.sub RNE x23 x11) (fp.neg x17))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x2 x6) (fp.div RNE x7 x25)) (fp.mul RNE (fp.div RNE x13 x2) (fp.sub RNE x17 x19))))
(assert (fp.eq (fp.mul RNE (fp.neg x8) (fp.add RNE x17 x17)) (fp.div RNE (fp.mul RNE x10 x11) (fp.add RNE x19 x14))))
(assert (fp.lt (fp.neg (fp.mul RNE x20 x4)) (fp.sub RNE (fp.div RNE x14 x20) (fp.div RNE x24 x21))))
(assert (fp.gt (fp.neg (fp.add RNE x18 x22)) (fp.sub RNE (fp.sub RNE x25 x22) (fp.add RNE x11 x0))))
(check-sat)
