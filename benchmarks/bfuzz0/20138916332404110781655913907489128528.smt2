(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x4 x17) (fp.div RNE x1 x10)) (fp.mul RNE (fp.div RNE x6 x9) (fp.add RNE x14 x13))) (fp.mul RNE (fp.add RNE (fp.neg x13) (fp.neg x17)) (fp.add RNE (fp.div RNE x13 x18) (fp.div RNE x11 x6)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE x6 x6)) (fp.mul RNE (fp.neg x13) (fp.sub RNE x5 x18))) (fp.sub RNE (fp.div RNE (fp.add RNE x13 x7) (fp.neg x13)) (fp.add RNE (fp.mul RNE x9 x7) (fp.div RNE x3 x7)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.mul RNE x10 x15) (fp.mul RNE x11 x12)) (fp.mul RNE (fp.add RNE x17 x7) (fp.div RNE x11 x0))) (fp.mul RNE (fp.div RNE (fp.add RNE x0 x2) (fp.div RNE x10 x9)) (fp.div RNE (fp.neg x16) (fp.div RNE x9 x10)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x17 x1) (fp.add RNE x9 x16)) (fp.sub RNE (fp.div RNE x6 x9) (fp.mul RNE x0 x16))) (fp.sub RNE (fp.sub RNE (fp.neg x17) (fp.div RNE x9 x11)) (fp.div RNE (fp.neg x13) (fp.mul RNE x14 x5)))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.sub RNE x18 x6) (fp.div RNE x6 x18)) (fp.mul RNE (fp.mul RNE x11 x18) (fp.mul RNE x7 x3))) (fp.sub RNE (fp.div RNE (fp.div RNE x0 x11) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x10 x11) (fp.add RNE x6 x7)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.sub RNE x3 x11) (fp.add RNE x13 x18)) (fp.add RNE (fp.div RNE x7 x5) (fp.sub RNE x5 x11))) (fp.mul RNE (fp.neg (fp.add RNE x16 x3)) (fp.neg (fp.sub RNE x12 x15)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.div RNE x4 x3) (fp.neg x10))) (fp.sub RNE (fp.add RNE (fp.neg x14) (fp.sub RNE x8 x10)) (fp.mul RNE (fp.add RNE x5 x11) (fp.add RNE x4 x15)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.add RNE x1 x17) (fp.neg x14)) (fp.neg (fp.div RNE x18 x4))) (fp.sub RNE (fp.mul RNE (fp.div RNE x8 x4) (fp.sub RNE x10 x7)) (fp.neg (fp.add RNE x5 x2)))))
(assert (fp.gt (fp.neg (fp.add RNE (fp.sub RNE x18 x18) (fp.div RNE x0 x15))) (fp.sub RNE (fp.mul RNE (fp.div RNE x0 x14) (fp.sub RNE x15 x1)) (fp.div RNE (fp.mul RNE x0 x15) (fp.sub RNE x12 x13)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x4 x18) (fp.neg x10)) (fp.sub RNE (fp.mul RNE x1 x16) (fp.add RNE x5 x6))) (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x5) (fp.sub RNE x6 x14)) (fp.sub RNE (fp.mul RNE x9 x17) (fp.sub RNE x9 x13)))))
(check-sat)
