(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE x8 x5) (fp.mul RNE x3 x3)))
(assert (fp.leq (fp.sub RNE x5 x3) (fp.neg x4)))
(assert (fp.eq (fp.sub RNE x5 x7) (fp.sub RNE x5 x7)))
(assert (fp.eq (fp.div RNE x8 x3) (fp.add RNE x4 x6)))
(assert (fp.eq (fp.sub RNE x7 x2) (fp.sub RNE x5 x5)))
(assert (fp.gt (fp.mul RNE x3 x3) (fp.neg x2)))
(assert (fp.eq (fp.mul RNE x2 x8) (fp.add RNE x2 x1)))
(assert (fp.eq (fp.div RNE x4 x7) (fp.mul RNE x0 x2)))
(assert (fp.leq (fp.neg x1) (fp.mul RNE x3 x4)))
(assert (fp.leq (fp.mul RNE x7 x9) (fp.mul RNE x1 x3)))
(assert (fp.eq (fp.add RNE x1 x6) (fp.div RNE x4 x8)))
(assert (fp.leq (fp.div RNE x0 x9) (fp.neg x5)))
(assert (fp.lt (fp.neg x2) (fp.mul RNE x4 x9)))
(check-sat)
