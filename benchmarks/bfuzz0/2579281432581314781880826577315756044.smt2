(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE x10 x3) (fp.sub RNE x3 x7)))
(assert (fp.eq (fp.neg x0) (fp.sub RNE x10 x14)))
(assert (fp.geq (fp.add RNE x13 x11) (fp.add RNE x8 x14)))
(assert (fp.leq (fp.mul RNE x9 x0) (fp.div RNE x3 x0)))
(assert (fp.leq (fp.div RNE x6 x11) (fp.add RNE x12 x4)))
(assert (fp.lt (fp.sub RNE x6 x1) (fp.add RNE x3 x4)))
(assert (fp.geq (fp.neg x0) (fp.mul RNE x11 x9)))
(assert (fp.geq (fp.add RNE x1 x0) (fp.div RNE x9 x10)))
(assert (fp.geq (fp.mul RNE x0 x8) (fp.sub RNE x8 x13)))
(assert (fp.gt (fp.div RNE x9 x5) (fp.mul RNE x13 x8)))
(check-sat)
