(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE x2 x7)) (fp.neg (fp.sub RNE x1 x6))))
(assert (fp.eq (fp.div RNE (fp.add RNE x6 x7) (fp.neg x2)) (fp.div RNE (fp.neg x5) (fp.add RNE x6 x9))))
(assert (fp.geq (fp.add RNE (fp.div RNE x5 x10) (fp.add RNE x8 x2)) (fp.sub RNE (fp.mul RNE x1 x7) (fp.mul RNE x7 x2))))
(assert (fp.geq (fp.neg (fp.mul RNE x7 x5)) (fp.sub RNE (fp.sub RNE x1 x2) (fp.div RNE x10 x7))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x4 x10) (fp.div RNE x5 x3)) (fp.neg (fp.mul RNE x1 x1))))
(assert (fp.geq (fp.div RNE (fp.div RNE x4 x0) (fp.add RNE x3 x0)) (fp.neg (fp.add RNE x0 x8))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x5 x10) (fp.mul RNE x5 x0)) (fp.add RNE (fp.mul RNE x10 x4) (fp.sub RNE x5 x5))))
(check-sat)
