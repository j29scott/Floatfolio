(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE (fp.mul RNE x15 x1) (fp.mul RNE x8 x17)) (fp.sub RNE (fp.div RNE x10 x6) (fp.sub RNE x19 x4))) (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x10) (fp.mul RNE x11 x2)) (fp.neg (fp.add RNE x12 x7)))) (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.div RNE x8 x12) (fp.sub RNE x15 x12)) (fp.neg (fp.add RNE x2 x1))) (fp.sub RNE (fp.div RNE (fp.neg x22) (fp.div RNE x18 x7)) (fp.neg (fp.div RNE x14 x8))))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.neg (fp.mul RNE x2 x11))) (fp.mul RNE (fp.add RNE (fp.neg x21) (fp.sub RNE x16 x21)) (fp.div RNE (fp.add RNE x8 x12) (fp.mul RNE x12 x0)))) (fp.add RNE (fp.mul RNE (fp.div RNE (fp.mul RNE x19 x6) (fp.sub RNE x20 x18)) (fp.add RNE (fp.mul RNE x17 x6) (fp.mul RNE x19 x16))) (fp.div RNE (fp.sub RNE (fp.add RNE x0 x16) (fp.neg x19)) (fp.sub RNE (fp.mul RNE x18 x5) (fp.div RNE x7 x10))))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x10) (fp.add RNE x9 x13)) (fp.mul RNE (fp.div RNE x5 x1) (fp.div RNE x4 x14))) (fp.mul RNE (fp.add RNE (fp.div RNE x20 x16) (fp.sub RNE x7 x7)) (fp.add RNE (fp.div RNE x12 x18) (fp.add RNE x1 x15)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.div RNE x0 x5) (fp.div RNE x12 x8)) (fp.sub RNE (fp.neg x0) (fp.add RNE x7 x1))) (fp.div RNE (fp.mul RNE (fp.add RNE x16 x15) (fp.sub RNE x3 x15)) (fp.sub RNE (fp.sub RNE x20 x13) (fp.div RNE x14 x18))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg (fp.mul RNE x20 x20)) (fp.neg (fp.add RNE x8 x19)))) (fp.neg (fp.add RNE (fp.div RNE (fp.add RNE x5 x10) (fp.div RNE x11 x10)) (fp.sub RNE (fp.sub RNE x22 x2) (fp.add RNE x12 x4))))))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.div RNE (fp.mul RNE x18 x0) (fp.neg x14))) (fp.neg (fp.mul RNE (fp.neg x8) (fp.div RNE x13 x18)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.mul RNE x21 x1) (fp.mul RNE x10 x1)) (fp.sub RNE (fp.add RNE x12 x18) (fp.neg x19))) (fp.neg (fp.mul RNE (fp.sub RNE x19 x13) (fp.neg x9))))))
(check-sat)
