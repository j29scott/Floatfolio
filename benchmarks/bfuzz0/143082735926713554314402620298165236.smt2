(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.add RNE x9 x11)) (fp.sub RNE (fp.mul RNE x7 x0) (fp.mul RNE x11 x8))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x11 x7) (fp.add RNE x7 x12)) (fp.mul RNE (fp.sub RNE x2 x7) (fp.add RNE x1 x5))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.div RNE (fp.sub RNE x7 x1) (fp.add RNE x2 x6))))
(assert (fp.gt (fp.neg (fp.neg x5)) (fp.sub RNE (fp.sub RNE x11 x11) (fp.neg x1))))
(assert (fp.eq (fp.div RNE (fp.neg x11) (fp.div RNE x3 x1)) (fp.neg (fp.add RNE x10 x13))))
(assert (fp.leq (fp.neg (fp.add RNE x3 x10)) (fp.mul RNE (fp.mul RNE x8 x7) (fp.div RNE x9 x12))))
(assert (fp.leq (fp.div RNE (fp.div RNE x12 x12) (fp.mul RNE x7 x5)) (fp.mul RNE (fp.neg x3) (fp.mul RNE x4 x14))))
(assert (fp.lt (fp.add RNE (fp.add RNE x11 x14) (fp.mul RNE x13 x9)) (fp.neg (fp.neg x12))))
(assert (fp.leq (fp.neg (fp.mul RNE x6 x8)) (fp.neg (fp.add RNE x0 x9))))
(assert (fp.geq (fp.div RNE (fp.add RNE x0 x13) (fp.sub RNE x13 x9)) (fp.add RNE (fp.mul RNE x3 x10) (fp.neg x2))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x1 x0) (fp.add RNE x2 x2)) (fp.add RNE (fp.add RNE x2 x11) (fp.div RNE x3 x6))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x12 x7) (fp.mul RNE x10 x12)) (fp.neg (fp.sub RNE x2 x11))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x4 x0) (fp.sub RNE x13 x7)) (fp.mul RNE (fp.sub RNE x8 x12) (fp.add RNE x4 x2))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x9 x9) (fp.add RNE x13 x0)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x3 x8) (fp.add RNE x13 x12)) (fp.sub RNE (fp.mul RNE x5 x13) (fp.neg x4))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x2 x7) (fp.div RNE x13 x7)) (fp.neg (fp.neg x13))))
(assert (fp.lt (fp.neg (fp.mul RNE x5 x6)) (fp.add RNE (fp.add RNE x1 x0) (fp.add RNE x0 x4))))
(check-sat)
