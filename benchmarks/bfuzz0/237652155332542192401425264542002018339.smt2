(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x1 x13) (fp.neg x1)) (fp.sub RNE (fp.sub RNE x15 x2) (fp.div RNE x3 x12))) (fp.sub RNE (fp.add RNE (fp.div RNE x17 x18) (fp.neg x19)) (fp.add RNE (fp.neg x14) (fp.add RNE x6 x10)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x18 x6) (fp.neg x7)) (fp.div RNE (fp.sub RNE x18 x21) (fp.add RNE x3 x7))) (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x18) (fp.mul RNE x19 x19)) (fp.mul RNE (fp.sub RNE x19 x14) (fp.mul RNE x18 x18)))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE x21 x14))) (fp.mul RNE (fp.div RNE (fp.mul RNE x2 x8) (fp.sub RNE x20 x12)) (fp.neg (fp.add RNE x12 x8)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.neg x4) (fp.sub RNE x5 x14)) (fp.add RNE (fp.div RNE x4 x21) (fp.add RNE x22 x14))) (fp.neg (fp.neg (fp.add RNE x12 x16)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.sub RNE x5 x19) (fp.mul RNE x1 x13)) (fp.mul RNE (fp.mul RNE x17 x6) (fp.div RNE x5 x1))) (fp.neg (fp.mul RNE (fp.mul RNE x11 x19) (fp.add RNE x12 x2)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.mul RNE x21 x12) (fp.add RNE x1 x4)) (fp.neg (fp.neg x9))) (fp.div RNE (fp.mul RNE (fp.neg x4) (fp.sub RNE x22 x8)) (fp.mul RNE (fp.div RNE x23 x3) (fp.sub RNE x0 x22)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.mul RNE x22 x23) (fp.div RNE x15 x19)) (fp.div RNE (fp.sub RNE x1 x1) (fp.neg x3))) (fp.neg (fp.mul RNE (fp.add RNE x17 x14) (fp.neg x20)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x22 x4) (fp.div RNE x19 x1)) (fp.sub RNE (fp.add RNE x9 x21) (fp.div RNE x20 x7))) (fp.neg (fp.div RNE (fp.neg x8) (fp.add RNE x2 x10)))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.add RNE x14 x15) (fp.div RNE x13 x15))) (fp.sub RNE (fp.div RNE (fp.div RNE x21 x22) (fp.mul RNE x17 x23)) (fp.mul RNE (fp.div RNE x17 x10) (fp.mul RNE x9 x20)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg x2) (fp.div RNE x6 x8))) (fp.neg (fp.div RNE (fp.add RNE x6 x12) (fp.div RNE x2 x7)))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.sub RNE x20 x4) (fp.mul RNE x22 x2)) (fp.div RNE (fp.mul RNE x12 x3) (fp.div RNE x14 x5))) (fp.add RNE (fp.div RNE (fp.sub RNE x13 x17) (fp.div RNE x15 x17)) (fp.add RNE (fp.add RNE x18 x19) (fp.div RNE x0 x20)))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.div RNE x13 x14) (fp.mul RNE x0 x16)) (fp.add RNE (fp.sub RNE x5 x21) (fp.div RNE x11 x0))) (fp.add RNE (fp.add RNE (fp.neg x17) (fp.neg x23)) (fp.div RNE (fp.mul RNE x12 x17) (fp.sub RNE x4 x18)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.mul RNE x19 x23) (fp.add RNE x22 x23)) (fp.sub RNE (fp.neg x10) (fp.mul RNE x7 x15))) (fp.sub RNE (fp.div RNE (fp.sub RNE x16 x1) (fp.neg x0)) (fp.mul RNE (fp.neg x0) (fp.add RNE x10 x9)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.sub RNE x2 x3) (fp.div RNE x17 x16)) (fp.mul RNE (fp.sub RNE x3 x4) (fp.mul RNE x17 x18))) (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x4) (fp.add RNE x20 x12)) (fp.sub RNE (fp.add RNE x1 x5) (fp.sub RNE x10 x4)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.div RNE x23 x20)) (fp.neg (fp.mul RNE x10 x6))) (fp.neg (fp.div RNE (fp.add RNE x22 x12) (fp.neg x3)))))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.mul RNE x9 x0) (fp.div RNE x21 x6)) (fp.mul RNE (fp.sub RNE x4 x9) (fp.add RNE x4 x17))) (fp.add RNE (fp.mul RNE (fp.div RNE x20 x13) (fp.neg x10)) (fp.div RNE (fp.mul RNE x4 x12) (fp.sub RNE x10 x17)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x22))) (fp.add RNE (fp.add RNE (fp.neg x4) (fp.mul RNE x5 x17)) (fp.div RNE (fp.neg x2) (fp.neg x15)))))
(check-sat)
