(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.sub RNE x2 x0) (fp.neg x8)))
(assert (fp.gt (fp.mul RNE x4 x6) (fp.neg x5)))
(assert (fp.eq (fp.add RNE x10 x3) (fp.mul RNE x12 x12)))
(assert (fp.lt (fp.neg x6) (fp.mul RNE x11 x6)))
(assert (fp.geq (fp.div RNE x8 x4) (fp.mul RNE x10 x8)))
(assert (fp.leq (fp.sub RNE x4 x6) (fp.div RNE x9 x5)))
(assert (fp.lt (fp.sub RNE x6 x9) (fp.mul RNE x10 x12)))
(assert (fp.gt (fp.div RNE x7 x6) (fp.div RNE x3 x3)))
(assert (fp.lt (fp.sub RNE x6 x2) (fp.mul RNE x12 x6)))
(assert (fp.lt (fp.div RNE x7 x2) (fp.sub RNE x1 x1)))
(assert (fp.geq (fp.mul RNE x10 x0) (fp.add RNE x2 x8)))
(assert (fp.gt (fp.div RNE x7 x8) (fp.neg x8)))
(assert (fp.leq (fp.div RNE x3 x7) (fp.mul RNE x2 x3)))
(assert (fp.geq (fp.div RNE x0 x11) (fp.add RNE x5 x1)))
(assert (fp.gt (fp.add RNE x1 x8) (fp.div RNE x10 x12)))
(assert (fp.geq (fp.mul RNE x8 x5) (fp.neg x2)))
(check-sat)
