(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE x12 x4) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x12 x5) (fp.neg x12)))
(assert (fp.eq (fp.mul RNE x12 x12) (fp.sub RNE x0 x10)))
(assert (fp.eq (fp.add RNE x6 x0) (fp.div RNE x9 x1)))
(assert (fp.gt (fp.neg x0) (fp.add RNE x2 x8)))
(assert (fp.geq (fp.div RNE x9 x9) (fp.div RNE x6 x8)))
(assert (fp.geq (fp.mul RNE x4 x4) (fp.sub RNE x7 x5)))
(assert (fp.leq (fp.mul RNE x1 x10) (fp.neg x9)))
(assert (fp.geq (fp.neg x11) (fp.sub RNE x7 x7)))
(assert (fp.eq (fp.mul RNE x0 x7) (fp.div RNE x9 x7)))
(assert (fp.lt (fp.mul RNE x1 x7) (fp.add RNE x1 x2)))
(assert (fp.eq (fp.div RNE x9 x0) (fp.add RNE x9 x2)))
(assert (fp.leq (fp.add RNE x2 x6) (fp.add RNE x10 x10)))
(assert (fp.eq (fp.neg x6) (fp.div RNE x4 x1)))
(assert (fp.gt (fp.mul RNE x7 x6) (fp.div RNE x7 x9)))
(assert (fp.leq (fp.add RNE x1 x12) (fp.div RNE x12 x1)))
(assert (fp.eq (fp.neg x7) (fp.add RNE x8 x6)))
(assert (fp.geq (fp.sub RNE x4 x1) (fp.add RNE x11 x2)))
(check-sat)
