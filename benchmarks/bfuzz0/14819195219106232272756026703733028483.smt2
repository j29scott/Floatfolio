(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x11 x10) (fp.add RNE x12 x12)) (fp.sub RNE (fp.add RNE x1 x1) (fp.sub RNE x1 x12))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x9 x2) (fp.mul RNE x6 x12)) (fp.add RNE (fp.add RNE x2 x14) (fp.sub RNE x6 x12))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x0 x12) (fp.sub RNE x3 x4)) (fp.add RNE (fp.neg x8) (fp.sub RNE x6 x2))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x1 x6) (fp.div RNE x13 x10)) (fp.mul RNE (fp.add RNE x1 x1) (fp.add RNE x11 x6))))
(assert (fp.geq (fp.neg (fp.mul RNE x7 x4)) (fp.neg (fp.sub RNE x2 x14))))
(assert (fp.eq (fp.add RNE (fp.add RNE x3 x8) (fp.div RNE x5 x6)) (fp.mul RNE (fp.mul RNE x7 x11) (fp.add RNE x5 x11))))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x5) (fp.sub RNE x1 x2)) (fp.div RNE (fp.neg x0) (fp.neg x8))))
(check-sat)
