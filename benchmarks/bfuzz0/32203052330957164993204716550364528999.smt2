(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.div RNE x7 x5) (fp.div RNE x14 x10)) (fp.div RNE (fp.neg x0) (fp.sub RNE x2 x6))))
(assert (fp.gt (fp.neg (fp.add RNE x7 x6)) (fp.mul RNE (fp.mul RNE x7 x6) (fp.sub RNE x13 x6))))
(assert (fp.leq (fp.div RNE (fp.neg x3) (fp.div RNE x13 x1)) (fp.sub RNE (fp.sub RNE x7 x4) (fp.sub RNE x9 x11))))
(assert (fp.leq (fp.add RNE (fp.neg x9) (fp.sub RNE x4 x8)) (fp.sub RNE (fp.add RNE x12 x11) (fp.sub RNE x4 x0))))
(assert (fp.leq (fp.neg (fp.neg x12)) (fp.neg (fp.neg x8))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x14 x11) (fp.div RNE x11 x4)) (fp.mul RNE (fp.div RNE x14 x10) (fp.neg x7))))
(assert (fp.leq (fp.div RNE (fp.neg x7) (fp.div RNE x12 x2)) (fp.neg (fp.mul RNE x9 x12))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x2 x4) (fp.div RNE x3 x12)) (fp.neg (fp.mul RNE x10 x11))))
(assert (fp.eq (fp.neg (fp.add RNE x1 x3)) (fp.mul RNE (fp.neg x5) (fp.add RNE x11 x12))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x5 x13) (fp.add RNE x12 x3)) (fp.mul RNE (fp.neg x11) (fp.div RNE x4 x0))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x9 x8) (fp.sub RNE x12 x12)) (fp.div RNE (fp.div RNE x9 x10) (fp.sub RNE x11 x10))))
(assert (fp.leq (fp.div RNE (fp.add RNE x7 x13) (fp.div RNE x8 x5)) (fp.mul RNE (fp.add RNE x6 x1) (fp.neg x14))))
(check-sat)
