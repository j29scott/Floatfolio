(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.neg x7) (fp.mul RNE x11 x0)) (fp.mul RNE (fp.add RNE x4 x2) (fp.add RNE x10 x6))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x2 x5) (fp.sub RNE x2 x3)) (fp.neg (fp.sub RNE x3 x5))))
(assert (fp.eq (fp.add RNE (fp.add RNE x11 x6) (fp.sub RNE x3 x8)) (fp.sub RNE (fp.sub RNE x3 x1) (fp.div RNE x7 x3))))
(assert (fp.geq (fp.neg (fp.sub RNE x11 x0)) (fp.sub RNE (fp.neg x3) (fp.neg x5))))
(assert (fp.geq (fp.add RNE (fp.div RNE x3 x5) (fp.add RNE x11 x8)) (fp.mul RNE (fp.mul RNE x5 x1) (fp.add RNE x2 x8))))
(assert (fp.eq (fp.neg (fp.div RNE x4 x8)) (fp.mul RNE (fp.div RNE x2 x7) (fp.mul RNE x1 x5))))
(assert (fp.leq (fp.add RNE (fp.neg x3) (fp.sub RNE x6 x11)) (fp.div RNE (fp.sub RNE x0 x0) (fp.neg x1))))
(assert (fp.gt (fp.div RNE (fp.div RNE x0 x8) (fp.div RNE x3 x9)) (fp.mul RNE (fp.sub RNE x7 x7) (fp.sub RNE x2 x1))))
(assert (fp.lt (fp.add RNE (fp.div RNE x11 x0) (fp.div RNE x5 x8)) (fp.neg (fp.sub RNE x7 x1))))
(assert (fp.eq (fp.div RNE (fp.neg x5) (fp.mul RNE x1 x4)) (fp.neg (fp.add RNE x11 x1))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x7 x0) (fp.sub RNE x10 x1)) (fp.add RNE (fp.neg x6) (fp.sub RNE x6 x1))))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x0)) (fp.mul RNE (fp.div RNE x5 x10) (fp.div RNE x7 x9))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x3 x2) (fp.neg x0)) (fp.div RNE (fp.mul RNE x8 x9) (fp.mul RNE x9 x2))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x0 x10) (fp.div RNE x3 x3)) (fp.mul RNE (fp.div RNE x10 x0) (fp.sub RNE x8 x0))))
(assert (fp.gt (fp.mul RNE (fp.neg x3) (fp.div RNE x3 x0)) (fp.add RNE (fp.div RNE x0 x0) (fp.add RNE x7 x5))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x0)) (fp.sub RNE (fp.mul RNE x2 x0) (fp.mul RNE x3 x4))))
(check-sat)
