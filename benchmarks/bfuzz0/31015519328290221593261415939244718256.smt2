(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.neg x8) (fp.sub RNE x7 x3))) (fp.neg (fp.add RNE (fp.div RNE x10 x0) (fp.add RNE x8 x4)))))
(assert (fp.geq (fp.sub RNE (fp.div RNE (fp.div RNE x3 x1) (fp.mul RNE x5 x2)) (fp.mul RNE (fp.add RNE x8 x5) (fp.div RNE x5 x7))) (fp.add RNE (fp.add RNE (fp.div RNE x8 x0) (fp.add RNE x5 x3)) (fp.sub RNE (fp.add RNE x3 x6) (fp.neg x0)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.add RNE x6 x0) (fp.mul RNE x0 x3)) (fp.add RNE (fp.mul RNE x5 x5) (fp.add RNE x5 x4))) (fp.neg (fp.div RNE (fp.mul RNE x0 x7) (fp.add RNE x1 x10)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.add RNE x2 x4) (fp.div RNE x2 x10)) (fp.sub RNE (fp.neg x8) (fp.add RNE x7 x2))) (fp.neg (fp.mul RNE (fp.neg x5) (fp.sub RNE x6 x5)))))
(check-sat)
