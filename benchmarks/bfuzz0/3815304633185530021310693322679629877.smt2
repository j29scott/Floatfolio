(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.div RNE (fp.div RNE (fp.neg x20) (fp.neg x2)) (fp.add RNE (fp.add RNE x13 x2) (fp.div RNE x16 x14))) (fp.div RNE (fp.div RNE (fp.sub RNE x23 x23) (fp.add RNE x7 x22)) (fp.mul RNE (fp.add RNE x13 x14) (fp.sub RNE x12 x10)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.div RNE x11 x17) (fp.mul RNE x3 x17)) (fp.neg (fp.mul RNE x6 x8))) (fp.mul RNE (fp.sub RNE (fp.neg x12) (fp.sub RNE x22 x16)) (fp.mul RNE (fp.mul RNE x9 x3) (fp.sub RNE x23 x3))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.mul RNE (fp.add RNE x6 x8) (fp.add RNE x11 x12)) (fp.neg (fp.add RNE x16 x2))) (fp.neg (fp.neg (fp.div RNE x23 x3)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.add RNE x1 x7) (fp.add RNE x9 x16)) (fp.div RNE (fp.add RNE x0 x22) (fp.mul RNE x7 x11))) (fp.neg (fp.add RNE (fp.neg x24) (fp.mul RNE x12 x19))))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.mul RNE (fp.div RNE x24 x3) (fp.add RNE x9 x9))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x9 x9) (fp.mul RNE x9 x14)) (fp.mul RNE (fp.div RNE x17 x2) (fp.neg x3)))) (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x3 x14) (fp.mul RNE x0 x5))))))
(assert (fp.lt (fp.neg (fp.mul RNE (fp.add RNE (fp.mul RNE x6 x2) (fp.sub RNE x24 x8)) (fp.mul RNE (fp.sub RNE x19 x23) (fp.div RNE x9 x8)))) (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.neg x24) (fp.div RNE x7 x22)) (fp.div RNE (fp.sub RNE x15 x20) (fp.add RNE x15 x16))) (fp.neg (fp.neg (fp.sub RNE x15 x5))))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.sub RNE (fp.add RNE x5 x6) (fp.sub RNE x2 x24))) (fp.mul RNE (fp.neg (fp.add RNE x6 x7)) (fp.add RNE (fp.mul RNE x7 x1) (fp.div RNE x17 x23)))) (fp.neg (fp.add RNE (fp.mul RNE (fp.add RNE x7 x19) (fp.add RNE x20 x24)) (fp.add RNE (fp.sub RNE x19 x10) (fp.neg x17))))))
(check-sat)
