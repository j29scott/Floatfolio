(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.add RNE (fp.neg x4) (fp.sub RNE x8 x2)) (fp.add RNE (fp.div RNE x10 x0) (fp.neg x5))))
(assert (fp.gt (fp.neg (fp.mul RNE x3 x4)) (fp.neg (fp.mul RNE x3 x6))))
(assert (fp.lt (fp.neg (fp.sub RNE x13 x11)) (fp.sub RNE (fp.div RNE x11 x4) (fp.mul RNE x0 x4))))
(assert (fp.geq (fp.sub RNE (fp.neg x3) (fp.mul RNE x12 x9)) (fp.sub RNE (fp.div RNE x7 x10) (fp.neg x8))))
(assert (fp.eq (fp.add RNE (fp.div RNE x1 x12) (fp.div RNE x2 x8)) (fp.div RNE (fp.mul RNE x12 x7) (fp.mul RNE x10 x4))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x6 x1) (fp.add RNE x13 x12)) (fp.add RNE (fp.div RNE x10 x9) (fp.neg x10))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x1) (fp.div RNE x10 x13)) (fp.sub RNE (fp.div RNE x2 x2) (fp.div RNE x9 x8))))
(assert (fp.eq (fp.div RNE (fp.neg x13) (fp.div RNE x2 x3)) (fp.mul RNE (fp.div RNE x13 x0) (fp.div RNE x10 x7))))
(assert (fp.geq (fp.neg (fp.div RNE x13 x7)) (fp.mul RNE (fp.sub RNE x13 x13) (fp.sub RNE x11 x3))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x0 x6) (fp.div RNE x7 x7)) (fp.mul RNE (fp.neg x8) (fp.mul RNE x9 x13))))
(assert (fp.eq (fp.neg (fp.div RNE x2 x0)) (fp.add RNE (fp.mul RNE x2 x6) (fp.add RNE x2 x13))))
(check-sat)
