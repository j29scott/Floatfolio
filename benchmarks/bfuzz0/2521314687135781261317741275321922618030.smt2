(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE x3 x0) (fp.div RNE x7 x6)))
(assert (fp.lt (fp.add RNE x3 x12) (fp.neg x4)))
(assert (fp.gt (fp.add RNE x4 x13) (fp.sub RNE x7 x11)))
(assert (fp.gt (fp.add RNE x7 x5) (fp.add RNE x4 x14)))
(assert (fp.eq (fp.div RNE x0 x0) (fp.neg x3)))
(assert (fp.lt (fp.div RNE x13 x14) (fp.mul RNE x6 x7)))
(assert (fp.geq (fp.add RNE x1 x4) (fp.neg x12)))
(assert (fp.geq (fp.neg x2) (fp.add RNE x10 x10)))
(assert (fp.eq (fp.sub RNE x10 x13) (fp.add RNE x6 x3)))
(assert (fp.leq (fp.sub RNE x10 x13) (fp.mul RNE x12 x6)))
(assert (fp.leq (fp.sub RNE x4 x3) (fp.sub RNE x5 x8)))
(assert (fp.leq (fp.div RNE x3 x4) (fp.neg x9)))
(assert (fp.lt (fp.add RNE x12 x2) (fp.add RNE x8 x12)))
(assert (fp.gt (fp.sub RNE x4 x8) (fp.sub RNE x1 x6)))
(check-sat)
