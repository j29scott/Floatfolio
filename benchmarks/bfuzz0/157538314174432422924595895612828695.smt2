(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.sub RNE x16 x8) (fp.add RNE x13 x24)) (fp.mul RNE (fp.mul RNE x24 x1) (fp.mul RNE x26 x18))))
(assert (fp.leq (fp.div RNE (fp.add RNE x23 x8) (fp.sub RNE x11 x20)) (fp.neg (fp.mul RNE x25 x9))))
(assert (fp.gt (fp.add RNE (fp.div RNE x26 x2) (fp.sub RNE x18 x15)) (fp.div RNE (fp.mul RNE x21 x21) (fp.mul RNE x18 x0))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x12 x0) (fp.add RNE x26 x18)) (fp.mul RNE (fp.sub RNE x21 x11) (fp.mul RNE x4 x7))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x8 x3) (fp.div RNE x17 x13)) (fp.neg (fp.div RNE x22 x20))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x23 x20) (fp.add RNE x7 x23)) (fp.neg (fp.sub RNE x25 x2))))
(assert (fp.lt (fp.add RNE (fp.div RNE x9 x7) (fp.div RNE x2 x21)) (fp.sub RNE (fp.div RNE x23 x5) (fp.div RNE x13 x21))))
(assert (fp.lt (fp.neg (fp.neg x8)) (fp.sub RNE (fp.div RNE x6 x17) (fp.div RNE x25 x7))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x18 x11) (fp.div RNE x12 x4)) (fp.add RNE (fp.add RNE x22 x22) (fp.div RNE x16 x17))))
(check-sat)
