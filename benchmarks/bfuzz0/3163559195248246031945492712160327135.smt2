(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE x10 x0))) (fp.div RNE (fp.neg (fp.sub RNE x3 x4)) (fp.sub RNE (fp.sub RNE x2 x13) (fp.mul RNE x9 x3)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x5) (fp.mul RNE x6 x12)) (fp.add RNE (fp.add RNE x6 x3) (fp.div RNE x9 x2))) (fp.mul RNE (fp.sub RNE (fp.neg x0) (fp.neg x7)) (fp.sub RNE (fp.neg x5) (fp.div RNE x7 x0)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE x5 x10) (fp.add RNE x8 x7)) (fp.div RNE (fp.neg x8) (fp.add RNE x1 x6))) (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x10) (fp.add RNE x3 x1)) (fp.div RNE (fp.sub RNE x12 x3) (fp.add RNE x2 x5)))))
(check-sat)
