(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.div RNE x6 x6) (fp.mul RNE x3 x2)) (fp.mul RNE (fp.sub RNE x9 x4) (fp.neg x2))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x8 x3) (fp.add RNE x3 x6)) (fp.mul RNE (fp.sub RNE x0 x9) (fp.add RNE x10 x2))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x9 x10) (fp.add RNE x5 x2)) (fp.neg (fp.add RNE x10 x1))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x5 x2) (fp.div RNE x8 x3)) (fp.neg (fp.mul RNE x9 x4))))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x5) (fp.sub RNE x10 x4)) (fp.mul RNE (fp.add RNE x5 x0) (fp.add RNE x6 x3))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x3) (fp.div RNE x0 x5)) (fp.mul RNE (fp.neg x1) (fp.div RNE x6 x0))))
(assert (fp.leq (fp.sub RNE (fp.neg x7) (fp.div RNE x4 x2)) (fp.neg (fp.mul RNE x0 x6))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x0 x0) (fp.mul RNE x1 x6)) (fp.sub RNE (fp.sub RNE x4 x8) (fp.mul RNE x6 x7))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x10 x7) (fp.mul RNE x4 x0)) (fp.add RNE (fp.neg x7) (fp.mul RNE x2 x5))))
(assert (fp.leq (fp.add RNE (fp.neg x2) (fp.div RNE x0 x8)) (fp.mul RNE (fp.mul RNE x7 x10) (fp.neg x3))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x6 x7) (fp.neg x6)) (fp.div RNE (fp.add RNE x0 x4) (fp.div RNE x7 x9))))
(check-sat)
