(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE x1 x12) (fp.add RNE x0 x13))) (fp.neg (fp.add RNE (fp.add RNE x6 x10) (fp.sub RNE x3 x12)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.sub RNE x14 x9) (fp.add RNE x15 x11)) (fp.neg (fp.neg x3))) (fp.add RNE (fp.mul RNE (fp.sub RNE x9 x4) (fp.neg x2)) (fp.sub RNE (fp.add RNE x4 x12) (fp.div RNE x6 x7)))))
(assert (fp.geq (fp.neg (fp.neg (fp.div RNE x8 x10))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x5 x1) (fp.add RNE x0 x2)) (fp.div RNE (fp.add RNE x7 x6) (fp.div RNE x15 x14)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.div RNE x8 x15)) (fp.mul RNE (fp.sub RNE x6 x2) (fp.sub RNE x12 x13))) (fp.mul RNE (fp.neg (fp.mul RNE x11 x0)) (fp.div RNE (fp.mul RNE x7 x15) (fp.neg x14)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x1) (fp.add RNE x3 x5)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x12 x10))) (fp.sub RNE (fp.div RNE (fp.mul RNE x15 x15) (fp.div RNE x11 x8)) (fp.sub RNE (fp.add RNE x8 x0) (fp.div RNE x6 x13)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x7 x1) (fp.neg x14))) (fp.sub RNE (fp.add RNE (fp.div RNE x3 x7) (fp.neg x12)) (fp.mul RNE (fp.sub RNE x11 x9) (fp.sub RNE x0 x5)))))
(assert (fp.geq (fp.div RNE (fp.neg (fp.mul RNE x9 x13)) (fp.neg (fp.div RNE x10 x4))) (fp.sub RNE (fp.neg (fp.neg x9)) (fp.add RNE (fp.div RNE x15 x4) (fp.neg x6)))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x4 x0) (fp.add RNE x6 x13)) (fp.mul RNE (fp.mul RNE x0 x5) (fp.div RNE x10 x3))) (fp.mul RNE (fp.mul RNE (fp.div RNE x3 x7) (fp.add RNE x8 x1)) (fp.add RNE (fp.div RNE x12 x6) (fp.add RNE x3 x13)))))
(check-sat)
