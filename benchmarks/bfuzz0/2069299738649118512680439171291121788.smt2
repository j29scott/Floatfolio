(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.add RNE x15 x12) (fp.neg x5)) (fp.mul RNE (fp.mul RNE x6 x11) (fp.add RNE x10 x4))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x11 x0) (fp.div RNE x4 x14)) (fp.neg (fp.sub RNE x8 x15))))
(assert (fp.leq (fp.neg (fp.div RNE x14 x14)) (fp.neg (fp.div RNE x0 x3))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x3 x13) (fp.neg x3)) (fp.add RNE (fp.add RNE x9 x14) (fp.div RNE x4 x4))))
(assert (fp.eq (fp.div RNE (fp.div RNE x10 x5) (fp.div RNE x9 x12)) (fp.div RNE (fp.neg x4) (fp.div RNE x5 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x9 x4) (fp.neg x15)) (fp.mul RNE (fp.neg x6) (fp.sub RNE x8 x7))))
(assert (fp.geq (fp.neg (fp.sub RNE x8 x6)) (fp.mul RNE (fp.add RNE x7 x5) (fp.mul RNE x7 x12))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x6 x12) (fp.mul RNE x12 x10)) (fp.div RNE (fp.div RNE x4 x6) (fp.add RNE x0 x8))))
(assert (fp.lt (fp.neg (fp.div RNE x4 x10)) (fp.div RNE (fp.add RNE x10 x8) (fp.sub RNE x10 x12))))
(assert (fp.eq (fp.add RNE (fp.add RNE x12 x1) (fp.add RNE x4 x7)) (fp.neg (fp.add RNE x1 x15))))
(assert (fp.eq (fp.div RNE (fp.add RNE x9 x12) (fp.sub RNE x4 x11)) (fp.add RNE (fp.add RNE x10 x3) (fp.sub RNE x14 x15))))
(assert (fp.gt (fp.add RNE (fp.add RNE x5 x10) (fp.add RNE x4 x10)) (fp.div RNE (fp.mul RNE x5 x5) (fp.neg x6))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x11 x5) (fp.div RNE x11 x13)) (fp.sub RNE (fp.add RNE x15 x3) (fp.div RNE x15 x2))))
(assert (fp.leq (fp.mul RNE (fp.neg x14) (fp.sub RNE x9 x12)) (fp.sub RNE (fp.add RNE x0 x14) (fp.div RNE x3 x4))))
(assert (fp.gt (fp.add RNE (fp.div RNE x9 x6) (fp.neg x13)) (fp.neg (fp.mul RNE x2 x1))))
(assert (fp.eq (fp.add RNE (fp.neg x12) (fp.add RNE x3 x3)) (fp.neg (fp.sub RNE x9 x15))))
(assert (fp.eq (fp.add RNE (fp.neg x14) (fp.sub RNE x4 x3)) (fp.sub RNE (fp.neg x14) (fp.add RNE x15 x3))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x13 x13) (fp.add RNE x14 x4)) (fp.div RNE (fp.sub RNE x9 x12) (fp.sub RNE x12 x2))))
(assert (fp.eq (fp.neg (fp.mul RNE x9 x2)) (fp.neg (fp.add RNE x9 x7))))
(assert (fp.lt (fp.neg (fp.add RNE x9 x5)) (fp.sub RNE (fp.add RNE x4 x2) (fp.sub RNE x4 x14))))
(check-sat)
