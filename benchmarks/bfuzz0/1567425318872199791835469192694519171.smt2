(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE x0 x3) (fp.add RNE x5 x10)) (fp.neg (fp.add RNE x8 x8))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x1 x8) (fp.div RNE x7 x6)) (fp.add RNE (fp.div RNE x7 x3) (fp.div RNE x10 x8))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x2 x4) (fp.div RNE x0 x8)) (fp.neg (fp.sub RNE x3 x2))))
(assert (fp.geq (fp.neg (fp.mul RNE x5 x2)) (fp.sub RNE (fp.div RNE x2 x3) (fp.div RNE x4 x9))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x8 x9) (fp.sub RNE x6 x2)) (fp.sub RNE (fp.add RNE x10 x9) (fp.add RNE x7 x10))))
(assert (fp.geq (fp.add RNE (fp.neg x10) (fp.neg x0)) (fp.neg (fp.neg x10))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x10 x3) (fp.sub RNE x5 x10)) (fp.neg (fp.sub RNE x9 x0))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x0 x7) (fp.sub RNE x2 x8)) (fp.neg (fp.mul RNE x4 x2))))
(assert (fp.lt (fp.add RNE (fp.div RNE x5 x9) (fp.add RNE x6 x5)) (fp.sub RNE (fp.div RNE x1 x3) (fp.sub RNE x9 x2))))
(assert (fp.geq (fp.add RNE (fp.neg x9) (fp.sub RNE x2 x6)) (fp.add RNE (fp.div RNE x1 x4) (fp.neg x1))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x6 x6) (fp.neg x0)) (fp.neg (fp.div RNE x2 x3))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x8 x9) (fp.sub RNE x1 x6)) (fp.mul RNE (fp.div RNE x4 x8) (fp.mul RNE x5 x4))))
(assert (fp.geq (fp.div RNE (fp.add RNE x7 x4) (fp.sub RNE x6 x9)) (fp.div RNE (fp.neg x0) (fp.neg x4))))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x10) (fp.mul RNE x7 x2)) (fp.add RNE (fp.div RNE x1 x4) (fp.sub RNE x3 x6))))
(assert (fp.geq (fp.add RNE (fp.add RNE x10 x4) (fp.mul RNE x6 x2)) (fp.mul RNE (fp.neg x1) (fp.sub RNE x6 x10))))
(assert (fp.lt (fp.neg (fp.sub RNE x6 x3)) (fp.sub RNE (fp.neg x10) (fp.add RNE x3 x9))))
(assert (fp.gt (fp.mul RNE (fp.add RNE x2 x8) (fp.div RNE x0 x8)) (fp.add RNE (fp.neg x8) (fp.add RNE x10 x9))))
(assert (fp.eq (fp.add RNE (fp.add RNE x4 x9) (fp.neg x4)) (fp.mul RNE (fp.div RNE x8 x0) (fp.mul RNE x2 x0))))
(check-sat)
