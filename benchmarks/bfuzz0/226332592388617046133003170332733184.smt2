(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.add RNE x4 x0) (fp.div RNE x13 x1)) (fp.mul RNE (fp.sub RNE x16 x3) (fp.neg x9))))
(assert (fp.geq (fp.neg (fp.add RNE x12 x4)) (fp.mul RNE (fp.mul RNE x10 x16) (fp.sub RNE x15 x13))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x11 x16) (fp.div RNE x3 x13)) (fp.div RNE (fp.mul RNE x15 x11) (fp.neg x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x10 x14) (fp.mul RNE x10 x11)) (fp.div RNE (fp.neg x5) (fp.mul RNE x3 x19))))
(check-sat)
