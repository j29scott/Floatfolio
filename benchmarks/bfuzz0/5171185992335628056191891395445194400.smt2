(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.div RNE x16 x15) (fp.div RNE x0 x16)) (fp.neg (fp.div RNE x17 x19))) (fp.div RNE (fp.mul RNE (fp.add RNE x9 x0) (fp.neg x14)) (fp.neg (fp.mul RNE x4 x13)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.mul RNE x13 x13) (fp.div RNE x13 x1))) (fp.div RNE (fp.mul RNE (fp.div RNE x17 x14) (fp.mul RNE x9 x0)) (fp.add RNE (fp.sub RNE x8 x8) (fp.sub RNE x13 x12)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x6 x15) (fp.add RNE x4 x13))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x19 x12) (fp.add RNE x9 x13)) (fp.div RNE (fp.sub RNE x9 x16) (fp.neg x9)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x6))) (fp.add RNE (fp.neg (fp.div RNE x14 x18)) (fp.add RNE (fp.sub RNE x1 x15) (fp.sub RNE x0 x15)))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.add RNE x0 x6) (fp.neg x13)) (fp.sub RNE (fp.neg x15) (fp.mul RNE x7 x11))) (fp.div RNE (fp.add RNE (fp.sub RNE x5 x16) (fp.div RNE x7 x14)) (fp.add RNE (fp.div RNE x19 x1) (fp.sub RNE x4 x11)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.sub RNE x19 x1)) (fp.neg (fp.add RNE x18 x14))) (fp.div RNE (fp.neg (fp.sub RNE x16 x12)) (fp.sub RNE (fp.mul RNE x17 x11) (fp.mul RNE x0 x18)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.sub RNE x13 x11)) (fp.neg (fp.div RNE x16 x17))) (fp.div RNE (fp.mul RNE (fp.add RNE x10 x12) (fp.sub RNE x1 x6)) (fp.sub RNE (fp.sub RNE x10 x15) (fp.neg x15)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE x7 x0) (fp.add RNE x10 x16)) (fp.neg (fp.mul RNE x14 x17))) (fp.add RNE (fp.mul RNE (fp.add RNE x1 x14) (fp.add RNE x18 x12)) (fp.add RNE (fp.add RNE x10 x15) (fp.neg x7)))))
(check-sat)
