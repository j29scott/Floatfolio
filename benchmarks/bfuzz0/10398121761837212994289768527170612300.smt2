(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE x4 x6) (fp.sub RNE x3 x13)) (fp.neg (fp.neg x14))))
(assert (fp.geq (fp.neg (fp.add RNE x14 x13)) (fp.neg (fp.neg x3))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x5 x0) (fp.mul RNE x9 x7)) (fp.add RNE (fp.neg x4) (fp.neg x3))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x7 x13) (fp.div RNE x13 x5)) (fp.neg (fp.sub RNE x13 x3))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x9 x0) (fp.add RNE x11 x13)) (fp.div RNE (fp.div RNE x4 x6) (fp.neg x9))))
(check-sat)
