(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x17) (fp.sub RNE x10 x5)))
(assert (fp.leq (fp.sub RNE x5 x5) (fp.sub RNE x12 x5)))
(assert (fp.eq (fp.add RNE x20 x12) (fp.mul RNE x10 x6)))
(assert (fp.leq (fp.div RNE x7 x12) (fp.mul RNE x7 x15)))
(assert (fp.leq (fp.add RNE x19 x8) (fp.add RNE x19 x11)))
(assert (fp.eq (fp.sub RNE x19 x10) (fp.sub RNE x11 x13)))
(assert (fp.lt (fp.add RNE x8 x1) (fp.div RNE x18 x0)))
(assert (fp.lt (fp.add RNE x19 x3) (fp.mul RNE x9 x13)))
(assert (fp.lt (fp.add RNE x15 x7) (fp.sub RNE x13 x2)))
(assert (fp.eq (fp.neg x8) (fp.mul RNE x0 x14)))
(assert (fp.gt (fp.sub RNE x17 x2) (fp.mul RNE x1 x8)))
(assert (fp.geq (fp.sub RNE x19 x3) (fp.sub RNE x17 x10)))
(check-sat)
