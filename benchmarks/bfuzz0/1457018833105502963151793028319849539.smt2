(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.neg x20) (fp.neg x0)) (fp.add RNE (fp.neg x13) (fp.div RNE x5 x22))))
(assert (fp.eq (fp.div RNE (fp.add RNE x2 x1) (fp.add RNE x19 x9)) (fp.div RNE (fp.add RNE x11 x18) (fp.mul RNE x20 x6))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x17 x14) (fp.add RNE x5 x14)) (fp.div RNE (fp.neg x1) (fp.neg x16))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x20 x13) (fp.sub RNE x13 x16)) (fp.sub RNE (fp.neg x21) (fp.add RNE x4 x2))))
(assert (fp.lt (fp.neg (fp.neg x16)) (fp.add RNE (fp.sub RNE x13 x0) (fp.neg x3))))
(assert (fp.leq (fp.add RNE (fp.div RNE x15 x14) (fp.add RNE x21 x19)) (fp.div RNE (fp.add RNE x3 x20) (fp.sub RNE x9 x0))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x19 x1) (fp.sub RNE x5 x20)) (fp.mul RNE (fp.neg x4) (fp.div RNE x13 x0))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x19 x14) (fp.mul RNE x2 x14)) (fp.neg (fp.add RNE x11 x0))))
(assert (fp.gt (fp.div RNE (fp.neg x3) (fp.div RNE x8 x5)) (fp.div RNE (fp.mul RNE x16 x11) (fp.mul RNE x23 x1))))
(assert (fp.lt (fp.neg (fp.add RNE x11 x0)) (fp.mul RNE (fp.mul RNE x15 x6) (fp.mul RNE x12 x6))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x7 x3) (fp.div RNE x11 x10)) (fp.div RNE (fp.sub RNE x22 x14) (fp.neg x16))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x3 x16) (fp.add RNE x0 x16)) (fp.neg (fp.mul RNE x3 x21))))
(assert (fp.leq (fp.neg (fp.sub RNE x16 x16)) (fp.mul RNE (fp.add RNE x14 x14) (fp.mul RNE x7 x18))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x11 x10) (fp.sub RNE x21 x5)) (fp.neg (fp.add RNE x19 x4))))
(assert (fp.lt (fp.neg (fp.mul RNE x2 x16)) (fp.div RNE (fp.div RNE x18 x20) (fp.mul RNE x15 x6))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x4 x23) (fp.add RNE x11 x21)) (fp.sub RNE (fp.mul RNE x17 x0) (fp.neg x9))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x5 x8) (fp.add RNE x21 x9)) (fp.sub RNE (fp.neg x16) (fp.add RNE x22 x6))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x19 x6) (fp.neg x5)) (fp.mul RNE (fp.mul RNE x1 x4) (fp.neg x19))))
(check-sat)
