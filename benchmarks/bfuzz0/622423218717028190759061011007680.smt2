(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x0 x7) (fp.add RNE x0 x0)) (fp.mul RNE (fp.add RNE x8 x1) (fp.neg x2))))
(assert (fp.geq (fp.div RNE (fp.div RNE x2 x7) (fp.add RNE x1 x7)) (fp.div RNE (fp.div RNE x5 x7) (fp.mul RNE x3 x5))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x0 x2) (fp.mul RNE x4 x2)) (fp.add RNE (fp.neg x3) (fp.mul RNE x6 x5))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x4 x8) (fp.mul RNE x7 x8)) (fp.mul RNE (fp.sub RNE x1 x1) (fp.mul RNE x6 x4))))
(assert (fp.lt (fp.sub RNE (fp.neg x7) (fp.mul RNE x7 x5)) (fp.mul RNE (fp.mul RNE x5 x4) (fp.mul RNE x5 x6))))
(assert (fp.lt (fp.div RNE (fp.neg x3) (fp.sub RNE x3 x1)) (fp.add RNE (fp.add RNE x0 x5) (fp.sub RNE x5 x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x7 x4) (fp.div RNE x3 x4)) (fp.add RNE (fp.sub RNE x7 x5) (fp.neg x3))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x5 x1) (fp.sub RNE x1 x2)) (fp.neg (fp.sub RNE x0 x3))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x1 x2) (fp.neg x7)) (fp.div RNE (fp.add RNE x6 x1) (fp.add RNE x1 x0))))
(check-sat)
