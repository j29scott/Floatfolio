(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE (fp.sub RNE x13 x27) (fp.add RNE x20 x3)) (fp.sub RNE (fp.neg x25) (fp.add RNE x25 x25))) (fp.div RNE (fp.sub RNE (fp.neg x3) (fp.div RNE x17 x5)) (fp.neg (fp.neg x1)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x0)) (fp.add RNE (fp.neg x21) (fp.mul RNE x12 x19))) (fp.neg (fp.neg (fp.add RNE x16 x22))))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.div RNE (fp.div RNE x22 x2) (fp.sub RNE x9 x20)) (fp.div RNE (fp.neg x14) (fp.sub RNE x17 x7))) (fp.div RNE (fp.sub RNE (fp.div RNE x26 x16) (fp.mul RNE x26 x17)) (fp.sub RNE (fp.mul RNE x3 x14) (fp.sub RNE x20 x6)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.add RNE x11 x12) (fp.div RNE x26 x9)) (fp.sub RNE (fp.add RNE x12 x25) (fp.div RNE x10 x22))) (fp.neg (fp.div RNE (fp.div RNE x1 x25) (fp.div RNE x7 x10))))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE (fp.neg x14) (fp.add RNE x21 x5))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x5 x26) (fp.sub RNE x19 x23)) (fp.sub RNE (fp.sub RNE x24 x22) (fp.neg x25)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.mul RNE x27 x21) (fp.mul RNE x18 x5)) (fp.add RNE (fp.div RNE x14 x13) (fp.add RNE x22 x24))) (fp.mul RNE (fp.add RNE (fp.add RNE x18 x13) (fp.mul RNE x11 x2)) (fp.mul RNE (fp.add RNE x3 x10) (fp.div RNE x25 x23))))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE (fp.div RNE x18 x27) (fp.div RNE x23 x6)) (fp.mul RNE (fp.mul RNE x10 x18) (fp.mul RNE x2 x5))) (fp.div RNE (fp.sub RNE (fp.add RNE x18 x4) (fp.sub RNE x2 x22)) (fp.mul RNE (fp.div RNE x11 x15) (fp.sub RNE x12 x23)))) (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.mul RNE x3 x22)) (fp.sub RNE (fp.add RNE x2 x4) (fp.sub RNE x25 x4))) (fp.div RNE (fp.neg (fp.mul RNE x21 x27)) (fp.neg (fp.add RNE x3 x14))))))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE (fp.div RNE x16 x12) (fp.div RNE x22 x13)) (fp.sub RNE (fp.sub RNE x2 x0) (fp.mul RNE x9 x4))) (fp.sub RNE (fp.div RNE (fp.sub RNE x6 x7) (fp.div RNE x9 x2)) (fp.div RNE (fp.neg x27) (fp.mul RNE x19 x23)))) (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x21 x18) (fp.add RNE x18 x0)) (fp.div RNE (fp.div RNE x21 x17) (fp.neg x20))) (fp.div RNE (fp.div RNE (fp.mul RNE x20 x4) (fp.mul RNE x8 x8)) (fp.div RNE (fp.div RNE x25 x9) (fp.sub RNE x2 x25))))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg (fp.neg x4)) (fp.neg (fp.div RNE x15 x26))) (fp.sub RNE (fp.div RNE (fp.sub RNE x8 x21) (fp.div RNE x17 x15)) (fp.div RNE (fp.mul RNE x4 x25) (fp.neg x21)))) (fp.add RNE (fp.add RNE (fp.sub RNE (fp.mul RNE x27 x16) (fp.mul RNE x6 x12)) (fp.div RNE (fp.neg x8) (fp.add RNE x18 x23))) (fp.div RNE (fp.sub RNE (fp.sub RNE x18 x12) (fp.mul RNE x25 x13)) (fp.sub RNE (fp.mul RNE x21 x12) (fp.mul RNE x15 x20))))))
(assert (fp.eq (fp.neg (fp.neg (fp.neg (fp.neg x9)))) (fp.sub RNE (fp.sub RNE (fp.neg (fp.sub RNE x27 x13)) (fp.add RNE (fp.mul RNE x10 x4) (fp.sub RNE x15 x23))) (fp.neg (fp.add RNE (fp.div RNE x23 x12) (fp.div RNE x17 x3))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.div RNE x1 x12) (fp.neg x4)) (fp.add RNE (fp.neg x4) (fp.mul RNE x11 x2))) (fp.add RNE (fp.mul RNE (fp.neg x21) (fp.sub RNE x12 x14)) (fp.add RNE (fp.sub RNE x12 x6) (fp.sub RNE x23 x5)))) (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x10 x15) (fp.neg x9)) (fp.sub RNE (fp.mul RNE x14 x19) (fp.sub RNE x0 x24))) (fp.mul RNE (fp.neg (fp.sub RNE x8 x26)) (fp.add RNE (fp.sub RNE x2 x26) (fp.add RNE x17 x0))))))
(check-sat)
