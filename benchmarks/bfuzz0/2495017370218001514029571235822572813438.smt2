(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.mul RNE x15 x0) (fp.sub RNE x13 x5)) (fp.neg (fp.mul RNE x4 x10))) (fp.add RNE (fp.add RNE (fp.neg x2) (fp.add RNE x11 x5)) (fp.add RNE (fp.neg x11) (fp.mul RNE x8 x19)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE x2 x18) (fp.add RNE x18 x12)) (fp.mul RNE (fp.mul RNE x12 x19) (fp.add RNE x0 x11))) (fp.add RNE (fp.neg (fp.add RNE x11 x0)) (fp.add RNE (fp.mul RNE x14 x15) (fp.div RNE x1 x14)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.neg x16) (fp.mul RNE x6 x8)) (fp.neg (fp.mul RNE x16 x6))) (fp.add RNE (fp.add RNE (fp.div RNE x11 x2) (fp.mul RNE x18 x15)) (fp.add RNE (fp.sub RNE x10 x6) (fp.mul RNE x12 x14)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.neg x12) (fp.neg x8))) (fp.div RNE (fp.div RNE (fp.add RNE x3 x13) (fp.sub RNE x12 x2)) (fp.add RNE (fp.neg x9) (fp.add RNE x3 x10)))))
(check-sat)
