(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.neg x6) (fp.div RNE x16 x19)) (fp.neg (fp.mul RNE x13 x8))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x18 x16) (fp.mul RNE x4 x17)) (fp.neg (fp.add RNE x5 x10))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x19 x19) (fp.mul RNE x2 x18)) (fp.sub RNE (fp.neg x21) (fp.div RNE x12 x10))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x16 x13) (fp.add RNE x2 x12)) (fp.add RNE (fp.sub RNE x12 x10) (fp.add RNE x0 x8))))
(assert (fp.gt (fp.neg (fp.mul RNE x20 x4)) (fp.mul RNE (fp.add RNE x12 x4) (fp.add RNE x19 x11))))
(assert (fp.leq (fp.add RNE (fp.add RNE x21 x0) (fp.add RNE x8 x5)) (fp.neg (fp.sub RNE x9 x5))))
(assert (fp.eq (fp.neg (fp.div RNE x4 x20)) (fp.neg (fp.add RNE x21 x1))))
(assert (fp.eq (fp.mul RNE (fp.neg x20) (fp.neg x19)) (fp.add RNE (fp.div RNE x13 x0) (fp.add RNE x5 x21))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x13 x16) (fp.sub RNE x17 x15)) (fp.mul RNE (fp.sub RNE x13 x15) (fp.sub RNE x18 x14))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x3 x3) (fp.sub RNE x8 x12)) (fp.div RNE (fp.add RNE x7 x16) (fp.sub RNE x3 x11))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x19 x21) (fp.div RNE x6 x6)) (fp.mul RNE (fp.div RNE x9 x10) (fp.mul RNE x2 x2))))
(assert (fp.leq (fp.add RNE (fp.neg x10) (fp.mul RNE x7 x18)) (fp.mul RNE (fp.sub RNE x4 x20) (fp.sub RNE x2 x0))))
(assert (fp.lt (fp.add RNE (fp.neg x16) (fp.neg x13)) (fp.add RNE (fp.add RNE x5 x21) (fp.div RNE x10 x13))))
(assert (fp.eq (fp.neg (fp.sub RNE x0 x1)) (fp.add RNE (fp.mul RNE x15 x2) (fp.neg x20))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x10 x1) (fp.mul RNE x11 x21)) (fp.div RNE (fp.neg x7) (fp.add RNE x4 x14))))
(assert (fp.gt (fp.div RNE (fp.add RNE x4 x16) (fp.mul RNE x6 x18)) (fp.add RNE (fp.add RNE x14 x13) (fp.div RNE x17 x7))))
(check-sat)
