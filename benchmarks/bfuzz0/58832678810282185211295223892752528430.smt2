(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.div RNE x9 x5) (fp.sub RNE x0 x0)) (fp.neg (fp.neg x4))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x1 x5) (fp.mul RNE x0 x7)) (fp.sub RNE (fp.div RNE x7 x6) (fp.div RNE x3 x0)))) (fp.neg (fp.add RNE (fp.add RNE (fp.neg x9) (fp.neg x1)) (fp.mul RNE (fp.div RNE x0 x9) (fp.neg x6))))))
(assert (fp.eq (fp.add RNE (fp.sub RNE (fp.neg (fp.div RNE x6 x9)) (fp.div RNE (fp.div RNE x7 x6) (fp.sub RNE x0 x9))) (fp.neg (fp.add RNE (fp.add RNE x6 x4) (fp.add RNE x7 x10)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.mul RNE x8 x10) (fp.div RNE x3 x1)) (fp.sub RNE (fp.mul RNE x9 x1) (fp.div RNE x10 x9))) (fp.mul RNE (fp.neg (fp.div RNE x1 x0)) (fp.neg (fp.add RNE x6 x5))))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE (fp.add RNE x2 x7) (fp.add RNE x7 x1)) (fp.neg (fp.mul RNE x1 x3))) (fp.neg (fp.div RNE (fp.neg x3) (fp.add RNE x2 x8)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.div RNE x2 x0) (fp.add RNE x1 x5)) (fp.neg (fp.neg x6))) (fp.neg (fp.sub RNE (fp.add RNE x0 x0) (fp.add RNE x2 x2))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x3) (fp.div RNE x7 x5)) (fp.add RNE (fp.mul RNE x7 x2) (fp.div RNE x2 x0))) (fp.neg (fp.mul RNE (fp.div RNE x9 x7) (fp.mul RNE x9 x5)))) (fp.sub RNE (fp.neg (fp.add RNE (fp.add RNE x8 x2) (fp.neg x0))) (fp.add RNE (fp.div RNE (fp.sub RNE x3 x8) (fp.neg x0)) (fp.neg (fp.div RNE x1 x8))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x1 x10) (fp.sub RNE x2 x9)) (fp.add RNE (fp.mul RNE x1 x4) (fp.add RNE x4 x6))) (fp.mul RNE (fp.neg (fp.sub RNE x5 x7)) (fp.sub RNE (fp.mul RNE x9 x1) (fp.div RNE x7 x2)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.neg x3) (fp.neg x6)) (fp.neg (fp.div RNE x3 x0))) (fp.add RNE (fp.mul RNE (fp.add RNE x3 x10) (fp.neg x9)) (fp.sub RNE (fp.add RNE x10 x7) (fp.mul RNE x7 x6))))))
(check-sat)
