(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg x6) (fp.div RNE x7 x0)))
(assert (fp.geq (fp.sub RNE x1 x2) (fp.sub RNE x10 x1)))
(assert (fp.geq (fp.neg x2) (fp.sub RNE x10 x10)))
(assert (fp.geq (fp.add RNE x7 x9) (fp.sub RNE x7 x0)))
(assert (fp.lt (fp.mul RNE x10 x10) (fp.mul RNE x11 x1)))
(assert (fp.gt (fp.neg x8) (fp.add RNE x0 x0)))
(assert (fp.eq (fp.add RNE x7 x4) (fp.mul RNE x3 x9)))
(assert (fp.gt (fp.mul RNE x11 x0) (fp.mul RNE x0 x8)))
(assert (fp.geq (fp.sub RNE x10 x11) (fp.mul RNE x2 x4)))
(assert (fp.geq (fp.sub RNE x2 x11) (fp.sub RNE x0 x11)))
(assert (fp.lt (fp.sub RNE x4 x5) (fp.neg x6)))
(assert (fp.eq (fp.add RNE x3 x0) (fp.div RNE x7 x3)))
(assert (fp.gt (fp.sub RNE x7 x5) (fp.mul RNE x8 x1)))
(assert (fp.geq (fp.add RNE x5 x4) (fp.neg x0)))
(check-sat)
