(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x4 x9) (fp.add RNE x2 x4)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x8 x4))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x8 x2) (fp.sub RNE x10 x0)) (fp.add RNE (fp.sub RNE x7 x2) (fp.mul RNE x4 x9))))
(assert (fp.eq (fp.div RNE (fp.neg x4) (fp.sub RNE x1 x3)) (fp.div RNE (fp.mul RNE x1 x2) (fp.div RNE x7 x2))))
(assert (fp.leq (fp.add RNE (fp.add RNE x3 x10) (fp.div RNE x7 x5)) (fp.mul RNE (fp.mul RNE x8 x7) (fp.neg x10))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x9 x1) (fp.add RNE x3 x1)) (fp.div RNE (fp.neg x10) (fp.sub RNE x9 x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x2 x10) (fp.mul RNE x3 x3)) (fp.add RNE (fp.div RNE x3 x7) (fp.div RNE x2 x2))))
(assert (fp.gt (fp.add RNE (fp.sub RNE x6 x1) (fp.mul RNE x3 x2)) (fp.sub RNE (fp.mul RNE x9 x5) (fp.mul RNE x4 x3))))
(assert (fp.lt (fp.neg (fp.neg x9)) (fp.mul RNE (fp.mul RNE x4 x4) (fp.add RNE x10 x6))))
(assert (fp.eq (fp.div RNE (fp.div RNE x0 x0) (fp.div RNE x0 x9)) (fp.div RNE (fp.add RNE x1 x6) (fp.sub RNE x7 x8))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x7 x1) (fp.div RNE x3 x1)) (fp.mul RNE (fp.mul RNE x9 x10) (fp.div RNE x0 x8))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x9 x9) (fp.add RNE x2 x8)) (fp.add RNE (fp.div RNE x1 x9) (fp.mul RNE x0 x7))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x2 x8) (fp.mul RNE x9 x4)) (fp.add RNE (fp.sub RNE x8 x10) (fp.neg x2))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x2 x1) (fp.mul RNE x1 x10)) (fp.div RNE (fp.div RNE x5 x4) (fp.div RNE x6 x3))))
(check-sat)
