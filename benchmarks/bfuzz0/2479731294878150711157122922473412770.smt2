(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE x10 x9) (fp.neg x7)) (fp.mul RNE (fp.sub RNE x7 x0) (fp.div RNE x14 x16))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x8 x12) (fp.sub RNE x12 x17)) (fp.mul RNE (fp.mul RNE x12 x10) (fp.neg x17))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x6 x2) (fp.div RNE x1 x1)) (fp.neg (fp.add RNE x7 x15))))
(assert (fp.lt (fp.add RNE (fp.neg x15) (fp.sub RNE x13 x4)) (fp.neg (fp.sub RNE x5 x1))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x9 x15) (fp.div RNE x2 x1)) (fp.add RNE (fp.neg x8) (fp.sub RNE x17 x12))))
(assert (fp.geq (fp.add RNE (fp.neg x6) (fp.mul RNE x9 x1)) (fp.neg (fp.div RNE x3 x4))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x1 x5) (fp.mul RNE x12 x6)) (fp.add RNE (fp.neg x14) (fp.mul RNE x9 x16))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x14 x13) (fp.add RNE x8 x0)) (fp.div RNE (fp.sub RNE x15 x2) (fp.add RNE x15 x9))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x0 x7) (fp.div RNE x12 x9)) (fp.div RNE (fp.add RNE x15 x8) (fp.neg x16))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x15 x7) (fp.add RNE x2 x8)) (fp.mul RNE (fp.div RNE x14 x14) (fp.mul RNE x9 x11))))
(assert (fp.lt (fp.add RNE (fp.add RNE x7 x1) (fp.mul RNE x14 x6)) (fp.div RNE (fp.mul RNE x14 x2) (fp.add RNE x8 x10))))
(assert (fp.lt (fp.div RNE (fp.div RNE x17 x5) (fp.mul RNE x7 x6)) (fp.neg (fp.sub RNE x8 x8))))
(assert (fp.geq (fp.div RNE (fp.add RNE x15 x11) (fp.neg x14)) (fp.add RNE (fp.mul RNE x14 x9) (fp.mul RNE x0 x1))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x10 x13) (fp.sub RNE x0 x4)) (fp.add RNE (fp.mul RNE x10 x3) (fp.add RNE x16 x8))))
(check-sat)
