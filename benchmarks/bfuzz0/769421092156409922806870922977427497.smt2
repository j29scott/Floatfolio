(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE x1 x7) (fp.neg x2)))
(assert (fp.eq (fp.sub RNE x2 x5) (fp.add RNE x8 x4)))
(assert (fp.lt (fp.neg x1) (fp.div RNE x5 x0)))
(assert (fp.gt (fp.add RNE x6 x0) (fp.div RNE x1 x3)))
(assert (fp.gt (fp.div RNE x6 x4) (fp.add RNE x4 x3)))
(assert (fp.geq (fp.mul RNE x8 x3) (fp.div RNE x0 x6)))
(assert (fp.eq (fp.mul RNE x7 x6) (fp.add RNE x1 x0)))
(assert (fp.eq (fp.add RNE x2 x4) (fp.sub RNE x0 x5)))
(assert (fp.gt (fp.neg x6) (fp.add RNE x7 x4)))
(assert (fp.geq (fp.mul RNE x4 x7) (fp.neg x6)))
(assert (fp.lt (fp.sub RNE x5 x2) (fp.div RNE x6 x4)))
(assert (fp.lt (fp.add RNE x5 x6) (fp.add RNE x1 x0)))
(assert (fp.leq (fp.sub RNE x2 x0) (fp.mul RNE x1 x4)))
(check-sat)
