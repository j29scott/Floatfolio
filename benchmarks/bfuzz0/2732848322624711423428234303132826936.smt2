(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x15 x8) (fp.neg x5)) (fp.mul RNE (fp.sub RNE x15 x12) (fp.mul RNE x18 x15))))
(assert (fp.leq (fp.add RNE (fp.mul RNE x18 x10) (fp.mul RNE x10 x1)) (fp.mul RNE (fp.sub RNE x1 x20) (fp.neg x2))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x4 x20) (fp.mul RNE x17 x11)) (fp.mul RNE (fp.sub RNE x8 x3) (fp.sub RNE x1 x5))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x2 x10) (fp.add RNE x15 x15)) (fp.sub RNE (fp.div RNE x10 x15) (fp.mul RNE x7 x1))))
(check-sat)
