(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x11 x8) (fp.add RNE x13 x1)))
(assert (fp.lt (fp.mul RNE x4 x0) (fp.mul RNE x6 x9)))
(assert (fp.gt (fp.add RNE x14 x4) (fp.mul RNE x9 x14)))
(assert (fp.eq (fp.add RNE x9 x0) (fp.mul RNE x2 x3)))
(assert (fp.gt (fp.sub RNE x12 x1) (fp.add RNE x2 x14)))
(assert (fp.leq (fp.add RNE x3 x13) (fp.neg x6)))
(assert (fp.eq (fp.div RNE x0 x9) (fp.sub RNE x4 x13)))
(assert (fp.leq (fp.div RNE x11 x9) (fp.div RNE x13 x14)))
(assert (fp.eq (fp.neg x13) (fp.div RNE x2 x8)))
(check-sat)
