(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.mul RNE x15 x3) (fp.neg x19)) (fp.sub RNE (fp.add RNE x13 x16) (fp.neg x1))) (fp.add RNE (fp.add RNE (fp.div RNE x15 x4) (fp.neg x12)) (fp.div RNE (fp.mul RNE x9 x3) (fp.add RNE x5 x17)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.mul RNE x9 x18) (fp.neg x15)) (fp.mul RNE (fp.sub RNE x15 x10) (fp.add RNE x10 x20))) (fp.sub RNE (fp.neg (fp.mul RNE x7 x1)) (fp.sub RNE (fp.add RNE x18 x10) (fp.div RNE x0 x11)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.neg x19) (fp.neg x7)) (fp.div RNE (fp.div RNE x2 x0) (fp.div RNE x13 x6))) (fp.add RNE (fp.mul RNE (fp.sub RNE x12 x6) (fp.sub RNE x3 x17)) (fp.add RNE (fp.sub RNE x0 x19) (fp.sub RNE x14 x11)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x16) (fp.neg x15))) (fp.add RNE (fp.add RNE (fp.sub RNE x6 x19) (fp.sub RNE x12 x19)) (fp.neg (fp.mul RNE x11 x7)))))
(assert (fp.eq (fp.neg (fp.neg (fp.add RNE x13 x11))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x9 x1) (fp.div RNE x5 x7)) (fp.add RNE (fp.mul RNE x20 x0) (fp.add RNE x7 x19)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.mul RNE x9 x8) (fp.sub RNE x7 x16)) (fp.mul RNE (fp.sub RNE x3 x20) (fp.neg x17))) (fp.sub RNE (fp.neg (fp.add RNE x15 x3)) (fp.add RNE (fp.sub RNE x12 x3) (fp.add RNE x6 x4)))))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE x18 x15)) (fp.add RNE (fp.div RNE x14 x6) (fp.mul RNE x9 x11))) (fp.mul RNE (fp.neg (fp.div RNE x5 x8)) (fp.add RNE (fp.mul RNE x7 x16) (fp.mul RNE x1 x15)))))
(assert (fp.lt (fp.neg (fp.neg (fp.div RNE x10 x9))) (fp.div RNE (fp.mul RNE (fp.sub RNE x12 x3) (fp.div RNE x12 x11)) (fp.add RNE (fp.add RNE x4 x12) (fp.add RNE x9 x3)))))
(check-sat)
