(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.div RNE x0 x4) (fp.neg x16)) (fp.div RNE (fp.add RNE x13 x0) (fp.sub RNE x5 x6))) (fp.div RNE (fp.sub RNE (fp.add RNE x15 x2) (fp.mul RNE x6 x14)) (fp.sub RNE (fp.mul RNE x12 x14) (fp.div RNE x2 x15)))) (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.neg x11) (fp.add RNE x18 x11)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x9 x11))) (fp.mul RNE (fp.mul RNE (fp.add RNE x3 x15) (fp.add RNE x6 x0)) (fp.add RNE (fp.div RNE x5 x7) (fp.neg x8))))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.mul RNE (fp.neg x3) (fp.mul RNE x3 x17)) (fp.div RNE (fp.sub RNE x13 x1) (fp.mul RNE x15 x8))) (fp.sub RNE (fp.div RNE (fp.mul RNE x11 x11) (fp.sub RNE x7 x2)) (fp.add RNE (fp.div RNE x14 x12) (fp.neg x9)))) (fp.neg (fp.mul RNE (fp.sub RNE (fp.mul RNE x18 x15) (fp.mul RNE x8 x0)) (fp.mul RNE (fp.sub RNE x14 x6) (fp.sub RNE x7 x12))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.div RNE x17 x4) (fp.mul RNE x17 x6)) (fp.sub RNE (fp.sub RNE x16 x6) (fp.div RNE x17 x16))) (fp.neg (fp.add RNE (fp.add RNE x8 x5) (fp.neg x12)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x11 x2) (fp.mul RNE x17 x13)) (fp.div RNE (fp.div RNE x0 x13) (fp.neg x7))) (fp.div RNE (fp.add RNE (fp.div RNE x7 x13) (fp.sub RNE x16 x10)) (fp.div RNE (fp.div RNE x12 x11) (fp.mul RNE x17 x14))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x5 x8) (fp.add RNE x7 x14)) (fp.neg (fp.div RNE x1 x2))) (fp.mul RNE (fp.neg (fp.div RNE x7 x4)) (fp.sub RNE (fp.sub RNE x4 x14) (fp.div RNE x18 x9)))) (fp.div RNE (fp.add RNE (fp.neg (fp.neg x10)) (fp.sub RNE (fp.neg x6) (fp.sub RNE x10 x5))) (fp.mul RNE (fp.div RNE (fp.mul RNE x6 x0) (fp.add RNE x14 x0)) (fp.mul RNE (fp.sub RNE x18 x15) (fp.mul RNE x3 x3))))))
(check-sat)
