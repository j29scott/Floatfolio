(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.add RNE x1 x5)) (fp.add RNE (fp.div RNE x8 x7) (fp.neg x1))))
(assert (fp.leq (fp.neg (fp.add RNE x6 x1)) (fp.add RNE (fp.add RNE x0 x1) (fp.div RNE x2 x2))))
(assert (fp.lt (fp.add RNE (fp.add RNE x0 x1) (fp.sub RNE x7 x5)) (fp.div RNE (fp.mul RNE x8 x6) (fp.neg x5))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x7 x8) (fp.neg x1)) (fp.neg (fp.div RNE x1 x3))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x4 x3) (fp.sub RNE x1 x0)) (fp.div RNE (fp.sub RNE x0 x8) (fp.add RNE x2 x4))))
(assert (fp.geq (fp.add RNE (fp.add RNE x1 x6) (fp.sub RNE x5 x5)) (fp.sub RNE (fp.add RNE x4 x4) (fp.neg x0))))
(check-sat)
