(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE x4 x0) (fp.div RNE x1 x5)))
(assert (fp.eq (fp.div RNE x10 x10) (fp.neg x10)))
(assert (fp.geq (fp.neg x3) (fp.sub RNE x5 x1)))
(assert (fp.eq (fp.add RNE x7 x4) (fp.add RNE x1 x4)))
(assert (fp.leq (fp.add RNE x6 x0) (fp.mul RNE x2 x8)))
(assert (fp.eq (fp.neg x0) (fp.mul RNE x7 x6)))
(assert (fp.gt (fp.div RNE x8 x6) (fp.div RNE x10 x7)))
(assert (fp.geq (fp.add RNE x5 x10) (fp.mul RNE x8 x1)))
(assert (fp.eq (fp.add RNE x3 x6) (fp.neg x7)))
(assert (fp.gt (fp.neg x7) (fp.sub RNE x2 x2)))
(check-sat)
