(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE x7 x1)) (fp.div RNE (fp.mul RNE x1 x13) (fp.div RNE x7 x6))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x9 x6) (fp.sub RNE x3 x11)) (fp.neg (fp.add RNE x12 x8))))
(assert (fp.geq (fp.add RNE (fp.add RNE x4 x2) (fp.add RNE x15 x9)) (fp.mul RNE (fp.div RNE x3 x10) (fp.div RNE x1 x11))))
(assert (fp.gt (fp.neg (fp.add RNE x11 x0)) (fp.sub RNE (fp.div RNE x2 x13) (fp.neg x10))))
(assert (fp.eq (fp.neg (fp.div RNE x4 x11)) (fp.add RNE (fp.neg x0) (fp.div RNE x1 x12))))
(assert (fp.geq (fp.add RNE (fp.add RNE x2 x8) (fp.neg x15)) (fp.add RNE (fp.sub RNE x7 x9) (fp.neg x1))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x15 x0) (fp.div RNE x9 x9)) (fp.sub RNE (fp.sub RNE x7 x5) (fp.mul RNE x11 x15))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x14 x2) (fp.div RNE x0 x13)) (fp.add RNE (fp.mul RNE x0 x10) (fp.div RNE x10 x5))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x1 x15) (fp.neg x2)) (fp.neg (fp.mul RNE x5 x1))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x16 x7) (fp.sub RNE x1 x0)) (fp.neg (fp.neg x2))))
(check-sat)
