(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.div RNE x20 x24) (fp.mul RNE x24 x24)) (fp.neg (fp.add RNE x10 x24))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x3 x5) (fp.add RNE x24 x9)) (fp.add RNE (fp.sub RNE x14 x14) (fp.add RNE x8 x3))))
(assert (fp.leq (fp.mul RNE (fp.neg x2) (fp.div RNE x5 x22)) (fp.neg (fp.add RNE x21 x17))))
(assert (fp.geq (fp.neg (fp.add RNE x6 x13)) (fp.sub RNE (fp.mul RNE x19 x7) (fp.add RNE x13 x21))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x24 x19) (fp.div RNE x2 x6)) (fp.add RNE (fp.mul RNE x19 x16) (fp.add RNE x9 x6))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x21 x2) (fp.mul RNE x13 x21)) (fp.add RNE (fp.div RNE x5 x10) (fp.div RNE x24 x16))))
(assert (fp.lt (fp.neg (fp.mul RNE x13 x5)) (fp.mul RNE (fp.sub RNE x17 x17) (fp.neg x1))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE x22 x11) (fp.mul RNE x2 x19)) (fp.div RNE (fp.sub RNE x21 x18) (fp.div RNE x15 x13))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x23 x9) (fp.sub RNE x11 x22)) (fp.add RNE (fp.mul RNE x21 x3) (fp.add RNE x4 x3))))
(assert (fp.gt (fp.sub RNE (fp.neg x14) (fp.add RNE x8 x22)) (fp.sub RNE (fp.neg x24) (fp.mul RNE x5 x18))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x3 x18) (fp.add RNE x18 x12)) (fp.mul RNE (fp.mul RNE x17 x13) (fp.add RNE x9 x11))))
(assert (fp.eq (fp.sub RNE (fp.div RNE x19 x24) (fp.neg x9)) (fp.mul RNE (fp.neg x10) (fp.sub RNE x17 x5))))
(assert (fp.gt (fp.div RNE (fp.div RNE x8 x8) (fp.neg x19)) (fp.add RNE (fp.add RNE x17 x23) (fp.mul RNE x19 x11))))
(assert (fp.geq (fp.neg (fp.neg x20)) (fp.sub RNE (fp.sub RNE x21 x8) (fp.mul RNE x9 x14))))
(check-sat)
