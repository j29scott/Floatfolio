(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE x17 x12) (fp.mul RNE x4 x10)))
(assert (fp.leq (fp.add RNE x3 x14) (fp.div RNE x10 x6)))
(assert (fp.geq (fp.neg x1) (fp.mul RNE x17 x9)))
(assert (fp.gt (fp.mul RNE x9 x8) (fp.sub RNE x13 x20)))
(assert (fp.leq (fp.sub RNE x10 x2) (fp.mul RNE x12 x7)))
(assert (fp.geq (fp.mul RNE x7 x5) (fp.sub RNE x10 x12)))
(assert (fp.gt (fp.mul RNE x18 x21) (fp.sub RNE x19 x3)))
(assert (fp.leq (fp.div RNE x15 x5) (fp.div RNE x6 x13)))
(assert (fp.lt (fp.add RNE x14 x9) (fp.div RNE x15 x5)))
(assert (fp.geq (fp.div RNE x20 x1) (fp.neg x17)))
(assert (fp.leq (fp.neg x3) (fp.sub RNE x14 x17)))
(check-sat)
