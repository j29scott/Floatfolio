(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.div RNE x18 x16) (fp.neg x14)) (fp.neg (fp.add RNE x3 x4))) (fp.neg (fp.sub RNE (fp.neg x7) (fp.neg x7)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.add RNE x16 x7) (fp.mul RNE x17 x17)) (fp.sub RNE (fp.sub RNE x11 x3) (fp.sub RNE x1 x17))) (fp.sub RNE (fp.neg (fp.sub RNE x14 x15)) (fp.add RNE (fp.add RNE x18 x13) (fp.neg x14)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.neg x7) (fp.sub RNE x11 x11)) (fp.div RNE (fp.add RNE x11 x10) (fp.add RNE x7 x9))) (fp.neg (fp.mul RNE (fp.div RNE x0 x0) (fp.add RNE x9 x5)))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.mul RNE x3 x13) (fp.add RNE x18 x17))) (fp.add RNE (fp.sub RNE (fp.div RNE x12 x2) (fp.sub RNE x9 x11)) (fp.sub RNE (fp.mul RNE x6 x17) (fp.div RNE x17 x9)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x5 x5)) (fp.sub RNE (fp.add RNE x15 x6) (fp.mul RNE x18 x17))) (fp.neg (fp.mul RNE (fp.add RNE x3 x13) (fp.mul RNE x18 x1)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE x14 x15) (fp.div RNE x12 x16))) (fp.neg (fp.mul RNE (fp.add RNE x4 x17) (fp.div RNE x13 x8)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.neg x11)) (fp.div RNE (fp.sub RNE x4 x1) (fp.mul RNE x15 x16))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x0 x11) (fp.neg x6)) (fp.neg (fp.neg x2)))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE x0 x6) (fp.sub RNE x18 x12)) (fp.div RNE (fp.add RNE x6 x0) (fp.div RNE x9 x13))) (fp.mul RNE (fp.sub RNE (fp.neg x9) (fp.add RNE x15 x15)) (fp.neg (fp.neg x5)))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.mul RNE x0 x1) (fp.sub RNE x11 x15)) (fp.div RNE (fp.div RNE x16 x11) (fp.mul RNE x11 x0))) (fp.neg (fp.sub RNE (fp.div RNE x9 x16) (fp.add RNE x6 x10)))))
(check-sat)
