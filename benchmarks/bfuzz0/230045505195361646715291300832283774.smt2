(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.mul RNE (fp.div RNE x15 x20) (fp.sub RNE x4 x6)) (fp.neg (fp.mul RNE x4 x17))) (fp.add RNE (fp.mul RNE (fp.neg x21) (fp.div RNE x19 x16)) (fp.div RNE (fp.mul RNE x21 x6) (fp.div RNE x1 x7)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x11 x7) (fp.add RNE x0 x7)) (fp.add RNE (fp.sub RNE x21 x17) (fp.sub RNE x19 x16))) (fp.add RNE (fp.neg (fp.mul RNE x15 x7)) (fp.neg (fp.sub RNE x0 x4))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE (fp.div RNE x5 x21) (fp.sub RNE x3 x14)) (fp.sub RNE (fp.neg x9) (fp.add RNE x0 x5))) (fp.div RNE (fp.add RNE (fp.add RNE x19 x6) (fp.div RNE x14 x13)) (fp.add RNE (fp.add RNE x11 x19) (fp.neg x6)))) (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x21 x14) (fp.mul RNE x15 x1)) (fp.add RNE (fp.neg x19) (fp.add RNE x20 x8))) (fp.sub RNE (fp.mul RNE (fp.div RNE x6 x21) (fp.sub RNE x3 x9)) (fp.add RNE (fp.sub RNE x10 x3) (fp.div RNE x20 x8))))))
(check-sat)
