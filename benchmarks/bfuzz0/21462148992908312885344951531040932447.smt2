(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.neg x4) (fp.mul RNE x0 x9)) (fp.div RNE (fp.mul RNE x9 x6) (fp.sub RNE x4 x3))) (fp.add RNE (fp.neg (fp.add RNE x5 x4)) (fp.neg (fp.add RNE x3 x2)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.add RNE x9 x4) (fp.div RNE x4 x11)) (fp.neg (fp.add RNE x7 x1))) (fp.neg (fp.add RNE (fp.neg x10) (fp.sub RNE x8 x8)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.neg x7) (fp.mul RNE x3 x7)) (fp.div RNE (fp.neg x5) (fp.mul RNE x6 x5))) (fp.div RNE (fp.neg (fp.sub RNE x5 x0)) (fp.sub RNE (fp.div RNE x1 x8) (fp.neg x6)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.add RNE x8 x7)) (fp.mul RNE (fp.add RNE x1 x10) (fp.mul RNE x8 x4))) (fp.neg (fp.mul RNE (fp.add RNE x0 x7) (fp.neg x3)))))
(assert (fp.geq (fp.add RNE (fp.add RNE (fp.neg x1) (fp.div RNE x10 x7)) (fp.div RNE (fp.mul RNE x4 x0) (fp.sub RNE x10 x3))) (fp.neg (fp.add RNE (fp.neg x0) (fp.mul RNE x1 x7)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.neg x10) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x3 x5) (fp.div RNE x6 x1))) (fp.div RNE (fp.mul RNE (fp.add RNE x0 x0) (fp.sub RNE x2 x5)) (fp.sub RNE (fp.mul RNE x9 x1) (fp.sub RNE x10 x11)))))
(check-sat)
