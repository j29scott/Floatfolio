(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.add RNE (fp.mul RNE x13 x12) (fp.mul RNE x3 x14)) (fp.neg (fp.div RNE x11 x5))) (fp.div RNE (fp.neg (fp.sub RNE x2 x14)) (fp.neg (fp.neg x3)))) (fp.mul RNE (fp.div RNE (fp.neg (fp.neg x5)) (fp.add RNE (fp.sub RNE x4 x0) (fp.mul RNE x2 x12))) (fp.add RNE (fp.add RNE (fp.div RNE x10 x11) (fp.neg x14)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x8 x14))))))
(assert (fp.eq (fp.sub RNE (fp.add RNE (fp.div RNE (fp.mul RNE x1 x3) (fp.neg x11)) (fp.div RNE (fp.mul RNE x10 x13) (fp.div RNE x2 x1))) (fp.mul RNE (fp.sub RNE (fp.div RNE x5 x2) (fp.add RNE x1 x0)) (fp.mul RNE (fp.mul RNE x2 x9) (fp.mul RNE x14 x11)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.add RNE x0 x10) (fp.div RNE x0 x5)) (fp.add RNE (fp.sub RNE x0 x15) (fp.sub RNE x10 x0))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.div RNE (fp.neg x7) (fp.div RNE x0 x8)) (fp.mul RNE (fp.sub RNE x2 x9) (fp.add RNE x13 x10))) (fp.neg (fp.mul RNE (fp.div RNE x14 x15) (fp.add RNE x4 x4)))) (fp.add RNE (fp.add RNE (fp.add RNE (fp.div RNE x14 x5) (fp.neg x11)) (fp.mul RNE (fp.mul RNE x13 x13) (fp.div RNE x1 x7))) (fp.neg (fp.neg (fp.div RNE x11 x1))))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.add RNE (fp.mul RNE x13 x0) (fp.mul RNE x11 x2)) (fp.add RNE (fp.mul RNE x5 x0) (fp.sub RNE x16 x3))) (fp.neg (fp.neg (fp.add RNE x14 x5)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.mul RNE x12 x9) (fp.div RNE x14 x0)) (fp.neg (fp.mul RNE x7 x8))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.add RNE x11 x7) (fp.sub RNE x14 x9)) (fp.sub RNE (fp.div RNE x16 x5) (fp.sub RNE x13 x6))) (fp.mul RNE (fp.neg (fp.neg x16)) (fp.neg (fp.neg x9)))) (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.add RNE x11 x16) (fp.div RNE x11 x3)) (fp.add RNE (fp.neg x4) (fp.neg x5))) (fp.add RNE (fp.mul RNE (fp.mul RNE x0 x6) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x11 x14) (fp.mul RNE x13 x6))))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE (fp.mul RNE x3 x2) (fp.mul RNE x16 x2))) (fp.sub RNE (fp.div RNE (fp.add RNE x9 x5) (fp.sub RNE x14 x16)) (fp.div RNE (fp.neg x6) (fp.add RNE x16 x16)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.sub RNE x7 x4)) (fp.div RNE (fp.mul RNE x11 x3) (fp.sub RNE x16 x11))) (fp.neg (fp.neg (fp.div RNE x14 x16))))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.div RNE (fp.div RNE x5 x4) (fp.div RNE x5 x11)) (fp.mul RNE (fp.div RNE x4 x10) (fp.add RNE x14 x13))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x3 x6) (fp.add RNE x12 x7)) (fp.neg (fp.mul RNE x6 x14)))) (fp.div RNE (fp.div RNE (fp.add RNE (fp.add RNE x16 x6) (fp.sub RNE x6 x13)) (fp.mul RNE (fp.div RNE x0 x16) (fp.mul RNE x12 x13))) (fp.neg (fp.add RNE (fp.add RNE x1 x15) (fp.neg x5))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.add RNE x11 x13) (fp.div RNE x11 x15)) (fp.div RNE (fp.mul RNE x4 x3) (fp.div RNE x4 x15))) (fp.sub RNE (fp.add RNE (fp.add RNE x7 x11) (fp.add RNE x2 x11)) (fp.div RNE (fp.mul RNE x1 x14) (fp.neg x16)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.div RNE x15 x15)) (fp.sub RNE (fp.mul RNE x4 x16) (fp.div RNE x2 x10))) (fp.mul RNE (fp.add RNE (fp.neg x1) (fp.add RNE x9 x1)) (fp.add RNE (fp.sub RNE x16 x6) (fp.mul RNE x1 x6))))))
(check-sat)
