(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.neg (fp.div RNE x14 x12)) (fp.add RNE (fp.add RNE x6 x15) (fp.div RNE x9 x10))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x15 x12) (fp.neg x11)) (fp.add RNE (fp.sub RNE x15 x13) (fp.neg x7)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.div RNE x5 x3)) (fp.mul RNE (fp.neg x12) (fp.add RNE x3 x5))) (fp.sub RNE (fp.sub RNE (fp.mul RNE x8 x8) (fp.div RNE x5 x14)) (fp.div RNE (fp.add RNE x7 x10) (fp.mul RNE x10 x1)))))
(assert (fp.gt (fp.add RNE (fp.sub RNE (fp.sub RNE x3 x2) (fp.sub RNE x2 x9)) (fp.mul RNE (fp.div RNE x6 x3) (fp.sub RNE x2 x15))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x11 x3) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x15 x13) (fp.sub RNE x0 x2)))))
(check-sat)
