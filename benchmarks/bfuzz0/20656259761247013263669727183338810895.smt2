(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE x3 x6) (fp.div RNE x4 x5)))
(assert (fp.lt (fp.div RNE x1 x1) (fp.add RNE x5 x5)))
(assert (fp.lt (fp.neg x4) (fp.neg x4)))
(assert (fp.leq (fp.div RNE x2 x4) (fp.sub RNE x5 x5)))
(assert (fp.eq (fp.div RNE x5 x2) (fp.sub RNE x4 x6)))
(assert (fp.gt (fp.div RNE x2 x3) (fp.add RNE x4 x6)))
(assert (fp.gt (fp.mul RNE x6 x3) (fp.add RNE x3 x4)))
(assert (fp.gt (fp.add RNE x4 x0) (fp.add RNE x3 x4)))
(assert (fp.gt (fp.neg x4) (fp.add RNE x0 x6)))
(assert (fp.leq (fp.mul RNE x2 x3) (fp.neg x2)))
(assert (fp.gt (fp.add RNE x2 x6) (fp.mul RNE x1 x2)))
(assert (fp.leq (fp.mul RNE x2 x1) (fp.mul RNE x4 x0)))
(assert (fp.geq (fp.neg x1) (fp.div RNE x1 x3)))
(assert (fp.lt (fp.mul RNE x3 x5) (fp.add RNE x0 x3)))
(assert (fp.eq (fp.mul RNE x3 x3) (fp.sub RNE x4 x1)))
(check-sat)
