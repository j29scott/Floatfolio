(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.neg (fp.sub RNE x5 x16)) (fp.mul RNE (fp.sub RNE x17 x9) (fp.neg x7))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x7) (fp.mul RNE x2 x3)) (fp.mul RNE (fp.neg x6) (fp.div RNE x8 x2)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.div RNE x0 x0)) (fp.add RNE (fp.mul RNE x16 x6) (fp.add RNE x13 x15))) (fp.add RNE (fp.div RNE (fp.neg x10) (fp.div RNE x10 x1)) (fp.sub RNE (fp.neg x11) (fp.add RNE x18 x8)))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x0) (fp.neg x14)) (fp.mul RNE (fp.neg x1) (fp.add RNE x15 x13))) (fp.div RNE (fp.neg (fp.div RNE x16 x10)) (fp.div RNE (fp.mul RNE x15 x16) (fp.div RNE x3 x14)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.sub RNE x8 x13) (fp.div RNE x2 x6))) (fp.mul RNE (fp.add RNE (fp.add RNE x8 x12) (fp.div RNE x3 x7)) (fp.neg (fp.add RNE x4 x17)))))
(check-sat)
