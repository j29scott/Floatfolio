(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.add RNE (fp.neg x8) (fp.neg x1)) (fp.div RNE (fp.mul RNE x1 x0) (fp.sub RNE x0 x13))) (fp.div RNE (fp.sub RNE (fp.div RNE x8 x11) (fp.div RNE x11 x12)) (fp.sub RNE (fp.div RNE x6 x3) (fp.add RNE x2 x14)))) (fp.div RNE (fp.sub RNE (fp.neg (fp.div RNE x10 x8)) (fp.sub RNE (fp.add RNE x13 x3) (fp.mul RNE x14 x2))) (fp.add RNE (fp.div RNE (fp.add RNE x8 x13) (fp.add RNE x7 x8)) (fp.sub RNE (fp.neg x5) (fp.div RNE x12 x5))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.neg (fp.add RNE x7 x6)) (fp.add RNE (fp.add RNE x8 x17) (fp.add RNE x1 x16)))) (fp.neg (fp.div RNE (fp.neg (fp.neg x10)) (fp.mul RNE (fp.mul RNE x0 x5) (fp.div RNE x2 x11))))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.neg (fp.add RNE x5 x1))) (fp.div RNE (fp.div RNE (fp.mul RNE x4 x2) (fp.div RNE x1 x1)) (fp.sub RNE (fp.mul RNE x10 x8) (fp.neg x7)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.div RNE x16 x12) (fp.sub RNE x0 x16)) (fp.sub RNE (fp.add RNE x9 x8) (fp.add RNE x10 x15))) (fp.neg (fp.neg (fp.div RNE x14 x4))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.add RNE (fp.div RNE x8 x4) (fp.div RNE x11 x2)) (fp.div RNE (fp.div RNE x15 x5) (fp.div RNE x15 x13))) (fp.div RNE (fp.add RNE (fp.sub RNE x14 x2) (fp.div RNE x16 x10)) (fp.add RNE (fp.div RNE x8 x5) (fp.div RNE x16 x4)))) (fp.mul RNE (fp.neg (fp.neg (fp.neg x11))) (fp.sub RNE (fp.add RNE (fp.div RNE x13 x15) (fp.mul RNE x1 x17)) (fp.sub RNE (fp.neg x10) (fp.neg x10))))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.add RNE (fp.neg x0) (fp.mul RNE x5 x2)) (fp.add RNE (fp.mul RNE x10 x5) (fp.neg x10)))) (fp.add RNE (fp.div RNE (fp.neg (fp.div RNE x10 x10)) (fp.mul RNE (fp.neg x12) (fp.add RNE x11 x15))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x9 x10) (fp.neg x8)) (fp.neg (fp.sub RNE x17 x12))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.mul RNE (fp.sub RNE x16 x1) (fp.neg x16)) (fp.div RNE (fp.neg x11) (fp.div RNE x14 x0))) (fp.div RNE (fp.mul RNE (fp.add RNE x2 x14) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x11 x1) (fp.mul RNE x4 x0)))) (fp.neg (fp.sub RNE (fp.sub RNE (fp.neg x3) (fp.mul RNE x3 x7)) (fp.sub RNE (fp.sub RNE x15 x16) (fp.sub RNE x8 x13))))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.sub RNE (fp.add RNE x11 x6) (fp.add RNE x17 x1)) (fp.sub RNE (fp.add RNE x6 x0) (fp.neg x7))) (fp.mul RNE (fp.add RNE (fp.mul RNE x2 x10) (fp.sub RNE x4 x13)) (fp.add RNE (fp.mul RNE x17 x10) (fp.div RNE x12 x13)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x2 x9) (fp.add RNE x15 x15)) (fp.neg (fp.sub RNE x7 x2))) (fp.mul RNE (fp.add RNE (fp.mul RNE x15 x13) (fp.neg x0)) (fp.add RNE (fp.neg x1) (fp.add RNE x14 x5))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x15) (fp.add RNE x4 x8)) (fp.neg (fp.mul RNE x5 x14))) (fp.sub RNE (fp.add RNE (fp.neg x16) (fp.add RNE x9 x2)) (fp.add RNE (fp.div RNE x9 x16) (fp.div RNE x14 x11)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.add RNE x7 x14) (fp.mul RNE x0 x8)) (fp.neg (fp.div RNE x9 x6))))))
(check-sat)
