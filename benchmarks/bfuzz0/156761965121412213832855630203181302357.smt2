(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE (fp.mul RNE x1 x19) (fp.add RNE x5 x4))) (fp.add RNE (fp.div RNE (fp.div RNE x10 x4) (fp.mul RNE x15 x6)) (fp.sub RNE (fp.mul RNE x18 x6) (fp.sub RNE x5 x7)))) (fp.div RNE (fp.neg (fp.neg (fp.neg x4))) (fp.add RNE (fp.div RNE (fp.add RNE x6 x19) (fp.sub RNE x7 x8)) (fp.div RNE (fp.mul RNE x7 x6) (fp.sub RNE x7 x14))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.div RNE (fp.neg x17) (fp.sub RNE x8 x9)) (fp.div RNE (fp.neg x5) (fp.add RNE x0 x7))) (fp.add RNE (fp.sub RNE (fp.mul RNE x8 x3) (fp.mul RNE x14 x16)) (fp.add RNE (fp.neg x2) (fp.neg x3)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.neg x5) (fp.add RNE x14 x0)) (fp.neg (fp.mul RNE x2 x8))) (fp.neg (fp.neg (fp.add RNE x1 x11))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.neg (fp.div RNE x15 x8))) (fp.div RNE (fp.neg (fp.sub RNE x14 x15)) (fp.mul RNE (fp.neg x15) (fp.neg x5)))) (fp.neg (fp.mul RNE (fp.neg (fp.mul RNE x16 x9)) (fp.add RNE (fp.neg x2) (fp.neg x14))))))
(check-sat)
