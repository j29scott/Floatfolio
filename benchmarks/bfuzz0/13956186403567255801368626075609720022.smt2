(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.add RNE (fp.div RNE x1 x14) (fp.mul RNE x10 x2)) (fp.add RNE (fp.add RNE x7 x4) (fp.mul RNE x2 x11))) (fp.div RNE (fp.neg (fp.add RNE x1 x9)) (fp.mul RNE (fp.mul RNE x15 x12) (fp.div RNE x2 x4)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x9 x4) (fp.mul RNE x12 x13)) (fp.div RNE (fp.mul RNE x13 x5) (fp.add RNE x0 x3))) (fp.add RNE (fp.mul RNE (fp.sub RNE x14 x15) (fp.sub RNE x15 x12)) (fp.add RNE (fp.neg x11) (fp.mul RNE x9 x13))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.neg (fp.neg x7)) (fp.sub RNE (fp.div RNE x12 x1) (fp.mul RNE x10 x9))) (fp.div RNE (fp.mul RNE (fp.div RNE x1 x13) (fp.sub RNE x10 x14)) (fp.sub RNE (fp.div RNE x6 x11) (fp.add RNE x7 x8)))) (fp.div RNE (fp.add RNE (fp.div RNE (fp.add RNE x3 x14) (fp.div RNE x8 x14)) (fp.mul RNE (fp.mul RNE x13 x11) (fp.add RNE x10 x2))) (fp.add RNE (fp.neg (fp.mul RNE x5 x11)) (fp.neg (fp.neg x14))))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.add RNE x0 x4) (fp.sub RNE x13 x8)) (fp.div RNE (fp.mul RNE x6 x12) (fp.add RNE x14 x5))) (fp.add RNE (fp.div RNE (fp.div RNE x0 x4) (fp.add RNE x5 x6)) (fp.add RNE (fp.mul RNE x9 x6) (fp.div RNE x13 x11)))) (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x1) (fp.div RNE x14 x2)) (fp.mul RNE (fp.add RNE x13 x12) (fp.neg x8))) (fp.sub RNE (fp.neg (fp.mul RNE x11 x12)) (fp.sub RNE (fp.neg x10) (fp.neg x10))))))
(check-sat)
