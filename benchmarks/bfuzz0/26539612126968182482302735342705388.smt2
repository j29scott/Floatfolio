(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE x5 x11) (fp.mul RNE x2 x3)) (fp.add RNE (fp.add RNE x2 x8) (fp.mul RNE x4 x11))))
(assert (fp.eq (fp.div RNE (fp.neg x7) (fp.sub RNE x10 x3)) (fp.mul RNE (fp.add RNE x1 x5) (fp.neg x11))))
(assert (fp.leq (fp.div RNE (fp.add RNE x2 x1) (fp.mul RNE x1 x10)) (fp.sub RNE (fp.mul RNE x4 x11) (fp.div RNE x4 x10))))
(assert (fp.lt (fp.sub RNE (fp.neg x12) (fp.div RNE x11 x13)) (fp.neg (fp.div RNE x4 x12))))
(assert (fp.lt (fp.sub RNE (fp.neg x10) (fp.div RNE x1 x3)) (fp.div RNE (fp.mul RNE x13 x6) (fp.div RNE x2 x10))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x12 x6) (fp.sub RNE x3 x5)) (fp.sub RNE (fp.div RNE x8 x13) (fp.sub RNE x0 x3))))
(assert (fp.gt (fp.neg (fp.add RNE x4 x2)) (fp.div RNE (fp.mul RNE x12 x13) (fp.add RNE x4 x7))))
(assert (fp.gt (fp.div RNE (fp.add RNE x13 x6) (fp.add RNE x12 x10)) (fp.div RNE (fp.sub RNE x12 x5) (fp.div RNE x1 x1))))
(assert (fp.lt (fp.neg (fp.mul RNE x3 x10)) (fp.add RNE (fp.neg x1) (fp.mul RNE x0 x7))))
(assert (fp.lt (fp.add RNE (fp.neg x2) (fp.sub RNE x3 x1)) (fp.mul RNE (fp.add RNE x8 x0) (fp.add RNE x7 x5))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x4) (fp.add RNE x9 x8)) (fp.neg (fp.mul RNE x11 x6))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x11 x0) (fp.add RNE x5 x9)) (fp.div RNE (fp.neg x0) (fp.mul RNE x5 x8))))
(assert (fp.leq (fp.div RNE (fp.div RNE x8 x0) (fp.neg x6)) (fp.sub RNE (fp.mul RNE x10 x3) (fp.div RNE x7 x3))))
(assert (fp.lt (fp.neg (fp.sub RNE x12 x5)) (fp.mul RNE (fp.mul RNE x1 x12) (fp.mul RNE x4 x2))))
(check-sat)
