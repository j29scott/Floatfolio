(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x1 x0) (fp.neg x4)) (fp.sub RNE (fp.neg x10) (fp.mul RNE x1 x6))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x8 x6) (fp.neg x2)) (fp.div RNE (fp.div RNE x4 x6) (fp.add RNE x1 x11))))
(assert (fp.eq (fp.add RNE (fp.div RNE x0 x4) (fp.add RNE x4 x11)) (fp.mul RNE (fp.div RNE x0 x10) (fp.mul RNE x7 x6))))
(assert (fp.eq (fp.neg (fp.mul RNE x9 x1)) (fp.sub RNE (fp.div RNE x9 x10) (fp.mul RNE x7 x7))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x4 x10) (fp.sub RNE x6 x3)) (fp.add RNE (fp.add RNE x5 x1) (fp.neg x0))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x2 x7) (fp.neg x10)) (fp.mul RNE (fp.div RNE x0 x3) (fp.mul RNE x0 x0))))
(assert (fp.eq (fp.neg (fp.div RNE x0 x3)) (fp.div RNE (fp.neg x6) (fp.sub RNE x4 x10))))
(assert (fp.geq (fp.mul RNE (fp.div RNE x5 x8) (fp.neg x10)) (fp.neg (fp.mul RNE x4 x5))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x8 x10) (fp.div RNE x11 x3)) (fp.div RNE (fp.add RNE x5 x8) (fp.div RNE x4 x2))))
(assert (fp.geq (fp.div RNE (fp.div RNE x3 x2) (fp.sub RNE x5 x4)) (fp.div RNE (fp.div RNE x10 x7) (fp.sub RNE x9 x9))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x9 x2) (fp.add RNE x8 x1)) (fp.sub RNE (fp.add RNE x0 x6) (fp.sub RNE x1 x7))))
(assert (fp.eq (fp.neg (fp.neg x4)) (fp.div RNE (fp.add RNE x10 x7) (fp.sub RNE x4 x6))))
(assert (fp.gt (fp.div RNE (fp.add RNE x2 x4) (fp.div RNE x9 x8)) (fp.div RNE (fp.mul RNE x0 x6) (fp.sub RNE x5 x0))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x10 x4) (fp.sub RNE x3 x11)) (fp.neg (fp.add RNE x4 x2))))
(assert (fp.lt (fp.sub RNE (fp.neg x5) (fp.neg x2)) (fp.div RNE (fp.mul RNE x8 x5) (fp.sub RNE x3 x3))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x5 x5) (fp.neg x2)) (fp.div RNE (fp.add RNE x10 x2) (fp.mul RNE x10 x1))))
(assert (fp.geq (fp.add RNE (fp.div RNE x6 x6) (fp.div RNE x10 x5)) (fp.mul RNE (fp.neg x8) (fp.neg x2))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x8) (fp.div RNE x11 x5)) (fp.mul RNE (fp.mul RNE x6 x9) (fp.neg x2))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x8 x4) (fp.mul RNE x5 x3)) (fp.div RNE (fp.sub RNE x4 x11) (fp.add RNE x1 x7))))
(check-sat)
