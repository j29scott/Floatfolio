(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.add RNE x15 x1) (fp.sub RNE x1 x9)) (fp.mul RNE (fp.div RNE x1 x15) (fp.div RNE x14 x12))))
(assert (fp.gt (fp.neg (fp.div RNE x14 x7)) (fp.sub RNE (fp.div RNE x8 x0) (fp.div RNE x3 x3))))
(assert (fp.eq (fp.add RNE (fp.neg x9) (fp.div RNE x10 x3)) (fp.neg (fp.add RNE x7 x7))))
(assert (fp.gt (fp.div RNE (fp.neg x12) (fp.neg x10)) (fp.sub RNE (fp.neg x12) (fp.div RNE x11 x6))))
(check-sat)
