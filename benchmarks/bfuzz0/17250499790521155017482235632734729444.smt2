(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.sub RNE (fp.div RNE x14 x6) (fp.add RNE x10 x11)) (fp.mul RNE (fp.neg x15) (fp.div RNE x0 x5))) (fp.sub RNE (fp.neg (fp.add RNE x14 x18)) (fp.add RNE (fp.mul RNE x2 x16) (fp.div RNE x9 x15)))) (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x5 x13) (fp.neg x3)) (fp.sub RNE (fp.add RNE x13 x1) (fp.mul RNE x1 x1))) (fp.neg (fp.add RNE (fp.div RNE x13 x12) (fp.div RNE x6 x10))))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.div RNE (fp.div RNE x7 x9) (fp.add RNE x5 x3)) (fp.mul RNE (fp.add RNE x2 x6) (fp.div RNE x4 x19))) (fp.sub RNE (fp.mul RNE (fp.neg x6) (fp.div RNE x18 x3)) (fp.div RNE (fp.sub RNE x13 x7) (fp.neg x15)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.neg x12) (fp.neg x7)) (fp.sub RNE (fp.mul RNE x15 x15) (fp.sub RNE x4 x9))) (fp.div RNE (fp.neg (fp.mul RNE x17 x18)) (fp.sub RNE (fp.div RNE x19 x0) (fp.neg x15))))))
(assert (fp.eq (fp.neg (fp.add RNE (fp.div RNE (fp.add RNE x16 x13) (fp.add RNE x1 x10)) (fp.neg (fp.mul RNE x7 x3)))) (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x14 x13) (fp.sub RNE x2 x1)) (fp.add RNE (fp.neg x19) (fp.sub RNE x10 x1))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x8 x17) (fp.mul RNE x16 x11)) (fp.neg (fp.mul RNE x15 x2))) (fp.add RNE (fp.neg (fp.mul RNE x3 x4)) (fp.mul RNE (fp.add RNE x3 x19) (fp.neg x0)))) (fp.add RNE (fp.neg (fp.mul RNE (fp.div RNE x12 x1) (fp.div RNE x3 x12))) (fp.add RNE (fp.mul RNE (fp.mul RNE x10 x8) (fp.mul RNE x5 x8)) (fp.neg (fp.neg x18))))))
(assert (fp.geq (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.div RNE x18 x19) (fp.add RNE x6 x5)) (fp.neg (fp.mul RNE x0 x6))) (fp.sub RNE (fp.add RNE (fp.add RNE x1 x12) (fp.div RNE x8 x18)) (fp.sub RNE (fp.sub RNE x10 x4) (fp.sub RNE x16 x19)))) (fp.add RNE (fp.mul RNE (fp.neg (fp.div RNE x19 x4)) (fp.neg (fp.sub RNE x13 x18))) (fp.neg (fp.div RNE (fp.add RNE x17 x15) (fp.sub RNE x12 x8))))))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.sub RNE (fp.sub RNE x17 x14) (fp.mul RNE x14 x16)) (fp.mul RNE (fp.mul RNE x1 x1) (fp.sub RNE x9 x2))) (fp.sub RNE (fp.neg (fp.sub RNE x13 x12)) (fp.div RNE (fp.mul RNE x0 x1) (fp.neg x9)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.add RNE x12 x8) (fp.div RNE x11 x7)) (fp.mul RNE (fp.mul RNE x0 x1) (fp.add RNE x5 x8))) (fp.sub RNE (fp.sub RNE (fp.add RNE x0 x18) (fp.sub RNE x1 x19)) (fp.neg (fp.add RNE x11 x6))))))
(assert (fp.eq (fp.div RNE (fp.div RNE (fp.add RNE (fp.mul RNE x18 x9) (fp.div RNE x14 x9)) (fp.mul RNE (fp.sub RNE x11 x2) (fp.div RNE x3 x11))) (fp.add RNE (fp.neg (fp.sub RNE x12 x3)) (fp.neg (fp.sub RNE x17 x0)))) (fp.div RNE (fp.add RNE (fp.mul RNE (fp.div RNE x6 x10) (fp.sub RNE x11 x15)) (fp.sub RNE (fp.mul RNE x2 x10) (fp.div RNE x6 x15))) (fp.mul RNE (fp.neg (fp.sub RNE x16 x11)) (fp.mul RNE (fp.sub RNE x19 x6) (fp.add RNE x16 x5))))))
(assert (fp.geq (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x1 x18) (fp.mul RNE x2 x16)) (fp.div RNE (fp.div RNE x17 x6) (fp.add RNE x16 x12))) (fp.div RNE (fp.neg (fp.neg x7)) (fp.mul RNE (fp.sub RNE x5 x12) (fp.neg x12)))) (fp.neg (fp.mul RNE (fp.div RNE (fp.neg x4) (fp.neg x13)) (fp.mul RNE (fp.mul RNE x1 x12) (fp.sub RNE x17 x10))))))
(check-sat)
