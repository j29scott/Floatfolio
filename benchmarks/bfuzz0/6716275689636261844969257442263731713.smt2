(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x4 x0) (fp.mul RNE x23 x22)) (fp.div RNE (fp.sub RNE x25 x7) (fp.div RNE x4 x10))) (fp.add RNE (fp.add RNE (fp.div RNE x19 x14) (fp.sub RNE x21 x17)) (fp.div RNE (fp.div RNE x22 x3) (fp.mul RNE x18 x18)))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE (fp.add RNE x12 x0) (fp.sub RNE x22 x21)) (fp.div RNE (fp.neg x13) (fp.neg x0))) (fp.sub RNE (fp.add RNE (fp.sub RNE x13 x13) (fp.div RNE x17 x0)) (fp.neg (fp.sub RNE x6 x22)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.sub RNE x22 x1)) (fp.sub RNE (fp.sub RNE x2 x19) (fp.add RNE x9 x18))) (fp.mul RNE (fp.neg (fp.div RNE x17 x23)) (fp.sub RNE (fp.neg x13) (fp.sub RNE x21 x16)))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.div RNE x2 x2) (fp.div RNE x24 x1)) (fp.div RNE (fp.div RNE x2 x2) (fp.sub RNE x3 x16))) (fp.neg (fp.sub RNE (fp.sub RNE x16 x20) (fp.mul RNE x21 x13)))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.div RNE x7 x11) (fp.sub RNE x17 x16)) (fp.add RNE (fp.mul RNE x23 x16) (fp.mul RNE x13 x20))) (fp.neg (fp.neg (fp.add RNE x19 x19)))))
(assert (fp.eq (fp.neg (fp.div RNE (fp.div RNE x19 x21) (fp.add RNE x24 x21))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x14 x14) (fp.div RNE x6 x5)) (fp.neg (fp.neg x18)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x23 x7) (fp.mul RNE x23 x18)) (fp.add RNE (fp.div RNE x11 x19) (fp.mul RNE x12 x10))) (fp.mul RNE (fp.mul RNE (fp.neg x20) (fp.div RNE x0 x5)) (fp.div RNE (fp.add RNE x21 x21) (fp.div RNE x11 x7)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.neg x14) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x2 x19) (fp.neg x15))) (fp.div RNE (fp.neg (fp.mul RNE x5 x15)) (fp.neg (fp.neg x25)))))
(assert (fp.lt (fp.neg (fp.neg (fp.sub RNE x15 x8))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x8 x24) (fp.div RNE x4 x19)) (fp.div RNE (fp.sub RNE x16 x4) (fp.add RNE x0 x15)))))
(assert (fp.eq (fp.neg (fp.mul RNE (fp.sub RNE x17 x12) (fp.div RNE x6 x1))) (fp.sub RNE (fp.neg (fp.sub RNE x24 x6)) (fp.add RNE (fp.sub RNE x20 x25) (fp.div RNE x0 x16)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE x9 x1)) (fp.div RNE (fp.mul RNE x15 x16) (fp.sub RNE x12 x23))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x20 x18) (fp.neg x13)) (fp.div RNE (fp.mul RNE x13 x22) (fp.div RNE x6 x7)))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE (fp.div RNE x3 x22) (fp.mul RNE x25 x15)) (fp.sub RNE (fp.div RNE x24 x15) (fp.div RNE x15 x0))) (fp.mul RNE (fp.add RNE (fp.mul RNE x23 x1) (fp.add RNE x4 x5)) (fp.mul RNE (fp.div RNE x24 x9) (fp.add RNE x21 x13)))))
(assert (fp.eq (fp.div RNE (fp.neg (fp.sub RNE x11 x21)) (fp.neg (fp.neg x13))) (fp.add RNE (fp.mul RNE (fp.div RNE x24 x15) (fp.div RNE x20 x10)) (fp.sub RNE (fp.div RNE x20 x25) (fp.div RNE x15 x22)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.neg x2) (fp.sub RNE x19 x24)) (fp.add RNE (fp.sub RNE x10 x17) (fp.neg x7))) (fp.neg (fp.neg (fp.add RNE x17 x17)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.sub RNE x4 x1) (fp.add RNE x17 x13)) (fp.div RNE (fp.neg x7) (fp.div RNE x14 x17))) (fp.mul RNE (fp.sub RNE (fp.mul RNE x3 x14) (fp.div RNE x16 x23)) (fp.mul RNE (fp.add RNE x13 x6) (fp.mul RNE x24 x19)))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.sub RNE x24 x18) (fp.mul RNE x21 x3))) (fp.mul RNE (fp.div RNE (fp.neg x12) (fp.sub RNE x13 x6)) (fp.add RNE (fp.sub RNE x8 x20) (fp.add RNE x23 x2)))))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.add RNE x14 x14) (fp.mul RNE x25 x25)) (fp.sub RNE (fp.neg x8) (fp.neg x15))) (fp.neg (fp.sub RNE (fp.mul RNE x15 x11) (fp.mul RNE x12 x6)))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.mul RNE x15 x20) (fp.mul RNE x9 x9)) (fp.sub RNE (fp.sub RNE x1 x2) (fp.sub RNE x19 x25))) (fp.div RNE (fp.neg (fp.mul RNE x3 x17)) (fp.div RNE (fp.sub RNE x11 x1) (fp.div RNE x18 x10)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.add RNE x21 x15) (fp.neg x25))) (fp.add RNE (fp.sub RNE (fp.neg x23) (fp.mul RNE x11 x8)) (fp.div RNE (fp.add RNE x9 x20) (fp.neg x2)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.sub RNE x19 x23) (fp.add RNE x13 x7)) (fp.mul RNE (fp.add RNE x15 x15) (fp.div RNE x9 x12))) (fp.add RNE (fp.div RNE (fp.add RNE x9 x3) (fp.neg x10)) (fp.div RNE (fp.sub RNE x7 x16) (fp.div RNE x15 x7)))))
(check-sat)
