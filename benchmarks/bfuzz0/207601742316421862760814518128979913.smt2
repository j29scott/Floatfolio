(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.div RNE x11 x11) (fp.mul RNE x7 x0)))
(assert (fp.lt (fp.neg x4) (fp.neg x7)))
(assert (fp.leq (fp.sub RNE x12 x10) (fp.sub RNE x14 x3)))
(assert (fp.eq (fp.mul RNE x5 x12) (fp.sub RNE x17 x1)))
(assert (fp.leq (fp.neg x8) (fp.add RNE x5 x16)))
(assert (fp.gt (fp.neg x2) (fp.add RNE x16 x6)))
(assert (fp.gt (fp.div RNE x12 x8) (fp.sub RNE x13 x13)))
(assert (fp.geq (fp.div RNE x13 x0) (fp.add RNE x13 x1)))
(assert (fp.eq (fp.sub RNE x7 x6) (fp.mul RNE x5 x2)))
(check-sat)
