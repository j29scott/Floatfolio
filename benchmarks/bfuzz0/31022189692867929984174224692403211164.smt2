(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x22 x20) (fp.mul RNE x15 x22)) (fp.add RNE (fp.add RNE x17 x13) (fp.div RNE x0 x0))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x16) (fp.neg x7)) (fp.neg (fp.add RNE x2 x10))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x22 x6) (fp.sub RNE x16 x15)) (fp.div RNE (fp.div RNE x21 x20) (fp.sub RNE x12 x3))))
(assert (fp.gt (fp.div RNE (fp.div RNE x6 x11) (fp.sub RNE x3 x17)) (fp.mul RNE (fp.neg x16) (fp.mul RNE x15 x15))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x19 x21) (fp.mul RNE x1 x13)) (fp.div RNE (fp.div RNE x18 x17) (fp.neg x18))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x1 x7) (fp.add RNE x3 x11)) (fp.neg (fp.sub RNE x16 x11))))
(assert (fp.lt (fp.neg (fp.mul RNE x15 x4)) (fp.neg (fp.div RNE x22 x15))))
(assert (fp.lt (fp.mul RNE (fp.neg x3) (fp.neg x4)) (fp.div RNE (fp.add RNE x19 x14) (fp.div RNE x0 x5))))
(check-sat)
