(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE x2 x13) (fp.add RNE x10 x0)) (fp.div RNE (fp.neg x9) (fp.mul RNE x6 x9))) (fp.mul RNE (fp.mul RNE (fp.neg x7) (fp.mul RNE x12 x1)) (fp.add RNE (fp.div RNE x13 x3) (fp.mul RNE x10 x3)))))
(assert (fp.lt (fp.mul RNE (fp.neg (fp.sub RNE x10 x5)) (fp.add RNE (fp.add RNE x6 x1) (fp.div RNE x6 x13))) (fp.add RNE (fp.add RNE (fp.neg x2) (fp.sub RNE x9 x3)) (fp.mul RNE (fp.div RNE x1 x9) (fp.sub RNE x3 x8)))))
(assert (fp.leq (fp.add RNE (fp.sub RNE (fp.add RNE x4 x2) (fp.div RNE x10 x12)) (fp.add RNE (fp.neg x4) (fp.sub RNE x7 x7))) (fp.mul RNE (fp.mul RNE (fp.neg x10) (fp.add RNE x12 x1)) (fp.neg (fp.sub RNE x5 x6)))))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.add RNE x0 x11) (fp.neg x0))) (fp.add RNE (fp.div RNE (fp.add RNE x0 x10) (fp.mul RNE x1 x3)) (fp.neg (fp.add RNE x5 x11)))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE (fp.div RNE x10 x7) (fp.div RNE x1 x5)) (fp.neg (fp.add RNE x8 x1))) (fp.mul RNE (fp.mul RNE (fp.neg x5) (fp.add RNE x3 x3)) (fp.neg (fp.sub RNE x0 x4)))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.add RNE x8 x6) (fp.neg x6)) (fp.div RNE (fp.mul RNE x0 x11) (fp.neg x2))) (fp.mul RNE (fp.neg (fp.mul RNE x6 x10)) (fp.div RNE (fp.div RNE x0 x12) (fp.sub RNE x1 x2)))))
(check-sat)
