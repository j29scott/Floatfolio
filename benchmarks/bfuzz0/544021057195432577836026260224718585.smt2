(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x1 x17)) (fp.mul RNE (fp.sub RNE x11 x9) (fp.div RNE x15 x3))) (fp.add RNE (fp.sub RNE (fp.div RNE x11 x0) (fp.mul RNE x15 x1)) (fp.add RNE (fp.mul RNE x0 x11) (fp.mul RNE x2 x15)))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.neg x5) (fp.neg x1)) (fp.mul RNE (fp.neg x4) (fp.sub RNE x8 x12))) (fp.div RNE (fp.neg (fp.sub RNE x4 x15)) (fp.add RNE (fp.div RNE x4 x18) (fp.mul RNE x13 x5)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.sub RNE x15 x1) (fp.div RNE x6 x12)) (fp.sub RNE (fp.neg x19) (fp.neg x3))) (fp.div RNE (fp.div RNE (fp.sub RNE x0 x13) (fp.mul RNE x8 x14)) (fp.sub RNE (fp.div RNE x10 x9) (fp.mul RNE x14 x14)))))
(check-sat)
