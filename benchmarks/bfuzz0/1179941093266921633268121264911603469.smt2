(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x12 x9) (fp.add RNE x4 x13)) (fp.div RNE (fp.neg x15) (fp.div RNE x7 x0))))
(assert (fp.lt (fp.div RNE (fp.div RNE x10 x8) (fp.add RNE x2 x11)) (fp.neg (fp.add RNE x7 x4))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x12 x13) (fp.mul RNE x14 x2)) (fp.sub RNE (fp.div RNE x8 x6) (fp.mul RNE x14 x11))))
(assert (fp.lt (fp.add RNE (fp.neg x10) (fp.add RNE x5 x0)) (fp.mul RNE (fp.sub RNE x11 x2) (fp.mul RNE x5 x8))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x9 x13) (fp.mul RNE x12 x6)) (fp.sub RNE (fp.sub RNE x0 x14) (fp.div RNE x6 x9))))
(check-sat)
