(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.sub RNE x11 x8) (fp.div RNE x4 x0)) (fp.div RNE (fp.sub RNE x3 x6) (fp.add RNE x9 x9))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x9 x1) (fp.sub RNE x0 x3)) (fp.neg (fp.add RNE x4 x2))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x5 x9) (fp.sub RNE x8 x0)) (fp.div RNE (fp.mul RNE x7 x2) (fp.sub RNE x5 x10))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x7 x10) (fp.div RNE x2 x0)) (fp.mul RNE (fp.sub RNE x6 x11) (fp.add RNE x10 x6))))
(assert (fp.leq (fp.neg (fp.add RNE x8 x9)) (fp.add RNE (fp.div RNE x0 x5) (fp.neg x3))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x4 x11) (fp.neg x7)) (fp.mul RNE (fp.neg x0) (fp.div RNE x8 x0))))
(assert (fp.leq (fp.neg (fp.add RNE x10 x8)) (fp.div RNE (fp.div RNE x7 x4) (fp.sub RNE x8 x4))))
(check-sat)
