(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x7 x4) (fp.add RNE x6 x8)))
(assert (fp.geq (fp.div RNE x5 x3) (fp.div RNE x1 x1)))
(assert (fp.eq (fp.sub RNE x1 x4) (fp.neg x5)))
(assert (fp.gt (fp.add RNE x0 x8) (fp.sub RNE x1 x1)))
(assert (fp.geq (fp.neg x6) (fp.sub RNE x7 x6)))
(assert (fp.geq (fp.sub RNE x4 x5) (fp.mul RNE x8 x7)))
(assert (fp.leq (fp.add RNE x6 x7) (fp.neg x8)))
(assert (fp.geq (fp.add RNE x0 x1) (fp.sub RNE x0 x2)))
(assert (fp.eq (fp.div RNE x6 x3) (fp.add RNE x5 x1)))
(assert (fp.gt (fp.mul RNE x0 x8) (fp.add RNE x1 x0)))
(assert (fp.lt (fp.add RNE x6 x3) (fp.div RNE x8 x8)))
(assert (fp.lt (fp.mul RNE x2 x8) (fp.neg x8)))
(assert (fp.eq (fp.div RNE x7 x6) (fp.neg x1)))
(assert (fp.gt (fp.mul RNE x1 x6) (fp.sub RNE x2 x7)))
(check-sat)
