(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE x20 x7) (fp.div RNE x7 x10)))
(assert (fp.leq (fp.add RNE x17 x2) (fp.add RNE x7 x13)))
(assert (fp.gt (fp.mul RNE x15 x3) (fp.sub RNE x13 x16)))
(assert (fp.geq (fp.mul RNE x13 x12) (fp.add RNE x5 x5)))
(assert (fp.gt (fp.mul RNE x19 x10) (fp.mul RNE x18 x5)))
(assert (fp.lt (fp.mul RNE x0 x3) (fp.neg x13)))
(assert (fp.gt (fp.sub RNE x0 x12) (fp.neg x21)))
(assert (fp.leq (fp.mul RNE x3 x20) (fp.sub RNE x20 x0)))
(assert (fp.gt (fp.sub RNE x0 x24) (fp.add RNE x8 x4)))
(assert (fp.leq (fp.sub RNE x5 x21) (fp.div RNE x5 x1)))
(assert (fp.eq (fp.sub RNE x21 x13) (fp.mul RNE x20 x16)))
(assert (fp.leq (fp.neg x4) (fp.div RNE x9 x24)))
(assert (fp.eq (fp.mul RNE x10 x12) (fp.neg x19)))
(assert (fp.eq (fp.sub RNE x20 x3) (fp.add RNE x12 x13)))
(assert (fp.gt (fp.mul RNE x24 x15) (fp.mul RNE x7 x21)))
(assert (fp.lt (fp.div RNE x2 x7) (fp.div RNE x19 x5)))
(assert (fp.lt (fp.neg x22) (fp.add RNE x7 x9)))
(assert (fp.leq (fp.neg x13) (fp.neg x18)))
(assert (fp.lt (fp.sub RNE x6 x0) (fp.div RNE x20 x4)))
(assert (fp.lt (fp.div RNE x8 x24) (fp.neg x14)))
(check-sat)
