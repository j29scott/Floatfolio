(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.div RNE (fp.mul RNE x0 x1) (fp.sub RNE x5 x4)) (fp.mul RNE (fp.sub RNE x15 x3) (fp.div RNE x13 x10))))
(assert (fp.eq (fp.neg (fp.div RNE x9 x4)) (fp.add RNE (fp.neg x0) (fp.mul RNE x6 x14))))
(assert (fp.leq (fp.neg (fp.mul RNE x17 x10)) (fp.div RNE (fp.mul RNE x10 x0) (fp.mul RNE x10 x14))))
(assert (fp.leq (fp.mul RNE (fp.neg x14) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x5 x10) (fp.neg x10))))
(assert (fp.lt (fp.div RNE (fp.neg x4) (fp.sub RNE x0 x8)) (fp.sub RNE (fp.neg x9) (fp.div RNE x8 x10))))
(assert (fp.lt (fp.neg (fp.div RNE x13 x16)) (fp.sub RNE (fp.sub RNE x7 x7) (fp.add RNE x6 x8))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x17 x3) (fp.div RNE x7 x1)) (fp.div RNE (fp.add RNE x10 x0) (fp.mul RNE x13 x4))))
(assert (fp.leq (fp.div RNE (fp.sub RNE x8 x12) (fp.mul RNE x16 x13)) (fp.mul RNE (fp.sub RNE x13 x8) (fp.add RNE x16 x11))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x4 x13) (fp.mul RNE x3 x12)) (fp.mul RNE (fp.div RNE x0 x7) (fp.sub RNE x5 x11))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x11) (fp.add RNE x3 x4)) (fp.neg (fp.add RNE x4 x9))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x3 x1) (fp.div RNE x6 x8)) (fp.div RNE (fp.mul RNE x11 x14) (fp.mul RNE x5 x17))))
(assert (fp.gt (fp.div RNE (fp.neg x4) (fp.mul RNE x1 x8)) (fp.mul RNE (fp.add RNE x9 x3) (fp.neg x4))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x14 x2) (fp.mul RNE x0 x14)) (fp.neg (fp.add RNE x1 x14))))
(assert (fp.geq (fp.neg (fp.mul RNE x10 x16)) (fp.mul RNE (fp.neg x0) (fp.mul RNE x14 x13))))
(assert (fp.gt (fp.neg (fp.mul RNE x7 x17)) (fp.neg (fp.mul RNE x6 x4))))
(assert (fp.geq (fp.sub RNE (fp.neg x16) (fp.div RNE x11 x5)) (fp.div RNE (fp.mul RNE x3 x8) (fp.add RNE x9 x16))))
(assert (fp.geq (fp.add RNE (fp.neg x4) (fp.add RNE x6 x10)) (fp.sub RNE (fp.add RNE x2 x13) (fp.div RNE x11 x17))))
(check-sat)
