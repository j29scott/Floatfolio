(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.add RNE x11 x12) (fp.add RNE x1 x9)) (fp.mul RNE (fp.neg x9) (fp.mul RNE x0 x2))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x11 x7) (fp.add RNE x6 x7)) (fp.mul RNE (fp.sub RNE x7 x12) (fp.div RNE x8 x2))))
(assert (fp.gt (fp.add RNE (fp.add RNE x6 x5) (fp.add RNE x6 x6)) (fp.div RNE (fp.div RNE x2 x5) (fp.mul RNE x3 x10))))
(assert (fp.eq (fp.neg (fp.sub RNE x4 x8)) (fp.neg (fp.add RNE x2 x9))))
(assert (fp.lt (fp.neg (fp.mul RNE x6 x9)) (fp.add RNE (fp.mul RNE x11 x3) (fp.mul RNE x0 x5))))
(assert (fp.eq (fp.neg (fp.neg x5)) (fp.add RNE (fp.mul RNE x7 x4) (fp.mul RNE x2 x12))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x1 x13) (fp.mul RNE x10 x12)) (fp.neg (fp.div RNE x3 x9))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x12 x11) (fp.add RNE x7 x8)) (fp.neg (fp.sub RNE x5 x11))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x6 x10) (fp.add RNE x12 x2)) (fp.mul RNE (fp.div RNE x7 x9) (fp.mul RNE x1 x2))))
(check-sat)
