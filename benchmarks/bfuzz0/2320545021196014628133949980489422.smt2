(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x5 x0) (fp.add RNE x2 x5)) (fp.neg (fp.neg x1))))
(assert (fp.leq (fp.div RNE (fp.mul RNE x1 x3) (fp.sub RNE x9 x9)) (fp.neg (fp.mul RNE x4 x7))))
(assert (fp.lt (fp.div RNE (fp.add RNE x8 x1) (fp.sub RNE x0 x4)) (fp.mul RNE (fp.neg x7) (fp.mul RNE x3 x7))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE x7 x5) (fp.neg x2)) (fp.div RNE (fp.mul RNE x6 x0) (fp.sub RNE x7 x7))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x3 x4) (fp.sub RNE x3 x1)) (fp.sub RNE (fp.sub RNE x3 x4) (fp.add RNE x0 x9))))
(assert (fp.lt (fp.div RNE (fp.mul RNE x1 x9) (fp.div RNE x0 x3)) (fp.sub RNE (fp.sub RNE x4 x1) (fp.neg x6))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x1 x3) (fp.div RNE x1 x2)) (fp.div RNE (fp.neg x4) (fp.add RNE x3 x3))))
(assert (fp.gt (fp.neg (fp.add RNE x3 x5)) (fp.mul RNE (fp.mul RNE x3 x9) (fp.neg x6))))
(assert (fp.leq (fp.sub RNE (fp.mul RNE x9 x9) (fp.add RNE x2 x4)) (fp.neg (fp.add RNE x3 x9))))
(check-sat)
