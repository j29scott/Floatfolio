(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.sub RNE x8 x10) (fp.neg x7)))
(assert (fp.eq (fp.mul RNE x5 x9) (fp.div RNE x11 x9)))
(assert (fp.gt (fp.div RNE x11 x6) (fp.mul RNE x1 x10)))
(assert (fp.leq (fp.mul RNE x3 x10) (fp.div RNE x4 x5)))
(assert (fp.leq (fp.mul RNE x3 x10) (fp.mul RNE x1 x10)))
(assert (fp.geq (fp.sub RNE x11 x11) (fp.neg x8)))
(assert (fp.leq (fp.div RNE x11 x5) (fp.sub RNE x10 x3)))
(assert (fp.leq (fp.neg x6) (fp.add RNE x3 x5)))
(assert (fp.geq (fp.div RNE x8 x11) (fp.mul RNE x10 x5)))
(assert (fp.lt (fp.neg x4) (fp.mul RNE x6 x6)))
(assert (fp.leq (fp.div RNE x7 x11) (fp.add RNE x8 x7)))
(assert (fp.leq (fp.add RNE x2 x2) (fp.add RNE x11 x8)))
(assert (fp.eq (fp.add RNE x11 x2) (fp.div RNE x5 x6)))
(check-sat)
