(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x23 x4) (fp.sub RNE x20 x10)))
(assert (fp.eq (fp.neg x15) (fp.sub RNE x13 x13)))
(assert (fp.lt (fp.neg x9) (fp.sub RNE x4 x0)))
(assert (fp.eq (fp.div RNE x9 x19) (fp.mul RNE x7 x13)))
(assert (fp.lt (fp.neg x5) (fp.add RNE x12 x21)))
(assert (fp.eq (fp.add RNE x2 x12) (fp.mul RNE x2 x8)))
(assert (fp.lt (fp.neg x21) (fp.neg x15)))
(assert (fp.lt (fp.neg x14) (fp.neg x2)))
(assert (fp.lt (fp.add RNE x6 x9) (fp.sub RNE x14 x1)))
(assert (fp.gt (fp.neg x4) (fp.add RNE x2 x19)))
(assert (fp.eq (fp.add RNE x11 x23) (fp.add RNE x15 x10)))
(assert (fp.leq (fp.sub RNE x9 x13) (fp.neg x1)))
(assert (fp.geq (fp.neg x5) (fp.mul RNE x9 x19)))
(assert (fp.gt (fp.mul RNE x19 x1) (fp.sub RNE x12 x17)))
(assert (fp.lt (fp.sub RNE x3 x21) (fp.add RNE x17 x4)))
(assert (fp.gt (fp.div RNE x17 x18) (fp.sub RNE x0 x5)))
(assert (fp.geq (fp.div RNE x19 x3) (fp.mul RNE x6 x16)))
(assert (fp.lt (fp.neg x18) (fp.neg x10)))
(assert (fp.lt (fp.sub RNE x17 x22) (fp.add RNE x14 x4)))
(assert (fp.gt (fp.div RNE x7 x8) (fp.neg x14)))
(check-sat)
