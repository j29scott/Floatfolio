(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.div RNE x8 x7) (fp.sub RNE x5 x4)) (fp.div RNE (fp.mul RNE x1 x11) (fp.mul RNE x9 x4))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x2 x4) (fp.div RNE x1 x5)) (fp.div RNE (fp.add RNE x5 x5) (fp.add RNE x9 x5))))
(assert (fp.leq (fp.neg (fp.mul RNE x6 x0)) (fp.neg (fp.div RNE x3 x9))))
(assert (fp.leq (fp.neg (fp.neg x6)) (fp.div RNE (fp.sub RNE x3 x3) (fp.sub RNE x6 x3))))
(assert (fp.geq (fp.div RNE (fp.div RNE x8 x5) (fp.neg x6)) (fp.sub RNE (fp.div RNE x6 x9) (fp.neg x3))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x9 x6) (fp.div RNE x9 x5)) (fp.mul RNE (fp.div RNE x11 x4) (fp.mul RNE x3 x5))))
(assert (fp.lt (fp.add RNE (fp.add RNE x9 x0) (fp.neg x4)) (fp.sub RNE (fp.neg x5) (fp.add RNE x1 x3))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x3 x3) (fp.neg x6)) (fp.mul RNE (fp.mul RNE x1 x1) (fp.mul RNE x3 x10))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x11 x1) (fp.div RNE x6 x7)) (fp.sub RNE (fp.add RNE x9 x11) (fp.neg x1))))
(assert (fp.lt (fp.neg (fp.div RNE x2 x6)) (fp.add RNE (fp.add RNE x0 x3) (fp.neg x10))))
(assert (fp.gt (fp.add RNE (fp.add RNE x5 x0) (fp.sub RNE x6 x10)) (fp.mul RNE (fp.div RNE x4 x2) (fp.add RNE x0 x8))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x2 x4) (fp.div RNE x11 x10)) (fp.mul RNE (fp.add RNE x11 x2) (fp.mul RNE x9 x2))))
(assert (fp.gt (fp.add RNE (fp.neg x10) (fp.neg x9)) (fp.neg (fp.div RNE x0 x11))))
(assert (fp.lt (fp.neg (fp.sub RNE x6 x3)) (fp.sub RNE (fp.neg x10) (fp.div RNE x11 x3))))
(assert (fp.leq (fp.mul RNE (fp.add RNE x2 x6) (fp.neg x8)) (fp.mul RNE (fp.div RNE x9 x2) (fp.sub RNE x10 x0))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x5 x5) (fp.mul RNE x7 x1)) (fp.neg (fp.sub RNE x5 x2))))
(check-sat)
