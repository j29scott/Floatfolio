(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.add RNE x12 x6) (fp.div RNE x15 x0)) (fp.add RNE (fp.mul RNE x9 x8) (fp.add RNE x2 x4))) (fp.add RNE (fp.neg (fp.add RNE x17 x15)) (fp.mul RNE (fp.add RNE x14 x9) (fp.sub RNE x19 x2)))))
(assert (fp.geq (fp.sub RNE (fp.neg (fp.div RNE x6 x3)) (fp.div RNE (fp.mul RNE x15 x1) (fp.sub RNE x10 x10))) (fp.mul RNE (fp.sub RNE (fp.sub RNE x19 x2) (fp.neg x8)) (fp.add RNE (fp.neg x6) (fp.add RNE x1 x1)))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.sub RNE x13 x6) (fp.div RNE x13 x6)) (fp.div RNE (fp.add RNE x4 x3) (fp.sub RNE x14 x12))) (fp.div RNE (fp.neg (fp.mul RNE x5 x0)) (fp.add RNE (fp.neg x11) (fp.add RNE x14 x7)))))
(check-sat)
