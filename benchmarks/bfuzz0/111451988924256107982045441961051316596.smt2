(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE x2 x3) (fp.neg x4)))
(assert (fp.leq (fp.add RNE x0 x5) (fp.sub RNE x1 x7)))
(assert (fp.lt (fp.mul RNE x6 x3) (fp.mul RNE x8 x9)))
(assert (fp.lt (fp.sub RNE x0 x10) (fp.div RNE x6 x8)))
(assert (fp.eq (fp.sub RNE x5 x1) (fp.div RNE x1 x1)))
(assert (fp.lt (fp.sub RNE x10 x3) (fp.neg x3)))
(assert (fp.lt (fp.mul RNE x3 x1) (fp.neg x5)))
(assert (fp.eq (fp.mul RNE x1 x1) (fp.sub RNE x8 x7)))
(assert (fp.leq (fp.div RNE x3 x0) (fp.div RNE x4 x3)))
(assert (fp.eq (fp.div RNE x8 x0) (fp.sub RNE x6 x2)))
(assert (fp.eq (fp.div RNE x3 x9) (fp.sub RNE x0 x1)))
(assert (fp.eq (fp.mul RNE x3 x6) (fp.sub RNE x1 x7)))
(assert (fp.eq (fp.add RNE x9 x2) (fp.mul RNE x8 x6)))
(assert (fp.lt (fp.mul RNE x8 x3) (fp.add RNE x4 x3)))
(assert (fp.geq (fp.sub RNE x8 x5) (fp.add RNE x2 x7)))
(check-sat)
