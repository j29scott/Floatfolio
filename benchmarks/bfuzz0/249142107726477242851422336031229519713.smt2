(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(declare-const x27 (_ FloatingPoint 11 53))
(declare-const x28 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE x17 x12) (fp.add RNE x13 x16)))
(assert (fp.leq (fp.add RNE x28 x5) (fp.add RNE x2 x18)))
(assert (fp.leq (fp.sub RNE x20 x24) (fp.add RNE x11 x23)))
(assert (fp.lt (fp.add RNE x21 x21) (fp.mul RNE x12 x13)))
(assert (fp.leq (fp.div RNE x21 x25) (fp.neg x27)))
(assert (fp.leq (fp.mul RNE x24 x0) (fp.mul RNE x7 x21)))
(assert (fp.lt (fp.neg x14) (fp.neg x23)))
(assert (fp.geq (fp.neg x17) (fp.div RNE x5 x14)))
(assert (fp.lt (fp.add RNE x16 x7) (fp.div RNE x19 x1)))
(assert (fp.geq (fp.div RNE x5 x11) (fp.mul RNE x8 x22)))
(assert (fp.lt (fp.div RNE x19 x6) (fp.mul RNE x22 x14)))
(assert (fp.leq (fp.sub RNE x0 x12) (fp.add RNE x15 x25)))
(assert (fp.geq (fp.neg x0) (fp.neg x14)))
(assert (fp.gt (fp.add RNE x22 x8) (fp.div RNE x3 x3)))
(assert (fp.leq (fp.mul RNE x9 x10) (fp.neg x11)))
(assert (fp.eq (fp.sub RNE x5 x6) (fp.add RNE x12 x25)))
(check-sat)
