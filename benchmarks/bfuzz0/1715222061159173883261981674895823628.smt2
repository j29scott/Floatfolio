(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE x11 x8)) (fp.sub RNE (fp.neg x5) (fp.div RNE x6 x1))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x5 x2) (fp.mul RNE x1 x11)) (fp.neg (fp.div RNE x4 x9))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x2 x11) (fp.add RNE x8 x4)) (fp.div RNE (fp.add RNE x3 x8) (fp.add RNE x11 x9))))
(assert (fp.lt (fp.add RNE (fp.neg x7) (fp.mul RNE x11 x9)) (fp.neg (fp.neg x11))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x10 x7) (fp.sub RNE x9 x11)) (fp.mul RNE (fp.add RNE x0 x10) (fp.add RNE x10 x9))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x10 x6) (fp.neg x6)) (fp.sub RNE (fp.sub RNE x11 x4) (fp.mul RNE x1 x1))))
(assert (fp.geq (fp.add RNE (fp.div RNE x4 x1) (fp.neg x0)) (fp.div RNE (fp.div RNE x0 x10) (fp.sub RNE x6 x7))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x11 x6) (fp.neg x2)) (fp.add RNE (fp.sub RNE x9 x10) (fp.div RNE x8 x3))))
(assert (fp.gt (fp.mul RNE (fp.div RNE x0 x0) (fp.mul RNE x4 x9)) (fp.mul RNE (fp.div RNE x5 x3) (fp.add RNE x5 x8))))
(assert (fp.geq (fp.sub RNE (fp.neg x10) (fp.sub RNE x5 x5)) (fp.add RNE (fp.div RNE x8 x5) (fp.add RNE x8 x11))))
(assert (fp.eq (fp.add RNE (fp.add RNE x3 x7) (fp.mul RNE x0 x3)) (fp.add RNE (fp.mul RNE x8 x11) (fp.div RNE x0 x0))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x2 x9) (fp.add RNE x7 x8)) (fp.div RNE (fp.neg x8) (fp.neg x10))))
(assert (fp.eq (fp.div RNE (fp.neg x1) (fp.neg x10)) (fp.div RNE (fp.mul RNE x10 x5) (fp.sub RNE x11 x11))))
(assert (fp.gt (fp.mul RNE (fp.mul RNE x4 x8) (fp.sub RNE x1 x6)) (fp.sub RNE (fp.mul RNE x8 x1) (fp.sub RNE x7 x6))))
(check-sat)
