(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.sub RNE (fp.div RNE x8 x1) (fp.sub RNE x7 x14)) (fp.add RNE (fp.neg x1) (fp.sub RNE x1 x4))) (fp.add RNE (fp.sub RNE (fp.mul RNE x0 x3) (fp.mul RNE x6 x1)) (fp.mul RNE (fp.neg x0) (fp.div RNE x0 x1)))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE x10 x2) (fp.sub RNE x8 x8)) (fp.neg (fp.sub RNE x7 x10))) (fp.add RNE (fp.div RNE (fp.neg x0) (fp.div RNE x1 x0)) (fp.mul RNE (fp.mul RNE x8 x5) (fp.neg x10)))))
(check-sat)
