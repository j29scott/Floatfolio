(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x6) (fp.sub RNE x3 x2)))
(assert (fp.geq (fp.neg x2) (fp.mul RNE x3 x1)))
(assert (fp.lt (fp.add RNE x7 x5) (fp.mul RNE x7 x6)))
(assert (fp.geq (fp.sub RNE x8 x7) (fp.add RNE x4 x1)))
(assert (fp.eq (fp.neg x2) (fp.div RNE x1 x6)))
(assert (fp.leq (fp.add RNE x8 x4) (fp.div RNE x2 x7)))
(assert (fp.eq (fp.sub RNE x3 x5) (fp.add RNE x3 x1)))
(assert (fp.geq (fp.add RNE x8 x8) (fp.mul RNE x1 x6)))
(assert (fp.leq (fp.sub RNE x3 x3) (fp.div RNE x5 x3)))
(assert (fp.gt (fp.div RNE x4 x1) (fp.sub RNE x4 x6)))
(assert (fp.geq (fp.mul RNE x2 x6) (fp.mul RNE x2 x3)))
(assert (fp.gt (fp.sub RNE x6 x1) (fp.sub RNE x7 x8)))
(assert (fp.geq (fp.mul RNE x1 x4) (fp.sub RNE x8 x7)))
(assert (fp.geq (fp.add RNE x8 x1) (fp.add RNE x8 x8)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x2 x5)))
(assert (fp.lt (fp.neg x0) (fp.neg x8)))
(assert (fp.geq (fp.mul RNE x3 x0) (fp.div RNE x6 x0)))
(check-sat)
