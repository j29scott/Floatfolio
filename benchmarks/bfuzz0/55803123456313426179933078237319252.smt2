(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x3)) (fp.add RNE (fp.neg x5) (fp.sub RNE x6 x3))))
(assert (fp.eq (fp.neg (fp.div RNE x1 x3)) (fp.add RNE (fp.sub RNE x0 x1) (fp.add RNE x0 x2))))
(assert (fp.gt (fp.div RNE (fp.add RNE x5 x5) (fp.sub RNE x6 x4)) (fp.mul RNE (fp.div RNE x1 x0) (fp.mul RNE x1 x6))))
(assert (fp.gt (fp.neg (fp.add RNE x4 x4)) (fp.div RNE (fp.mul RNE x3 x3) (fp.neg x3))))
(assert (fp.lt (fp.div RNE (fp.neg x2) (fp.add RNE x1 x2)) (fp.sub RNE (fp.mul RNE x6 x2) (fp.div RNE x6 x0))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE x4 x5) (fp.mul RNE x4 x6)) (fp.neg (fp.div RNE x6 x5))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x5 x0) (fp.neg x2)) (fp.div RNE (fp.mul RNE x3 x6) (fp.add RNE x1 x6))))
(check-sat)
