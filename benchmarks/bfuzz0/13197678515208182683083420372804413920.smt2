(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.neg x7) (fp.neg x4)) (fp.div RNE (fp.div RNE x2 x2) (fp.sub RNE x1 x9))))
(assert (fp.geq (fp.neg (fp.add RNE x4 x7)) (fp.div RNE (fp.div RNE x3 x6) (fp.sub RNE x6 x4))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x5 x2) (fp.neg x4)) (fp.div RNE (fp.sub RNE x7 x8) (fp.sub RNE x3 x6))))
(assert (fp.eq (fp.neg (fp.add RNE x2 x2)) (fp.add RNE (fp.sub RNE x0 x6) (fp.div RNE x4 x9))))
(assert (fp.geq (fp.add RNE (fp.div RNE x5 x4) (fp.add RNE x5 x7)) (fp.sub RNE (fp.add RNE x9 x1) (fp.div RNE x0 x2))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x1 x9) (fp.sub RNE x4 x8)) (fp.add RNE (fp.neg x7) (fp.div RNE x5 x4))))
(assert (fp.geq (fp.div RNE (fp.neg x0) (fp.div RNE x8 x5)) (fp.mul RNE (fp.div RNE x4 x8) (fp.sub RNE x9 x1))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x7 x5) (fp.neg x6)) (fp.div RNE (fp.add RNE x8 x5) (fp.mul RNE x1 x3))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x8 x3) (fp.neg x6)) (fp.neg (fp.neg x0))))
(assert (fp.eq (fp.add RNE (fp.add RNE x6 x7) (fp.div RNE x9 x7)) (fp.neg (fp.neg x2))))
(assert (fp.geq (fp.neg (fp.add RNE x8 x6)) (fp.neg (fp.add RNE x5 x5))))
(check-sat)
