(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.add RNE (fp.sub RNE (fp.add RNE (fp.add RNE x11 x17) (fp.mul RNE x3 x21)) (fp.mul RNE (fp.div RNE x11 x17) (fp.mul RNE x19 x13))) (fp.sub RNE (fp.mul RNE (fp.div RNE x17 x22) (fp.neg x10)) (fp.add RNE (fp.neg x5) (fp.neg x23)))) (fp.div RNE (fp.mul RNE (fp.add RNE (fp.neg x14) (fp.add RNE x13 x3)) (fp.mul RNE (fp.sub RNE x20 x4) (fp.add RNE x24 x20))) (fp.div RNE (fp.mul RNE (fp.mul RNE x4 x11) (fp.div RNE x20 x7)) (fp.add RNE (fp.mul RNE x3 x21) (fp.div RNE x8 x14))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.sub RNE (fp.add RNE x7 x16) (fp.div RNE x3 x21)) (fp.neg (fp.sub RNE x4 x3))) (fp.neg (fp.sub RNE (fp.sub RNE x2 x2) (fp.sub RNE x9 x21)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.div RNE x3 x13) (fp.add RNE x7 x23)) (fp.div RNE (fp.neg x10) (fp.mul RNE x15 x7))) (fp.div RNE (fp.div RNE (fp.add RNE x22 x22) (fp.mul RNE x21 x24)) (fp.mul RNE (fp.sub RNE x20 x17) (fp.div RNE x15 x10))))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE (fp.div RNE x19 x9) (fp.add RNE x22 x6)) (fp.mul RNE (fp.neg x8) (fp.mul RNE x12 x2)))) (fp.add RNE (fp.sub RNE (fp.add RNE (fp.div RNE x4 x9) (fp.sub RNE x9 x11)) (fp.div RNE (fp.mul RNE x7 x13) (fp.neg x21))) (fp.add RNE (fp.sub RNE (fp.mul RNE x15 x12) (fp.mul RNE x2 x9)) (fp.mul RNE (fp.mul RNE x13 x3) (fp.div RNE x11 x13))))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x22 x24) (fp.mul RNE x6 x19)) (fp.mul RNE (fp.sub RNE x1 x12) (fp.add RNE x17 x20))) (fp.div RNE (fp.div RNE (fp.add RNE x9 x9) (fp.neg x16)) (fp.mul RNE (fp.add RNE x16 x6) (fp.neg x19)))) (fp.div RNE (fp.add RNE (fp.neg (fp.div RNE x18 x17)) (fp.add RNE (fp.mul RNE x24 x1) (fp.neg x11))) (fp.mul RNE (fp.neg (fp.neg x2)) (fp.sub RNE (fp.neg x22) (fp.sub RNE x9 x15))))))
(check-sat)
