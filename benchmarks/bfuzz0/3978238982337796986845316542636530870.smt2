(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE x5 x4) (fp.add RNE x2 x3)))
(assert (fp.eq (fp.sub RNE x0 x2) (fp.div RNE x2 x5)))
(assert (fp.leq (fp.add RNE x8 x5) (fp.sub RNE x7 x5)))
(assert (fp.leq (fp.mul RNE x4 x2) (fp.sub RNE x3 x5)))
(assert (fp.leq (fp.sub RNE x7 x4) (fp.div RNE x8 x5)))
(assert (fp.eq (fp.sub RNE x4 x2) (fp.mul RNE x3 x8)))
(assert (fp.leq (fp.sub RNE x8 x3) (fp.add RNE x8 x6)))
(assert (fp.eq (fp.div RNE x4 x0) (fp.add RNE x7 x6)))
(assert (fp.geq (fp.sub RNE x1 x7) (fp.add RNE x0 x0)))
(assert (fp.eq (fp.mul RNE x8 x1) (fp.mul RNE x0 x2)))
(assert (fp.gt (fp.neg x8) (fp.div RNE x8 x7)))
(assert (fp.eq (fp.neg x2) (fp.div RNE x2 x8)))
(assert (fp.lt (fp.mul RNE x0 x2) (fp.div RNE x1 x4)))
(check-sat)
