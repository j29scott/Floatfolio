(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.mul RNE (fp.div RNE x1 x22) (fp.mul RNE x7 x8)) (fp.sub RNE (fp.mul RNE x6 x19) (fp.mul RNE x13 x6))) (fp.div RNE (fp.add RNE (fp.div RNE x14 x6) (fp.mul RNE x10 x14)) (fp.neg (fp.mul RNE x7 x1)))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.mul RNE x23 x12)) (fp.mul RNE (fp.add RNE x13 x12) (fp.sub RNE x22 x3))) (fp.sub RNE (fp.sub RNE (fp.div RNE x5 x1) (fp.mul RNE x19 x9)) (fp.sub RNE (fp.div RNE x11 x18) (fp.mul RNE x10 x9)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE x7 x1) (fp.mul RNE x22 x21))) (fp.mul RNE (fp.div RNE (fp.div RNE x8 x1) (fp.div RNE x17 x22)) (fp.mul RNE (fp.add RNE x7 x23) (fp.div RNE x22 x5)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.sub RNE x16 x13) (fp.mul RNE x6 x14)) (fp.neg (fp.mul RNE x8 x16))) (fp.sub RNE (fp.neg (fp.mul RNE x13 x8)) (fp.add RNE (fp.add RNE x2 x6) (fp.div RNE x3 x8)))))
(check-sat)
