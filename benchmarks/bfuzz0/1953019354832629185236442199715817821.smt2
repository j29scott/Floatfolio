(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg (fp.sub RNE x24 x24)) (fp.mul RNE (fp.add RNE x12 x20) (fp.neg x21))))
(assert (fp.lt (fp.mul RNE (fp.add RNE x23 x8) (fp.div RNE x14 x22)) (fp.sub RNE (fp.add RNE x6 x15) (fp.neg x14))))
(assert (fp.lt (fp.mul RNE (fp.neg x2) (fp.div RNE x5 x20)) (fp.add RNE (fp.mul RNE x18 x11) (fp.div RNE x3 x24))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x15 x18) (fp.mul RNE x4 x3)) (fp.sub RNE (fp.sub RNE x12 x24) (fp.add RNE x1 x1))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x18 x11) (fp.mul RNE x5 x13)) (fp.mul RNE (fp.add RNE x22 x5) (fp.div RNE x4 x2))))
(assert (fp.leq (fp.div RNE (fp.add RNE x5 x24) (fp.sub RNE x24 x3)) (fp.neg (fp.neg x6))))
(assert (fp.geq (fp.sub RNE (fp.add RNE x4 x9) (fp.neg x14)) (fp.mul RNE (fp.neg x4) (fp.add RNE x20 x18))))
(assert (fp.eq (fp.add RNE (fp.neg x6) (fp.sub RNE x7 x0)) (fp.neg (fp.div RNE x18 x5))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x23 x18) (fp.div RNE x18 x23)) (fp.sub RNE (fp.add RNE x8 x22) (fp.sub RNE x8 x15))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x14 x8) (fp.sub RNE x3 x7)) (fp.div RNE (fp.mul RNE x12 x11) (fp.mul RNE x6 x16))))
(check-sat)
