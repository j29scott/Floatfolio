(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.neg (fp.mul RNE x17 x7)) (fp.div RNE (fp.mul RNE x22 x0) (fp.add RNE x7 x20))))
(assert (fp.leq (fp.neg (fp.div RNE x16 x0)) (fp.neg (fp.div RNE x5 x1))))
(assert (fp.leq (fp.mul RNE (fp.div RNE x2 x9) (fp.div RNE x4 x21)) (fp.sub RNE (fp.add RNE x6 x6) (fp.mul RNE x13 x8))))
(assert (fp.eq (fp.div RNE (fp.neg x9) (fp.div RNE x16 x7)) (fp.mul RNE (fp.mul RNE x17 x1) (fp.neg x7))))
(check-sat)
