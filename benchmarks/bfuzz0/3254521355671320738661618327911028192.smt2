(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.mul RNE x0 x4) (fp.add RNE x3 x12)) (fp.neg (fp.sub RNE x4 x5))) (fp.div RNE (fp.div RNE (fp.add RNE x14 x13) (fp.mul RNE x12 x10)) (fp.add RNE (fp.sub RNE x0 x3) (fp.div RNE x4 x15)))) (fp.div RNE (fp.neg (fp.neg (fp.div RNE x1 x10))) (fp.sub RNE (fp.div RNE (fp.add RNE x9 x9) (fp.neg x15)) (fp.mul RNE (fp.div RNE x10 x12) (fp.add RNE x11 x9))))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.neg x1) (fp.neg x3)) (fp.mul RNE (fp.mul RNE x1 x2) (fp.add RNE x10 x0))) (fp.mul RNE (fp.sub RNE (fp.add RNE x5 x0) (fp.sub RNE x1 x11)) (fp.add RNE (fp.neg x8) (fp.add RNE x3 x15)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.mul RNE x2 x7)) (fp.sub RNE (fp.neg x4) (fp.mul RNE x9 x14))) (fp.mul RNE (fp.div RNE (fp.sub RNE x1 x7) (fp.div RNE x13 x11)) (fp.sub RNE (fp.neg x11) (fp.sub RNE x13 x9))))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.neg (fp.sub RNE x15 x4)) (fp.sub RNE (fp.sub RNE x14 x4) (fp.mul RNE x12 x6))) (fp.div RNE (fp.neg (fp.mul RNE x13 x4)) (fp.neg (fp.mul RNE x11 x6)))) (fp.div RNE (fp.neg (fp.add RNE (fp.neg x12) (fp.mul RNE x13 x5))) (fp.add RNE (fp.div RNE (fp.neg x12) (fp.mul RNE x10 x3)) (fp.div RNE (fp.sub RNE x13 x13) (fp.add RNE x7 x8))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.div RNE x0 x5) (fp.neg x4)) (fp.div RNE (fp.add RNE x13 x5) (fp.neg x8))) (fp.add RNE (fp.mul RNE (fp.sub RNE x11 x11) (fp.sub RNE x7 x1)) (fp.sub RNE (fp.sub RNE x4 x14) (fp.mul RNE x3 x5)))) (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.neg x5) (fp.mul RNE x9 x5)) (fp.div RNE (fp.sub RNE x8 x9) (fp.div RNE x5 x12))) (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x5) (fp.sub RNE x3 x12)) (fp.add RNE (fp.mul RNE x12 x8) (fp.sub RNE x12 x15))))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.div RNE (fp.neg x13) (fp.add RNE x13 x12)) (fp.add RNE (fp.sub RNE x2 x12) (fp.div RNE x1 x10))) (fp.add RNE (fp.mul RNE (fp.div RNE x10 x11) (fp.neg x1)) (fp.add RNE (fp.sub RNE x7 x12) (fp.sub RNE x14 x12)))) (fp.mul RNE (fp.neg (fp.sub RNE (fp.neg x12) (fp.add RNE x3 x9))) (fp.mul RNE (fp.div RNE (fp.add RNE x10 x15) (fp.neg x1)) (fp.mul RNE (fp.mul RNE x14 x3) (fp.mul RNE x4 x5))))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.add RNE (fp.div RNE x14 x6) (fp.mul RNE x13 x12)) (fp.neg (fp.mul RNE x3 x2))) (fp.add RNE (fp.mul RNE (fp.neg x9) (fp.neg x1)) (fp.div RNE (fp.sub RNE x1 x3) (fp.neg x9)))) (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x3 x9)) (fp.add RNE (fp.neg x7) (fp.div RNE x10 x15))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg (fp.sub RNE x2 x13)) (fp.neg (fp.sub RNE x15 x15))) (fp.neg (fp.mul RNE (fp.div RNE x6 x9) (fp.add RNE x7 x13)))) (fp.sub RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x8 x5) (fp.mul RNE x7 x15)) (fp.neg (fp.mul RNE x2 x15))) (fp.add RNE (fp.mul RNE (fp.sub RNE x4 x4) (fp.mul RNE x2 x4)) (fp.mul RNE (fp.add RNE x6 x8) (fp.mul RNE x1 x13))))))
(assert (fp.leq (fp.neg (fp.add RNE (fp.neg (fp.sub RNE x4 x14)) (fp.neg (fp.neg x14)))) (fp.neg (fp.neg (fp.mul RNE (fp.sub RNE x5 x0) (fp.add RNE x10 x11))))))
(check-sat)
