(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x12 x5)) (fp.neg (fp.add RNE x6 x1)))) (fp.neg (fp.add RNE (fp.div RNE (fp.add RNE x5 x9) (fp.add RNE x11 x1)) (fp.add RNE (fp.mul RNE x8 x1) (fp.div RNE x11 x0))))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.div RNE (fp.neg x5) (fp.neg x4)) (fp.neg (fp.sub RNE x0 x1))) (fp.add RNE (fp.add RNE (fp.mul RNE x5 x5) (fp.mul RNE x10 x3)) (fp.neg (fp.add RNE x10 x5)))) (fp.add RNE (fp.neg (fp.sub RNE (fp.div RNE x4 x11) (fp.mul RNE x0 x7))) (fp.neg (fp.add RNE (fp.div RNE x8 x11) (fp.mul RNE x9 x4))))))
(check-sat)
