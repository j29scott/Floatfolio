(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.sub RNE x5 x11) (fp.add RNE x8 x9)))
(assert (fp.lt (fp.div RNE x1 x14) (fp.mul RNE x2 x9)))
(assert (fp.leq (fp.neg x21) (fp.mul RNE x14 x14)))
(assert (fp.lt (fp.mul RNE x13 x18) (fp.div RNE x1 x5)))
(assert (fp.lt (fp.sub RNE x1 x4) (fp.neg x9)))
(assert (fp.gt (fp.mul RNE x18 x19) (fp.add RNE x5 x3)))
(assert (fp.leq (fp.sub RNE x7 x18) (fp.sub RNE x12 x2)))
(assert (fp.geq (fp.add RNE x3 x13) (fp.sub RNE x2 x11)))
(assert (fp.lt (fp.sub RNE x0 x3) (fp.add RNE x20 x17)))
(assert (fp.eq (fp.div RNE x20 x10) (fp.mul RNE x3 x5)))
(assert (fp.geq (fp.div RNE x6 x16) (fp.sub RNE x14 x18)))
(assert (fp.lt (fp.mul RNE x9 x8) (fp.neg x13)))
(check-sat)
