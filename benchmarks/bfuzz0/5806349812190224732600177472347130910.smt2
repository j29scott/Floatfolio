(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.neg x17) (fp.div RNE x20 x4)) (fp.div RNE (fp.div RNE x8 x6) (fp.neg x12))) (fp.add RNE (fp.neg (fp.add RNE x20 x18)) (fp.sub RNE (fp.add RNE x15 x20) (fp.mul RNE x21 x12)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.div RNE x18 x16) (fp.div RNE x21 x21)) (fp.div RNE (fp.mul RNE x13 x1) (fp.div RNE x2 x7))) (fp.sub RNE (fp.neg (fp.mul RNE x6 x18)) (fp.div RNE (fp.add RNE x11 x12) (fp.neg x8)))))
(assert (fp.lt (fp.div RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x1 x20)) (fp.div RNE (fp.mul RNE x11 x0) (fp.neg x5))) (fp.div RNE (fp.add RNE (fp.add RNE x12 x20) (fp.sub RNE x17 x18)) (fp.add RNE (fp.mul RNE x16 x6) (fp.add RNE x11 x12)))))
(assert (fp.lt (fp.add RNE (fp.neg (fp.div RNE x3 x20)) (fp.add RNE (fp.sub RNE x6 x14) (fp.mul RNE x20 x20))) (fp.mul RNE (fp.div RNE (fp.add RNE x0 x0) (fp.neg x21)) (fp.div RNE (fp.sub RNE x6 x13) (fp.neg x17)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.mul RNE x20 x10)) (fp.add RNE (fp.add RNE x0 x4) (fp.mul RNE x6 x15))) (fp.neg (fp.neg (fp.mul RNE x21 x20)))))
(assert (fp.gt (fp.mul RNE (fp.neg (fp.neg x10)) (fp.div RNE (fp.div RNE x7 x12) (fp.neg x1))) (fp.mul RNE (fp.mul RNE (fp.sub RNE x13 x17) (fp.div RNE x17 x17)) (fp.mul RNE (fp.div RNE x1 x20) (fp.mul RNE x21 x3)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE x18 x3) (fp.div RNE x21 x2)) (fp.div RNE (fp.add RNE x1 x19) (fp.neg x6))) (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x2) (fp.mul RNE x18 x15)) (fp.neg (fp.neg x3)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.add RNE x15 x15) (fp.neg x13)) (fp.sub RNE (fp.neg x12) (fp.div RNE x9 x14))) (fp.sub RNE (fp.mul RNE (fp.neg x13) (fp.div RNE x9 x12)) (fp.div RNE (fp.neg x20) (fp.sub RNE x21 x5)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.sub RNE x18 x18) (fp.mul RNE x17 x9)) (fp.add RNE (fp.div RNE x4 x11) (fp.mul RNE x1 x18))) (fp.neg (fp.div RNE (fp.div RNE x18 x3) (fp.neg x15)))))
(assert (fp.gt (fp.mul RNE (fp.add RNE (fp.mul RNE x20 x12) (fp.sub RNE x16 x4)) (fp.neg (fp.mul RNE x13 x8))) (fp.neg (fp.neg (fp.div RNE x1 x10)))))
(check-sat)
