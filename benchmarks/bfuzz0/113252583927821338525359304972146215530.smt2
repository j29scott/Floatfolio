(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(declare-const x26 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.sub RNE (fp.add RNE x15 x6) (fp.div RNE x15 x3)) (fp.mul RNE (fp.add RNE x12 x2) (fp.add RNE x19 x2))) (fp.neg (fp.add RNE (fp.add RNE x19 x17) (fp.neg x21)))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.mul RNE x1 x1) (fp.neg x3)) (fp.neg (fp.mul RNE x21 x10))) (fp.neg (fp.neg (fp.div RNE x13 x13)))))
(assert (fp.leq (fp.sub RNE (fp.neg (fp.add RNE x10 x24)) (fp.sub RNE (fp.mul RNE x21 x10) (fp.add RNE x12 x13))) (fp.sub RNE (fp.add RNE (fp.mul RNE x18 x23) (fp.mul RNE x7 x0)) (fp.neg (fp.neg x10)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.mul RNE x26 x4) (fp.neg x3)) (fp.mul RNE (fp.add RNE x20 x0) (fp.div RNE x13 x19))) (fp.div RNE (fp.sub RNE (fp.neg x1) (fp.neg x22)) (fp.sub RNE (fp.div RNE x10 x14) (fp.neg x9)))))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.div RNE x2 x0) (fp.neg x26)) (fp.div RNE (fp.div RNE x26 x17) (fp.neg x18))) (fp.mul RNE (fp.add RNE (fp.add RNE x11 x6) (fp.add RNE x20 x17)) (fp.sub RNE (fp.sub RNE x12 x15) (fp.add RNE x23 x16)))))
(assert (fp.geq (fp.neg (fp.neg (fp.neg x13))) (fp.div RNE (fp.neg (fp.div RNE x18 x4)) (fp.mul RNE (fp.mul RNE x15 x13) (fp.add RNE x6 x19)))))
(assert (fp.geq (fp.sub RNE (fp.add RNE (fp.mul RNE x11 x9) (fp.sub RNE x1 x5)) (fp.mul RNE (fp.sub RNE x17 x18) (fp.add RNE x1 x26))) (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x18) (fp.mul RNE x8 x3)) (fp.add RNE (fp.add RNE x3 x0) (fp.neg x4)))))
(assert (fp.gt (fp.div RNE (fp.add RNE (fp.div RNE x20 x17) (fp.neg x4)) (fp.mul RNE (fp.div RNE x7 x17) (fp.neg x26))) (fp.add RNE (fp.add RNE (fp.mul RNE x26 x7) (fp.neg x2)) (fp.add RNE (fp.sub RNE x24 x24) (fp.div RNE x15 x21)))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.mul RNE x26 x14)) (fp.div RNE (fp.mul RNE x12 x1) (fp.div RNE x4 x2))) (fp.neg (fp.mul RNE (fp.div RNE x24 x5) (fp.add RNE x17 x5)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.add RNE x26 x4) (fp.add RNE x8 x7)) (fp.add RNE (fp.sub RNE x11 x24) (fp.div RNE x17 x9))) (fp.sub RNE (fp.sub RNE (fp.div RNE x9 x7) (fp.sub RNE x20 x20)) (fp.mul RNE (fp.div RNE x0 x4) (fp.neg x6)))))
(assert (fp.leq (fp.sub RNE (fp.add RNE (fp.div RNE x20 x21) (fp.add RNE x18 x23)) (fp.div RNE (fp.mul RNE x25 x6) (fp.neg x8))) (fp.neg (fp.mul RNE (fp.neg x26) (fp.div RNE x5 x0)))))
(assert (fp.leq (fp.mul RNE (fp.neg (fp.add RNE x19 x26)) (fp.sub RNE (fp.div RNE x5 x6) (fp.add RNE x14 x8))) (fp.mul RNE (fp.mul RNE (fp.div RNE x9 x0) (fp.sub RNE x11 x20)) (fp.mul RNE (fp.mul RNE x25 x17) (fp.add RNE x24 x16)))))
(assert (fp.leq (fp.div RNE (fp.neg (fp.add RNE x26 x11)) (fp.neg (fp.sub RNE x2 x4))) (fp.div RNE (fp.sub RNE (fp.neg x4) (fp.mul RNE x14 x10)) (fp.sub RNE (fp.sub RNE x18 x25) (fp.div RNE x23 x9)))))
(assert (fp.lt (fp.add RNE (fp.add RNE (fp.div RNE x21 x24) (fp.neg x8)) (fp.mul RNE (fp.mul RNE x4 x6) (fp.div RNE x13 x15))) (fp.div RNE (fp.div RNE (fp.add RNE x4 x9) (fp.add RNE x22 x8)) (fp.div RNE (fp.add RNE x24 x24) (fp.mul RNE x21 x22)))))
(assert (fp.leq (fp.sub RNE (fp.sub RNE (fp.mul RNE x25 x1) (fp.neg x11)) (fp.div RNE (fp.neg x16) (fp.div RNE x18 x22))) (fp.neg (fp.add RNE (fp.div RNE x2 x3) (fp.sub RNE x8 x22)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.neg x14) (fp.neg x6))) (fp.add RNE (fp.sub RNE (fp.div RNE x5 x20) (fp.neg x21)) (fp.div RNE (fp.add RNE x16 x14) (fp.mul RNE x19 x17)))))
(assert (fp.gt (fp.neg (fp.div RNE (fp.mul RNE x13 x6) (fp.mul RNE x16 x18))) (fp.add RNE (fp.mul RNE (fp.sub RNE x5 x17) (fp.neg x14)) (fp.sub RNE (fp.mul RNE x26 x7) (fp.sub RNE x3 x18)))))
(assert (fp.leq (fp.add RNE (fp.add RNE (fp.add RNE x24 x15) (fp.mul RNE x9 x16)) (fp.add RNE (fp.add RNE x9 x18) (fp.neg x14))) (fp.mul RNE (fp.add RNE (fp.sub RNE x22 x2) (fp.sub RNE x26 x12)) (fp.neg (fp.add RNE x21 x19)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.div RNE x2 x6) (fp.add RNE x21 x14))) (fp.mul RNE (fp.div RNE (fp.neg x25) (fp.div RNE x21 x1)) (fp.mul RNE (fp.neg x18) (fp.sub RNE x11 x9)))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.mul RNE x18 x3) (fp.neg x20))) (fp.div RNE (fp.neg (fp.div RNE x13 x13)) (fp.div RNE (fp.neg x11) (fp.div RNE x14 x19)))))
(check-sat)
