(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.neg (fp.add RNE x13 x6))) (fp.div RNE (fp.div RNE (fp.div RNE x6 x6) (fp.add RNE x16 x14)) (fp.add RNE (fp.mul RNE x6 x0) (fp.add RNE x10 x15)))))
(assert (fp.eq (fp.add RNE (fp.mul RNE (fp.div RNE x2 x9) (fp.mul RNE x14 x11)) (fp.mul RNE (fp.sub RNE x1 x15) (fp.div RNE x3 x10))) (fp.neg (fp.add RNE (fp.mul RNE x9 x1) (fp.neg x15)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.div RNE x11 x1) (fp.sub RNE x15 x12)) (fp.neg (fp.div RNE x8 x2))) (fp.div RNE (fp.add RNE (fp.div RNE x10 x12) (fp.sub RNE x1 x3)) (fp.add RNE (fp.mul RNE x4 x16) (fp.mul RNE x0 x0)))))
(assert (fp.gt (fp.div RNE (fp.div RNE (fp.sub RNE x14 x3) (fp.sub RNE x14 x2)) (fp.neg (fp.add RNE x13 x3))) (fp.mul RNE (fp.neg (fp.add RNE x14 x5)) (fp.neg (fp.add RNE x4 x4)))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.add RNE x11 x0) (fp.sub RNE x13 x2)) (fp.div RNE (fp.add RNE x11 x2) (fp.div RNE x10 x4))) (fp.div RNE (fp.mul RNE (fp.div RNE x1 x10) (fp.sub RNE x2 x12)) (fp.sub RNE (fp.add RNE x6 x3) (fp.neg x9)))))
(assert (fp.lt (fp.add RNE (fp.div RNE (fp.div RNE x15 x12) (fp.add RNE x4 x16)) (fp.div RNE (fp.neg x8) (fp.neg x8))) (fp.neg (fp.mul RNE (fp.div RNE x8 x16) (fp.sub RNE x7 x2)))))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.add RNE x6 x5) (fp.neg x15)) (fp.add RNE (fp.add RNE x10 x3) (fp.neg x11))) (fp.add RNE (fp.mul RNE (fp.neg x6) (fp.add RNE x12 x6)) (fp.div RNE (fp.div RNE x15 x2) (fp.div RNE x13 x0)))))
(assert (fp.eq (fp.add RNE (fp.neg (fp.mul RNE x1 x6)) (fp.sub RNE (fp.div RNE x5 x10) (fp.neg x11))) (fp.div RNE (fp.div RNE (fp.div RNE x5 x15) (fp.add RNE x9 x10)) (fp.mul RNE (fp.div RNE x11 x11) (fp.sub RNE x11 x4)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.div RNE x3 x14)) (fp.neg (fp.div RNE x14 x3))) (fp.sub RNE (fp.mul RNE (fp.add RNE x7 x9) (fp.div RNE x6 x0)) (fp.add RNE (fp.add RNE x4 x3) (fp.sub RNE x4 x0)))))
(check-sat)
