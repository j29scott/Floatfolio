(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.add RNE x7 x4)) (fp.div RNE (fp.sub RNE x5 x1) (fp.div RNE x7 x9))) (fp.mul RNE (fp.add RNE (fp.sub RNE x12 x2) (fp.add RNE x11 x4)) (fp.neg (fp.neg x5)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.add RNE x4 x5) (fp.mul RNE x8 x4))) (fp.sub RNE (fp.neg (fp.neg x14)) (fp.div RNE (fp.neg x3) (fp.mul RNE x2 x14)))))
(assert (fp.gt (fp.sub RNE (fp.add RNE (fp.add RNE x4 x13) (fp.add RNE x2 x14)) (fp.mul RNE (fp.sub RNE x2 x2) (fp.mul RNE x5 x2))) (fp.neg (fp.neg (fp.sub RNE x2 x11)))))
(check-sat)
