(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.neg x5) (fp.div RNE x13 x3)) (fp.neg (fp.sub RNE x11 x8))) (fp.add RNE (fp.neg (fp.div RNE x2 x8)) (fp.mul RNE (fp.sub RNE x4 x13) (fp.add RNE x3 x7)))))
(assert (fp.lt (fp.neg (fp.div RNE (fp.mul RNE x5 x10) (fp.neg x5))) (fp.sub RNE (fp.div RNE (fp.add RNE x9 x9) (fp.mul RNE x2 x8)) (fp.neg (fp.div RNE x10 x4)))))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.neg x5) (fp.sub RNE x5 x6)) (fp.sub RNE (fp.sub RNE x7 x3) (fp.div RNE x1 x8))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x10) (fp.div RNE x2 x2)) (fp.mul RNE (fp.add RNE x7 x3) (fp.div RNE x0 x0)))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.sub RNE x12 x13) (fp.mul RNE x2 x6)) (fp.neg (fp.add RNE x12 x12))) (fp.sub RNE (fp.neg (fp.sub RNE x1 x5)) (fp.neg (fp.div RNE x3 x2)))))
(check-sat)
