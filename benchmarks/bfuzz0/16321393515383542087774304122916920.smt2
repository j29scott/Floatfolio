(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x0 x1) (fp.sub RNE x2 x1)))
(assert (fp.lt (fp.neg x6) (fp.neg x0)))
(assert (fp.leq (fp.sub RNE x7 x0) (fp.div RNE x5 x2)))
(assert (fp.gt (fp.mul RNE x3 x7) (fp.sub RNE x2 x1)))
(assert (fp.leq (fp.add RNE x3 x1) (fp.add RNE x0 x2)))
(assert (fp.geq (fp.sub RNE x7 x6) (fp.add RNE x0 x6)))
(assert (fp.leq (fp.add RNE x5 x1) (fp.neg x2)))
(assert (fp.eq (fp.div RNE x4 x1) (fp.add RNE x6 x6)))
(assert (fp.gt (fp.neg x5) (fp.neg x7)))
(assert (fp.geq (fp.mul RNE x0 x0) (fp.add RNE x4 x7)))
(assert (fp.geq (fp.mul RNE x7 x5) (fp.neg x1)))
(assert (fp.geq (fp.add RNE x1 x7) (fp.div RNE x0 x5)))
(assert (fp.lt (fp.sub RNE x6 x2) (fp.mul RNE x4 x7)))
(check-sat)
