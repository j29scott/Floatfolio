(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.neg (fp.neg x4)) (fp.add RNE (fp.div RNE x7 x1) (fp.add RNE x4 x7))))
(assert (fp.geq (fp.sub RNE (fp.neg x2) (fp.add RNE x7 x3)) (fp.add RNE (fp.div RNE x6 x0) (fp.neg x3))))
(assert (fp.lt (fp.add RNE (fp.div RNE x1 x8) (fp.mul RNE x7 x2)) (fp.div RNE (fp.sub RNE x8 x7) (fp.neg x3))))
(assert (fp.leq (fp.neg (fp.sub RNE x4 x5)) (fp.neg (fp.mul RNE x4 x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x6 x0) (fp.sub RNE x2 x2)) (fp.div RNE (fp.sub RNE x0 x1) (fp.add RNE x1 x0))))
(assert (fp.eq (fp.neg (fp.mul RNE x0 x4)) (fp.sub RNE (fp.div RNE x3 x7) (fp.div RNE x0 x1))))
(assert (fp.geq (fp.sub RNE (fp.neg x1) (fp.neg x3)) (fp.neg (fp.neg x5))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE x1 x3) (fp.mul RNE x3 x5)) (fp.neg (fp.sub RNE x6 x0))))
(assert (fp.eq (fp.add RNE (fp.div RNE x6 x4) (fp.add RNE x3 x6)) (fp.add RNE (fp.mul RNE x3 x5) (fp.div RNE x6 x0))))
(assert (fp.leq (fp.sub RNE (fp.div RNE x0 x3) (fp.neg x2)) (fp.div RNE (fp.sub RNE x5 x4) (fp.div RNE x4 x7))))
(assert (fp.eq (fp.add RNE (fp.add RNE x6 x2) (fp.sub RNE x4 x6)) (fp.add RNE (fp.neg x4) (fp.sub RNE x5 x8))))
(check-sat)
