(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.mul RNE x4 x4) (fp.sub RNE x13 x13)))
(assert (fp.eq (fp.div RNE x11 x15) (fp.div RNE x4 x11)))
(assert (fp.eq (fp.mul RNE x4 x15) (fp.sub RNE x6 x9)))
(assert (fp.lt (fp.mul RNE x3 x8) (fp.mul RNE x4 x9)))
(assert (fp.geq (fp.sub RNE x13 x0) (fp.mul RNE x1 x13)))
(assert (fp.gt (fp.div RNE x14 x2) (fp.mul RNE x1 x4)))
(assert (fp.geq (fp.neg x5) (fp.neg x13)))
(assert (fp.gt (fp.neg x1) (fp.neg x3)))
(assert (fp.eq (fp.div RNE x3 x5) (fp.add RNE x10 x8)))
(assert (fp.gt (fp.sub RNE x2 x2) (fp.add RNE x13 x5)))
(assert (fp.leq (fp.add RNE x0 x11) (fp.add RNE x15 x7)))
(assert (fp.gt (fp.mul RNE x11 x12) (fp.add RNE x0 x12)))
(assert (fp.gt (fp.mul RNE x12 x7) (fp.add RNE x12 x13)))
(assert (fp.leq (fp.mul RNE x14 x4) (fp.div RNE x3 x12)))
(assert (fp.gt (fp.add RNE x3 x8) (fp.mul RNE x4 x3)))
(check-sat)
