(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.add RNE (fp.mul RNE (fp.neg x11) (fp.mul RNE x10 x1)) (fp.sub RNE (fp.div RNE x11 x2) (fp.mul RNE x8 x0)))) (fp.mul RNE (fp.mul RNE (fp.neg (fp.add RNE x14 x12)) (fp.mul RNE (fp.div RNE x13 x11) (fp.neg x7))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x13) (fp.div RNE x6 x12)) (fp.div RNE (fp.neg x8) (fp.sub RNE x6 x9))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.neg (fp.neg x11)) (fp.add RNE (fp.div RNE x11 x1) (fp.sub RNE x16 x10))) (fp.sub RNE (fp.add RNE (fp.neg x3) (fp.add RNE x7 x12)) (fp.neg (fp.neg x5)))) (fp.div RNE (fp.neg (fp.neg (fp.div RNE x6 x12))) (fp.neg (fp.add RNE (fp.div RNE x1 x18) (fp.mul RNE x16 x11))))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x5 x10) (fp.neg x0)) (fp.neg (fp.mul RNE x8 x14))) (fp.mul RNE (fp.neg (fp.div RNE x0 x11)) (fp.mul RNE (fp.add RNE x14 x10) (fp.neg x1)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.div RNE x14 x4)) (fp.div RNE (fp.mul RNE x1 x17) (fp.sub RNE x12 x0))) (fp.div RNE (fp.add RNE (fp.div RNE x12 x11) (fp.sub RNE x6 x7)) (fp.div RNE (fp.div RNE x2 x3) (fp.mul RNE x6 x7))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.div RNE (fp.neg x12) (fp.mul RNE x16 x12)) (fp.mul RNE (fp.div RNE x13 x8) (fp.add RNE x11 x1))) (fp.div RNE (fp.div RNE (fp.mul RNE x18 x8) (fp.neg x11)) (fp.neg (fp.sub RNE x4 x15)))) (fp.div RNE (fp.div RNE (fp.sub RNE (fp.mul RNE x7 x16) (fp.neg x14)) (fp.add RNE (fp.add RNE x8 x7) (fp.div RNE x13 x8))) (fp.sub RNE (fp.neg (fp.neg x18)) (fp.div RNE (fp.add RNE x17 x6) (fp.sub RNE x1 x3))))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x9 x15) (fp.add RNE x5 x14)) (fp.add RNE (fp.mul RNE x18 x15) (fp.add RNE x14 x1))) (fp.mul RNE (fp.div RNE (fp.div RNE x15 x16) (fp.neg x15)) (fp.mul RNE (fp.div RNE x17 x0) (fp.add RNE x12 x0)))) (fp.neg (fp.add RNE (fp.add RNE (fp.neg x12) (fp.neg x14)) (fp.neg (fp.neg x5))))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x9 x3) (fp.mul RNE x4 x2)) (fp.div RNE (fp.div RNE x14 x8) (fp.sub RNE x3 x0))) (fp.mul RNE (fp.neg (fp.mul RNE x17 x10)) (fp.neg (fp.sub RNE x16 x2)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x12) (fp.div RNE x8 x18)) (fp.div RNE (fp.mul RNE x16 x11) (fp.add RNE x4 x10))) (fp.mul RNE (fp.sub RNE (fp.neg x1) (fp.neg x8)) (fp.add RNE (fp.sub RNE x9 x3) (fp.div RNE x10 x3))))))
(assert (fp.lt (fp.div RNE (fp.mul RNE (fp.div RNE (fp.div RNE x2 x13) (fp.neg x10)) (fp.neg (fp.sub RNE x8 x15))) (fp.sub RNE (fp.add RNE (fp.add RNE x6 x12) (fp.mul RNE x5 x16)) (fp.neg (fp.div RNE x11 x17)))) (fp.neg (fp.neg (fp.add RNE (fp.mul RNE x8 x6) (fp.add RNE x12 x17))))))
(assert (fp.leq (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x14 x17) (fp.div RNE x16 x15)) (fp.neg (fp.mul RNE x2 x16)))) (fp.sub RNE (fp.add RNE (fp.add RNE (fp.add RNE x3 x15) (fp.add RNE x15 x0)) (fp.add RNE (fp.div RNE x4 x8) (fp.add RNE x12 x16))) (fp.neg (fp.neg (fp.div RNE x17 x7))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x18 x12) (fp.add RNE x9 x14)) (fp.sub RNE (fp.neg x5) (fp.mul RNE x15 x13))) (fp.neg (fp.sub RNE (fp.add RNE x6 x14) (fp.neg x9)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.add RNE x10 x2)) (fp.mul RNE (fp.mul RNE x14 x8) (fp.add RNE x1 x15))) (fp.div RNE (fp.div RNE (fp.add RNE x15 x4) (fp.mul RNE x7 x17)) (fp.mul RNE (fp.add RNE x1 x9) (fp.neg x2))))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.add RNE (fp.sub RNE x2 x18) (fp.mul RNE x2 x8)) (fp.div RNE (fp.mul RNE x11 x14) (fp.div RNE x16 x13))) (fp.neg (fp.neg (fp.div RNE x5 x12)))) (fp.neg (fp.neg (fp.mul RNE (fp.div RNE x12 x8) (fp.sub RNE x12 x0))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.div RNE (fp.add RNE x15 x1) (fp.sub RNE x12 x0)) (fp.div RNE (fp.sub RNE x4 x4) (fp.sub RNE x18 x0))) (fp.neg (fp.sub RNE (fp.mul RNE x2 x11) (fp.mul RNE x8 x9)))) (fp.add RNE (fp.sub RNE (fp.mul RNE (fp.div RNE x15 x3) (fp.add RNE x13 x7)) (fp.add RNE (fp.sub RNE x11 x16) (fp.sub RNE x12 x7))) (fp.add RNE (fp.add RNE (fp.add RNE x5 x6) (fp.add RNE x6 x12)) (fp.add RNE (fp.div RNE x7 x0) (fp.div RNE x13 x2))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.sub RNE (fp.sub RNE x5 x15) (fp.neg x5)) (fp.neg (fp.neg x6)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x0 x13) (fp.add RNE x0 x17)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x12 x6))) (fp.div RNE (fp.div RNE (fp.neg x14) (fp.add RNE x0 x7)) (fp.div RNE (fp.div RNE x15 x3) (fp.mul RNE x1 x17))))))
(assert (fp.geq (fp.neg (fp.mul RNE (fp.neg (fp.add RNE x12 x10)) (fp.div RNE (fp.sub RNE x17 x2) (fp.sub RNE x5 x1)))) (fp.div RNE (fp.sub RNE (fp.div RNE (fp.sub RNE x9 x1) (fp.neg x5)) (fp.div RNE (fp.sub RNE x12 x1) (fp.mul RNE x4 x2))) (fp.sub RNE (fp.neg (fp.add RNE x13 x17)) (fp.neg (fp.mul RNE x4 x17))))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.mul RNE x4 x1) (fp.div RNE x1 x1)) (fp.div RNE (fp.mul RNE x0 x15) (fp.neg x3))) (fp.neg (fp.sub RNE (fp.sub RNE x11 x2) (fp.sub RNE x14 x11)))) (fp.neg (fp.add RNE (fp.sub RNE (fp.mul RNE x6 x13) (fp.mul RNE x6 x9)) (fp.mul RNE (fp.div RNE x2 x8) (fp.add RNE x3 x0))))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.mul RNE (fp.neg x3) (fp.neg x10))) (fp.mul RNE (fp.mul RNE (fp.div RNE x8 x18) (fp.add RNE x11 x14)) (fp.sub RNE (fp.add RNE x1 x5) (fp.neg x0)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.mul RNE x12 x14)) (fp.mul RNE (fp.div RNE x11 x13) (fp.add RNE x15 x2))) (fp.sub RNE (fp.neg (fp.add RNE x9 x10)) (fp.sub RNE (fp.div RNE x11 x0) (fp.div RNE x18 x12))))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE (fp.add RNE (fp.add RNE x1 x11) (fp.div RNE x3 x3)) (fp.neg (fp.neg x7))) (fp.div RNE (fp.mul RNE (fp.div RNE x17 x10) (fp.mul RNE x8 x1)) (fp.sub RNE (fp.add RNE x10 x2) (fp.div RNE x2 x14)))) (fp.sub RNE (fp.neg (fp.neg (fp.div RNE x15 x1))) (fp.neg (fp.add RNE (fp.add RNE x9 x1) (fp.sub RNE x6 x12))))))
(assert (fp.geq (fp.neg (fp.neg (fp.mul RNE (fp.add RNE x7 x15) (fp.sub RNE x8 x0)))) (fp.neg (fp.div RNE (fp.div RNE (fp.mul RNE x9 x5) (fp.neg x3)) (fp.neg (fp.neg x13))))))
(assert (fp.eq (fp.add RNE (fp.div RNE (fp.div RNE (fp.neg x5) (fp.neg x10)) (fp.div RNE (fp.sub RNE x15 x1) (fp.neg x15))) (fp.add RNE (fp.mul RNE (fp.mul RNE x7 x16) (fp.add RNE x12 x13)) (fp.div RNE (fp.add RNE x8 x13) (fp.mul RNE x16 x16)))) (fp.mul RNE (fp.add RNE (fp.neg (fp.neg x13)) (fp.sub RNE (fp.mul RNE x7 x11) (fp.sub RNE x18 x14))) (fp.neg (fp.div RNE (fp.add RNE x13 x1) (fp.sub RNE x11 x18))))))
(assert (fp.leq (fp.div RNE (fp.div RNE (fp.add RNE (fp.sub RNE x4 x14) (fp.sub RNE x7 x7)) (fp.sub RNE (fp.div RNE x8 x11) (fp.neg x10))) (fp.sub RNE (fp.add RNE (fp.sub RNE x16 x0) (fp.div RNE x7 x9)) (fp.mul RNE (fp.add RNE x14 x5) (fp.add RNE x16 x8)))) (fp.neg (fp.div RNE (fp.neg (fp.div RNE x18 x7)) (fp.div RNE (fp.neg x14) (fp.sub RNE x3 x5))))))
(check-sat)
