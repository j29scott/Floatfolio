(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.div RNE x15 x0) (fp.div RNE x14 x16)) (fp.sub RNE (fp.neg x0) (fp.mul RNE x7 x11))) (fp.div RNE (fp.div RNE (fp.neg x4) (fp.mul RNE x15 x1)) (fp.add RNE (fp.add RNE x14 x15) (fp.add RNE x0 x19)))))
(assert (fp.lt (fp.add RNE (fp.mul RNE (fp.mul RNE x13 x19) (fp.mul RNE x16 x10)) (fp.add RNE (fp.mul RNE x19 x6) (fp.div RNE x12 x1))) (fp.sub RNE (fp.sub RNE (fp.neg x18) (fp.neg x13)) (fp.mul RNE (fp.mul RNE x4 x3) (fp.sub RNE x0 x17)))))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.sub RNE x15 x2) (fp.div RNE x6 x8))) (fp.div RNE (fp.neg (fp.neg x15)) (fp.sub RNE (fp.mul RNE x2 x1) (fp.neg x16)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x8 x5) (fp.sub RNE x18 x16)) (fp.div RNE (fp.neg x17) (fp.neg x6))) (fp.sub RNE (fp.mul RNE (fp.div RNE x8 x6) (fp.mul RNE x8 x10)) (fp.sub RNE (fp.mul RNE x6 x5) (fp.div RNE x5 x13)))))
(check-sat)
