(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.add RNE (fp.mul RNE (fp.neg x1) (fp.neg x17)) (fp.add RNE (fp.sub RNE x16 x16) (fp.mul RNE x17 x12))) (fp.mul RNE (fp.div RNE (fp.mul RNE x7 x4) (fp.sub RNE x4 x14)) (fp.mul RNE (fp.add RNE x17 x10) (fp.div RNE x17 x9)))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.neg x3) (fp.add RNE x17 x16)) (fp.add RNE (fp.mul RNE x8 x2) (fp.neg x3))) (fp.sub RNE (fp.div RNE (fp.add RNE x3 x0) (fp.div RNE x5 x9)) (fp.mul RNE (fp.sub RNE x11 x6) (fp.mul RNE x13 x5)))))
(check-sat)
