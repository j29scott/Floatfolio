(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.add RNE (fp.sub RNE x9 x14) (fp.neg x21)) (fp.mul RNE (fp.div RNE x3 x5) (fp.mul RNE x15 x16))))
(assert (fp.gt (fp.neg (fp.div RNE x21 x2)) (fp.add RNE (fp.mul RNE x15 x21) (fp.neg x20))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE x10 x22) (fp.add RNE x23 x17)) (fp.mul RNE (fp.add RNE x22 x17) (fp.div RNE x2 x8))))
(assert (fp.gt (fp.sub RNE (fp.add RNE x9 x6) (fp.div RNE x12 x21)) (fp.sub RNE (fp.neg x14) (fp.neg x21))))
(assert (fp.lt (fp.neg (fp.add RNE x11 x13)) (fp.neg (fp.add RNE x19 x4))))
(assert (fp.lt (fp.neg (fp.div RNE x12 x23)) (fp.div RNE (fp.neg x6) (fp.sub RNE x16 x7))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE x13 x14) (fp.neg x21)) (fp.sub RNE (fp.div RNE x7 x16) (fp.mul RNE x11 x3))))
(assert (fp.leq (fp.neg (fp.mul RNE x7 x13)) (fp.div RNE (fp.add RNE x2 x18) (fp.mul RNE x21 x6))))
(assert (fp.geq (fp.div RNE (fp.div RNE x6 x21) (fp.div RNE x22 x14)) (fp.sub RNE (fp.mul RNE x18 x15) (fp.sub RNE x9 x13))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x17 x21) (fp.sub RNE x8 x14)) (fp.sub RNE (fp.sub RNE x17 x2) (fp.neg x10))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x19 x6) (fp.add RNE x11 x2)) (fp.div RNE (fp.sub RNE x9 x0) (fp.mul RNE x0 x8))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x10 x18) (fp.div RNE x18 x23)) (fp.neg (fp.div RNE x12 x6))))
(assert (fp.leq (fp.neg (fp.mul RNE x15 x10)) (fp.add RNE (fp.add RNE x3 x23) (fp.sub RNE x9 x23))))
(assert (fp.lt (fp.sub RNE (fp.sub RNE x17 x16) (fp.neg x18)) (fp.neg (fp.neg x19))))
(assert (fp.gt (fp.sub RNE (fp.neg x17) (fp.add RNE x1 x4)) (fp.mul RNE (fp.mul RNE x20 x18) (fp.neg x17))))
(assert (fp.lt (fp.add RNE (fp.div RNE x4 x18) (fp.neg x1)) (fp.add RNE (fp.sub RNE x20 x6) (fp.mul RNE x12 x8))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x14 x16) (fp.add RNE x5 x6)) (fp.mul RNE (fp.mul RNE x12 x8) (fp.add RNE x15 x1))))
(check-sat)
