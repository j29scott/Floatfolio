(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x10 x3) (fp.add RNE x1 x4)) (fp.neg (fp.sub RNE x6 x12)))) (fp.div RNE (fp.neg (fp.neg (fp.neg x9))) (fp.mul RNE (fp.div RNE (fp.div RNE x3 x8) (fp.sub RNE x7 x2)) (fp.add RNE (fp.mul RNE x6 x0) (fp.mul RNE x6 x9))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x13 x13) (fp.neg x8)) (fp.mul RNE (fp.add RNE x0 x10) (fp.mul RNE x8 x5)))) (fp.mul RNE (fp.div RNE (fp.add RNE (fp.sub RNE x1 x1) (fp.mul RNE x6 x11)) (fp.div RNE (fp.div RNE x2 x1) (fp.mul RNE x10 x9))) (fp.mul RNE (fp.sub RNE (fp.add RNE x3 x9) (fp.mul RNE x4 x11)) (fp.add RNE (fp.div RNE x11 x0) (fp.sub RNE x4 x6))))))
(assert (fp.gt (fp.add RNE (fp.mul RNE (fp.add RNE (fp.div RNE x7 x0) (fp.neg x3)) (fp.div RNE (fp.mul RNE x2 x6) (fp.sub RNE x1 x5))) (fp.add RNE (fp.sub RNE (fp.mul RNE x2 x11) (fp.sub RNE x12 x7)) (fp.mul RNE (fp.div RNE x0 x9) (fp.neg x9)))) (fp.div RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x9 x6) (fp.add RNE x11 x12)) (fp.neg (fp.sub RNE x11 x1))) (fp.sub RNE (fp.mul RNE (fp.div RNE x5 x6) (fp.div RNE x3 x4)) (fp.neg (fp.neg x11))))))
(assert (fp.eq (fp.div RNE (fp.sub RNE (fp.neg (fp.div RNE x4 x1)) (fp.neg (fp.neg x13))) (fp.neg (fp.sub RNE (fp.div RNE x11 x7) (fp.mul RNE x10 x8)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.mul RNE x2 x10) (fp.sub RNE x11 x6)) (fp.sub RNE (fp.add RNE x4 x13) (fp.neg x8))) (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.neg x13)) (fp.add RNE (fp.mul RNE x13 x11) (fp.sub RNE x2 x13))))))
(assert (fp.lt (fp.sub RNE (fp.add RNE (fp.neg (fp.div RNE x3 x11)) (fp.div RNE (fp.neg x4) (fp.div RNE x8 x5))) (fp.mul RNE (fp.mul RNE (fp.div RNE x2 x9) (fp.add RNE x7 x10)) (fp.mul RNE (fp.sub RNE x0 x8) (fp.div RNE x7 x13)))) (fp.neg (fp.neg (fp.div RNE (fp.add RNE x4 x11) (fp.neg x12))))))
(assert (fp.gt (fp.sub RNE (fp.neg (fp.sub RNE (fp.add RNE x13 x7) (fp.add RNE x5 x5))) (fp.div RNE (fp.add RNE (fp.div RNE x6 x13) (fp.div RNE x5 x2)) (fp.div RNE (fp.mul RNE x12 x6) (fp.mul RNE x8 x12)))) (fp.sub RNE (fp.add RNE (fp.div RNE (fp.neg x8) (fp.div RNE x8 x11)) (fp.mul RNE (fp.sub RNE x4 x7) (fp.add RNE x2 x2))) (fp.mul RNE (fp.div RNE (fp.div RNE x6 x2) (fp.mul RNE x10 x12)) (fp.mul RNE (fp.sub RNE x8 x13) (fp.mul RNE x3 x12))))))
(check-sat)
