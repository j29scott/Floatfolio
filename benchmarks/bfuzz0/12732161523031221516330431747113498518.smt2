(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.sub RNE (fp.div RNE x1 x4) (fp.sub RNE x6 x5)) (fp.div RNE (fp.add RNE x7 x8) (fp.div RNE x0 x9))) (fp.mul RNE (fp.add RNE (fp.add RNE x6 x9) (fp.neg x3)) (fp.add RNE (fp.neg x6) (fp.mul RNE x4 x10)))) (fp.mul RNE (fp.add RNE (fp.div RNE (fp.add RNE x10 x7) (fp.sub RNE x1 x4)) (fp.mul RNE (fp.mul RNE x4 x5) (fp.mul RNE x9 x5))) (fp.neg (fp.add RNE (fp.mul RNE x9 x3) (fp.sub RNE x8 x3))))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.add RNE x2 x4) (fp.neg x6)) (fp.sub RNE (fp.mul RNE x0 x9) (fp.mul RNE x3 x6))) (fp.div RNE (fp.sub RNE (fp.mul RNE x1 x3) (fp.div RNE x9 x8)) (fp.neg (fp.mul RNE x2 x0)))) (fp.neg (fp.neg (fp.div RNE (fp.mul RNE x4 x6) (fp.neg x9))))))
(assert (fp.gt (fp.neg (fp.neg (fp.div RNE (fp.div RNE x10 x5) (fp.add RNE x1 x7)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.div RNE x9 x6) (fp.sub RNE x10 x3)) (fp.add RNE (fp.add RNE x8 x7) (fp.div RNE x5 x6))) (fp.neg (fp.mul RNE (fp.div RNE x10 x0) (fp.neg x7))))))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x2 x7) (fp.sub RNE x0 x2)) (fp.mul RNE (fp.mul RNE x4 x0) (fp.neg x9))) (fp.sub RNE (fp.div RNE (fp.mul RNE x4 x5) (fp.add RNE x1 x4)) (fp.sub RNE (fp.add RNE x7 x4) (fp.sub RNE x4 x7)))) (fp.sub RNE (fp.neg (fp.div RNE (fp.div RNE x8 x9) (fp.div RNE x4 x4))) (fp.mul RNE (fp.sub RNE (fp.neg x2) (fp.sub RNE x4 x5)) (fp.mul RNE (fp.neg x8) (fp.add RNE x3 x0))))))
(assert (fp.gt (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.add RNE x1 x10) (fp.div RNE x8 x0)) (fp.div RNE (fp.mul RNE x6 x6) (fp.mul RNE x1 x3))) (fp.div RNE (fp.sub RNE (fp.div RNE x7 x0) (fp.add RNE x9 x9)) (fp.mul RNE (fp.div RNE x2 x6) (fp.mul RNE x9 x9)))) (fp.sub RNE (fp.div RNE (fp.neg (fp.mul RNE x0 x6)) (fp.add RNE (fp.mul RNE x0 x8) (fp.div RNE x2 x4))) (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x3) (fp.div RNE x5 x0)) (fp.neg (fp.sub RNE x9 x3))))))
(check-sat)
