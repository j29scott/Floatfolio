(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.add RNE (fp.div RNE (fp.add RNE x6 x2) (fp.mul RNE x22 x8)) (fp.add RNE (fp.add RNE x0 x6) (fp.neg x3))) (fp.mul RNE (fp.add RNE (fp.sub RNE x3 x22) (fp.div RNE x20 x2)) (fp.add RNE (fp.mul RNE x13 x22) (fp.div RNE x1 x12)))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE (fp.div RNE x8 x22) (fp.div RNE x4 x1)) (fp.sub RNE (fp.div RNE x9 x3) (fp.add RNE x10 x19))) (fp.add RNE (fp.div RNE (fp.div RNE x16 x17) (fp.div RNE x8 x21)) (fp.sub RNE (fp.mul RNE x10 x20) (fp.mul RNE x12 x19)))))
(assert (fp.leq (fp.sub RNE (fp.div RNE (fp.neg x18) (fp.neg x5)) (fp.sub RNE (fp.add RNE x6 x12) (fp.sub RNE x2 x4))) (fp.sub RNE (fp.mul RNE (fp.mul RNE x3 x21) (fp.div RNE x4 x6)) (fp.sub RNE (fp.add RNE x19 x10) (fp.sub RNE x13 x0)))))
(assert (fp.leq (fp.neg (fp.mul RNE (fp.add RNE x4 x19) (fp.div RNE x13 x5))) (fp.mul RNE (fp.sub RNE (fp.div RNE x5 x13) (fp.sub RNE x12 x15)) (fp.add RNE (fp.mul RNE x15 x12) (fp.div RNE x19 x22)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.neg x14) (fp.add RNE x11 x15)) (fp.div RNE (fp.add RNE x5 x13) (fp.add RNE x19 x0))) (fp.div RNE (fp.sub RNE (fp.sub RNE x5 x21) (fp.add RNE x3 x14)) (fp.add RNE (fp.sub RNE x8 x5) (fp.mul RNE x11 x3)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.mul RNE x16 x0)) (fp.neg (fp.add RNE x8 x3))) (fp.neg (fp.mul RNE (fp.neg x17) (fp.div RNE x11 x0)))))
(assert (fp.eq (fp.sub RNE (fp.div RNE (fp.div RNE x5 x6) (fp.mul RNE x17 x6)) (fp.mul RNE (fp.add RNE x0 x22) (fp.mul RNE x13 x9))) (fp.sub RNE (fp.add RNE (fp.neg x17) (fp.add RNE x15 x7)) (fp.neg (fp.div RNE x16 x5)))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.sub RNE x20 x11)) (fp.neg (fp.div RNE x13 x1))) (fp.sub RNE (fp.div RNE (fp.mul RNE x7 x5) (fp.add RNE x3 x7)) (fp.add RNE (fp.mul RNE x22 x13) (fp.div RNE x18 x4)))))
(assert (fp.geq (fp.sub RNE (fp.sub RNE (fp.sub RNE x7 x19) (fp.add RNE x6 x18)) (fp.sub RNE (fp.mul RNE x3 x11) (fp.neg x17))) (fp.add RNE (fp.div RNE (fp.add RNE x17 x8) (fp.neg x9)) (fp.div RNE (fp.add RNE x0 x12) (fp.div RNE x15 x10)))))
(assert (fp.gt (fp.sub RNE (fp.div RNE (fp.neg x19) (fp.mul RNE x21 x5)) (fp.div RNE (fp.add RNE x15 x0) (fp.div RNE x21 x21))) (fp.sub RNE (fp.mul RNE (fp.neg x20) (fp.add RNE x12 x7)) (fp.add RNE (fp.sub RNE x13 x18) (fp.add RNE x19 x12)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.sub RNE x9 x8) (fp.neg x21)) (fp.div RNE (fp.mul RNE x5 x1) (fp.neg x18))) (fp.neg (fp.mul RNE (fp.add RNE x20 x2) (fp.add RNE x16 x15)))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.add RNE x12 x15) (fp.mul RNE x12 x7))) (fp.neg (fp.mul RNE (fp.neg x13) (fp.neg x4)))))
(check-sat)
