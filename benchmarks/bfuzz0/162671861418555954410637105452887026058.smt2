(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.sub RNE x2 x0) (fp.sub RNE x10 x12)) (fp.div RNE (fp.mul RNE x8 x7) (fp.div RNE x7 x12))) (fp.add RNE (fp.sub RNE (fp.sub RNE x5 x7) (fp.div RNE x6 x9)) (fp.mul RNE (fp.div RNE x7 x2) (fp.div RNE x5 x8)))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.add RNE x10 x9) (fp.div RNE x4 x6)) (fp.add RNE (fp.mul RNE x1 x1) (fp.neg x6))) (fp.neg (fp.div RNE (fp.sub RNE x6 x1) (fp.mul RNE x9 x2)))))
(assert (fp.leq (fp.mul RNE (fp.mul RNE (fp.sub RNE x0 x0) (fp.sub RNE x11 x7)) (fp.neg (fp.div RNE x0 x4))) (fp.div RNE (fp.mul RNE (fp.div RNE x4 x1) (fp.mul RNE x11 x8)) (fp.mul RNE (fp.div RNE x6 x7) (fp.neg x1)))))
(assert (fp.leq (fp.mul RNE (fp.add RNE (fp.div RNE x4 x2) (fp.sub RNE x7 x5)) (fp.mul RNE (fp.neg x3) (fp.neg x0))) (fp.add RNE (fp.sub RNE (fp.neg x1) (fp.mul RNE x11 x0)) (fp.add RNE (fp.add RNE x5 x5) (fp.div RNE x11 x12)))))
(assert (fp.gt (fp.neg (fp.sub RNE (fp.div RNE x4 x10) (fp.mul RNE x1 x9))) (fp.add RNE (fp.div RNE (fp.sub RNE x6 x0) (fp.add RNE x1 x8)) (fp.mul RNE (fp.add RNE x11 x11) (fp.div RNE x11 x6)))))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.neg x6) (fp.mul RNE x12 x8)) (fp.mul RNE (fp.mul RNE x10 x10) (fp.sub RNE x9 x3))) (fp.add RNE (fp.sub RNE (fp.add RNE x5 x10) (fp.add RNE x2 x6)) (fp.mul RNE (fp.add RNE x10 x9) (fp.div RNE x2 x6)))))
(check-sat)
