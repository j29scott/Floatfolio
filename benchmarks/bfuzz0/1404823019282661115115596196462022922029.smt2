(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.sub RNE x6 x8) (fp.sub RNE x1 x0)))
(assert (fp.eq (fp.sub RNE x7 x2) (fp.sub RNE x3 x8)))
(assert (fp.gt (fp.add RNE x10 x10) (fp.neg x7)))
(assert (fp.lt (fp.sub RNE x11 x9) (fp.mul RNE x5 x10)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x2 x8)))
(assert (fp.lt (fp.add RNE x0 x0) (fp.mul RNE x11 x6)))
(assert (fp.leq (fp.add RNE x10 x8) (fp.add RNE x0 x11)))
(assert (fp.leq (fp.sub RNE x5 x1) (fp.mul RNE x0 x3)))
(assert (fp.eq (fp.div RNE x5 x5) (fp.div RNE x0 x4)))
(assert (fp.gt (fp.add RNE x6 x8) (fp.div RNE x4 x0)))
(assert (fp.gt (fp.mul RNE x9 x4) (fp.sub RNE x8 x11)))
(assert (fp.lt (fp.neg x5) (fp.sub RNE x5 x0)))
(assert (fp.eq (fp.add RNE x6 x6) (fp.neg x3)))
(check-sat)
