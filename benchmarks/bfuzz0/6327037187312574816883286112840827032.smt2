(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE (fp.div RNE x2 x15) (fp.mul RNE x13 x8)) (fp.add RNE (fp.neg x13) (fp.neg x7))))
(assert (fp.leq (fp.mul RNE (fp.neg x9) (fp.sub RNE x0 x3)) (fp.mul RNE (fp.sub RNE x20 x7) (fp.neg x4))))
(assert (fp.eq (fp.neg (fp.add RNE x3 x20)) (fp.div RNE (fp.mul RNE x14 x1) (fp.sub RNE x0 x17))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x13 x3) (fp.add RNE x18 x7)) (fp.sub RNE (fp.div RNE x2 x10) (fp.div RNE x13 x20))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x20 x13) (fp.add RNE x11 x0)) (fp.neg (fp.sub RNE x13 x1))))
(assert (fp.leq (fp.sub RNE (fp.add RNE x19 x14) (fp.neg x1)) (fp.div RNE (fp.mul RNE x19 x2) (fp.mul RNE x16 x14))))
(assert (fp.eq (fp.sub RNE (fp.neg x9) (fp.div RNE x13 x13)) (fp.sub RNE (fp.add RNE x6 x13) (fp.neg x17))))
(assert (fp.lt (fp.mul RNE (fp.neg x2) (fp.mul RNE x19 x6)) (fp.sub RNE (fp.neg x15) (fp.neg x13))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x14 x9) (fp.add RNE x19 x10)) (fp.sub RNE (fp.sub RNE x13 x20) (fp.sub RNE x18 x5))))
(assert (fp.eq (fp.mul RNE (fp.div RNE x18 x5) (fp.neg x20)) (fp.neg (fp.add RNE x6 x5))))
(assert (fp.gt (fp.div RNE (fp.neg x17) (fp.div RNE x0 x20)) (fp.mul RNE (fp.add RNE x18 x6) (fp.add RNE x9 x13))))
(assert (fp.leq (fp.div RNE (fp.neg x6) (fp.neg x2)) (fp.add RNE (fp.sub RNE x12 x8) (fp.sub RNE x10 x16))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x8 x8) (fp.add RNE x11 x20)) (fp.neg (fp.div RNE x4 x4))))
(assert (fp.eq (fp.div RNE (fp.div RNE x17 x14) (fp.neg x5)) (fp.sub RNE (fp.mul RNE x7 x0) (fp.div RNE x6 x0))))
(assert (fp.gt (fp.neg (fp.sub RNE x19 x17)) (fp.sub RNE (fp.div RNE x6 x6) (fp.div RNE x5 x13))))
(assert (fp.geq (fp.div RNE (fp.add RNE x18 x3) (fp.neg x19)) (fp.neg (fp.sub RNE x12 x10))))
(assert (fp.lt (fp.add RNE (fp.sub RNE x18 x15) (fp.neg x14)) (fp.neg (fp.neg x14))))
(assert (fp.geq (fp.neg (fp.sub RNE x16 x12)) (fp.sub RNE (fp.neg x3) (fp.sub RNE x11 x3))))
(assert (fp.lt (fp.mul RNE (fp.neg x2) (fp.sub RNE x12 x16)) (fp.sub RNE (fp.mul RNE x20 x13) (fp.neg x17))))
(check-sat)
