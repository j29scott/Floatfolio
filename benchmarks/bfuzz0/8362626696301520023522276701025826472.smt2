(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.div RNE (fp.sub RNE (fp.sub RNE x5 x16) (fp.mul RNE x8 x0)) (fp.div RNE (fp.add RNE x3 x13) (fp.div RNE x11 x14)))) (fp.neg (fp.sub RNE (fp.mul RNE (fp.add RNE x6 x7) (fp.sub RNE x2 x9)) (fp.add RNE (fp.sub RNE x6 x11) (fp.sub RNE x15 x15))))))
(assert (fp.leq (fp.add RNE (fp.neg (fp.div RNE (fp.add RNE x14 x4) (fp.mul RNE x9 x15))) (fp.neg (fp.neg (fp.mul RNE x0 x3)))) (fp.mul RNE (fp.mul RNE (fp.mul RNE (fp.mul RNE x11 x14) (fp.mul RNE x9 x13)) (fp.div RNE (fp.mul RNE x12 x10) (fp.neg x11))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x5 x5) (fp.mul RNE x15 x0)) (fp.div RNE (fp.mul RNE x14 x0) (fp.sub RNE x14 x10))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x3 x15) (fp.sub RNE x8 x2)) (fp.div RNE (fp.sub RNE x3 x9) (fp.div RNE x1 x10))) (fp.neg (fp.neg (fp.div RNE x5 x3)))) (fp.mul RNE (fp.div RNE (fp.div RNE (fp.neg x8) (fp.div RNE x2 x0)) (fp.sub RNE (fp.add RNE x6 x11) (fp.sub RNE x12 x13))) (fp.neg (fp.div RNE (fp.div RNE x13 x13) (fp.sub RNE x8 x0))))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x0 x4) (fp.add RNE x11 x13)) (fp.div RNE (fp.mul RNE x13 x0) (fp.div RNE x7 x9))) (fp.mul RNE (fp.sub RNE (fp.div RNE x7 x8) (fp.add RNE x0 x4)) (fp.neg (fp.neg x1)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.div RNE x0 x11) (fp.add RNE x14 x12)) (fp.sub RNE (fp.add RNE x4 x0) (fp.neg x14))))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x3 x1) (fp.mul RNE x2 x12)) (fp.neg (fp.mul RNE x12 x12))) (fp.add RNE (fp.neg (fp.sub RNE x0 x2)) (fp.div RNE (fp.mul RNE x16 x1) (fp.sub RNE x15 x7)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.add RNE x4 x13) (fp.mul RNE x11 x16)) (fp.neg (fp.sub RNE x7 x14))) (fp.div RNE (fp.sub RNE (fp.div RNE x10 x12) (fp.sub RNE x0 x10)) (fp.neg (fp.div RNE x9 x6))))))
(check-sat)
