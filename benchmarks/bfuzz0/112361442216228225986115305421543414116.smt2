(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE x1 x13) (fp.add RNE x4 x1)))
(assert (fp.gt (fp.add RNE x3 x3) (fp.add RNE x9 x9)))
(assert (fp.geq (fp.neg x12) (fp.div RNE x14 x19)))
(assert (fp.eq (fp.sub RNE x10 x12) (fp.add RNE x7 x1)))
(assert (fp.geq (fp.neg x14) (fp.mul RNE x2 x1)))
(assert (fp.eq (fp.add RNE x19 x19) (fp.sub RNE x6 x8)))
(assert (fp.geq (fp.neg x7) (fp.sub RNE x6 x8)))
(assert (fp.eq (fp.sub RNE x10 x9) (fp.add RNE x4 x8)))
(check-sat)
