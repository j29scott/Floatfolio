(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.neg (fp.div RNE x6 x21)) (fp.sub RNE (fp.add RNE x3 x12) (fp.sub RNE x2 x3))))
(assert (fp.gt (fp.neg (fp.neg x13)) (fp.sub RNE (fp.sub RNE x0 x21) (fp.div RNE x10 x16))))
(assert (fp.geq (fp.neg (fp.mul RNE x8 x18)) (fp.sub RNE (fp.neg x18) (fp.add RNE x14 x23))))
(assert (fp.leq (fp.div RNE (fp.neg x12) (fp.neg x15)) (fp.add RNE (fp.div RNE x6 x6) (fp.neg x22))))
(check-sat)
