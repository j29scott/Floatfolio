(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.neg (fp.sub RNE x15 x14)) (fp.sub RNE (fp.div RNE x12 x10) (fp.neg x11))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x3 x14) (fp.sub RNE x11 x1)) (fp.add RNE (fp.div RNE x2 x6) (fp.div RNE x10 x0))))
(assert (fp.leq (fp.add RNE (fp.sub RNE x6 x0) (fp.add RNE x5 x3)) (fp.add RNE (fp.mul RNE x1 x12) (fp.sub RNE x6 x11))))
(assert (fp.eq (fp.div RNE (fp.neg x15) (fp.div RNE x7 x13)) (fp.div RNE (fp.neg x1) (fp.neg x11))))
(check-sat)
