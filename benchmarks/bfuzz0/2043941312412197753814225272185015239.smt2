(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(assert (fp.leq (fp.div RNE (fp.neg x6) (fp.div RNE x3 x11)) (fp.div RNE (fp.mul RNE x6 x19) (fp.mul RNE x2 x6))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x20 x11) (fp.div RNE x21 x21)) (fp.add RNE (fp.sub RNE x18 x7) (fp.add RNE x13 x4))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x7 x12) (fp.mul RNE x9 x11)) (fp.div RNE (fp.neg x4) (fp.add RNE x11 x15))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x12 x19) (fp.add RNE x1 x13)) (fp.add RNE (fp.add RNE x19 x18) (fp.div RNE x9 x4))))
(assert (fp.gt (fp.neg (fp.neg x16)) (fp.sub RNE (fp.mul RNE x5 x18) (fp.sub RNE x19 x2))))
(assert (fp.eq (fp.neg (fp.add RNE x18 x2)) (fp.mul RNE (fp.sub RNE x22 x12) (fp.neg x21))))
(assert (fp.gt (fp.add RNE (fp.add RNE x6 x12) (fp.add RNE x1 x1)) (fp.add RNE (fp.neg x1) (fp.mul RNE x6 x20))))
(assert (fp.lt (fp.neg (fp.div RNE x17 x18)) (fp.div RNE (fp.neg x11) (fp.mul RNE x3 x18))))
(assert (fp.eq (fp.div RNE (fp.div RNE x2 x21) (fp.sub RNE x22 x19)) (fp.div RNE (fp.div RNE x22 x2) (fp.mul RNE x22 x3))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x11 x2) (fp.sub RNE x10 x3)) (fp.mul RNE (fp.sub RNE x18 x20) (fp.div RNE x5 x3))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x9 x19) (fp.add RNE x21 x5)) (fp.div RNE (fp.div RNE x5 x17) (fp.add RNE x8 x5))))
(assert (fp.leq (fp.neg (fp.add RNE x0 x17)) (fp.div RNE (fp.div RNE x13 x1) (fp.div RNE x18 x1))))
(assert (fp.lt (fp.sub RNE (fp.add RNE x7 x12) (fp.mul RNE x20 x21)) (fp.mul RNE (fp.neg x15) (fp.sub RNE x4 x10))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x1 x12) (fp.sub RNE x12 x13)) (fp.neg (fp.sub RNE x17 x3))))
(check-sat)
