(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.add RNE x13 x10) (fp.neg x11)))
(assert (fp.lt (fp.add RNE x1 x10) (fp.div RNE x11 x11)))
(assert (fp.geq (fp.div RNE x7 x4) (fp.mul RNE x0 x6)))
(assert (fp.geq (fp.div RNE x12 x8) (fp.neg x2)))
(assert (fp.geq (fp.add RNE x9 x3) (fp.mul RNE x13 x3)))
(assert (fp.geq (fp.add RNE x13 x13) (fp.div RNE x8 x10)))
(assert (fp.eq (fp.add RNE x0 x13) (fp.neg x5)))
(assert (fp.lt (fp.div RNE x7 x8) (fp.div RNE x1 x9)))
(assert (fp.eq (fp.neg x6) (fp.div RNE x1 x0)))
(check-sat)
