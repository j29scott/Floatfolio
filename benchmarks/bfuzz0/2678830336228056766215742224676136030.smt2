(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.div RNE (fp.add RNE (fp.add RNE x15 x5) (fp.neg x13)) (fp.div RNE (fp.neg x5) (fp.div RNE x7 x4))) (fp.mul RNE (fp.div RNE (fp.div RNE x7 x4) (fp.mul RNE x16 x4)) (fp.neg (fp.div RNE x17 x2)))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE x17 x14) (fp.add RNE x9 x14)) (fp.sub RNE (fp.sub RNE x3 x8) (fp.sub RNE x14 x11))) (fp.mul RNE (fp.div RNE (fp.div RNE x8 x16) (fp.add RNE x15 x13)) (fp.sub RNE (fp.sub RNE x1 x11) (fp.mul RNE x10 x6)))))
(assert (fp.eq (fp.sub RNE (fp.neg (fp.mul RNE x1 x9)) (fp.neg (fp.div RNE x3 x8))) (fp.mul RNE (fp.mul RNE (fp.div RNE x9 x12) (fp.add RNE x4 x16)) (fp.neg (fp.mul RNE x0 x5)))))
(assert (fp.geq (fp.div RNE (fp.add RNE (fp.mul RNE x14 x9) (fp.sub RNE x3 x12)) (fp.mul RNE (fp.neg x8) (fp.add RNE x4 x15))) (fp.mul RNE (fp.neg (fp.neg x14)) (fp.add RNE (fp.div RNE x6 x15) (fp.sub RNE x15 x9)))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE x4 x8) (fp.mul RNE x13 x14)) (fp.sub RNE (fp.add RNE x10 x14) (fp.neg x11))) (fp.add RNE (fp.add RNE (fp.div RNE x0 x1) (fp.neg x3)) (fp.sub RNE (fp.mul RNE x3 x0) (fp.sub RNE x16 x5)))))
(check-sat)
