(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.add RNE x8 x13) (fp.sub RNE x3 x3)) (fp.mul RNE (fp.mul RNE x4 x14) (fp.neg x2))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x16 x15) (fp.mul RNE x7 x12)) (fp.div RNE (fp.sub RNE x6 x16) (fp.sub RNE x8 x17))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x10 x8) (fp.div RNE x15 x14)) (fp.add RNE (fp.sub RNE x15 x15) (fp.div RNE x14 x11))))
(assert (fp.leq (fp.neg (fp.div RNE x4 x0)) (fp.sub RNE (fp.add RNE x9 x2) (fp.div RNE x12 x13))))
(assert (fp.geq (fp.neg (fp.add RNE x6 x14)) (fp.sub RNE (fp.div RNE x14 x4) (fp.sub RNE x1 x14))))
(check-sat)
