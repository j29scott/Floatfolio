(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.mul RNE x18 x20) (fp.div RNE x6 x17)))
(assert (fp.gt (fp.sub RNE x10 x3) (fp.neg x11)))
(assert (fp.leq (fp.mul RNE x20 x10) (fp.sub RNE x15 x4)))
(assert (fp.geq (fp.mul RNE x11 x14) (fp.sub RNE x0 x9)))
(assert (fp.eq (fp.sub RNE x0 x8) (fp.div RNE x20 x10)))
(assert (fp.lt (fp.div RNE x10 x8) (fp.neg x1)))
(assert (fp.eq (fp.neg x0) (fp.div RNE x3 x9)))
(assert (fp.eq (fp.sub RNE x2 x8) (fp.neg x21)))
(assert (fp.lt (fp.neg x14) (fp.mul RNE x18 x4)))
(assert (fp.geq (fp.div RNE x6 x10) (fp.neg x18)))
(assert (fp.gt (fp.neg x20) (fp.mul RNE x19 x10)))
(assert (fp.geq (fp.add RNE x9 x1) (fp.div RNE x19 x19)))
(assert (fp.gt (fp.mul RNE x11 x15) (fp.div RNE x20 x10)))
(assert (fp.leq (fp.mul RNE x17 x4) (fp.neg x1)))
(assert (fp.gt (fp.mul RNE x3 x19) (fp.add RNE x14 x2)))
(check-sat)
