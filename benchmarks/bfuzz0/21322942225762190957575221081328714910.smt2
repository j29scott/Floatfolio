(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg x5) (fp.mul RNE x0 x8)))
(assert (fp.gt (fp.add RNE x5 x7) (fp.sub RNE x7 x0)))
(assert (fp.geq (fp.mul RNE x0 x3) (fp.add RNE x2 x5)))
(assert (fp.geq (fp.mul RNE x0 x4) (fp.mul RNE x4 x7)))
(assert (fp.lt (fp.neg x4) (fp.mul RNE x2 x7)))
(assert (fp.gt (fp.sub RNE x1 x0) (fp.add RNE x8 x5)))
(assert (fp.lt (fp.add RNE x9 x9) (fp.add RNE x6 x1)))
(assert (fp.eq (fp.add RNE x1 x3) (fp.sub RNE x4 x4)))
(assert (fp.gt (fp.sub RNE x2 x4) (fp.add RNE x1 x8)))
(assert (fp.leq (fp.sub RNE x1 x2) (fp.neg x8)))
(assert (fp.gt (fp.sub RNE x7 x9) (fp.mul RNE x3 x3)))
(assert (fp.gt (fp.neg x3) (fp.add RNE x8 x9)))
(assert (fp.lt (fp.mul RNE x6 x6) (fp.sub RNE x4 x6)))
(check-sat)
