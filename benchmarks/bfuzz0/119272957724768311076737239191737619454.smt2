(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.mul RNE (fp.neg x1) (fp.div RNE x13 x4)) (fp.neg (fp.sub RNE x3 x3))))
(assert (fp.eq (fp.add RNE (fp.add RNE x2 x15) (fp.mul RNE x7 x6)) (fp.add RNE (fp.mul RNE x12 x0) (fp.sub RNE x6 x11))))
(assert (fp.eq (fp.add RNE (fp.mul RNE x8 x13) (fp.div RNE x2 x9)) (fp.mul RNE (fp.sub RNE x6 x6) (fp.add RNE x6 x5))))
(assert (fp.geq (fp.sub RNE (fp.div RNE x4 x12) (fp.div RNE x12 x5)) (fp.mul RNE (fp.add RNE x6 x13) (fp.sub RNE x3 x13))))
(assert (fp.gt (fp.add RNE (fp.div RNE x11 x13) (fp.sub RNE x10 x2)) (fp.add RNE (fp.div RNE x10 x14) (fp.div RNE x11 x11))))
(assert (fp.eq (fp.neg (fp.sub RNE x1 x4)) (fp.div RNE (fp.neg x9) (fp.div RNE x1 x5))))
(assert (fp.gt (fp.neg (fp.add RNE x2 x2)) (fp.div RNE (fp.mul RNE x15 x5) (fp.neg x8))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x5 x5) (fp.add RNE x9 x5)) (fp.mul RNE (fp.mul RNE x6 x0) (fp.mul RNE x10 x9))))
(assert (fp.geq (fp.div RNE (fp.div RNE x1 x5) (fp.div RNE x6 x13)) (fp.mul RNE (fp.sub RNE x13 x6) (fp.sub RNE x0 x11))))
(assert (fp.eq (fp.neg (fp.neg x10)) (fp.add RNE (fp.sub RNE x7 x0) (fp.mul RNE x10 x15))))
(assert (fp.eq (fp.mul RNE (fp.add RNE x12 x6) (fp.mul RNE x0 x6)) (fp.div RNE (fp.neg x3) (fp.add RNE x5 x2))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x13 x15) (fp.add RNE x0 x7)) (fp.add RNE (fp.add RNE x5 x5) (fp.div RNE x15 x13))))
(assert (fp.gt (fp.mul RNE (fp.sub RNE x8 x0) (fp.neg x3)) (fp.add RNE (fp.neg x12) (fp.neg x15))))
(assert (fp.gt (fp.div RNE (fp.neg x13) (fp.sub RNE x13 x1)) (fp.mul RNE (fp.div RNE x15 x10) (fp.div RNE x3 x6))))
(assert (fp.eq (fp.sub RNE (fp.mul RNE x9 x5) (fp.neg x9)) (fp.add RNE (fp.mul RNE x14 x9) (fp.sub RNE x7 x1))))
(assert (fp.eq (fp.div RNE (fp.mul RNE x14 x8) (fp.sub RNE x5 x6)) (fp.mul RNE (fp.add RNE x3 x3) (fp.div RNE x4 x7))))
(assert (fp.gt (fp.add RNE (fp.add RNE x11 x2) (fp.div RNE x3 x15)) (fp.mul RNE (fp.mul RNE x11 x15) (fp.div RNE x8 x7))))
(check-sat)
