(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x6 x9) (fp.mul RNE x1 x4)) (fp.sub RNE (fp.add RNE x4 x14) (fp.sub RNE x5 x10))))
(assert (fp.lt (fp.div RNE (fp.sub RNE x9 x0) (fp.neg x1)) (fp.add RNE (fp.add RNE x6 x8) (fp.div RNE x8 x9))))
(assert (fp.lt (fp.add RNE (fp.add RNE x0 x12) (fp.neg x7)) (fp.add RNE (fp.mul RNE x6 x11) (fp.div RNE x14 x8))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x7 x14) (fp.add RNE x7 x3)) (fp.neg (fp.div RNE x6 x1))))
(assert (fp.geq (fp.add RNE (fp.sub RNE x0 x9) (fp.div RNE x6 x3)) (fp.add RNE (fp.add RNE x5 x10) (fp.div RNE x6 x8))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x3 x5) (fp.mul RNE x9 x5)) (fp.sub RNE (fp.sub RNE x9 x7) (fp.mul RNE x6 x5))))
(assert (fp.lt (fp.add RNE (fp.add RNE x8 x7) (fp.mul RNE x12 x5)) (fp.mul RNE (fp.neg x13) (fp.neg x1))))
(assert (fp.eq (fp.add RNE (fp.neg x14) (fp.add RNE x7 x1)) (fp.sub RNE (fp.mul RNE x1 x8) (fp.mul RNE x1 x2))))
(check-sat)
