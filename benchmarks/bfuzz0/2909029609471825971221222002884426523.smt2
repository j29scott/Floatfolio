(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.sub RNE (fp.div RNE (fp.add RNE x12 x3) (fp.mul RNE x7 x0)) (fp.add RNE (fp.div RNE x11 x6) (fp.div RNE x1 x7))) (fp.sub RNE (fp.add RNE (fp.mul RNE x11 x5) (fp.div RNE x11 x4)) (fp.neg (fp.mul RNE x1 x7)))))
(assert (fp.eq (fp.add RNE (fp.add RNE (fp.div RNE x12 x10) (fp.sub RNE x5 x1)) (fp.mul RNE (fp.mul RNE x1 x8) (fp.add RNE x4 x1))) (fp.neg (fp.mul RNE (fp.add RNE x10 x1) (fp.div RNE x12 x2)))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.mul RNE x1 x11) (fp.div RNE x10 x6)) (fp.add RNE (fp.add RNE x2 x7) (fp.add RNE x10 x1))) (fp.add RNE (fp.mul RNE (fp.add RNE x11 x5) (fp.mul RNE x5 x12)) (fp.add RNE (fp.div RNE x1 x4) (fp.div RNE x5 x9)))))
(assert (fp.eq (fp.mul RNE (fp.div RNE (fp.neg x9) (fp.mul RNE x6 x10)) (fp.mul RNE (fp.neg x11) (fp.sub RNE x4 x5))) (fp.mul RNE (fp.neg (fp.sub RNE x1 x3)) (fp.mul RNE (fp.mul RNE x0 x11) (fp.sub RNE x8 x0)))))
(check-sat)
