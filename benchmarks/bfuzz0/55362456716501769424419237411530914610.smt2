(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.neg (fp.sub RNE (fp.mul RNE (fp.sub RNE x13 x4) (fp.add RNE x15 x7)) (fp.neg (fp.sub RNE x0 x11)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x17) (fp.sub RNE x16 x3)) (fp.mul RNE (fp.add RNE x14 x23) (fp.add RNE x14 x5))) (fp.neg (fp.add RNE (fp.neg x19) (fp.mul RNE x5 x0))))))
(assert (fp.geq (fp.add RNE (fp.neg (fp.sub RNE (fp.add RNE x1 x6) (fp.div RNE x10 x19))) (fp.sub RNE (fp.sub RNE (fp.div RNE x22 x13) (fp.div RNE x21 x20)) (fp.neg (fp.div RNE x21 x13)))) (fp.neg (fp.div RNE (fp.div RNE (fp.neg x15) (fp.neg x7)) (fp.add RNE (fp.neg x16) (fp.neg x16))))))
(assert (fp.gt (fp.neg (fp.mul RNE (fp.neg (fp.div RNE x10 x22)) (fp.div RNE (fp.mul RNE x20 x9) (fp.div RNE x22 x11)))) (fp.add RNE (fp.sub RNE (fp.div RNE (fp.mul RNE x23 x22) (fp.add RNE x6 x9)) (fp.neg (fp.sub RNE x12 x4))) (fp.mul RNE (fp.div RNE (fp.add RNE x4 x10) (fp.sub RNE x11 x5)) (fp.sub RNE (fp.neg x1) (fp.mul RNE x7 x10))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x1 x9) (fp.div RNE x17 x3)) (fp.add RNE (fp.mul RNE x2 x2) (fp.neg x11))) (fp.mul RNE (fp.div RNE (fp.sub RNE x2 x5) (fp.neg x14)) (fp.mul RNE (fp.sub RNE x3 x18) (fp.neg x3)))) (fp.div RNE (fp.mul RNE (fp.neg (fp.neg x13)) (fp.add RNE (fp.neg x0) (fp.add RNE x14 x16))) (fp.sub RNE (fp.mul RNE (fp.sub RNE x4 x15) (fp.div RNE x18 x22)) (fp.add RNE (fp.mul RNE x4 x5) (fp.sub RNE x8 x5))))))
(check-sat)
