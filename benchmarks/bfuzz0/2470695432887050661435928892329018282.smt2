(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.sub RNE (fp.neg (fp.mul RNE x3 x12)) (fp.neg (fp.mul RNE x1 x0))) (fp.add RNE (fp.mul RNE (fp.sub RNE x4 x10) (fp.div RNE x7 x2)) (fp.div RNE (fp.sub RNE x10 x1) (fp.mul RNE x9 x0)))))
(assert (fp.lt (fp.sub RNE (fp.mul RNE (fp.mul RNE x12 x4) (fp.sub RNE x3 x7)) (fp.neg (fp.mul RNE x7 x0))) (fp.sub RNE (fp.sub RNE (fp.sub RNE x10 x10) (fp.div RNE x2 x2)) (fp.neg (fp.mul RNE x12 x11)))))
(assert (fp.geq (fp.neg (fp.div RNE (fp.add RNE x4 x6) (fp.add RNE x6 x3))) (fp.add RNE (fp.div RNE (fp.add RNE x5 x6) (fp.neg x11)) (fp.neg (fp.mul RNE x6 x5)))))
(check-sat)
