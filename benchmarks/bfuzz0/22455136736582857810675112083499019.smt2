(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.neg (fp.div RNE x18 x4)) (fp.div RNE (fp.sub RNE x3 x4) (fp.add RNE x8 x10))))
(assert (fp.leq (fp.neg (fp.add RNE x0 x11)) (fp.add RNE (fp.mul RNE x16 x1) (fp.sub RNE x10 x0))))
(assert (fp.leq (fp.div RNE (fp.neg x12) (fp.mul RNE x11 x15)) (fp.neg (fp.add RNE x12 x6))))
(assert (fp.eq (fp.neg (fp.add RNE x12 x2)) (fp.div RNE (fp.sub RNE x17 x6) (fp.neg x17))))
(assert (fp.geq (fp.neg (fp.div RNE x19 x15)) (fp.neg (fp.add RNE x17 x1))))
(assert (fp.lt (fp.mul RNE (fp.mul RNE x21 x1) (fp.neg x3)) (fp.div RNE (fp.mul RNE x6 x9) (fp.mul RNE x2 x12))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x0 x8) (fp.add RNE x18 x7)) (fp.mul RNE (fp.mul RNE x17 x5) (fp.div RNE x10 x4))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x5 x11) (fp.mul RNE x8 x15)) (fp.sub RNE (fp.add RNE x7 x12) (fp.sub RNE x2 x2))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x18 x2) (fp.sub RNE x20 x21)) (fp.neg (fp.mul RNE x21 x11))))
(assert (fp.geq (fp.sub RNE (fp.mul RNE x17 x17) (fp.sub RNE x3 x19)) (fp.neg (fp.neg x6))))
(check-sat)
