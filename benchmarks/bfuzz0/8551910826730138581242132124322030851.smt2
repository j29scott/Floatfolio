(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(declare-const x24 (_ FloatingPoint 11 53))
(declare-const x25 (_ FloatingPoint 11 53))
(assert (fp.lt (fp.mul RNE (fp.add RNE x24 x12) (fp.sub RNE x23 x24)) (fp.mul RNE (fp.add RNE x8 x11) (fp.mul RNE x6 x15))))
(assert (fp.gt (fp.add RNE (fp.mul RNE x23 x25) (fp.mul RNE x22 x20)) (fp.add RNE (fp.neg x14) (fp.add RNE x4 x9))))
(assert (fp.leq (fp.neg (fp.neg x2)) (fp.neg (fp.add RNE x8 x12))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x5 x14) (fp.add RNE x24 x14)) (fp.div RNE (fp.add RNE x13 x8) (fp.neg x10))))
(assert (fp.geq (fp.add RNE (fp.add RNE x11 x3) (fp.mul RNE x16 x13)) (fp.sub RNE (fp.div RNE x24 x23) (fp.sub RNE x16 x20))))
(assert (fp.gt (fp.sub RNE (fp.sub RNE x17 x24) (fp.add RNE x16 x2)) (fp.div RNE (fp.mul RNE x10 x5) (fp.sub RNE x1 x12))))
(assert (fp.leq (fp.neg (fp.div RNE x22 x17)) (fp.sub RNE (fp.mul RNE x22 x20) (fp.mul RNE x21 x12))))
(assert (fp.gt (fp.neg (fp.sub RNE x6 x19)) (fp.div RNE (fp.add RNE x15 x25) (fp.sub RNE x12 x4))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x1 x13) (fp.neg x6)) (fp.div RNE (fp.neg x8) (fp.add RNE x19 x2))))
(assert (fp.geq (fp.div RNE (fp.mul RNE x5 x17) (fp.mul RNE x10 x1)) (fp.div RNE (fp.add RNE x6 x14) (fp.div RNE x11 x19))))
(assert (fp.eq (fp.neg (fp.sub RNE x9 x14)) (fp.div RNE (fp.neg x1) (fp.add RNE x20 x25))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x4 x8) (fp.sub RNE x6 x8)) (fp.neg (fp.sub RNE x10 x12))))
(assert (fp.geq (fp.div RNE (fp.add RNE x10 x25) (fp.div RNE x11 x0)) (fp.div RNE (fp.neg x22) (fp.mul RNE x14 x14))))
(check-sat)
