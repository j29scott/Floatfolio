(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(declare-const x22 (_ FloatingPoint 11 53))
(declare-const x23 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.add RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x9 x7) (fp.mul RNE x10 x23)) (fp.neg (fp.sub RNE x23 x9))) (fp.mul RNE (fp.sub RNE (fp.neg x5) (fp.add RNE x8 x23)) (fp.add RNE (fp.div RNE x17 x15) (fp.sub RNE x5 x20)))) (fp.neg (fp.div RNE (fp.sub RNE (fp.div RNE x23 x12) (fp.sub RNE x5 x2)) (fp.div RNE (fp.add RNE x7 x21) (fp.div RNE x0 x23))))))
(assert (fp.lt (fp.mul RNE (fp.add RNE (fp.mul RNE (fp.add RNE x20 x15) (fp.div RNE x10 x19)) (fp.add RNE (fp.mul RNE x13 x21) (fp.add RNE x8 x9))) (fp.neg (fp.div RNE (fp.neg x13) (fp.add RNE x0 x5)))) (fp.neg (fp.neg (fp.neg (fp.mul RNE x5 x23))))))
(assert (fp.leq (fp.div RNE (fp.sub RNE (fp.neg (fp.div RNE x2 x9)) (fp.add RNE (fp.mul RNE x12 x14) (fp.div RNE x3 x23))) (fp.mul RNE (fp.neg (fp.add RNE x17 x18)) (fp.neg (fp.neg x14)))) (fp.sub RNE (fp.sub RNE (fp.sub RNE (fp.div RNE x7 x23) (fp.div RNE x19 x22)) (fp.div RNE (fp.mul RNE x11 x6) (fp.neg x20))) (fp.div RNE (fp.mul RNE (fp.neg x19) (fp.sub RNE x7 x18)) (fp.sub RNE (fp.sub RNE x9 x21) (fp.neg x5))))))
(assert (fp.lt (fp.neg (fp.add RNE (fp.div RNE (fp.div RNE x18 x3) (fp.mul RNE x17 x12)) (fp.neg (fp.div RNE x2 x16)))) (fp.div RNE (fp.neg (fp.div RNE (fp.div RNE x16 x14) (fp.add RNE x12 x8))) (fp.add RNE (fp.mul RNE (fp.div RNE x21 x4) (fp.sub RNE x5 x1)) (fp.add RNE (fp.div RNE x10 x21) (fp.div RNE x11 x3))))))
(assert (fp.leq (fp.neg (fp.sub RNE (fp.div RNE (fp.sub RNE x23 x6) (fp.mul RNE x7 x1)) (fp.div RNE (fp.sub RNE x7 x14) (fp.sub RNE x0 x16)))) (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x5 x14)) (fp.neg (fp.add RNE x23 x21))))))
(assert (fp.geq (fp.neg (fp.add RNE (fp.add RNE (fp.neg x13) (fp.div RNE x14 x13)) (fp.div RNE (fp.mul RNE x9 x1) (fp.add RNE x10 x7)))) (fp.sub RNE (fp.neg (fp.sub RNE (fp.add RNE x4 x5) (fp.mul RNE x13 x10))) (fp.mul RNE (fp.div RNE (fp.mul RNE x21 x1) (fp.mul RNE x21 x11)) (fp.sub RNE (fp.sub RNE x10 x12) (fp.sub RNE x14 x20))))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE (fp.neg (fp.sub RNE x21 x21)) (fp.sub RNE (fp.neg x1) (fp.sub RNE x0 x0))) (fp.mul RNE (fp.add RNE (fp.neg x15) (fp.neg x0)) (fp.div RNE (fp.mul RNE x2 x11) (fp.div RNE x15 x5)))) (fp.neg (fp.neg (fp.mul RNE (fp.div RNE x7 x19) (fp.div RNE x22 x20))))))
(assert (fp.eq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.neg x23) (fp.div RNE x0 x5)) (fp.sub RNE (fp.div RNE x1 x19) (fp.mul RNE x5 x17))) (fp.mul RNE (fp.div RNE (fp.mul RNE x3 x23) (fp.add RNE x8 x16)) (fp.sub RNE (fp.div RNE x22 x7) (fp.div RNE x13 x12)))) (fp.mul RNE (fp.sub RNE (fp.sub RNE (fp.neg x15) (fp.div RNE x12 x10)) (fp.mul RNE (fp.mul RNE x6 x19) (fp.mul RNE x5 x5))) (fp.div RNE (fp.mul RNE (fp.div RNE x15 x0) (fp.sub RNE x23 x20)) (fp.add RNE (fp.sub RNE x22 x5) (fp.sub RNE x17 x12))))))
(assert (fp.eq (fp.div RNE (fp.add RNE (fp.neg (fp.sub RNE x19 x6)) (fp.add RNE (fp.sub RNE x7 x14) (fp.neg x12))) (fp.neg (fp.sub RNE (fp.sub RNE x5 x16) (fp.neg x9)))) (fp.neg (fp.sub RNE (fp.add RNE (fp.mul RNE x6 x19) (fp.div RNE x17 x15)) (fp.div RNE (fp.neg x21) (fp.add RNE x18 x5))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.div RNE (fp.add RNE x17 x23) (fp.sub RNE x11 x21)) (fp.add RNE (fp.mul RNE x23 x8) (fp.mul RNE x8 x19)))) (fp.mul RNE (fp.sub RNE (fp.neg (fp.div RNE x10 x19)) (fp.mul RNE (fp.div RNE x8 x18) (fp.div RNE x2 x21))) (fp.div RNE (fp.add RNE (fp.mul RNE x5 x14) (fp.sub RNE x2 x17)) (fp.sub RNE (fp.add RNE x10 x3) (fp.div RNE x19 x6))))))
(assert (fp.geq (fp.neg (fp.neg (fp.add RNE (fp.neg x12) (fp.sub RNE x19 x3)))) (fp.mul RNE (fp.add RNE (fp.add RNE (fp.sub RNE x6 x9) (fp.div RNE x23 x9)) (fp.mul RNE (fp.add RNE x0 x3) (fp.mul RNE x0 x3))) (fp.div RNE (fp.add RNE (fp.div RNE x20 x21) (fp.add RNE x23 x15)) (fp.neg (fp.sub RNE x14 x6))))))
(check-sat)
