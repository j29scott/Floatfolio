(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(declare-const x22 (_ FloatingPoint 8 24))
(declare-const x23 (_ FloatingPoint 8 24))
(declare-const x24 (_ FloatingPoint 8 24))
(declare-const x25 (_ FloatingPoint 8 24))
(declare-const x26 (_ FloatingPoint 8 24))
(declare-const x27 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.mul RNE (fp.add RNE (fp.mul RNE x12 x17) (fp.neg x17)) (fp.sub RNE (fp.mul RNE x24 x10) (fp.mul RNE x22 x6))) (fp.neg (fp.mul RNE (fp.neg x18) (fp.mul RNE x12 x7)))) (fp.sub RNE (fp.neg (fp.mul RNE (fp.mul RNE x5 x3) (fp.sub RNE x13 x19))) (fp.add RNE (fp.neg (fp.add RNE x17 x2)) (fp.neg (fp.mul RNE x16 x7))))))
(assert (fp.geq (fp.mul RNE (fp.div RNE (fp.sub RNE (fp.neg x8) (fp.div RNE x13 x7)) (fp.mul RNE (fp.sub RNE x22 x9) (fp.neg x6))) (fp.sub RNE (fp.div RNE (fp.div RNE x8 x26) (fp.neg x17)) (fp.add RNE (fp.div RNE x26 x11) (fp.add RNE x13 x6)))) (fp.sub RNE (fp.sub RNE (fp.add RNE (fp.add RNE x0 x20) (fp.neg x26)) (fp.mul RNE (fp.neg x17) (fp.div RNE x23 x13))) (fp.add RNE (fp.mul RNE (fp.neg x4) (fp.mul RNE x14 x9)) (fp.div RNE (fp.sub RNE x14 x3) (fp.mul RNE x0 x23))))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.neg (fp.div RNE x20 x9)) (fp.div RNE (fp.sub RNE x0 x23) (fp.mul RNE x24 x9)))) (fp.sub RNE (fp.mul RNE (fp.mul RNE (fp.neg x9) (fp.div RNE x19 x26)) (fp.sub RNE (fp.add RNE x25 x10) (fp.sub RNE x18 x27))) (fp.add RNE (fp.neg (fp.add RNE x15 x4)) (fp.add RNE (fp.add RNE x15 x12) (fp.div RNE x15 x5))))))
(assert (fp.lt (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.add RNE x8 x20) (fp.div RNE x5 x21)) (fp.add RNE (fp.mul RNE x26 x8) (fp.div RNE x9 x25))) (fp.add RNE (fp.add RNE (fp.mul RNE x13 x13) (fp.add RNE x23 x9)) (fp.mul RNE (fp.add RNE x1 x3) (fp.sub RNE x9 x14)))) (fp.add RNE (fp.mul RNE (fp.add RNE (fp.sub RNE x6 x11) (fp.add RNE x12 x6)) (fp.sub RNE (fp.neg x27) (fp.mul RNE x8 x19))) (fp.neg (fp.neg (fp.div RNE x12 x11))))))
(assert (fp.geq (fp.add RNE (fp.div RNE (fp.div RNE (fp.sub RNE x9 x4) (fp.add RNE x22 x7)) (fp.mul RNE (fp.sub RNE x15 x11) (fp.neg x3))) (fp.mul RNE (fp.mul RNE (fp.add RNE x6 x20) (fp.mul RNE x27 x17)) (fp.div RNE (fp.add RNE x6 x0) (fp.sub RNE x24 x20)))) (fp.neg (fp.add RNE (fp.neg (fp.add RNE x3 x1)) (fp.sub RNE (fp.mul RNE x15 x2) (fp.sub RNE x17 x16))))))
(assert (fp.leq (fp.add RNE (fp.div RNE (fp.add RNE (fp.add RNE x13 x5) (fp.sub RNE x12 x10)) (fp.sub RNE (fp.sub RNE x10 x22) (fp.sub RNE x22 x19))) (fp.div RNE (fp.div RNE (fp.mul RNE x13 x9) (fp.add RNE x17 x2)) (fp.sub RNE (fp.div RNE x25 x1) (fp.mul RNE x10 x21)))) (fp.add RNE (fp.neg (fp.div RNE (fp.div RNE x10 x17) (fp.mul RNE x25 x13))) (fp.div RNE (fp.mul RNE (fp.neg x18) (fp.neg x24)) (fp.sub RNE (fp.add RNE x21 x27) (fp.add RNE x0 x13))))))
(assert (fp.gt (fp.add RNE (fp.add RNE (fp.mul RNE (fp.sub RNE x13 x19) (fp.mul RNE x6 x2)) (fp.neg (fp.div RNE x18 x8))) (fp.neg (fp.div RNE (fp.mul RNE x12 x14) (fp.mul RNE x3 x25)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.add RNE x15 x0) (fp.add RNE x15 x12)) (fp.sub RNE (fp.sub RNE x20 x5) (fp.sub RNE x6 x4))) (fp.sub RNE (fp.neg (fp.mul RNE x8 x9)) (fp.div RNE (fp.div RNE x25 x4) (fp.sub RNE x17 x15))))))
(assert (fp.geq (fp.add RNE (fp.mul RNE (fp.mul RNE (fp.sub RNE x16 x0) (fp.neg x10)) (fp.div RNE (fp.mul RNE x15 x5) (fp.mul RNE x11 x14))) (fp.mul RNE (fp.sub RNE (fp.neg x18) (fp.div RNE x19 x25)) (fp.mul RNE (fp.div RNE x6 x22) (fp.sub RNE x0 x10)))) (fp.sub RNE (fp.add RNE (fp.neg (fp.sub RNE x13 x10)) (fp.mul RNE (fp.add RNE x2 x11) (fp.add RNE x20 x11))) (fp.add RNE (fp.div RNE (fp.div RNE x6 x15) (fp.neg x8)) (fp.mul RNE (fp.sub RNE x12 x6) (fp.neg x21))))))
(check-sat)
