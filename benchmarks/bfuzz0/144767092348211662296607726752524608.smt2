(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.mul RNE x12 x0) (fp.neg x8)))
(assert (fp.gt (fp.add RNE x7 x3) (fp.add RNE x0 x0)))
(assert (fp.lt (fp.neg x7) (fp.neg x11)))
(assert (fp.lt (fp.mul RNE x13 x0) (fp.div RNE x9 x11)))
(assert (fp.leq (fp.mul RNE x8 x7) (fp.add RNE x10 x10)))
(assert (fp.eq (fp.div RNE x9 x6) (fp.sub RNE x12 x14)))
(assert (fp.leq (fp.add RNE x6 x13) (fp.neg x5)))
(assert (fp.gt (fp.div RNE x12 x8) (fp.neg x9)))
(assert (fp.leq (fp.mul RNE x4 x1) (fp.mul RNE x12 x0)))
(check-sat)
