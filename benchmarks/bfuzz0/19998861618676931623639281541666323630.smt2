(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.add RNE x16 x0) (fp.sub RNE x8 x7)) (fp.mul RNE (fp.sub RNE x1 x4) (fp.neg x13))) (fp.div RNE (fp.sub RNE (fp.mul RNE x7 x14) (fp.mul RNE x15 x6)) (fp.sub RNE (fp.neg x7) (fp.mul RNE x16 x11)))))
(assert (fp.leq (fp.div RNE (fp.add RNE (fp.sub RNE x15 x13) (fp.sub RNE x1 x6)) (fp.mul RNE (fp.mul RNE x13 x9) (fp.mul RNE x4 x16))) (fp.div RNE (fp.add RNE (fp.mul RNE x15 x5) (fp.div RNE x1 x0)) (fp.mul RNE (fp.div RNE x0 x10) (fp.add RNE x5 x7)))))
(assert (fp.geq (fp.neg (fp.sub RNE (fp.mul RNE x0 x1) (fp.neg x14))) (fp.neg (fp.mul RNE (fp.add RNE x5 x9) (fp.neg x15)))))
(assert (fp.leq (fp.neg (fp.neg (fp.mul RNE x13 x4))) (fp.div RNE (fp.add RNE (fp.add RNE x5 x7) (fp.div RNE x4 x13)) (fp.neg (fp.div RNE x16 x10)))))
(check-sat)
