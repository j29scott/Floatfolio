(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.sub RNE (fp.mul RNE (fp.sub RNE (fp.sub RNE x8 x4) (fp.sub RNE x17 x3)) (fp.neg (fp.mul RNE x20 x21))) (fp.neg (fp.add RNE (fp.neg x0) (fp.sub RNE x11 x11)))) (fp.add RNE (fp.neg (fp.div RNE (fp.add RNE x11 x10) (fp.add RNE x4 x3))) (fp.mul RNE (fp.div RNE (fp.mul RNE x12 x15) (fp.div RNE x18 x12)) (fp.div RNE (fp.div RNE x4 x14) (fp.mul RNE x16 x1))))))
(assert (fp.leq (fp.div RNE (fp.mul RNE (fp.sub RNE (fp.mul RNE x11 x12) (fp.neg x12)) (fp.add RNE (fp.mul RNE x13 x0) (fp.add RNE x0 x7))) (fp.add RNE (fp.div RNE (fp.mul RNE x14 x3) (fp.mul RNE x18 x0)) (fp.mul RNE (fp.add RNE x15 x0) (fp.div RNE x11 x20)))) (fp.neg (fp.div RNE (fp.neg (fp.mul RNE x19 x0)) (fp.neg (fp.mul RNE x8 x17))))))
(assert (fp.lt (fp.div RNE (fp.neg (fp.mul RNE (fp.add RNE x6 x13) (fp.add RNE x7 x20))) (fp.sub RNE (fp.add RNE (fp.mul RNE x1 x11) (fp.sub RNE x7 x11)) (fp.add RNE (fp.div RNE x18 x8) (fp.add RNE x10 x11)))) (fp.mul RNE (fp.neg (fp.mul RNE (fp.mul RNE x18 x5) (fp.neg x6))) (fp.sub RNE (fp.sub RNE (fp.div RNE x6 x18) (fp.mul RNE x19 x1)) (fp.neg (fp.add RNE x17 x15))))))
(assert (fp.leq (fp.mul RNE (fp.sub RNE (fp.mul RNE (fp.sub RNE x1 x7) (fp.neg x0)) (fp.mul RNE (fp.mul RNE x2 x20) (fp.sub RNE x18 x14))) (fp.add RNE (fp.mul RNE (fp.div RNE x18 x0) (fp.neg x14)) (fp.sub RNE (fp.sub RNE x2 x1) (fp.mul RNE x6 x1)))) (fp.neg (fp.mul RNE (fp.neg (fp.neg x18)) (fp.mul RNE (fp.neg x2) (fp.add RNE x21 x20))))))
(check-sat)
