(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(assert (fp.leq (fp.neg (fp.div RNE x1 x9)) (fp.neg (fp.neg x1))))
(assert (fp.lt (fp.sub RNE (fp.div RNE x18 x1) (fp.mul RNE x0 x11)) (fp.add RNE (fp.neg x3) (fp.neg x18))))
(assert (fp.leq (fp.mul RNE (fp.neg x6) (fp.neg x10)) (fp.sub RNE (fp.add RNE x14 x10) (fp.neg x6))))
(assert (fp.gt (fp.neg (fp.neg x18)) (fp.add RNE (fp.sub RNE x1 x10) (fp.add RNE x4 x7))))
(assert (fp.eq (fp.neg (fp.sub RNE x17 x7)) (fp.sub RNE (fp.sub RNE x15 x4) (fp.neg x4))))
(assert (fp.lt (fp.mul RNE (fp.sub RNE x11 x0) (fp.add RNE x8 x1)) (fp.neg (fp.sub RNE x4 x2))))
(assert (fp.leq (fp.neg (fp.mul RNE x7 x10)) (fp.add RNE (fp.neg x4) (fp.div RNE x7 x16))))
(assert (fp.eq (fp.div RNE (fp.sub RNE x11 x7) (fp.sub RNE x12 x7)) (fp.neg (fp.neg x11))))
(assert (fp.eq (fp.mul RNE (fp.sub RNE x6 x9) (fp.mul RNE x9 x9)) (fp.neg (fp.mul RNE x10 x10))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x14 x10) (fp.sub RNE x8 x14)) (fp.mul RNE (fp.neg x14) (fp.sub RNE x18 x8))))
(assert (fp.geq (fp.neg (fp.sub RNE x17 x1)) (fp.sub RNE (fp.sub RNE x11 x7) (fp.sub RNE x1 x12))))
(assert (fp.lt (fp.neg (fp.div RNE x6 x12)) (fp.mul RNE (fp.div RNE x10 x14) (fp.div RNE x8 x2))))
(assert (fp.eq (fp.mul RNE (fp.mul RNE x18 x18) (fp.mul RNE x8 x14)) (fp.neg (fp.div RNE x7 x0))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x18 x1) (fp.mul RNE x15 x6)) (fp.mul RNE (fp.mul RNE x17 x15) (fp.add RNE x8 x1))))
(assert (fp.eq (fp.neg (fp.neg x3)) (fp.sub RNE (fp.neg x16) (fp.div RNE x6 x7))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x4 x9) (fp.mul RNE x4 x5)) (fp.sub RNE (fp.mul RNE x2 x6) (fp.add RNE x12 x2))))
(check-sat)
