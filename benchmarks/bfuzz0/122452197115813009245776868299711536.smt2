(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(assert (fp.geq (fp.div RNE (fp.mul RNE (fp.sub RNE x1 x13) (fp.sub RNE x18 x0)) (fp.neg (fp.div RNE x14 x13))) (fp.div RNE (fp.sub RNE (fp.neg x13) (fp.mul RNE x3 x13)) (fp.div RNE (fp.neg x8) (fp.sub RNE x1 x9)))))
(assert (fp.eq (fp.mul RNE (fp.neg (fp.add RNE x15 x9)) (fp.add RNE (fp.add RNE x11 x17) (fp.neg x1))) (fp.sub RNE (fp.add RNE (fp.sub RNE x15 x15) (fp.mul RNE x19 x2)) (fp.add RNE (fp.div RNE x7 x13) (fp.div RNE x16 x14)))))
(check-sat)
