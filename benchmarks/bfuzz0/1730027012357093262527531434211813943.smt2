(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE x4 x7) (fp.add RNE x7 x6)))
(assert (fp.lt (fp.div RNE x5 x0) (fp.sub RNE x6 x5)))
(assert (fp.gt (fp.neg x5) (fp.neg x7)))
(assert (fp.geq (fp.div RNE x7 x4) (fp.sub RNE x7 x1)))
(assert (fp.lt (fp.neg x5) (fp.div RNE x2 x5)))
(assert (fp.lt (fp.mul RNE x5 x0) (fp.sub RNE x2 x5)))
(assert (fp.lt (fp.mul RNE x0 x6) (fp.sub RNE x2 x3)))
(assert (fp.leq (fp.sub RNE x6 x2) (fp.mul RNE x3 x7)))
(assert (fp.gt (fp.div RNE x4 x2) (fp.neg x7)))
(assert (fp.eq (fp.sub RNE x6 x5) (fp.sub RNE x4 x1)))
(assert (fp.leq (fp.mul RNE x7 x6) (fp.add RNE x0 x4)))
(assert (fp.eq (fp.neg x6) (fp.sub RNE x0 x5)))
(assert (fp.lt (fp.neg x5) (fp.sub RNE x3 x7)))
(check-sat)
