(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(assert (fp.lt (fp.mul RNE (fp.neg x10) (fp.sub RNE x7 x2)) (fp.mul RNE (fp.mul RNE x6 x5) (fp.neg x0))))
(assert (fp.gt (fp.div RNE (fp.sub RNE x7 x12) (fp.add RNE x6 x7)) (fp.sub RNE (fp.sub RNE x8 x1) (fp.sub RNE x9 x7))))
(assert (fp.lt (fp.div RNE (fp.div RNE x2 x10) (fp.mul RNE x9 x10)) (fp.mul RNE (fp.add RNE x2 x10) (fp.neg x14))))
(assert (fp.eq (fp.add RNE (fp.sub RNE x4 x3) (fp.neg x5)) (fp.add RNE (fp.div RNE x3 x12) (fp.mul RNE x4 x10))))
(assert (fp.eq (fp.neg (fp.sub RNE x12 x13)) (fp.neg (fp.neg x8))))
(assert (fp.gt (fp.sub RNE (fp.mul RNE x11 x14) (fp.add RNE x6 x10)) (fp.mul RNE (fp.sub RNE x12 x1) (fp.add RNE x4 x11))))
(assert (fp.geq (fp.sub RNE (fp.neg x10) (fp.sub RNE x8 x6)) (fp.div RNE (fp.mul RNE x2 x6) (fp.mul RNE x0 x4))))
(check-sat)
