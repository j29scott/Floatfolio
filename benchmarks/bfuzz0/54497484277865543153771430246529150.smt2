(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(assert (fp.gt (fp.div RNE (fp.neg x1) (fp.neg x9)) (fp.mul RNE (fp.neg x12) (fp.neg x8))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x0 x1) (fp.mul RNE x4 x8)) (fp.div RNE (fp.div RNE x13 x13) (fp.sub RNE x5 x2))))
(assert (fp.lt (fp.div RNE (fp.div RNE x0 x2) (fp.sub RNE x8 x2)) (fp.neg (fp.neg x11))))
(assert (fp.eq (fp.sub RNE (fp.sub RNE x4 x12) (fp.mul RNE x4 x8)) (fp.div RNE (fp.neg x11) (fp.mul RNE x0 x3))))
(assert (fp.eq (fp.neg (fp.neg x10)) (fp.sub RNE (fp.sub RNE x4 x1) (fp.neg x2))))
(assert (fp.lt (fp.add RNE (fp.mul RNE x13 x13) (fp.div RNE x2 x11)) (fp.div RNE (fp.neg x11) (fp.mul RNE x2 x8))))
(assert (fp.lt (fp.mul RNE (fp.div RNE x0 x11) (fp.sub RNE x8 x2)) (fp.add RNE (fp.add RNE x5 x4) (fp.neg x2))))
(assert (fp.geq (fp.mul RNE (fp.mul RNE x5 x3) (fp.div RNE x0 x12)) (fp.mul RNE (fp.sub RNE x10 x12) (fp.mul RNE x6 x1))))
(assert (fp.lt (fp.neg (fp.div RNE x9 x2)) (fp.mul RNE (fp.neg x4) (fp.mul RNE x13 x6))))
(assert (fp.eq (fp.neg (fp.add RNE x12 x10)) (fp.div RNE (fp.mul RNE x5 x8) (fp.mul RNE x11 x4))))
(check-sat)
