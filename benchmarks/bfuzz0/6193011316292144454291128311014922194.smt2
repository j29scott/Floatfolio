(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.div RNE x9 x2) (fp.add RNE x6 x3)))
(assert (fp.lt (fp.neg x8) (fp.mul RNE x0 x6)))
(assert (fp.lt (fp.add RNE x9 x4) (fp.sub RNE x5 x6)))
(assert (fp.eq (fp.sub RNE x6 x4) (fp.neg x10)))
(assert (fp.gt (fp.neg x7) (fp.sub RNE x6 x5)))
(assert (fp.lt (fp.div RNE x9 x8) (fp.sub RNE x0 x3)))
(assert (fp.leq (fp.mul RNE x3 x4) (fp.neg x8)))
(assert (fp.gt (fp.add RNE x2 x2) (fp.div RNE x9 x8)))
(assert (fp.eq (fp.sub RNE x1 x3) (fp.sub RNE x4 x1)))
(assert (fp.eq (fp.div RNE x2 x1) (fp.add RNE x4 x7)))
(assert (fp.gt (fp.mul RNE x2 x4) (fp.div RNE x1 x10)))
(assert (fp.eq (fp.neg x1) (fp.mul RNE x6 x7)))
(assert (fp.leq (fp.mul RNE x7 x8) (fp.sub RNE x1 x2)))
(check-sat)
