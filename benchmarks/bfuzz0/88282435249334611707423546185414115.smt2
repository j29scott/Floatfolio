(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(declare-const x7 (_ FloatingPoint 8 24))
(declare-const x8 (_ FloatingPoint 8 24))
(declare-const x9 (_ FloatingPoint 8 24))
(declare-const x10 (_ FloatingPoint 8 24))
(declare-const x11 (_ FloatingPoint 8 24))
(declare-const x12 (_ FloatingPoint 8 24))
(declare-const x13 (_ FloatingPoint 8 24))
(declare-const x14 (_ FloatingPoint 8 24))
(declare-const x15 (_ FloatingPoint 8 24))
(declare-const x16 (_ FloatingPoint 8 24))
(declare-const x17 (_ FloatingPoint 8 24))
(declare-const x18 (_ FloatingPoint 8 24))
(declare-const x19 (_ FloatingPoint 8 24))
(declare-const x20 (_ FloatingPoint 8 24))
(declare-const x21 (_ FloatingPoint 8 24))
(assert (fp.geq (fp.neg x16) (fp.div RNE x9 x4)))
(assert (fp.leq (fp.add RNE x17 x20) (fp.sub RNE x0 x3)))
(assert (fp.eq (fp.div RNE x20 x10) (fp.neg x17)))
(assert (fp.eq (fp.add RNE x20 x19) (fp.add RNE x2 x8)))
(assert (fp.geq (fp.mul RNE x2 x12) (fp.neg x20)))
(assert (fp.eq (fp.div RNE x3 x5) (fp.mul RNE x6 x2)))
(assert (fp.eq (fp.add RNE x11 x10) (fp.mul RNE x15 x13)))
(check-sat)
