(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 8 24))
(declare-const x1 (_ FloatingPoint 8 24))
(declare-const x2 (_ FloatingPoint 8 24))
(declare-const x3 (_ FloatingPoint 8 24))
(declare-const x4 (_ FloatingPoint 8 24))
(declare-const x5 (_ FloatingPoint 8 24))
(declare-const x6 (_ FloatingPoint 8 24))
(assert (fp.eq (fp.neg x6) (fp.neg x1)))
(assert (fp.geq (fp.neg x3) (fp.div RNE x0 x2)))
(assert (fp.lt (fp.sub RNE x0 x6) (fp.div RNE x4 x3)))
(assert (fp.eq (fp.div RNE x1 x1) (fp.add RNE x0 x2)))
(assert (fp.geq (fp.neg x1) (fp.neg x2)))
(assert (fp.leq (fp.mul RNE x6 x2) (fp.neg x2)))
(assert (fp.eq (fp.add RNE x1 x1) (fp.mul RNE x2 x1)))
(assert (fp.geq (fp.add RNE x3 x6) (fp.add RNE x3 x5)))
(assert (fp.lt (fp.mul RNE x6 x1) (fp.div RNE x5 x5)))
(assert (fp.lt (fp.div RNE x1 x0) (fp.add RNE x2 x3)))
(assert (fp.eq (fp.div RNE x0 x6) (fp.neg x0)))
(assert (fp.gt (fp.add RNE x1 x2) (fp.div RNE x0 x1)))
(assert (fp.lt (fp.neg x0) (fp.sub RNE x6 x6)))
(assert (fp.leq (fp.add RNE x2 x3) (fp.add RNE x4 x1)))
(check-sat)
