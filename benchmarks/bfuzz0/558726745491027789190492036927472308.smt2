(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(assert (fp.eq (fp.mul RNE (fp.add RNE (fp.add RNE (fp.add RNE x12 x4) (fp.div RNE x4 x5)) (fp.div RNE (fp.add RNE x12 x3) (fp.div RNE x5 x12))) (fp.div RNE (fp.sub RNE (fp.sub RNE x13 x10) (fp.sub RNE x12 x2)) (fp.mul RNE (fp.sub RNE x14 x12) (fp.sub RNE x3 x6)))) (fp.add RNE (fp.div RNE (fp.add RNE (fp.div RNE x7 x3) (fp.add RNE x1 x8)) (fp.mul RNE (fp.add RNE x6 x0) (fp.sub RNE x4 x2))) (fp.mul RNE (fp.sub RNE (fp.div RNE x14 x5) (fp.div RNE x11 x2)) (fp.sub RNE (fp.div RNE x12 x14) (fp.sub RNE x9 x11))))))
(assert (fp.leq (fp.mul RNE (fp.div RNE (fp.mul RNE (fp.mul RNE x10 x2) (fp.sub RNE x5 x10)) (fp.neg (fp.sub RNE x6 x13))) (fp.add RNE (fp.add RNE (fp.div RNE x0 x11) (fp.neg x5)) (fp.div RNE (fp.mul RNE x2 x13) (fp.div RNE x0 x11)))) (fp.div RNE (fp.sub RNE (fp.mul RNE (fp.mul RNE x0 x5) (fp.add RNE x12 x7)) (fp.sub RNE (fp.sub RNE x13 x7) (fp.neg x4))) (fp.div RNE (fp.sub RNE (fp.div RNE x2 x6) (fp.mul RNE x5 x3)) (fp.div RNE (fp.mul RNE x11 x10) (fp.div RNE x1 x10))))))
(check-sat)
