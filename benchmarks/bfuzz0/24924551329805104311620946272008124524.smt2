(set-logic QF_FP)
(declare-const x0 (_ FloatingPoint 11 53))
(declare-const x1 (_ FloatingPoint 11 53))
(declare-const x2 (_ FloatingPoint 11 53))
(declare-const x3 (_ FloatingPoint 11 53))
(declare-const x4 (_ FloatingPoint 11 53))
(declare-const x5 (_ FloatingPoint 11 53))
(declare-const x6 (_ FloatingPoint 11 53))
(declare-const x7 (_ FloatingPoint 11 53))
(declare-const x8 (_ FloatingPoint 11 53))
(declare-const x9 (_ FloatingPoint 11 53))
(declare-const x10 (_ FloatingPoint 11 53))
(declare-const x11 (_ FloatingPoint 11 53))
(declare-const x12 (_ FloatingPoint 11 53))
(declare-const x13 (_ FloatingPoint 11 53))
(declare-const x14 (_ FloatingPoint 11 53))
(declare-const x15 (_ FloatingPoint 11 53))
(declare-const x16 (_ FloatingPoint 11 53))
(declare-const x17 (_ FloatingPoint 11 53))
(declare-const x18 (_ FloatingPoint 11 53))
(declare-const x19 (_ FloatingPoint 11 53))
(declare-const x20 (_ FloatingPoint 11 53))
(declare-const x21 (_ FloatingPoint 11 53))
(assert (fp.gt (fp.div RNE (fp.div RNE x20 x10) (fp.neg x13)) (fp.neg (fp.sub RNE x10 x8))))
(assert (fp.geq (fp.add RNE (fp.add RNE x7 x2) (fp.mul RNE x2 x8)) (fp.neg (fp.sub RNE x16 x9))))
(assert (fp.eq (fp.mul RNE (fp.neg x13) (fp.add RNE x17 x5)) (fp.add RNE (fp.mul RNE x21 x0) (fp.sub RNE x14 x10))))
(assert (fp.geq (fp.div RNE (fp.sub RNE x7 x13) (fp.mul RNE x17 x9)) (fp.add RNE (fp.div RNE x2 x12) (fp.neg x7))))
(assert (fp.gt (fp.neg (fp.div RNE x0 x17)) (fp.mul RNE (fp.add RNE x9 x3) (fp.div RNE x10 x19))))
(assert (fp.eq (fp.sub RNE (fp.add RNE x5 x16) (fp.mul RNE x12 x0)) (fp.sub RNE (fp.neg x10) (fp.add RNE x9 x2))))
(assert (fp.gt (fp.add RNE (fp.div RNE x18 x6) (fp.neg x20)) (fp.sub RNE (fp.div RNE x0 x18) (fp.add RNE x16 x5))))
(assert (fp.gt (fp.div RNE (fp.mul RNE x1 x5) (fp.mul RNE x13 x16)) (fp.add RNE (fp.mul RNE x0 x6) (fp.div RNE x14 x12))))
(assert (fp.geq (fp.add RNE (fp.mul RNE x17 x16) (fp.sub RNE x13 x2)) (fp.sub RNE (fp.sub RNE x9 x0) (fp.mul RNE x15 x15))))
(assert (fp.leq (fp.neg (fp.add RNE x13 x14)) (fp.mul RNE (fp.neg x4) (fp.add RNE x4 x6))))
(assert (fp.gt (fp.add RNE (fp.add RNE x19 x10) (fp.sub RNE x4 x10)) (fp.sub RNE (fp.div RNE x18 x12) (fp.add RNE x19 x9))))
(assert (fp.leq (fp.neg (fp.neg x12)) (fp.div RNE (fp.div RNE x2 x11) (fp.neg x1))))
(assert (fp.gt (fp.sub RNE (fp.div RNE x6 x3) (fp.sub RNE x15 x0)) (fp.mul RNE (fp.sub RNE x17 x0) (fp.add RNE x6 x2))))
(assert (fp.geq (fp.sub RNE (fp.neg x2) (fp.div RNE x18 x16)) (fp.neg (fp.sub RNE x2 x17))))
(assert (fp.geq (fp.mul RNE (fp.neg x7) (fp.neg x8)) (fp.add RNE (fp.div RNE x19 x9) (fp.sub RNE x5 x1))))
(assert (fp.geq (fp.mul RNE (fp.add RNE x1 x16) (fp.div RNE x15 x21)) (fp.mul RNE (fp.mul RNE x16 x12) (fp.sub RNE x3 x1))))
(check-sat)
